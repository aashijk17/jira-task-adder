"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrameComponentLinter = void 0;
const tslib_1 = require("tslib");
const cli_shared_1 = require("@forge/cli-shared");
const base_linter_1 = tslib_1.__importDefault(require("../../base-linter"));
const frame_component_verifier_1 = require("./verifiers/frame-component-verifier");
const frame_component_visitor_1 = require("./visitors/frame-component-visitor");
class FrameComponentLinter extends base_linter_1.default {
    manifest;
    constructor(environment, manifest, logger) {
        super(environment, logger);
        this.manifest = manifest;
    }
    async bootstrap() {
        this.nodeVisitors = [new frame_component_visitor_1.FrameComponentVisitor()];
        const humanReadableEnvironment = (0, cli_shared_1.environmentToOption)(this.environment);
        this.verifiers = {
            frameComponentResource: new frame_component_verifier_1.FrameComponentVerifier(humanReadableEnvironment, this.manifest)
        };
    }
    setupMatchesMap(filepath) {
        this.matches.set(filepath, {
            frameComponentResource: []
        });
    }
    addLintCriteriaMatch(frameResourceInfo, filepath) {
        const criteriaMatches = this.matches.get(filepath);
        criteriaMatches.frameComponentResource.push(frameResourceInfo);
    }
}
exports.FrameComponentLinter = FrameComponentLinter;
