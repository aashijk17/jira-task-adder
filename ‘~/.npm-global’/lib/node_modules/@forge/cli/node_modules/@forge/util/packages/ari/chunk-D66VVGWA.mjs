import {
  ElevateSelfAssessmentPillarAriResourceOwner,
  ElevateSelfAssessmentPillarAriResourceType
} from "./chunk-NU3GZ3PV.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/elevate/self-assessment-pillar/manifest.ts
var elevateSelfAssessmentPillarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevateSelfAssessmentPillarAriResourceOwner,
  resourceType: ElevateSelfAssessmentPillarAriResourceType,
  resourceIdSlug: "{selfAssessmentId}/{selfAssessmentPillarId}",
  resourceIdSegmentFormats: {
    selfAssessmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    selfAssessmentPillarId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/self-assessment-pillar/index.ts
var ElevateSelfAssessmentPillarAri = class _ElevateSelfAssessmentPillarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._selfAssessmentId = opts.resourceIdSegmentValues.selfAssessmentId, this._selfAssessmentPillarId = opts.resourceIdSegmentValues.selfAssessmentPillarId;
  }
  get siteId() {
    return this._siteId;
  }
  get selfAssessmentId() {
    return this._selfAssessmentId;
  }
  get selfAssessmentPillarId() {
    return this._selfAssessmentPillarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevateSelfAssessmentPillarAriStaticOpts.qualifier,
      platformQualifier: elevateSelfAssessmentPillarAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevateSelfAssessmentPillarAriStaticOpts.resourceOwner,
      resourceType: elevateSelfAssessmentPillarAriStaticOpts.resourceType,
      resourceId: `${opts.selfAssessmentId}/${opts.selfAssessmentPillarId}`,
      resourceIdSegmentValues: {
        selfAssessmentId: opts.selfAssessmentId,
        selfAssessmentPillarId: opts.selfAssessmentPillarId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevateSelfAssessmentPillarAriStaticOpts);
    return new _ElevateSelfAssessmentPillarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevateSelfAssessmentPillarAriStaticOpts);
    return new _ElevateSelfAssessmentPillarAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      selfAssessmentId: this.selfAssessmentId,
      selfAssessmentPillarId: this.selfAssessmentPillarId
    };
  }
};

export {
  ElevateSelfAssessmentPillarAri
};
