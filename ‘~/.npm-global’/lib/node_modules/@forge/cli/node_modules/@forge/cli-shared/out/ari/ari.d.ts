import { Ari, AnyAri, JiraWorkspaceAri, ConfluenceWorkspaceAri, CompassWorkspaceAri, GraphWorkspaceAri } from '@forge/util/packages/ari';
export declare const SITE_RESOURCE_TYPE = "site";
export declare const WORKSPACE_RESOURCE_TYPE = "workspace";
export declare const TRELLO_RESOURCE_OWNER = "trello";
export declare const BITBUCKET_RESOURCE_OWNER = "bitbucket";
export declare function appIdToAriString(appId: string): string;
export declare function buildContextAri(cloudId: string, product: string): Ari;
export declare function buildExtensionAri(appId: string, environmentId: string, functionKey: string): Ari;
export declare function encodeContext(context: Ari, extension: Ari): string;
export declare class UnknownSiteWithoutResourceIdError extends Error {
    constructor();
}
export declare class UnknownWorkspaceWithoutResourceIdError extends Error {
    constructor();
}
export declare function parseInstallationContext(installationContext: string): AnyAri;
export declare const createWorkspaceAriByProduct: {
    jira: (siteId: string, activationId: string) => JiraWorkspaceAri;
    confluence: (siteId: string, activationId: string) => ConfluenceWorkspaceAri;
    compass: (siteId: string, workspaceId: string) => CompassWorkspaceAri;
    graph: (_siteId: string, activationId: string) => GraphWorkspaceAri;
};
//# sourceMappingURL=ari.d.ts.map