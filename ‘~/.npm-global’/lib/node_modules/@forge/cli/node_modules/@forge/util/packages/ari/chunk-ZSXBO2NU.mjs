import {
  LoomFolderAriResourceOwner,
  LoomFolderAriResourceType
} from "./chunk-TEUWIQME.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/loom/folder/manifest.ts
var loomFolderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomFolderAriResourceOwner,
  resourceType: LoomFolderAriResourceType,
  resourceIdSlug: "activation/{activationId}/{folderId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    folderId: /[a-f0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/folder/index.ts
var LoomFolderAri = class _LoomFolderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._folderId = opts.resourceIdSegmentValues.folderId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get folderId() {
    return this._folderId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomFolderAriStaticOpts.qualifier,
      platformQualifier: loomFolderAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomFolderAriStaticOpts.resourceOwner,
      resourceType: loomFolderAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.folderId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        folderId: opts.folderId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomFolderAriStaticOpts);
    return new _LoomFolderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomFolderAriStaticOpts);
    return new _LoomFolderAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      folderId: this.folderId
    };
  }
};

export {
  LoomFolderAri
};
