/// <reference types="node" resolution-mode="require"/>
import { URL } from 'url';
import { GraphQLClient, GraphQlMutationError, ErrorWithAnalytics, ErrorAnalytics } from '@forge/cli-shared';
export declare class RegisterAppTunnelError extends GraphQlMutationError implements ErrorWithAnalytics {
    private static userErrorCodes;
    private errorCode?;
    constructor(message: string, { requestId, code, statusCode }: {
        requestId: string | undefined;
        code?: string;
        statusCode?: number;
    });
    getAttributes(): ErrorAnalytics;
    isUserError(): boolean;
}
export interface TunnelDefinitions {
    faasTunnelUrl?: URL;
    customUI?: {
        resourceKey: string;
        tunnelUrl: URL;
    }[];
}
export interface TunnelSetup {
    token: string | null | undefined;
    id: string | null | undefined;
    url: string | null | undefined;
}
export interface TunnelClient {
    setupTunnel(appId: string, environmentKey: string): Promise<TunnelSetup>;
    createAppTunnels(appId: string, environmentKey: string, tunnelDefinitions: TunnelDefinitions): Promise<string | null | undefined>;
    deleteTunnels(appId: string, environmentKey: string): Promise<void>;
}
export declare class TunnelGraphqlClient implements TunnelClient {
    private readonly graphqlClient;
    constructor(graphqlClient: GraphQLClient);
    setupTunnel(appId: string, environmentKey: string): Promise<TunnelSetup>;
    createAppTunnels(appId: string, environmentKey: string, tunnelDefinitions: TunnelDefinitions): Promise<string | null | undefined>;
    deleteTunnels(appId: string, environmentKey: string): Promise<void>;
}
//# sourceMappingURL=tunnel-graphql-client.d.ts.map