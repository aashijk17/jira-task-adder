"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FullValidationProcessor = void 0;
const tslib_1 = require("tslib");
const validators_1 = require("../validators");
const FULL_SCHEMA = tslib_1.__importStar(require("../schema/manifest-schema.json"));
const DISPLAY_CONDITIONS_SCHEMA = tslib_1.__importStar(require("../schema/display-conditions-schema.json"));
const abstract_validation_processor_1 = require("./abstract-validation-processor");
const storage_validator_1 = require("../validators/storage-validator");
const jql_function_validator_1 = require("../validators/jql-function-validator");
const app_features_validator_1 = require("../validators/app-features-validator");
const data_classification_validator_1 = require("../validators/data-classification-validator");
const remotes_is_configurable_validator_1 = require("../validators/remotes-is-configurable-validator");
const remote_regions_validator_1 = require("../validators/remote-regions-validator");
const remote_auth_scopes_validator_1 = require("../validators/remote-auth-scopes-validator");
const runtime_version_validator_1 = require("../validators/runtime-version-validator");
const llm_validator_1 = require("../validators/llm-validator");
class FullValidationProcessor extends abstract_validation_processor_1.AbstractValidationProcessor {
    constructor(lintOptions) {
        super([
            new validators_1.FileValidator(),
            new validators_1.YamlValidator(),
            new validators_1.SchemaValidator(FULL_SCHEMA),
            new validators_1.ModulesValidator(),
            new validators_1.ConnectModulesValidator(),
            new validators_1.ResourcesValidator(),
            new validators_1.ConnectRemoteValidator(),
            new validators_1.ConnectAuthenticationValidator(),
            new validators_1.PermissionsValidator(),
            new storage_validator_1.StorageValidator(),
            new validators_1.DisplayConditionsValidator(DISPLAY_CONDITIONS_SCHEMA),
            new validators_1.ProvidersValidator(),
            new validators_1.EntityPropertyValidator(),
            new jql_function_validator_1.JqlFunctionValidator(),
            new validators_1.PackageValidator(),
            new app_features_validator_1.AppFeaturesValidator(),
            new data_classification_validator_1.DataClassificationValidator(),
            new validators_1.TranslationsValidator(),
            new remotes_is_configurable_validator_1.RemotesIsUserConfigurableValidator(),
            new remote_regions_validator_1.RemoteRegionsValidator(),
            new remote_auth_scopes_validator_1.RemoteAuthScopesValidator(),
            new runtime_version_validator_1.RuntimeVersionValidator(lintOptions),
            new llm_validator_1.LLMValidator()
        ]);
    }
}
exports.FullValidationProcessor = FullValidationProcessor;
