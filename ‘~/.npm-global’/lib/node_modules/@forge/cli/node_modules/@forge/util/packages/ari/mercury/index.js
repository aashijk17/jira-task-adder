"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/mercury/index.ts
var mercury_exports = {};
__export(mercury_exports, {
  MercuryChangeAri: () => MercuryChangeAri,
  MercuryChangeProposalAri: () => MercuryChangeProposalAri,
  MercuryChangeProposalStatusAri: () => MercuryChangeProposalStatusAri,
  MercuryCommentAri: () => MercuryCommentAri,
  MercuryFocusAreaAri: () => MercuryFocusAreaAri,
  MercuryFocusAreaStatusUpdateAri: () => MercuryFocusAreaStatusUpdateAri,
  MercuryFocusAreaTypeAri: () => MercuryFocusAreaTypeAri,
  MercuryProgramAri: () => MercuryProgramAri,
  MercuryProgramStatusUpdateAri: () => MercuryProgramStatusUpdateAri,
  MercuryRoleAri: () => MercuryRoleAri,
  MercurySiteAri: () => MercurySiteAri,
  MercuryStrategicEventAri: () => MercuryStrategicEventAri,
  MercuryStrategicEventStatusAri: () => MercuryStrategicEventStatusAri,
  MercuryViewAri: () => MercuryViewAri,
  MercuryWorkspaceAri: () => MercuryWorkspaceAri
});
module.exports = __toCommonJS(mercury_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:;{}=]+(/[!a-zA-Z0-9\\-_.~@:;{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/mercury/change/types.ts
var MercuryChangeAriResourceOwner = "mercury", MercuryChangeAriResourceType = "change";

// src/mercury/change/manifest.ts
var mercuryChangeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeAriResourceOwner,
  resourceType: MercuryChangeAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change/index.ts
var MercuryChangeAri = class _MercuryChangeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeId = opts.resourceIdSegmentValues.changeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeId() {
    return this._changeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeId: opts.changeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeAriStaticOpts);
    return new _MercuryChangeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeAriStaticOpts);
    return new _MercuryChangeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeId: this.changeId
    };
  }
};

// src/mercury/change-proposal/types.ts
var MercuryChangeProposalAriResourceOwner = "mercury", MercuryChangeProposalAriResourceType = "change-proposal";

// src/mercury/change-proposal/manifest.ts
var mercuryChangeProposalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeProposalAriResourceOwner,
  resourceType: MercuryChangeProposalAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeProposalId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeProposalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change-proposal/index.ts
var MercuryChangeProposalAri = class _MercuryChangeProposalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeProposalId = opts.resourceIdSegmentValues.changeProposalId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeProposalId() {
    return this._changeProposalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeProposalAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeProposalAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeProposalAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeProposalAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeProposalId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeProposalId: opts.changeProposalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeProposalAriStaticOpts);
    return new _MercuryChangeProposalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeProposalAriStaticOpts);
    return new _MercuryChangeProposalAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeProposalId: this.changeProposalId
    };
  }
};

// src/mercury/change-proposal-status/types.ts
var MercuryChangeProposalStatusAriResourceOwner = "mercury", MercuryChangeProposalStatusAriResourceType = "change-proposal-status";

// src/mercury/change-proposal-status/manifest.ts
var mercuryChangeProposalStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeProposalStatusAriResourceOwner,
  resourceType: MercuryChangeProposalStatusAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeProposalStatusId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeProposalStatusId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change-proposal-status/index.ts
var MercuryChangeProposalStatusAri = class _MercuryChangeProposalStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeProposalStatusId = opts.resourceIdSegmentValues.changeProposalStatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeProposalStatusId() {
    return this._changeProposalStatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeProposalStatusAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeProposalStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeProposalStatusAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeProposalStatusAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeProposalStatusId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeProposalStatusId: opts.changeProposalStatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeProposalStatusAriStaticOpts);
    return new _MercuryChangeProposalStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeProposalStatusAriStaticOpts);
    return new _MercuryChangeProposalStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeProposalStatusId: this.changeProposalStatusId
    };
  }
};

// src/mercury/comment/types.ts
var MercuryCommentAriResourceOwner = "mercury", MercuryCommentAriResourceType = "comment";

// src/mercury/comment/manifest.ts
var mercuryCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryCommentAriResourceOwner,
  resourceType: MercuryCommentAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{commentUuid}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/comment/index.ts
var MercuryCommentAri = class _MercuryCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._commentUuid = opts.resourceIdSegmentValues.commentUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get commentUuid() {
    return this._commentUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryCommentAriStaticOpts.qualifier,
      platformQualifier: mercuryCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryCommentAriStaticOpts.resourceOwner,
      resourceType: mercuryCommentAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.commentUuid}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        commentUuid: opts.commentUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryCommentAriStaticOpts);
    return new _MercuryCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryCommentAriStaticOpts);
    return new _MercuryCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      commentUuid: this.commentUuid
    };
  }
};

// src/mercury/focus-area/types.ts
var MercuryFocusAreaAriResourceOwner = "mercury", MercuryFocusAreaAriResourceType = "focus-area";

// src/mercury/focus-area/manifest.ts
var mercuryFocusAreaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaAriResourceOwner,
  resourceType: MercuryFocusAreaAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area/index.ts
var MercuryFocusAreaAri = class _MercuryFocusAreaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaId = opts.resourceIdSegmentValues.focusAreaId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaId() {
    return this._focusAreaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaId: opts.focusAreaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaAriStaticOpts);
    return new _MercuryFocusAreaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaAriStaticOpts);
    return new _MercuryFocusAreaAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaId: this.focusAreaId
    };
  }
};

// src/mercury/focus-area-status-update/types.ts
var MercuryFocusAreaStatusUpdateAriResourceOwner = "mercury", MercuryFocusAreaStatusUpdateAriResourceType = "focus-area-status-update";

// src/mercury/focus-area-status-update/manifest.ts
var mercuryFocusAreaStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaStatusUpdateAriResourceOwner,
  resourceType: MercuryFocusAreaStatusUpdateAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-status-update/index.ts
var MercuryFocusAreaStatusUpdateAri = class _MercuryFocusAreaStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaStatusUpdateId = opts.resourceIdSegmentValues.focusAreaStatusUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaStatusUpdateId() {
    return this._focusAreaStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaStatusUpdateId: opts.focusAreaStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaStatusUpdateId: this.focusAreaStatusUpdateId
    };
  }
};

// src/mercury/focus-area-type/types.ts
var MercuryFocusAreaTypeAriResourceOwner = "mercury", MercuryFocusAreaTypeAriResourceType = "focus-area-type";

// src/mercury/focus-area-type/manifest.ts
var mercuryFocusAreaTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaTypeAriResourceOwner,
  resourceType: MercuryFocusAreaTypeAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaTypeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaTypeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-type/index.ts
var MercuryFocusAreaTypeAri = class _MercuryFocusAreaTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaTypeId = opts.resourceIdSegmentValues.focusAreaTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaTypeId() {
    return this._focusAreaTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaTypeAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaTypeAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaTypeAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaTypeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaTypeId: opts.focusAreaTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaTypeId: this.focusAreaTypeId
    };
  }
};

// src/mercury/program/types.ts
var MercuryProgramAriResourceOwner = "mercury", MercuryProgramAriResourceType = "program";

// src/mercury/program/manifest.ts
var mercuryProgramAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryProgramAriResourceOwner,
  resourceType: MercuryProgramAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{programId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    programId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/program/index.ts
var MercuryProgramAri = class _MercuryProgramAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._programId = opts.resourceIdSegmentValues.programId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get programId() {
    return this._programId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryProgramAriStaticOpts.qualifier,
      platformQualifier: mercuryProgramAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryProgramAriStaticOpts.resourceOwner,
      resourceType: mercuryProgramAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.programId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        programId: opts.programId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryProgramAriStaticOpts);
    return new _MercuryProgramAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryProgramAriStaticOpts);
    return new _MercuryProgramAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      programId: this.programId
    };
  }
};

// src/mercury/program-status-update/types.ts
var MercuryProgramStatusUpdateAriResourceOwner = "mercury", MercuryProgramStatusUpdateAriResourceType = "program-status-update";

// src/mercury/program-status-update/manifest.ts
var mercuryProgramStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryProgramStatusUpdateAriResourceOwner,
  resourceType: MercuryProgramStatusUpdateAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{programStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    programStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/program-status-update/index.ts
var MercuryProgramStatusUpdateAri = class _MercuryProgramStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._programStatusUpdateId = opts.resourceIdSegmentValues.programStatusUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get programStatusUpdateId() {
    return this._programStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryProgramStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: mercuryProgramStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryProgramStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: mercuryProgramStatusUpdateAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.programStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        programStatusUpdateId: opts.programStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryProgramStatusUpdateAriStaticOpts);
    return new _MercuryProgramStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryProgramStatusUpdateAriStaticOpts);
    return new _MercuryProgramStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      programStatusUpdateId: this.programStatusUpdateId
    };
  }
};

// src/mercury/role/types.ts
var MercuryRoleAriResourceOwner = "mercury", MercuryRoleAriResourceType = "role";

// src/mercury/role/manifest.ts
var mercuryRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryRoleAriResourceOwner,
  resourceType: MercuryRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/role/index.ts
var MercuryRoleAri = class _MercuryRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryRoleAriStaticOpts.qualifier,
      platformQualifier: mercuryRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mercuryRoleAriStaticOpts.resourceOwner,
      resourceType: mercuryRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryRoleAriStaticOpts);
    return new _MercuryRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryRoleAriStaticOpts);
    return new _MercuryRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/mercury/site/types.ts
var MercurySiteAriResourceOwner = "mercury", MercurySiteAriResourceType = "site";

// src/mercury/site/manifest.ts
var mercurySiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercurySiteAriResourceOwner,
  resourceType: MercurySiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/site/index.ts
var MercurySiteAri = class _MercurySiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercurySiteAriStaticOpts.qualifier,
      platformQualifier: mercurySiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mercurySiteAriStaticOpts.resourceOwner,
      resourceType: mercurySiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercurySiteAriStaticOpts);
    return new _MercurySiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercurySiteAriStaticOpts);
    return new _MercurySiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/mercury/strategic-event/types.ts
var MercuryStrategicEventAriResourceOwner = "mercury", MercuryStrategicEventAriResourceType = "strategic-event";

// src/mercury/strategic-event/manifest.ts
var mercuryStrategicEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventAriResourceOwner,
  resourceType: MercuryStrategicEventAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event/index.ts
var MercuryStrategicEventAri = class _MercuryStrategicEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventId = opts.resourceIdSegmentValues.strategicEventId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventId() {
    return this._strategicEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventId: opts.strategicEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventId: this.strategicEventId
    };
  }
};

// src/mercury/strategic-event-status/types.ts
var MercuryStrategicEventStatusAriResourceOwner = "mercury", MercuryStrategicEventStatusAriResourceType = "strategic-event-status";

// src/mercury/strategic-event-status/manifest.ts
var mercuryStrategicEventStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventStatusAriResourceOwner,
  resourceType: MercuryStrategicEventStatusAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventStatusId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventStatusId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event-status/index.ts
var MercuryStrategicEventStatusAri = class _MercuryStrategicEventStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventStatusId = opts.resourceIdSegmentValues.strategicEventStatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventStatusId() {
    return this._strategicEventStatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventStatusAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventStatusAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventStatusAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventStatusId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventStatusId: opts.strategicEventStatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventStatusId: this.strategicEventStatusId
    };
  }
};

// src/mercury/view/types.ts
var MercuryViewAriResourceOwner = "mercury", MercuryViewAriResourceType = "view";

// src/mercury/view/manifest.ts
var mercuryViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryViewAriResourceOwner,
  resourceType: MercuryViewAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{viewId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    viewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/view/index.ts
var MercuryViewAri = class _MercuryViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._viewId = opts.resourceIdSegmentValues.viewId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get viewId() {
    return this._viewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryViewAriStaticOpts.qualifier,
      platformQualifier: mercuryViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryViewAriStaticOpts.resourceOwner,
      resourceType: mercuryViewAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.viewId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        viewId: opts.viewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryViewAriStaticOpts);
    return new _MercuryViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryViewAriStaticOpts);
    return new _MercuryViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      viewId: this.viewId
    };
  }
};

// src/mercury/workspace/types.ts
var MercuryWorkspaceAriResourceOwner = "mercury", MercuryWorkspaceAriResourceType = "workspace";

// src/mercury/workspace/manifest.ts
var mercuryWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryWorkspaceAriResourceOwner,
  resourceType: MercuryWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/workspace/index.ts
var MercuryWorkspaceAri = class _MercuryWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryWorkspaceAriStaticOpts.qualifier,
      platformQualifier: mercuryWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryWorkspaceAriStaticOpts.resourceOwner,
      resourceType: mercuryWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryWorkspaceAriStaticOpts);
    return new _MercuryWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryWorkspaceAriStaticOpts);
    return new _MercuryWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MercuryChangeAri,
  MercuryChangeProposalAri,
  MercuryChangeProposalStatusAri,
  MercuryCommentAri,
  MercuryFocusAreaAri,
  MercuryFocusAreaStatusUpdateAri,
  MercuryFocusAreaTypeAri,
  MercuryProgramAri,
  MercuryProgramStatusUpdateAri,
  MercuryRoleAri,
  MercurySiteAri,
  MercuryStrategicEventAri,
  MercuryStrategicEventStatusAri,
  MercuryViewAri,
  MercuryWorkspaceAri
});
