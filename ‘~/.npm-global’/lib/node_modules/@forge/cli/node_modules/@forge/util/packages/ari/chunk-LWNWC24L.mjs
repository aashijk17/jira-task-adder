import {
  LoomLoomVideoAriResourceOwner,
  LoomLoomVideoAriResourceType
} from "./chunk-DEVNHM4I.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/loom.loom/video/manifest.ts
var loomLoomVideoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomLoomVideoAriResourceOwner,
  resourceType: LoomLoomVideoAriResourceType,
  resourceIdSlug: "{videoId}",
  resourceIdSegmentFormats: {
    videoId: /[a-fA-F0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom.loom/video/index.ts
var LoomLoomVideoAri = class _LoomLoomVideoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._videoId = opts.resourceIdSegmentValues.videoId;
  }
  get videoId() {
    return this._videoId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomLoomVideoAriStaticOpts.qualifier,
      platformQualifier: loomLoomVideoAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomLoomVideoAriStaticOpts.resourceOwner,
      resourceType: loomLoomVideoAriStaticOpts.resourceType,
      resourceId: `${opts.videoId}`,
      resourceIdSegmentValues: {
        videoId: opts.videoId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomLoomVideoAriStaticOpts);
    return new _LoomLoomVideoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomLoomVideoAriStaticOpts);
    return new _LoomLoomVideoAri(opts);
  }
  getVariables() {
    return {
      videoId: this.videoId
    };
  }
};

export {
  LoomLoomVideoAri
};
