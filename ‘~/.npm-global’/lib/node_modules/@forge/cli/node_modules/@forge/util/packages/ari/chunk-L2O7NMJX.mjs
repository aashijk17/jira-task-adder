import {
  SupportCustomerSupportAriResourceOwner,
  SupportCustomerSupportAriResourceType
} from "./chunk-55U3VS6Z.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/support/customer-support/manifest.ts
var supportCustomerSupportAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SupportCustomerSupportAriResourceOwner,
  resourceType: SupportCustomerSupportAriResourceType,
  resourceIdSlug: "{resourceName}",
  resourceIdSegmentFormats: {
    resourceName: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/support/customer-support/index.ts
var SupportCustomerSupportAri = class _SupportCustomerSupportAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceName = opts.resourceIdSegmentValues.resourceName;
  }
  get resourceName() {
    return this._resourceName;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: supportCustomerSupportAriStaticOpts.qualifier,
      platformQualifier: supportCustomerSupportAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: supportCustomerSupportAriStaticOpts.resourceOwner,
      resourceType: supportCustomerSupportAriStaticOpts.resourceType,
      resourceId: `${opts.resourceName}`,
      resourceIdSegmentValues: {
        resourceName: opts.resourceName || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, supportCustomerSupportAriStaticOpts);
    return new _SupportCustomerSupportAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, supportCustomerSupportAriStaticOpts);
    return new _SupportCustomerSupportAri(opts);
  }
  getVariables() {
    return {
      resourceName: this.resourceName
    };
  }
};

export {
  SupportCustomerSupportAri
};
