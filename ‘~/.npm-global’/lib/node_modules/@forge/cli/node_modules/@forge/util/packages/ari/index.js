"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AdobeAdobexdRemoteLinkAri: () => AdobeAdobexdRemoteLinkAri,
  AdobeSignDocumentAri: () => AdobeSignDocumentAri,
  AhaAhaWorkItemAri: () => AhaAhaWorkItemAri,
  AirtableAirtableDocumentAri: () => AirtableAirtableDocumentAri,
  AirtableAirtableRemoteLinkAri: () => AirtableAirtableRemoteLinkAri,
  AmplitudeAmplitudeRemoteLinkAri: () => AmplitudeAmplitudeRemoteLinkAri,
  AnalyticsUserAri: () => AnalyticsUserAri,
  AnyAri: () => AnyAri,
  AppMigrationAppDataAri: () => AppMigrationAppDataAri,
  ApprovalDeskDecisionTableAri: () => ApprovalDeskDecisionTableAri,
  ApprovalDeskRoleAri: () => ApprovalDeskRoleAri,
  ApprovalDeskWorkflowAri: () => ApprovalDeskWorkflowAri,
  ApprovalDeskWorkspaceAri: () => ApprovalDeskWorkspaceAri,
  Ari: () => Ari,
  Arm: () => Arm,
  AsanaAsanaRemoteLinkAri: () => AsanaAsanaRemoteLinkAri,
  AsanaAsanaWorkItemAri: () => AsanaAsanaWorkItemAri,
  Ati: () => Ati,
  AtlashubIdAri: () => AtlashubIdAri,
  AtlashubSiteAri: () => AtlashubSiteAri,
  AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri: () => AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri,
  AuditLogAttributeAri: () => AuditLogAttributeAri,
  AuditLogContainerAri: () => AuditLogContainerAri,
  AuditLogContextAri: () => AuditLogContextAri,
  AuditLogEventAri: () => AuditLogEventAri,
  AuditLogWorkspaceAri: () => AuditLogWorkspaceAri,
  AutomationAutomationRuleAri: () => AutomationAutomationRuleAri,
  AutomationRoleAri: () => AutomationRoleAri,
  AvpControlAri: () => AvpControlAri,
  AvpDashboardAri: () => AvpDashboardAri,
  AvpDashboardChartAri: () => AvpDashboardChartAri,
  AvpDataShareAri: () => AvpDataShareAri,
  AvpDatasourceAri: () => AvpDatasourceAri,
  AvpPipelineQueryAri: () => AvpPipelineQueryAri,
  AvpRoleAri: () => AvpRoleAri,
  AvpSiteAri: () => AvpSiteAri,
  AvpSubscriptionAri: () => AvpSubscriptionAri,
  AvpWorkspaceAri: () => AvpWorkspaceAri,
  AzureDevopsAzureDevopsRemoteLinkAri: () => AzureDevopsAzureDevopsRemoteLinkAri,
  AzureDevopsAzureDevopsRepositoryAri: () => AzureDevopsAzureDevopsRepositoryAri,
  BeaconAlertAri: () => BeaconAlertAri,
  BeaconCustomDetectionAri: () => BeaconCustomDetectionAri,
  BeaconDetectionAri: () => BeaconDetectionAri,
  BeaconDetectionSettingAri: () => BeaconDetectionSettingAri,
  BeaconRoleAri: () => BeaconRoleAri,
  BeaconSiteAri: () => BeaconSiteAri,
  BeaconSubscriptionAri: () => BeaconSubscriptionAri,
  BeaconWorkspaceAri: () => BeaconWorkspaceAri,
  BitbucketAppAri: () => BitbucketAppAri,
  BitbucketOauthConsumerAri: () => BitbucketOauthConsumerAri,
  BitbucketProjectAri: () => BitbucketProjectAri,
  BitbucketPullrequestAri: () => BitbucketPullrequestAri,
  BitbucketRepositoryAri: () => BitbucketRepositoryAri,
  BitbucketRepositoryTransferAri: () => BitbucketRepositoryTransferAri,
  BitbucketSiteAri: () => BitbucketSiteAri,
  BitbucketTeamAri: () => BitbucketTeamAri,
  BitbucketWorkspaceAri: () => BitbucketWorkspaceAri,
  BoxBoxDocumentAri: () => BoxBoxDocumentAri,
  BoxBoxRemoteLinkAri: () => BoxBoxRemoteLinkAri,
  BrieRoleAri: () => BrieRoleAri,
  BrieSiteAri: () => BrieSiteAri,
  CanvaCanvaRemoteLinkAri: () => CanvaCanvaRemoteLinkAri,
  CanvasBoardAri: () => CanvasBoardAri,
  CanvasDatabaseAri: () => CanvasDatabaseAri,
  CanvasSiteAri: () => CanvasSiteAri,
  CanvasWorkspaceAri: () => CanvasWorkspaceAri,
  CiaCprsEmailAri: () => CiaCprsEmailAri,
  CiscoWebexRemoteLinkAri: () => CiscoWebexRemoteLinkAri,
  ClickupClickupRemoteLinkAri: () => ClickupClickupRemoteLinkAri,
  CmdbAttributeAri: () => CmdbAttributeAri,
  CmdbImportConfigurationAri: () => CmdbImportConfigurationAri,
  CmdbObjectAri: () => CmdbObjectAri,
  CmdbRoleAri: () => CmdbRoleAri,
  CmdbSchemaAri: () => CmdbSchemaAri,
  CmdbTypeAri: () => CmdbTypeAri,
  CmdbWorkspaceAri: () => CmdbWorkspaceAri,
  CommerceCatalogAccountAri: () => CommerceCatalogAccountAri,
  CommerceChangeAri: () => CommerceChangeAri,
  CommerceEntitlementAri: () => CommerceEntitlementAri,
  CommerceEntitlementTemplateAri: () => CommerceEntitlementTemplateAri,
  CommerceInitiativeAri: () => CommerceInitiativeAri,
  CommerceInvoiceGroupAri: () => CommerceInvoiceGroupAri,
  CommerceOfferingAri: () => CommerceOfferingAri,
  CommerceOfferingRelationshipTemplateAri: () => CommerceOfferingRelationshipTemplateAri,
  CommerceOrderAri: () => CommerceOrderAri,
  CommercePaymentMethodAri: () => CommercePaymentMethodAri,
  CommercePricingPlanAri: () => CommercePricingPlanAri,
  CommerceProductAri: () => CommerceProductAri,
  CommercePromotionAri: () => CommercePromotionAri,
  CommerceQuoteAri: () => CommerceQuoteAri,
  CommerceRoleAri: () => CommerceRoleAri,
  CommerceShipToPartyAri: () => CommerceShipToPartyAri,
  CommerceTransactionAccountAri: () => CommerceTransactionAccountAri,
  CommerceWorkbenchResourceAri: () => CommerceWorkbenchResourceAri,
  CompassApiEndpointAri: () => CompassApiEndpointAri,
  CompassAssistantAnswerAri: () => CompassAssistantAnswerAri,
  CompassCampaignAri: () => CompassCampaignAri,
  CompassComponentAri: () => CompassComponentAri,
  CompassComponentLabelAri: () => CompassComponentLabelAri,
  CompassComponentLinkAri: () => CompassComponentLinkAri,
  CompassComponentTypeAri: () => CompassComponentTypeAri,
  CompassCustomFieldDefinitionAri: () => CompassCustomFieldDefinitionAri,
  CompassDocumentAri: () => CompassDocumentAri,
  CompassDocumentationCategoryAri: () => CompassDocumentationCategoryAri,
  CompassEventSourceAri: () => CompassEventSourceAri,
  CompassIncomingWebhookAri: () => CompassIncomingWebhookAri,
  CompassLibraryScorecardAri: () => CompassLibraryScorecardAri,
  CompassMetricDefinitionAri: () => CompassMetricDefinitionAri,
  CompassMetricSourceAri: () => CompassMetricSourceAri,
  CompassPackageAri: () => CompassPackageAri,
  CompassRoleAri: () => CompassRoleAri,
  CompassScorecardAri: () => CompassScorecardAri,
  CompassSiteAri: () => CompassSiteAri,
  CompassUserDefinedParameterAri: () => CompassUserDefinedParameterAri,
  CompassWebhookAri: () => CompassWebhookAri,
  CompassWorkspaceAri: () => CompassWorkspaceAri,
  ConfluenceAdminAnnouncementBannerAri: () => ConfluenceAdminAnnouncementBannerAri,
  ConfluenceAttachmentAri: () => ConfluenceAttachmentAri,
  ConfluenceBlogpostAri: () => ConfluenceBlogpostAri,
  ConfluenceCommentAri: () => ConfluenceCommentAri,
  ConfluenceContentAri: () => ConfluenceContentAri,
  ConfluenceCustomContentAri: () => ConfluenceCustomContentAri,
  ConfluenceDatabaseAri: () => ConfluenceDatabaseAri,
  ConfluenceDcConfluenceDcCommentAri: () => ConfluenceDcConfluenceDcCommentAri,
  ConfluenceDcConfluenceDcDocumentAri: () => ConfluenceDcConfluenceDcDocumentAri,
  ConfluenceDcConfluenceDcSpaceAri: () => ConfluenceDcConfluenceDcSpaceAri,
  ConfluenceEmbedAri: () => ConfluenceEmbedAri,
  ConfluenceEventAri: () => ConfluenceEventAri,
  ConfluenceFolderAri: () => ConfluenceFolderAri,
  ConfluenceLabelAri: () => ConfluenceLabelAri,
  ConfluenceLongRunningTaskAri: () => ConfluenceLongRunningTaskAri,
  ConfluenceNoteAri: () => ConfluenceNoteAri,
  ConfluencePageAri: () => ConfluencePageAri,
  ConfluencePublicLinkAri: () => ConfluencePublicLinkAri,
  ConfluenceRoleAri: () => ConfluenceRoleAri,
  ConfluenceSiteAri: () => ConfluenceSiteAri,
  ConfluenceSpaceAri: () => ConfluenceSpaceAri,
  ConfluenceTaskAri: () => ConfluenceTaskAri,
  ConfluenceTeamCalendarAri: () => ConfluenceTeamCalendarAri,
  ConfluenceUserPropertyAri: () => ConfluenceUserPropertyAri,
  ConfluenceWhiteboardAri: () => ConfluenceWhiteboardAri,
  ConfluenceWorkflowAri: () => ConfluenceWorkflowAri,
  ConfluenceWorkspaceAri: () => ConfluenceWorkspaceAri,
  ConnectionRegistryLinkAri: () => ConnectionRegistryLinkAri,
  ConversationalHelpConversationAri: () => ConversationalHelpConversationAri,
  ConversationalHelpConversationMessageAri: () => ConversationalHelpConversationMessageAri,
  ConvoAiWorkspaceAri: () => ConvoAiWorkspaceAri,
  CssXpRoleAri: () => CssXpRoleAri,
  DataLakeLakeConnectionAri: () => DataLakeLakeConnectionAri,
  DevaiAutodevJobAri: () => DevaiAutodevJobAri,
  DevaiWorkspaceAri: () => DevaiWorkspaceAri,
  DevopsContainerAri: () => DevopsContainerAri,
  DevopsNamespaceAri: () => DevopsNamespaceAri,
  DevopsProviderAri: () => DevopsProviderAri,
  DevopsRelationshipAri: () => DevopsRelationshipAri,
  DevopsToolAri: () => DevopsToolAri,
  DocusignDocusignDocumentAri: () => DocusignDocusignDocumentAri,
  DocusignDocusignRemoteLinkAri: () => DocusignDocusignRemoteLinkAri,
  DovetailDovetailRemoteLinkAri: () => DovetailDovetailRemoteLinkAri,
  DropboxDocumentAri: () => DropboxDocumentAri,
  DropboxDropboxDocumentAri: () => DropboxDropboxDocumentAri,
  DropboxDropboxRemoteLinkAri: () => DropboxDropboxRemoteLinkAri,
  DropboxRemoteLinkAri: () => DropboxRemoteLinkAri,
  EcosystemAppAri: () => EcosystemAppAri,
  EcosystemAppEnvironmentVersionAri: () => EcosystemAppEnvironmentVersionAri,
  EcosystemConnectAppAri: () => EcosystemConnectAppAri,
  EcosystemConnectModuleAri: () => EcosystemConnectModuleAri,
  EcosystemEnvironmentAri: () => EcosystemEnvironmentAri,
  EcosystemExtensionAri: () => EcosystemExtensionAri,
  EcosystemExtensionGroupAri: () => EcosystemExtensionGroupAri,
  EcosystemInstallationAri: () => EcosystemInstallationAri,
  EcosystemInstallationLinkAri: () => EcosystemInstallationLinkAri,
  ElementsCustomEmojiMetadataAri: () => ElementsCustomEmojiMetadataAri,
  ElementsWorkspaceAri: () => ElementsWorkspaceAri,
  ElevatePrecalibrationAri: () => ElevatePrecalibrationAri,
  ElevatePrecalibrationPillarAri: () => ElevatePrecalibrationPillarAri,
  ElevateSelfAssessmentAri: () => ElevateSelfAssessmentAri,
  ElevateSelfAssessmentPillarAri: () => ElevateSelfAssessmentPillarAri,
  ExusExternalUserAri: () => ExusExternalUserAri,
  FigmaFigmaDesignAri: () => FigmaFigmaDesignAri,
  FigmaFigmaRemoteLinkAri: () => FigmaFigmaRemoteLinkAri,
  GithubGithubBranchAri: () => GithubGithubBranchAri,
  GithubGithubBuildAri: () => GithubGithubBuildAri,
  GithubGithubCommentAri: () => GithubGithubCommentAri,
  GithubGithubCommitAri: () => GithubGithubCommitAri,
  GithubGithubDeploymentAri: () => GithubGithubDeploymentAri,
  GithubGithubPullRequestAri: () => GithubGithubPullRequestAri,
  GithubGithubRemoteLinkAri: () => GithubGithubRemoteLinkAri,
  GithubGithubRepositoryAri: () => GithubGithubRepositoryAri,
  GithubGithubVulnerabilityAri: () => GithubGithubVulnerabilityAri,
  GitlabGitlabRemoteLinkAri: () => GitlabGitlabRemoteLinkAri,
  GitlabGitlabRepositoryAri: () => GitlabGitlabRepositoryAri,
  GoalGoalTypeAri: () => GoalGoalTypeAri,
  GoalMetricUpdateAri: () => GoalMetricUpdateAri,
  GoalSiteAri: () => GoalSiteAri,
  GoalWorkspaceAri: () => GoalWorkspaceAri,
  GoogleAccountAri: () => GoogleAccountAri,
  GoogleGmailMessageAri: () => GoogleGmailMessageAri,
  GoogleGoogleCalendarCalendarEventAri: () => GoogleGoogleCalendarCalendarEventAri,
  GoogleGoogleDriveDocumentAri: () => GoogleGoogleDriveDocumentAri,
  GoogleGoogleDriveRemoteLinkAri: () => GoogleGoogleDriveRemoteLinkAri,
  GoogleGoogleDriveRslDocumentAri: () => GoogleGoogleDriveRslDocumentAri,
  GraphBranchAri: () => GraphBranchAri,
  GraphBranchHistoryAri: () => GraphBranchHistoryAri,
  GraphBuildAri: () => GraphBuildAri,
  GraphBuildHistoryAri: () => GraphBuildHistoryAri,
  GraphCalendarEventAri: () => GraphCalendarEventAri,
  GraphCalendarEventHistoryAri: () => GraphCalendarEventHistoryAri,
  GraphCommentAri: () => GraphCommentAri,
  GraphCommentHistoryAri: () => GraphCommentHistoryAri,
  GraphCommitAri: () => GraphCommitAri,
  GraphContentAri: () => GraphContentAri,
  GraphConversationAri: () => GraphConversationAri,
  GraphConversationChunkAri: () => GraphConversationChunkAri,
  GraphConversationHistoryAri: () => GraphConversationHistoryAri,
  GraphCustomerOrgAri: () => GraphCustomerOrgAri,
  GraphCustomerOrgHistoryAri: () => GraphCustomerOrgHistoryAri,
  GraphDealAri: () => GraphDealAri,
  GraphDealHistoryAri: () => GraphDealHistoryAri,
  GraphDeploymentAri: () => GraphDeploymentAri,
  GraphDeploymentHistoryAri: () => GraphDeploymentHistoryAri,
  GraphDesignAri: () => GraphDesignAri,
  GraphDesignHistoryAri: () => GraphDesignHistoryAri,
  GraphDevopsComponentAri: () => GraphDevopsComponentAri,
  GraphDocumentAri: () => GraphDocumentAri,
  GraphDocumentHistoryAri: () => GraphDocumentHistoryAri,
  GraphEmployeeAri: () => GraphEmployeeAri,
  GraphEmployeeHistoryAri: () => GraphEmployeeHistoryAri,
  GraphFeatureFlagAri: () => GraphFeatureFlagAri,
  GraphFeatureFlagHistoryAri: () => GraphFeatureFlagHistoryAri,
  GraphIncidentAri: () => GraphIncidentAri,
  GraphIncidentHistoryAri: () => GraphIncidentHistoryAri,
  GraphIntegrationContextAri: () => GraphIntegrationContextAri,
  GraphJiraProjectAndDevopsToolRelationshipAri: () => GraphJiraProjectAndDevopsToolRelationshipAri,
  GraphJiraProjectAndDocumentationSpaceRelationshipAri: () => GraphJiraProjectAndDocumentationSpaceRelationshipAri,
  GraphJiraProjectAndOperationsTeamRelationshipAri: () => GraphJiraProjectAndOperationsTeamRelationshipAri,
  GraphJiraProjectAndVcsRepositoryRelationshipAri: () => GraphJiraProjectAndVcsRepositoryRelationshipAri,
  GraphMessageAri: () => GraphMessageAri,
  GraphOperationsWorkspaceAri: () => GraphOperationsWorkspaceAri,
  GraphOrganisationAri: () => GraphOrganisationAri,
  GraphOrganisationHistoryAri: () => GraphOrganisationHistoryAri,
  GraphPositionAri: () => GraphPositionAri,
  GraphPositionHistoryAri: () => GraphPositionHistoryAri,
  GraphPostIncidentReviewAri: () => GraphPostIncidentReviewAri,
  GraphPostIncidentReviewHistoryAri: () => GraphPostIncidentReviewHistoryAri,
  GraphProjectAri: () => GraphProjectAri,
  GraphProjectHistoryAri: () => GraphProjectHistoryAri,
  GraphPullRequestAri: () => GraphPullRequestAri,
  GraphPullRequestHistoryAri: () => GraphPullRequestHistoryAri,
  GraphRelationshipTypeAri: () => GraphRelationshipTypeAri,
  GraphRemoteLinkAri: () => GraphRemoteLinkAri,
  GraphRemoteLinkHistoryAri: () => GraphRemoteLinkHistoryAri,
  GraphRepositoryAri: () => GraphRepositoryAri,
  GraphRoleAri: () => GraphRoleAri,
  GraphSecurityContainerAri: () => GraphSecurityContainerAri,
  GraphSecurityWorkspaceAri: () => GraphSecurityWorkspaceAri,
  GraphServiceAndJiraProjectRelationshipAri: () => GraphServiceAndJiraProjectRelationshipAri,
  GraphServiceAndOperationsTeamRelationshipAri: () => GraphServiceAndOperationsTeamRelationshipAri,
  GraphServiceAndVcsRepositoryRelationshipAri: () => GraphServiceAndVcsRepositoryRelationshipAri,
  GraphServiceAri: () => GraphServiceAri,
  GraphServiceRelationshipAri: () => GraphServiceRelationshipAri,
  GraphSpaceAri: () => GraphSpaceAri,
  GraphSpaceHistoryAri: () => GraphSpaceHistoryAri,
  GraphThreadChunkAri: () => GraphThreadChunkAri,
  GraphVideoAri: () => GraphVideoAri,
  GraphVideoHistoryAri: () => GraphVideoHistoryAri,
  GraphVulnerabilityAri: () => GraphVulnerabilityAri,
  GraphVulnerabilityHistoryAri: () => GraphVulnerabilityHistoryAri,
  GraphWorkItemAri: () => GraphWorkItemAri,
  GraphWorkItemHistoryAri: () => GraphWorkItemHistoryAri,
  GraphWorkerAri: () => GraphWorkerAri,
  GraphWorkerHistoryAri: () => GraphWorkerHistoryAri,
  GraphWorkspaceAri: () => GraphWorkspaceAri,
  HelpArticleAri: () => HelpArticleAri,
  HelpChannelAri: () => HelpChannelAri,
  HelpHelpCenterAri: () => HelpHelpCenterAri,
  HelpHelpDeskAri: () => HelpHelpDeskAri,
  HelpLayoutAri: () => HelpLayoutAri,
  HelpPageAri: () => HelpPageAri,
  HelpPortalAri: () => HelpPortalAri,
  HelpRequestFormAri: () => HelpRequestFormAri,
  HelpRoleAri: () => HelpRoleAri,
  HomeWorkspaceAri: () => HomeWorkspaceAri,
  HubspotHubspotCustomerOrgAri: () => HubspotHubspotCustomerOrgAri,
  HubspotHubspotDealAri: () => HubspotHubspotDealAri,
  HubspotHubspotRemoteLinkAri: () => HubspotHubspotRemoteLinkAri,
  IdentityAppAri: () => IdentityAppAri,
  IdentityAppGrantAri: () => IdentityAppGrantAri,
  IdentityAuthPolicyAri: () => IdentityAuthPolicyAri,
  IdentityCustomerDirectoryAri: () => IdentityCustomerDirectoryAri,
  IdentityCustomerOrganizationAri: () => IdentityCustomerOrganizationAri,
  IdentityDirectoryAri: () => IdentityDirectoryAri,
  IdentityDomainAri: () => IdentityDomainAri,
  IdentityForgeInstallationAri: () => IdentityForgeInstallationAri,
  IdentityGroupAri: () => IdentityGroupAri,
  IdentityRoleAri: () => IdentityRoleAri,
  IdentityScopedGroupAri: () => IdentityScopedGroupAri,
  IdentityTeamAri: () => IdentityTeamAri,
  IdentityTeamMemberAri: () => IdentityTeamMemberAri,
  IdentityThirdPartyDirectoryAri: () => IdentityThirdPartyDirectoryAri,
  IdentityThirdPartyGroupAri: () => IdentityThirdPartyGroupAri,
  IdentityThirdPartyUserAri: () => IdentityThirdPartyUserAri,
  IdentityUserAri: () => IdentityUserAri,
  IdentityUserGrantAri: () => IdentityUserGrantAri,
  IdentityUserbaseAri: () => IdentityUserbaseAri,
  JiraAiCrocsSentenceAri: () => JiraAiCrocsSentenceAri,
  JiraAiCrocsWorkspaceAri: () => JiraAiCrocsWorkspaceAri,
  JiraAlignInstanceAri: () => JiraAlignInstanceAri,
  JiraAlignProjectAri: () => JiraAlignProjectAri,
  JiraAlignWorkspaceAri: () => JiraAlignWorkspaceAri,
  JiraAnnouncementBannerAri: () => JiraAnnouncementBannerAri,
  JiraAvailableFieldsAri: () => JiraAvailableFieldsAri,
  JiraBranchAri: () => JiraBranchAri,
  JiraBranchHistoryAri: () => JiraBranchHistoryAri,
  JiraBuildAri: () => JiraBuildAri,
  JiraBuildHistoryAri: () => JiraBuildHistoryAri,
  JiraBulkOperationTaskAri: () => JiraBulkOperationTaskAri,
  JiraCommitAri: () => JiraCommitAri,
  JiraComponentAri: () => JiraComponentAri,
  JiraConnectAppAri: () => JiraConnectAppAri,
  JiraCoreRoleAri: () => JiraCoreRoleAri,
  JiraCoreSiteAri: () => JiraCoreSiteAri,
  JiraCustomerServiceRoleAri: () => JiraCustomerServiceRoleAri,
  JiraCustomerServiceSiteAri: () => JiraCustomerServiceSiteAri,
  JiraCustomerServiceTemplateFormAri: () => JiraCustomerServiceTemplateFormAri,
  JiraDashboardAri: () => JiraDashboardAri,
  JiraDcJiraDcCommentAri: () => JiraDcJiraDcCommentAri,
  JiraDcJiraDcProjectAri: () => JiraDcJiraDcProjectAri,
  JiraDcJiraDcSpaceAri: () => JiraDcJiraDcSpaceAri,
  JiraDcJiraDcWorkItemAri: () => JiraDcJiraDcWorkItemAri,
  JiraDcSecondaryJiraDcCommentAri: () => JiraDcSecondaryJiraDcCommentAri,
  JiraDcSecondaryJiraDcProjectAri: () => JiraDcSecondaryJiraDcProjectAri,
  JiraDcSecondaryJiraDcSpaceAri: () => JiraDcSecondaryJiraDcSpaceAri,
  JiraDcSecondaryJiraDcWorkItemAri: () => JiraDcSecondaryJiraDcWorkItemAri,
  JiraDcTertiaryJiraDcCommentAri: () => JiraDcTertiaryJiraDcCommentAri,
  JiraDcTertiaryJiraDcProjectAri: () => JiraDcTertiaryJiraDcProjectAri,
  JiraDcTertiaryJiraDcSpaceAri: () => JiraDcTertiaryJiraDcSpaceAri,
  JiraDcTertiaryJiraDcWorkItemAri: () => JiraDcTertiaryJiraDcWorkItemAri,
  JiraDeploymentAri: () => JiraDeploymentAri,
  JiraDeploymentHistoryAri: () => JiraDeploymentHistoryAri,
  JiraDesignAri: () => JiraDesignAri,
  JiraDesignHistoryAri: () => JiraDesignHistoryAri,
  JiraDevopsComponentAri: () => JiraDevopsComponentAri,
  JiraDocumentAri: () => JiraDocumentAri,
  JiraDocumentHistoryAri: () => JiraDocumentHistoryAri,
  JiraEntitlementAri: () => JiraEntitlementAri,
  JiraEntityPropertyAri: () => JiraEntityPropertyAri,
  JiraFavouriteAri: () => JiraFavouriteAri,
  JiraFeatureFlagAri: () => JiraFeatureFlagAri,
  JiraFeatureFlagHistoryAri: () => JiraFeatureFlagHistoryAri,
  JiraFieldConfigurationAri: () => JiraFieldConfigurationAri,
  JiraFieldConfigurationContextAri: () => JiraFieldConfigurationContextAri,
  JiraFieldSetViewAri: () => JiraFieldSetViewAri,
  JiraFilterAri: () => JiraFilterAri,
  JiraFilterEmailSubscriptionAri: () => JiraFilterEmailSubscriptionAri,
  JiraFormAri: () => JiraFormAri,
  JiraIncidentAri: () => JiraIncidentAri,
  JiraIncidentHistoryAri: () => JiraIncidentHistoryAri,
  JiraIssueAri: () => JiraIssueAri,
  JiraIssueAttachmentAri: () => JiraIssueAttachmentAri,
  JiraIssueCommentAri: () => JiraIssueCommentAri,
  JiraIssueFieldMetadataAri: () => JiraIssueFieldMetadataAri,
  JiraIssueFieldOptionAri: () => JiraIssueFieldOptionAri,
  JiraIssueHistoryAri: () => JiraIssueHistoryAri,
  JiraIssueLinkAri: () => JiraIssueLinkAri,
  JiraIssueLinkTypeAri: () => JiraIssueLinkTypeAri,
  JiraIssueRemoteLinkAri: () => JiraIssueRemoteLinkAri,
  JiraIssueSearchViewAri: () => JiraIssueSearchViewAri,
  JiraIssueSearchViewTypeAri: () => JiraIssueSearchViewTypeAri,
  JiraIssueSecurityLevelPermissionAri: () => JiraIssueSecurityLevelPermissionAri,
  JiraIssueStatusAri: () => JiraIssueStatusAri,
  JiraIssueTypeAri: () => JiraIssueTypeAri,
  JiraIssueTypeSchemeAri: () => JiraIssueTypeSchemeAri,
  JiraIssueTypeSchemeMappingAri: () => JiraIssueTypeSchemeMappingAri,
  JiraIssueWorklogAri: () => JiraIssueWorklogAri,
  JiraIssuefieldvalueAri: () => JiraIssuefieldvalueAri,
  JiraNavigationConfigAri: () => JiraNavigationConfigAri,
  JiraNavigationItemAri: () => JiraNavigationItemAri,
  JiraNavigationMenuAri: () => JiraNavigationMenuAri,
  JiraNavigationSettingsAri: () => JiraNavigationSettingsAri,
  JiraNotificationTypeAri: () => JiraNotificationTypeAri,
  JiraNotificationTypeSchemeAri: () => JiraNotificationTypeSchemeAri,
  JiraNotificationUserPreferenceAri: () => JiraNotificationUserPreferenceAri,
  JiraOperationsWorkspaceAri: () => JiraOperationsWorkspaceAri,
  JiraPermissionSchemeAri: () => JiraPermissionSchemeAri,
  JiraPlanAri: () => JiraPlanAri,
  JiraPlanCrossProjectScenarioVersionAri: () => JiraPlanCrossProjectScenarioVersionAri,
  JiraPlanCrossProjectVersionAri: () => JiraPlanCrossProjectVersionAri,
  JiraPlanScenarioAri: () => JiraPlanScenarioAri,
  JiraPlanScenarioIssueAri: () => JiraPlanScenarioIssueAri,
  JiraPlanScenarioIssueFieldAri: () => JiraPlanScenarioIssueFieldAri,
  JiraPlanScenarioVersionAri: () => JiraPlanScenarioVersionAri,
  JiraPlaybookAri: () => JiraPlaybookAri,
  JiraPlaybookInstanceAri: () => JiraPlaybookInstanceAri,
  JiraPlaybookInstanceStepAri: () => JiraPlaybookInstanceStepAri,
  JiraPlaybookLabelAri: () => JiraPlaybookLabelAri,
  JiraPlaybookStepAri: () => JiraPlaybookStepAri,
  JiraPlaybookStepRunAri: () => JiraPlaybookStepRunAri,
  JiraPostIncidentReviewAri: () => JiraPostIncidentReviewAri,
  JiraPostIncidentReviewHistoryAri: () => JiraPostIncidentReviewHistoryAri,
  JiraPostIncidentReviewLinkAri: () => JiraPostIncidentReviewLinkAri,
  JiraPriorityAri: () => JiraPriorityAri,
  JiraProductAri: () => JiraProductAri,
  JiraProjectAri: () => JiraProjectAri,
  JiraProjectCategoryAri: () => JiraProjectCategoryAri,
  JiraProjectFeatureAri: () => JiraProjectFeatureAri,
  JiraProjectOverviewAri: () => JiraProjectOverviewAri,
  JiraProjectRoleActorAri: () => JiraProjectRoleActorAri,
  JiraProjectRoleByProjectAri: () => JiraProjectRoleByProjectAri,
  JiraProjectShortcutAri: () => JiraProjectShortcutAri,
  JiraProjectTypeAri: () => JiraProjectTypeAri,
  JiraPullRequestAri: () => JiraPullRequestAri,
  JiraPullRequestHistoryAri: () => JiraPullRequestHistoryAri,
  JiraRemoteLinkAri: () => JiraRemoteLinkAri,
  JiraRemoteLinkHistoryAri: () => JiraRemoteLinkHistoryAri,
  JiraRepositoryAri: () => JiraRepositoryAri,
  JiraResolutionAri: () => JiraResolutionAri,
  JiraResourceUsageMetricAri: () => JiraResourceUsageMetricAri,
  JiraResourceUsageRecommendationAri: () => JiraResourceUsageRecommendationAri,
  JiraRoleAri: () => JiraRoleAri,
  JiraScreenAri: () => JiraScreenAri,
  JiraScreenSchemeAri: () => JiraScreenSchemeAri,
  JiraScreenTabAri: () => JiraScreenTabAri,
  JiraSecurityContainerAri: () => JiraSecurityContainerAri,
  JiraSecurityLevelAri: () => JiraSecurityLevelAri,
  JiraSecurityWorkspaceAri: () => JiraSecurityWorkspaceAri,
  JiraServicedeskApprovalAri: () => JiraServicedeskApprovalAri,
  JiraServicedeskCalendarEventAri: () => JiraServicedeskCalendarEventAri,
  JiraServicedeskCannedResponseAri: () => JiraServicedeskCannedResponseAri,
  JiraServicedeskOrganizationAri: () => JiraServicedeskOrganizationAri,
  JiraServicedeskOrganizationMemberAri: () => JiraServicedeskOrganizationMemberAri,
  JiraServicedeskQueueAri: () => JiraServicedeskQueueAri,
  JiraServicedeskRequestTypeAri: () => JiraServicedeskRequestTypeAri,
  JiraServicedeskRoleAri: () => JiraServicedeskRoleAri,
  JiraServicedeskSiteAri: () => JiraServicedeskSiteAri,
  JiraServicedeskSlaAri: () => JiraServicedeskSlaAri,
  JiraSiteAri: () => JiraSiteAri,
  JiraSoftwareBoardAri: () => JiraSoftwareBoardAri,
  JiraSoftwareBoardFeatureAri: () => JiraSoftwareBoardFeatureAri,
  JiraSoftwareBoardIssueListAri: () => JiraSoftwareBoardIssueListAri,
  JiraSoftwareCardAri: () => JiraSoftwareCardAri,
  JiraSoftwareCardColorAri: () => JiraSoftwareCardColorAri,
  JiraSoftwareCardLayoutAri: () => JiraSoftwareCardLayoutAri,
  JiraSoftwareCardParentAri: () => JiraSoftwareCardParentAri,
  JiraSoftwareColumnAri: () => JiraSoftwareColumnAri,
  JiraSoftwareCustomFilterAri: () => JiraSoftwareCustomFilterAri,
  JiraSoftwareRoleAri: () => JiraSoftwareRoleAri,
  JiraSoftwareSiteAri: () => JiraSoftwareSiteAri,
  JiraSoftwareSwimlaneAri: () => JiraSoftwareSwimlaneAri,
  JiraSoftwareUserBoardConfigAri: () => JiraSoftwareUserBoardConfigAri,
  JiraSoftwareViewConfigAri: () => JiraSoftwareViewConfigAri,
  JiraSprintAri: () => JiraSprintAri,
  JiraUserBroadcastMessageAri: () => JiraUserBroadcastMessageAri,
  JiraVersionApproverAri: () => JiraVersionApproverAri,
  JiraVersionAri: () => JiraVersionAri,
  JiraViewAri: () => JiraViewAri,
  JiraVulnerabilityAri: () => JiraVulnerabilityAri,
  JiraVulnerabilityHistoryAri: () => JiraVulnerabilityHistoryAri,
  JiraWorkflowAri: () => JiraWorkflowAri,
  JiraWorkflowSchemeAri: () => JiraWorkflowSchemeAri,
  JiraWorkspaceAri: () => JiraWorkspaceAri,
  JsmChannelOrchestratorConversationAri: () => JsmChannelOrchestratorConversationAri,
  KnowledgeDiscoveryBookmarkAri: () => KnowledgeDiscoveryBookmarkAri,
  KnowledgeServingAndAccessTopicAri: () => KnowledgeServingAndAccessTopicAri,
  LaunchdarklyLaunchdarklyRemoteLinkAri: () => LaunchdarklyLaunchdarklyRemoteLinkAri,
  LearningPlatformLearnerAri: () => LearningPlatformLearnerAri,
  LinkingPlatformDatasourceAri: () => LinkingPlatformDatasourceAri,
  LoginAlerterSiteAri: () => LoginAlerterSiteAri,
  LoomCommentAri: () => LoomCommentAri,
  LoomFolderAri: () => LoomFolderAri,
  LoomLoomVideoAri: () => LoomLoomVideoAri,
  LoomMeetingAri: () => LoomMeetingAri,
  LoomMeetingRecurrenceAri: () => LoomMeetingRecurrenceAri,
  LoomSiteAri: () => LoomSiteAri,
  LoomSpaceAri: () => LoomSpaceAri,
  LoomStandaloneWorkspaceAri: () => LoomStandaloneWorkspaceAri,
  LoomVideoAri: () => LoomVideoAri,
  LoomWorkspaceAri: () => LoomWorkspaceAri,
  LucidLucidchartDesignAri: () => LucidLucidchartDesignAri,
  LucidLucidchartRemoteLinkAri: () => LucidLucidchartRemoteLinkAri,
  MakerSpaceGroupAri: () => MakerSpaceGroupAri,
  MapiRoleAri: () => MapiRoleAri,
  MarketingCustomerDomainAri: () => MarketingCustomerDomainAri,
  MarketplaceTeamAri: () => MarketplaceTeamAri,
  MeasurementEmailUuidAri: () => MeasurementEmailUuidAri,
  MeasurementSiteUserAri: () => MeasurementSiteUserAri,
  MeasurementUserAri: () => MeasurementUserAri,
  MediaFileAri: () => MediaFileAri,
  MercuryChangeAri: () => MercuryChangeAri,
  MercuryChangeProposalAri: () => MercuryChangeProposalAri,
  MercuryChangeProposalStatusAri: () => MercuryChangeProposalStatusAri,
  MercuryCommentAri: () => MercuryCommentAri,
  MercuryFocusAreaAri: () => MercuryFocusAreaAri,
  MercuryFocusAreaStatusUpdateAri: () => MercuryFocusAreaStatusUpdateAri,
  MercuryFocusAreaTypeAri: () => MercuryFocusAreaTypeAri,
  MercuryRoleAri: () => MercuryRoleAri,
  MercurySiteAri: () => MercurySiteAri,
  MercuryStrategicEventAri: () => MercuryStrategicEventAri,
  MercuryStrategicEventStatusAri: () => MercuryStrategicEventStatusAri,
  MercuryViewAri: () => MercuryViewAri,
  MercuryWorkspaceAri: () => MercuryWorkspaceAri,
  MicrosoftAccountAri: () => MicrosoftAccountAri,
  MicrosoftOnedriveDocumentAri: () => MicrosoftOnedriveDocumentAri,
  MicrosoftOutlookCalendarCalendarEventAri: () => MicrosoftOutlookCalendarCalendarEventAri,
  MicrosoftOutlookMessageAri: () => MicrosoftOutlookMessageAri,
  MicrosoftPowerBiRemoteLinkAri: () => MicrosoftPowerBiRemoteLinkAri,
  MicrosoftSharepointDocumentAri: () => MicrosoftSharepointDocumentAri,
  MicrosoftTeamsConversationAri: () => MicrosoftTeamsConversationAri,
  MicrosoftTeamsMessageAri: () => MicrosoftTeamsMessageAri,
  MicrosoftTeamsRemoteLinkAri: () => MicrosoftTeamsRemoteLinkAri,
  MigrationReportCenterReportRequestProxyAri: () => MigrationReportCenterReportRequestProxyAri,
  MiroMiroDesignAri: () => MiroMiroDesignAri,
  MiroMiroRemoteLinkAri: () => MiroMiroRemoteLinkAri,
  MlRegistryArtifactAri: () => MlRegistryArtifactAri,
  MondayMondayDocumentAri: () => MondayMondayDocumentAri,
  MuralMuralRemoteLinkAri: () => MuralMuralRemoteLinkAri,
  NotionNotionDocumentAri: () => NotionNotionDocumentAri,
  NotionNotionRemoteLinkAri: () => NotionNotionRemoteLinkAri,
  OauthClientAri: () => OauthClientAri,
  OpsgenieAccountLoginAri: () => OpsgenieAccountLoginAri,
  OpsgenieAccountSettingsAri: () => OpsgenieAccountSettingsAri,
  OpsgenieAlertAri: () => OpsgenieAlertAri,
  OpsgenieAlertRecipientLinkAri: () => OpsgenieAlertRecipientLinkAri,
  OpsgenieApiRequestMetricAri: () => OpsgenieApiRequestMetricAri,
  OpsgenieCallRoutingAri: () => OpsgenieCallRoutingAri,
  OpsgenieCustomRoleAri: () => OpsgenieCustomRoleAri,
  OpsgenieDeploymentAri: () => OpsgenieDeploymentAri,
  OpsgenieDeploymentServiceLinkAri: () => OpsgenieDeploymentServiceLinkAri,
  OpsgenieEscalationAri: () => OpsgenieEscalationAri,
  OpsgenieEventAri: () => OpsgenieEventAri,
  OpsgenieIncidentAlertLinkAri: () => OpsgenieIncidentAlertLinkAri,
  OpsgenieIncidentAri: () => OpsgenieIncidentAri,
  OpsgenieIncidentStatusUpdateAri: () => OpsgenieIncidentStatusUpdateAri,
  OpsgenieIncomingCallHistoryAri: () => OpsgenieIncomingCallHistoryAri,
  OpsgenieIntegrationAri: () => OpsgenieIntegrationAri,
  OpsgenieNotificationAri: () => OpsgenieNotificationAri,
  OpsgenieRoleAri: () => OpsgenieRoleAri,
  OpsgenieSavedSearchAri: () => OpsgenieSavedSearchAri,
  OpsgenieScheduleAri: () => OpsgenieScheduleAri,
  OpsgenieScheduleRotationAri: () => OpsgenieScheduleRotationAri,
  OpsgenieSiteAri: () => OpsgenieSiteAri,
  OpsgenieTeamAri: () => OpsgenieTeamAri,
  OpsgenieTeamMemberAri: () => OpsgenieTeamMemberAri,
  OpsgenieTimelineAri: () => OpsgenieTimelineAri,
  OpsgenieWorkspaceAri: () => OpsgenieWorkspaceAri,
  OrgPolicyPolicyAri: () => OrgPolicyPolicyAri,
  PagerdutyPagerdutyRemoteLinkAri: () => PagerdutyPagerdutyRemoteLinkAri,
  PapiApiAri: () => PapiApiAri,
  PapiRoleAri: () => PapiRoleAri,
  PassionfruitAskActivityAri: () => PassionfruitAskActivityAri,
  PassionfruitAskAri: () => PassionfruitAskAri,
  PassionfruitAskCommentAri: () => PassionfruitAskCommentAri,
  PassionfruitAskLinkAri: () => PassionfruitAskLinkAri,
  PassionfruitAskUpdateAri: () => PassionfruitAskUpdateAri,
  PassionfruitDependencyAri: () => PassionfruitDependencyAri,
  PassionfruitRoleAri: () => PassionfruitRoleAri,
  PassionfruitSiteAri: () => PassionfruitSiteAri,
  PassionfruitWorkspaceAri: () => PassionfruitWorkspaceAri,
  PeopleDataCostCenterAri: () => PeopleDataCostCenterAri,
  PeopleDataJobProfileAri: () => PeopleDataJobProfileAri,
  PeopleDataPositionAri: () => PeopleDataPositionAri,
  PeopleDataSupervisoryOrgAri: () => PeopleDataSupervisoryOrgAri,
  PeopleDataWorkerAri: () => PeopleDataWorkerAri,
  PeoplePerftoolCalibrationAri: () => PeoplePerftoolCalibrationAri,
  PeoplePerftoolFeedbackAri: () => PeoplePerftoolFeedbackAri,
  PeoplePerftoolPerformanceAri: () => PeoplePerftoolPerformanceAri,
  PipedrivePipedriveRemoteLinkAri: () => PipedrivePipedriveRemoteLinkAri,
  PlatformClassificationTagAri: () => PlatformClassificationTagAri,
  PlatformCollaborationContextAri: () => PlatformCollaborationContextAri,
  PlatformIntegrationAri: () => PlatformIntegrationAri,
  PlatformLifecycleResourceAri: () => PlatformLifecycleResourceAri,
  PlatformLifecycleResourcePackageAri: () => PlatformLifecycleResourcePackageAri,
  PlatformLifecycleResourcePackageTypeAri: () => PlatformLifecycleResourcePackageTypeAri,
  PlatformOrgAri: () => PlatformOrgAri,
  PlatformOrgUserAri: () => PlatformOrgUserAri,
  PlatformProductAri: () => PlatformProductAri,
  PlatformSecureTunnelAri: () => PlatformSecureTunnelAri,
  PlatformServicesStreamhubSchemaAri: () => PlatformServicesStreamhubSchemaAri,
  PlatformSiteAri: () => PlatformSiteAri,
  PlatformTestProvisioningEntityAri: () => PlatformTestProvisioningEntityAri,
  PollinatorCheckAri: () => PollinatorCheckAri,
  PostOfficeMessageInstanceAri: () => PostOfficeMessageInstanceAri,
  PostOfficeMessageTemplateAri: () => PostOfficeMessageTemplateAri,
  PostOfficeTriggerAri: () => PostOfficeTriggerAri,
  ProformaHelpcenterFormAri: () => ProformaHelpcenterFormAri,
  ProformaIssueFormAri: () => ProformaIssueFormAri,
  ProformaProjectFormAri: () => ProformaProjectFormAri,
  ProformaRoleAri: () => ProformaRoleAri,
  ProjectSiteAri: () => ProjectSiteAri,
  ProjectWorkspaceAri: () => ProjectWorkspaceAri,
  PurePermissionAri: () => PurePermissionAri,
  PureResourceAri: () => PureResourceAri,
  PureRoleAri: () => PureRoleAri,
  RadarPositionAri: () => RadarPositionAri,
  RadarSiteAri: () => RadarSiteAri,
  RadarWorkerAri: () => RadarWorkerAri,
  RadarWorkspaceAri: () => RadarWorkspaceAri,
  ResourceOwner: () => ResourceOwnerEnum,
  ResourceType: () => ResourceTypeEnum,
  RovoAgentAri: () => RovoAgentAri,
  RovoCustomActionAri: () => RovoCustomActionAri,
  RovoFileAri: () => RovoFileAri,
  RovoMessageAri: () => RovoMessageAri,
  RovoScenarioAri: () => RovoScenarioAri,
  RovoSiteAri: () => RovoSiteAri,
  RovoWorkspaceAri: () => RovoWorkspaceAri,
  RuntimeAuthClientRoleAri: () => RuntimeAuthClientRoleAri,
  SalesforceSalesforceCustomerOrgAri: () => SalesforceSalesforceCustomerOrgAri,
  SalesforceSalesforceDealAri: () => SalesforceSalesforceDealAri,
  SalesforceSalesforceRemoteLinkAri: () => SalesforceSalesforceRemoteLinkAri,
  SandboxServiceSiteAri: () => SandboxServiceSiteAri,
  SearchEventAri: () => SearchEventAri,
  SearchForwardDocumentAri: () => SearchForwardDocumentAri,
  SearchForwardDocumentSubscriptionAri: () => SearchForwardDocumentSubscriptionAri,
  SearchPermissionContainerAri: () => SearchPermissionContainerAri,
  SentrySentryRemoteLinkAri: () => SentrySentryRemoteLinkAri,
  ServicenowServicenowWorkItemAri: () => ServicenowServicenowWorkItemAri,
  SettingsServiceSettingsAri: () => SettingsServiceSettingsAri,
  SlackSlackConversationAri: () => SlackSlackConversationAri,
  SlackSlackMessageAri: () => SlackSlackMessageAri,
  SmartsheetSmartsheetDocumentAri: () => SmartsheetSmartsheetDocumentAri,
  SmartsheetSmartsheetRemoteLinkAri: () => SmartsheetSmartsheetRemoteLinkAri,
  SpinnakerSpinnakerDeploymentAri: () => SpinnakerSpinnakerDeploymentAri,
  StatuspageRoleAri: () => StatuspageRoleAri,
  StatuspageSiteAri: () => StatuspageSiteAri,
  StripeStripeRemoteLinkAri: () => StripeStripeRemoteLinkAri,
  SupportCustomerAri: () => SupportCustomerAri,
  SupportCustomerSupportAri: () => SupportCustomerSupportAri,
  TodoistTodoistRemoteLinkAri: () => TodoistTodoistRemoteLinkAri,
  TownsquareCommentAri: () => TownsquareCommentAri,
  TownsquareGoalAri: () => TownsquareGoalAri,
  TownsquareGoalUpdateAri: () => TownsquareGoalUpdateAri,
  TownsquareHelpPointerAri: () => TownsquareHelpPointerAri,
  TownsquareLearningAri: () => TownsquareLearningAri,
  TownsquareMetricAri: () => TownsquareMetricAri,
  TownsquareMetricTargetAri: () => TownsquareMetricTargetAri,
  TownsquareMetricValueAri: () => TownsquareMetricValueAri,
  TownsquareMilestoneAri: () => TownsquareMilestoneAri,
  TownsquareProjectAri: () => TownsquareProjectAri,
  TownsquareProjectUpdateAri: () => TownsquareProjectUpdateAri,
  TownsquareQuestionAri: () => TownsquareQuestionAri,
  TownsquareRoleAri: () => TownsquareRoleAri,
  TownsquareSiteAri: () => TownsquareSiteAri,
  TownsquareTagAri: () => TownsquareTagAri,
  TownsquareUpdateNoteAri: () => TownsquareUpdateNoteAri,
  TownsquareWorkspaceAri: () => TownsquareWorkspaceAri,
  TrelloAttachmentAri: () => TrelloAttachmentAri,
  TrelloAvatarAri: () => TrelloAvatarAri,
  TrelloBackgroundAri: () => TrelloBackgroundAri,
  TrelloBoardAri: () => TrelloBoardAri,
  TrelloCardAri: () => TrelloCardAri,
  TrelloCheckItemAri: () => TrelloCheckItemAri,
  TrelloChecklistAri: () => TrelloChecklistAri,
  TrelloCustomFieldAri: () => TrelloCustomFieldAri,
  TrelloEmojiAri: () => TrelloEmojiAri,
  TrelloEnterpriseAri: () => TrelloEnterpriseAri,
  TrelloLabelAri: () => TrelloLabelAri,
  TrelloListAri: () => TrelloListAri,
  TrelloLogoAri: () => TrelloLogoAri,
  TrelloPlannerAri: () => TrelloPlannerAri,
  TrelloPlannerCalendarAri: () => TrelloPlannerCalendarAri,
  TrelloPlannerEventCardAri: () => TrelloPlannerEventCardAri,
  TrelloRoleAri: () => TrelloRoleAri,
  TrelloSiteAri: () => TrelloSiteAri,
  TrelloStickerAri: () => TrelloStickerAri,
  TrelloUserAri: () => TrelloUserAri,
  TrelloWorkspaceAri: () => TrelloWorkspaceAri,
  TrustEngEmailAri: () => TrustEngEmailAri,
  UnifiedHelpRoleAri: () => UnifiedHelpRoleAri,
  UnifiedHelpSiteAri: () => UnifiedHelpSiteAri,
  UnifiedHelpWorkspaceAri: () => UnifiedHelpWorkspaceAri,
  UnifiedPortableProfileLinkedAccountAri: () => UnifiedPortableProfileLinkedAccountAri,
  UnifiedPortableProfileParentAccountAri: () => UnifiedPortableProfileParentAccountAri,
  UnifiedPortableProfileUnifiedAccountAri: () => UnifiedPortableProfileUnifiedAccountAri,
  UnifiedPortableProfileUnifiedProfileAri: () => UnifiedPortableProfileUnifiedProfileAri,
  UsageTrackingUsageAri: () => UsageTrackingUsageAri,
  ValidationError: () => ValidationError,
  VirtualAgentConfigurationAri: () => VirtualAgentConfigurationAri,
  VirtualAgentConversationAri: () => VirtualAgentConversationAri,
  VirtualAgentFlowEditorAri: () => VirtualAgentFlowEditorAri,
  VirtualAgentIntentAri: () => VirtualAgentIntentAri,
  VirtualAgentIntentQuestionAri: () => VirtualAgentIntentQuestionAri,
  VirtualAgentIntentTemplateAri: () => VirtualAgentIntentTemplateAri,
  WorkatoJobAri: () => WorkatoJobAri,
  WorkatoRecipeAri: () => WorkatoRecipeAri,
  WorkdayCostCenterAri: () => WorkdayCostCenterAri,
  WorkdayJobProfileAri: () => WorkdayJobProfileAri,
  WorkdayPositionAri: () => WorkdayPositionAri,
  WorkdayStaffAri: () => WorkdayStaffAri,
  WorkdaySupervisoryOrgAri: () => WorkdaySupervisoryOrgAri,
  WorkdayWorkdayOrganisationAri: () => WorkdayWorkdayOrganisationAri,
  WorkdayWorkdayPositionAri: () => WorkdayWorkdayPositionAri,
  WorkdayWorkdayWorkerAri: () => WorkdayWorkdayWorkerAri,
  WorkdayWorkerAri: () => WorkdayWorkerAri,
  ZendeskZendeskDocumentAri: () => ZendeskZendeskDocumentAri,
  ZendeskZendeskWorkItemAri: () => ZendeskZendeskWorkItemAri,
  ZeplinZeplinRemoteLinkAri: () => ZeplinZeplinRemoteLinkAri
});
module.exports = __toCommonJS(src_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}
function validateArmQualifier(qualifier) {
  if (qualifier !== "arm")
    throw new ValidationError(`ARM must have a qualifier of 'arm'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:;{}=]+(/[!a-zA-Z0-9\\-_.~@:;{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/rules/resource-matcher.ts
function validateNullableResourceMatcher(maybeMatcher) {
  maybeMatcher.length !== 0 && validateMatcher(maybeMatcher);
}
function validateResourceMatcher(maybeMatcher) {
  if (!maybeMatcher)
    throw Error("Matcher must be defined");
  validateMatcher(maybeMatcher);
}
function validateMatcher(maybeMatcher) {
  try {
    new RegExp(maybeMatcher);
  } catch (e) {
    throw Error("Invalid matcher sequence");
  }
}

// src/core/parser/arm.ts
var NUMBER_OF_ARM_SEGMENTS = 5, ArmParser = class extends BaseParser {
  static fromString(maybeArm) {
    let segments = this.getIdentifierSegments(maybeArm, NUMBER_OF_ARM_SEGMENTS), [qualifier, platformQualifier, resourceOwnerMatcher, cloudIdMatcher, resourceTypeAndIdMatchers] = segments, [resourceTypeMatcher, resourceIdMatcher] = resourceTypeAndIdMatchers.split("/"), maybeArmOpts = {
      qualifier,
      platformQualifier,
      cloudIdMatcher,
      resourceOwnerMatcher,
      resourceTypeMatcher,
      resourceIdMatcher
    };
    return this.fromOpts(maybeArmOpts);
  }
  static fromOpts(maybeArmOpts) {
    let {
      qualifier = "arm",
      platformQualifier = "cloud",
      cloudIdMatcher,
      resourceOwnerMatcher,
      resourceTypeMatcher,
      resourceIdMatcher
    } = maybeArmOpts;
    return validateArmQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateNullableResourceMatcher(cloudIdMatcher), validateResourceMatcher(resourceOwnerMatcher), validateResourceMatcher(resourceTypeMatcher), validateResourceMatcher(resourceIdMatcher), {
      platformQualifier,
      cloudIdMatcher,
      resourceOwnerMatcher,
      resourceTypeMatcher,
      resourceIdMatcher
    };
  }
};

// src/arm.ts
var Arm = class _Arm {
  static create(armOpts) {
    let opts = ArmParser.fromOpts({
      ...armOpts,
      qualifier: "arm",
      platformQualifier: armOpts.platformQualifier || "cloud",
      cloudIdMatcher: armOpts.cloudIdMatcher
    });
    return new _Arm(opts);
  }
  static parse(maybeArm) {
    let opts = ArmParser.fromString(maybeArm);
    return new _Arm(opts);
  }
  constructor(opts) {
    this._platformQualifier = opts.platformQualifier, this._cloudIdMatcher = opts.cloudIdMatcher, this._resourceOwnerMatcher = opts.resourceOwnerMatcher, this._resourceTypeMatcher = opts.resourceTypeMatcher, this._resourceIdMatcher = opts.resourceIdMatcher;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get cloudIdMatcher() {
    return this._cloudIdMatcher;
  }
  get resourceOwnerMatcher() {
    return this._resourceOwnerMatcher;
  }
  get resourceTypeMatcher() {
    return this._resourceTypeMatcher;
  }
  get resourceIdMatcher() {
    return this._resourceIdMatcher;
  }
  match(ari) {
    var _a, _b;
    let cloudId = (_a = ari.cloudId) != null ? _a : "", resourceOwner = ari.resourceOwner, resourceType = ari.resourceType, resourceId = ari.resourceId;
    return !(!new RegExp((_b = this.cloudIdMatcher) != null ? _b : "").test(cloudId) || !new RegExp(this.resourceOwnerMatcher).test(resourceOwner) || !new RegExp(this.resourceTypeMatcher).test(resourceType) || !new RegExp(this.resourceIdMatcher).test(resourceId));
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    let {
      platformQualifier,
      resourceOwnerMatcher,
      cloudIdMatcher = "",
      resourceTypeMatcher,
      resourceIdMatcher
    } = this;
    return `arm:${platformQualifier}:${resourceOwnerMatcher}:${cloudIdMatcher}:${resourceTypeMatcher}/${resourceIdMatcher}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      cloudIdMatcher: this.cloudIdMatcher,
      resourceOwnerMatcher: this.resourceOwnerMatcher,
      resourceTypeMatcher: this.resourceTypeMatcher,
      resourceIdMatcher: this.resourceIdMatcher
    };
  }
};

// src/core/types/deprecated/resource-owner-enum.ts
var ResourceOwnerEnum = /* @__PURE__ */ ((ResourceOwnerEnum2) => (ResourceOwnerEnum2.AdobeAdobexd = "adobe.adobexd", ResourceOwnerEnum2.AdobeSign = "adobe.sign", ResourceOwnerEnum2.AhaAha = "aha.aha", ResourceOwnerEnum2.AirtableAirtable = "airtable.airtable", ResourceOwnerEnum2.AmplitudeAmplitude = "amplitude.amplitude", ResourceOwnerEnum2.Analytics = "analytics", ResourceOwnerEnum2.AppMigration = "app-migration", ResourceOwnerEnum2.ApprovalDesk = "approval-desk", ResourceOwnerEnum2.AsanaAsana = "asana.asana", ResourceOwnerEnum2.Atlashub = "atlashub", ResourceOwnerEnum2.AtlassianWebCrawlerAtlassianWebCrawler = "atlassian-web-crawler.atlassian-web-crawler", ResourceOwnerEnum2.AuditLog = "audit-log", ResourceOwnerEnum2.Automation = "automation", ResourceOwnerEnum2.Avocado = "avocado", ResourceOwnerEnum2.Avp = "avp", ResourceOwnerEnum2.AzureDevopsAzureDevops = "azure-devops.azure-devops", ResourceOwnerEnum2.Beacon = "beacon", ResourceOwnerEnum2.Bitbucket = "bitbucket", ResourceOwnerEnum2.BoxBox = "box.box", ResourceOwnerEnum2.Brie = "brie", ResourceOwnerEnum2.CanvaCanva = "canva.canva", ResourceOwnerEnum2.Canvas = "canvas", ResourceOwnerEnum2.Cia = "cia", ResourceOwnerEnum2.CiscoWebex = "cisco.webex", ResourceOwnerEnum2.ClickupClickup = "clickup.clickup", ResourceOwnerEnum2.Cmdb = "cmdb", ResourceOwnerEnum2.Commerce = "commerce", ResourceOwnerEnum2.Compass = "compass", ResourceOwnerEnum2.Confluence = "confluence", ResourceOwnerEnum2.ConfluenceDc = "confluence-dc", ResourceOwnerEnum2.ConfluenceDcConfluenceDc = "confluence-dc.confluence-dc", ResourceOwnerEnum2.ConnectionRegistry = "connection-registry", ResourceOwnerEnum2.ConversationalHelp = "conversational-help", ResourceOwnerEnum2.ConvoAi = "convo-ai", ResourceOwnerEnum2.CssXp = "css-xp", ResourceOwnerEnum2.DataLake = "data-lake", ResourceOwnerEnum2.Devai = "devai", ResourceOwnerEnum2.Devops = "devops", ResourceOwnerEnum2.DocusignDocusign = "docusign.docusign", ResourceOwnerEnum2.DovetailDovetail = "dovetail.dovetail", ResourceOwnerEnum2.Dropbox = "dropbox", ResourceOwnerEnum2.DropboxDropbox = "dropbox.dropbox", ResourceOwnerEnum2.Ecosystem = "ecosystem", ResourceOwnerEnum2.Elements = "elements", ResourceOwnerEnum2.Elevate = "elevate", ResourceOwnerEnum2.ExusExternal = "exus-external", ResourceOwnerEnum2.Figma = "figma", ResourceOwnerEnum2.FigmaFigma = "figma.figma", ResourceOwnerEnum2.GithubGithub = "github.github", ResourceOwnerEnum2.GitlabGitlab = "gitlab.gitlab", ResourceOwnerEnum2.Goal = "goal", ResourceOwnerEnum2.Google = "google", ResourceOwnerEnum2.GoogleGmail = "google.gmail", ResourceOwnerEnum2.GoogleGoogleCalendar = "google.google-calendar", ResourceOwnerEnum2.GoogleGoogleDrive = "google.google-drive", ResourceOwnerEnum2.GoogleGoogleDriveRsl = "google.google-drive-rsl", ResourceOwnerEnum2.Graph = "graph", ResourceOwnerEnum2.Help = "help", ResourceOwnerEnum2.Home = "home", ResourceOwnerEnum2.HubspotHubspot = "hubspot.hubspot", ResourceOwnerEnum2.Identity = "identity", ResourceOwnerEnum2.Jira = "jira", ResourceOwnerEnum2.JiraAiCrocs = "jira-ai-crocs", ResourceOwnerEnum2.JiraAlign = "jira-align", ResourceOwnerEnum2.JiraCore = "jira-core", ResourceOwnerEnum2.JiraCustomerService = "jira-customer-service", ResourceOwnerEnum2.JiraDcJiraDc = "jira-dc.jira-dc", ResourceOwnerEnum2.JiraDcSecondaryJiraDc = "jira-dc-secondary.jira-dc", ResourceOwnerEnum2.JiraDcTertiaryJiraDc = "jira-dc-tertiary.jira-dc", ResourceOwnerEnum2.JiraServicedesk = "jira-servicedesk", ResourceOwnerEnum2.JiraSoftware = "jira-software", ResourceOwnerEnum2.JsmChannelOrchestrator = "jsm-channel-orchestrator", ResourceOwnerEnum2.KnowledgeDiscovery = "knowledge-discovery", ResourceOwnerEnum2.KnowledgeServingAndAccess = "knowledge-serving-and-access", ResourceOwnerEnum2.LaunchdarklyLaunchdarkly = "launchdarkly.launchdarkly", ResourceOwnerEnum2.LearningPlatform = "learning-platform", ResourceOwnerEnum2.LinkingPlatform = "linking-platform", ResourceOwnerEnum2.LoginAlerter = "login-alerter", ResourceOwnerEnum2.Loom = "loom", ResourceOwnerEnum2.LoomLoom = "loom.loom", ResourceOwnerEnum2.LucidLucidchart = "lucid.lucidchart", ResourceOwnerEnum2.MakerSpace = "maker-space", ResourceOwnerEnum2.Mapi = "mapi", ResourceOwnerEnum2.Marketing = "marketing", ResourceOwnerEnum2.Marketplace = "marketplace", ResourceOwnerEnum2.Measurement = "measurement", ResourceOwnerEnum2.Media = "media", ResourceOwnerEnum2.Mercury = "mercury", ResourceOwnerEnum2.Microsoft = "microsoft", ResourceOwnerEnum2.MicrosoftAzureDevops = "microsoft.azure-devops", ResourceOwnerEnum2.MicrosoftOnedrive = "microsoft.onedrive", ResourceOwnerEnum2.MicrosoftOutlook = "microsoft.outlook", ResourceOwnerEnum2.MicrosoftOutlookCalendar = "microsoft.outlook-calendar", ResourceOwnerEnum2.MicrosoftPowerBi = "microsoft.power-bi", ResourceOwnerEnum2.MicrosoftSharepoint = "microsoft.sharepoint", ResourceOwnerEnum2.MicrosoftTeams = "microsoft.teams", ResourceOwnerEnum2.MigrationReportCenter = "migration-report-center", ResourceOwnerEnum2.MiroMiro = "miro.miro", ResourceOwnerEnum2.MlRegistry = "ml-registry", ResourceOwnerEnum2.MondayMonday = "monday.monday", ResourceOwnerEnum2.MuralMural = "mural.mural", ResourceOwnerEnum2.NotionNotion = "notion.notion", ResourceOwnerEnum2.Oauth = "oauth", ResourceOwnerEnum2.Opsgenie = "opsgenie", ResourceOwnerEnum2.OrgPolicy = "org-policy", ResourceOwnerEnum2.PagerdutyPagerduty = "pagerduty.pagerduty", ResourceOwnerEnum2.Papi = "papi", ResourceOwnerEnum2.Passionfruit = "passionfruit", ResourceOwnerEnum2.PeopleData = "people-data", ResourceOwnerEnum2.PeoplePerftool = "people-perftool", ResourceOwnerEnum2.PipedrivePipedrive = "pipedrive.pipedrive", ResourceOwnerEnum2.Platform = "platform", ResourceOwnerEnum2.PlatformServices = "platform-services", ResourceOwnerEnum2.Pollinator = "pollinator", ResourceOwnerEnum2.PostOffice = "post-office", ResourceOwnerEnum2.Proforma = "proforma", ResourceOwnerEnum2.Project = "project", ResourceOwnerEnum2.Pure = "pure", ResourceOwnerEnum2.Radar = "radar", ResourceOwnerEnum2.Rovo = "rovo", ResourceOwnerEnum2.RuntimeAuthClient = "runtime-auth-client", ResourceOwnerEnum2.SalesforceSalesforce = "salesforce.salesforce", ResourceOwnerEnum2.SandboxService = "sandbox-service", ResourceOwnerEnum2.Search = "search", ResourceOwnerEnum2.SentrySentry = "sentry.sentry", ResourceOwnerEnum2.ServicenowServicenow = "servicenow.servicenow", ResourceOwnerEnum2.SettingsService = "settings-service", ResourceOwnerEnum2.Slack = "slack", ResourceOwnerEnum2.SlackSlack = "slack.slack", ResourceOwnerEnum2.SmartsheetSmartsheet = "smartsheet.smartsheet", ResourceOwnerEnum2.SpinnakerSpinnaker = "spinnaker.spinnaker", ResourceOwnerEnum2.Statuspage = "statuspage", ResourceOwnerEnum2.StripeStripe = "stripe.stripe", ResourceOwnerEnum2.Support = "support", ResourceOwnerEnum2.Teams = "teams", ResourceOwnerEnum2.TodoistTodoist = "todoist.todoist", ResourceOwnerEnum2.Townsquare = "townsquare", ResourceOwnerEnum2.Trello = "trello", ResourceOwnerEnum2.TrustEng = "trust-eng", ResourceOwnerEnum2.UnifiedHelp = "unified-help", ResourceOwnerEnum2.UnifiedPortableProfile = "unified-portable-profile", ResourceOwnerEnum2.UsageTracking = "usage-tracking", ResourceOwnerEnum2.VirtualAgent = "virtual-agent", ResourceOwnerEnum2.Workato = "workato", ResourceOwnerEnum2.Workday = "workday", ResourceOwnerEnum2.WorkdayWorkday = "workday.workday", ResourceOwnerEnum2.ZendeskZendesk = "zendesk.zendesk", ResourceOwnerEnum2.ZeplinZeplin = "zeplin.zeplin", ResourceOwnerEnum2))(ResourceOwnerEnum || {});

// src/core/types/deprecated/resource-type-enum.ts
var ResourceTypeEnum = /* @__PURE__ */ ((ResourceTypeEnum2) => (ResourceTypeEnum2.Account = "account", ResourceTypeEnum2.AccountLogin = "account-login", ResourceTypeEnum2.AccountSettings = "account-settings", ResourceTypeEnum2.AdminAnnouncementBanner = "admin-announcement-banner", ResourceTypeEnum2.Agent = "agent", ResourceTypeEnum2.Alert = "alert", ResourceTypeEnum2.AlertRecipientLink = "alert-recipient-link", ResourceTypeEnum2.AnnouncementBanner = "announcement-banner", ResourceTypeEnum2.Answer = "answer", ResourceTypeEnum2.Api = "api", ResourceTypeEnum2.ApiEndpoint = "api-endpoint", ResourceTypeEnum2.ApiRequestMetric = "api-request-metric", ResourceTypeEnum2.App = "app", ResourceTypeEnum2.AppData = "app-data", ResourceTypeEnum2.AppEnvironmentVersion = "app-environment-version", ResourceTypeEnum2.AppGrant = "app-grant", ResourceTypeEnum2.Approval = "approval", ResourceTypeEnum2.Article = "article", ResourceTypeEnum2.Artifact = "artifact", ResourceTypeEnum2.Ask = "ask", ResourceTypeEnum2.AskActivity = "ask-activity", ResourceTypeEnum2.AskComment = "ask-comment", ResourceTypeEnum2.AskLink = "ask-link", ResourceTypeEnum2.AskUpdate = "ask-update", ResourceTypeEnum2.AssistantAnswer = "assistant-answer", ResourceTypeEnum2.Attachment = "attachment", ResourceTypeEnum2.Attribute = "attribute", ResourceTypeEnum2.AuthPolicy = "auth-policy", ResourceTypeEnum2.AutodevJob = "autodev-job", ResourceTypeEnum2.AutomationRule = "automation-rule", ResourceTypeEnum2.AvailableFields = "available-fields", ResourceTypeEnum2.Avatar = "avatar", ResourceTypeEnum2.Background = "background", ResourceTypeEnum2.Blogpost = "blogpost", ResourceTypeEnum2.Board = "board", ResourceTypeEnum2.BoardFeature = "board-feature", ResourceTypeEnum2.BoardIssueList = "board-issue-list", ResourceTypeEnum2.Bookmark = "bookmark", ResourceTypeEnum2.Branch = "branch", ResourceTypeEnum2.BranchHistory = "branch-history", ResourceTypeEnum2.Build = "build", ResourceTypeEnum2.BuildHistory = "build-history", ResourceTypeEnum2.BulkOperationTask = "bulk-operation-task", ResourceTypeEnum2.CalendarEvent = "calendar-event", ResourceTypeEnum2.CalendarEventHistory = "calendar-event-history", ResourceTypeEnum2.Calibration = "calibration", ResourceTypeEnum2.CallRouting = "call-routing", ResourceTypeEnum2.Campaign = "campaign", ResourceTypeEnum2.CannedResponse = "canned-response", ResourceTypeEnum2.Card = "card", ResourceTypeEnum2.CardColor = "card-color", ResourceTypeEnum2.CardLayout = "card-layout", ResourceTypeEnum2.CardParent = "card-parent", ResourceTypeEnum2.CatalogAccount = "catalog-account", ResourceTypeEnum2.Change = "change", ResourceTypeEnum2.ChangeProposal = "change-proposal", ResourceTypeEnum2.ChangeProposalStatus = "change-proposal-status", ResourceTypeEnum2.Channel = "channel", ResourceTypeEnum2.Chart = "chart", ResourceTypeEnum2.Chat = "chat", ResourceTypeEnum2.Check = "check", ResourceTypeEnum2.CheckItem = "check-item", ResourceTypeEnum2.Checklist = "checklist", ResourceTypeEnum2.ClassificationTag = "classification-tag", ResourceTypeEnum2.Client = "client", ResourceTypeEnum2.CollaborationContext = "collaboration-context", ResourceTypeEnum2.Column = "column", ResourceTypeEnum2.Comment = "comment", ResourceTypeEnum2.CommentHistory = "comment-history", ResourceTypeEnum2.Commit = "commit", ResourceTypeEnum2.Component = "component", ResourceTypeEnum2.ComponentLabel = "component-label", ResourceTypeEnum2.ComponentLink = "component-link", ResourceTypeEnum2.ComponentType = "component-type", ResourceTypeEnum2.Configuration = "configuration", ResourceTypeEnum2.ConnectApp = "connect-app", ResourceTypeEnum2.ConnectModule = "connect-module", ResourceTypeEnum2.Container = "container", ResourceTypeEnum2.Content = "content", ResourceTypeEnum2.Context = "context", ResourceTypeEnum2.Control = "control", ResourceTypeEnum2.Conversation = "conversation", ResourceTypeEnum2.ConversationChunk = "conversation-chunk", ResourceTypeEnum2.ConversationHistory = "conversation-history", ResourceTypeEnum2.ConversationMessage = "conversation-message", ResourceTypeEnum2.CostCenter = "cost-center", ResourceTypeEnum2.CprsEmail = "cprs-email", ResourceTypeEnum2.CustomAction = "custom-action", ResourceTypeEnum2.CustomContent = "custom-content", ResourceTypeEnum2.CustomDetection = "custom-detection", ResourceTypeEnum2.CustomEmojiMetadata = "custom-emoji-metadata", ResourceTypeEnum2.Customer = "customer", ResourceTypeEnum2.CustomerDirectory = "customer-directory", ResourceTypeEnum2.CustomerDomain = "customer-domain", ResourceTypeEnum2.CustomerOrg = "customer-org", ResourceTypeEnum2.CustomerOrganization = "customer-organization", ResourceTypeEnum2.CustomerOrgHistory = "customer-org-history", ResourceTypeEnum2.CustomerSupport = "customer-support", ResourceTypeEnum2.CustomField = "custom-field", ResourceTypeEnum2.CustomFieldDefinition = "custom-field-definition", ResourceTypeEnum2.CustomFilter = "custom-filter", ResourceTypeEnum2.CustomRole = "custom-role", ResourceTypeEnum2.Dashboard = "dashboard", ResourceTypeEnum2.DashboardChart = "dashboard-chart", ResourceTypeEnum2.Database = "database", ResourceTypeEnum2.DataShare = "data-share", ResourceTypeEnum2.Datasource = "datasource", ResourceTypeEnum2.Deal = "deal", ResourceTypeEnum2.DealHistory = "deal-history", ResourceTypeEnum2.DecisionTable = "decision-table", ResourceTypeEnum2.Dependency = "dependency", ResourceTypeEnum2.DependencyComment = "dependency-comment", ResourceTypeEnum2.DependencyRelatedContent = "dependency-related-content", ResourceTypeEnum2.DependencyUpdate = "dependency-update", ResourceTypeEnum2.Deployment = "deployment", ResourceTypeEnum2.DeploymentHistory = "deployment-history", ResourceTypeEnum2.DeploymentServiceLink = "deployment-service-link", ResourceTypeEnum2.Design = "design", ResourceTypeEnum2.DesignHistory = "design-history", ResourceTypeEnum2.Detection = "detection", ResourceTypeEnum2.DetectionSetting = "detection-setting", ResourceTypeEnum2.DevopsComponent = "devops-component", ResourceTypeEnum2.Directory = "directory", ResourceTypeEnum2.Document = "document", ResourceTypeEnum2.DocumentationCategory = "documentation-category", ResourceTypeEnum2.DocumentHistory = "document-history", ResourceTypeEnum2.Domain = "domain", ResourceTypeEnum2.Email = "email", ResourceTypeEnum2.EmailUuid = "email-uuid", ResourceTypeEnum2.Embed = "embed", ResourceTypeEnum2.Emoji = "emoji", ResourceTypeEnum2.Employee = "employee", ResourceTypeEnum2.EmployeeHistory = "employee-history", ResourceTypeEnum2.Enterprise = "enterprise", ResourceTypeEnum2.Entitlement = "entitlement", ResourceTypeEnum2.EntitlementTemplate = "entitlement-template", ResourceTypeEnum2.EntityProperty = "entity-property", ResourceTypeEnum2.Environment = "environment", ResourceTypeEnum2.Epic = "epic", ResourceTypeEnum2.Escalation = "escalation", ResourceTypeEnum2.Event = "event", ResourceTypeEnum2.EventSource = "event-source", ResourceTypeEnum2.Extension = "extension", ResourceTypeEnum2.ExtensionGroup = "extension-group", ResourceTypeEnum2.Favourite = "favourite", ResourceTypeEnum2.FeatureFlag = "feature-flag", ResourceTypeEnum2.FeatureFlagHistory = "feature-flag-history", ResourceTypeEnum2.Feedback = "feedback", ResourceTypeEnum2.FieldConfiguration = "field-configuration", ResourceTypeEnum2.FieldConfigurationContext = "field-configuration-context", ResourceTypeEnum2.FieldSetView = "field-set-view", ResourceTypeEnum2.File = "file", ResourceTypeEnum2.Filter = "filter", ResourceTypeEnum2.FilterEmailSubscription = "filter-email-subscription", ResourceTypeEnum2.FlowEditor = "flow-editor", ResourceTypeEnum2.FocusArea = "focus-area", ResourceTypeEnum2.FocusAreaStatusUpdate = "focus-area-status-update", ResourceTypeEnum2.FocusAreaType = "focus-area-type", ResourceTypeEnum2.Folder = "folder", ResourceTypeEnum2.ForgeInstallation = "forge-installation", ResourceTypeEnum2.Form = "form", ResourceTypeEnum2.ForwardDocument = "forward-document", ResourceTypeEnum2.ForwardDocumentSubscription = "forward-document-subscription", ResourceTypeEnum2.Goal = "goal", ResourceTypeEnum2.GoalMetricUpdate = "goal-metric-update", ResourceTypeEnum2.GoalType = "goal-type", ResourceTypeEnum2.GoalUpdate = "goal-update", ResourceTypeEnum2.Group = "group", ResourceTypeEnum2.HelpCenter = "help-center", ResourceTypeEnum2.HelpcenterForm = "helpcenter-form", ResourceTypeEnum2.HelpDesk = "help-desk", ResourceTypeEnum2.HelpPointer = "help-pointer", ResourceTypeEnum2.Id = "id", ResourceTypeEnum2.ImportConfiguration = "import-configuration", ResourceTypeEnum2.Incident = "incident", ResourceTypeEnum2.IncidentAlertLink = "incident-alert-link", ResourceTypeEnum2.IncidentHistory = "incident-history", ResourceTypeEnum2.IncidentStatusUpdate = "incident-status-update", ResourceTypeEnum2.IncomingCallHistory = "incoming-call-history", ResourceTypeEnum2.IncomingWebhook = "incoming-webhook", ResourceTypeEnum2.Initiative = "initiative", ResourceTypeEnum2.Installation = "installation", ResourceTypeEnum2.InstallationLink = "installation-link", ResourceTypeEnum2.Instance = "instance", ResourceTypeEnum2.Integration = "integration", ResourceTypeEnum2.IntegrationContext = "integration-context", ResourceTypeEnum2.Intent = "intent", ResourceTypeEnum2.IntentProjection = "intent-projection", ResourceTypeEnum2.IntentQuestion = "intent-question", ResourceTypeEnum2.IntentQuestionProjection = "intent-question-projection", ResourceTypeEnum2.IntentRuleProjection = "intent-rule-projection", ResourceTypeEnum2.IntentTemplate = "intent-template", ResourceTypeEnum2.InvoiceGroup = "invoice-group", ResourceTypeEnum2.Issue = "issue", ResourceTypeEnum2.IssueAttachment = "issue-attachment", ResourceTypeEnum2.IssueComment = "issue-comment", ResourceTypeEnum2.IssueFieldMetadata = "issue-field-metadata", ResourceTypeEnum2.IssueFieldOption = "issue-field-option", ResourceTypeEnum2.Issuefieldvalue = "issuefieldvalue", ResourceTypeEnum2.IssueForm = "issue-form", ResourceTypeEnum2.IssueHistory = "issue-history", ResourceTypeEnum2.IssueLink = "issue-link", ResourceTypeEnum2.IssueLinkType = "issue-link-type", ResourceTypeEnum2.IssueRemoteLink = "issue-remote-link", ResourceTypeEnum2.IssueSearchView = "issue-search-view", ResourceTypeEnum2.IssueSearchViewType = "issue-search-view-type", ResourceTypeEnum2.IssueSecurityLevelPermission = "issue-security-level-permission", ResourceTypeEnum2.IssueStatus = "issue-status", ResourceTypeEnum2.IssueType = "issue-type", ResourceTypeEnum2.IssueTypeScheme = "issue-type-scheme", ResourceTypeEnum2.IssueTypeSchemeMapping = "issue-type-scheme-mapping", ResourceTypeEnum2.IssueWorklog = "issue-worklog", ResourceTypeEnum2.JiraProjectAndDevopsToolRelationship = "jira-project-and-devops-tool-relationship", ResourceTypeEnum2.JiraProjectAndDocumentationSpaceRelationship = "jira-project-and-documentation-space-relationship", ResourceTypeEnum2.JiraProjectAndOperationsTeamRelationship = "jira-project-and-operations-team-relationship", ResourceTypeEnum2.JiraProjectAndVcsRepositoryRelationship = "jira-project-and-vcs-repository-relationship", ResourceTypeEnum2.JiraProjectAndVcsRepositoryRelationshipTempMigration = "jira-project-and-vcs-repository-relationship-temp-migration", ResourceTypeEnum2.Job = "job", ResourceTypeEnum2.JobProfile = "job-profile", ResourceTypeEnum2.Label = "label", ResourceTypeEnum2.LakeConnection = "lake-connection", ResourceTypeEnum2.Layout = "layout", ResourceTypeEnum2.Learner = "learner", ResourceTypeEnum2.Learning = "learning", ResourceTypeEnum2.LibraryScorecard = "library-scorecard", ResourceTypeEnum2.LifecycleResource = "lifecycle-resource", ResourceTypeEnum2.LifecycleResourcePackage = "lifecycle-resource-package", ResourceTypeEnum2.LifecycleResourcePackageType = "lifecycle-resource-package-type", ResourceTypeEnum2.Link = "link", ResourceTypeEnum2.LinkedAccount = "linked-account", ResourceTypeEnum2.List = "list", ResourceTypeEnum2.Logo = "logo", ResourceTypeEnum2.LongRunningTask = "long-running-task", ResourceTypeEnum2.Meeting = "meeting", ResourceTypeEnum2.MeetingRecurrence = "meeting-recurrence", ResourceTypeEnum2.Message = "message", ResourceTypeEnum2.MessageInstance = "message-instance", ResourceTypeEnum2.MessageTemplate = "message-template", ResourceTypeEnum2.Metric = "metric", ResourceTypeEnum2.MetricDefinition = "metric-definition", ResourceTypeEnum2.MetricSource = "metric-source", ResourceTypeEnum2.MetricTarget = "metric-target", ResourceTypeEnum2.MetricUpdate = "metric-update", ResourceTypeEnum2.MetricValue = "metric-value", ResourceTypeEnum2.Milestone = "milestone", ResourceTypeEnum2.Namespace = "namespace", ResourceTypeEnum2.NavigationConfig = "navigation-config", ResourceTypeEnum2.NavigationItem = "navigation-item", ResourceTypeEnum2.NavigationMenu = "navigation-menu", ResourceTypeEnum2.NavigationSettings = "navigation-settings", ResourceTypeEnum2.Note = "note", ResourceTypeEnum2.Notification = "notification", ResourceTypeEnum2.NotificationType = "notification-type", ResourceTypeEnum2.NotificationTypeScheme = "notification-type-scheme", ResourceTypeEnum2.NotificationUserPreference = "notification-user-preference", ResourceTypeEnum2.OauthClient = "oauthClient", ResourceTypeEnum2.OauthConsumer = "oauth-consumer", ResourceTypeEnum2.Object = "object", ResourceTypeEnum2.Offering = "offering", ResourceTypeEnum2.OfferingRelationshipTemplate = "offering-relationship-template", ResourceTypeEnum2.OperationsWorkspace = "operations-workspace", ResourceTypeEnum2.Order = "order", ResourceTypeEnum2.Org = "org", ResourceTypeEnum2.Organisation = "organisation", ResourceTypeEnum2.OrganisationHistory = "organisation-history", ResourceTypeEnum2.Organization = "organization", ResourceTypeEnum2.OrganizationMember = "organization-member", ResourceTypeEnum2.OrgUser = "org-user", ResourceTypeEnum2.Package = "package", ResourceTypeEnum2.Page = "page", ResourceTypeEnum2.ParentAccount = "parent-account", ResourceTypeEnum2.PaymentMethod = "payment-method", ResourceTypeEnum2.Performance = "performance", ResourceTypeEnum2.Permission = "permission", ResourceTypeEnum2.PermissionContainer = "permission-container", ResourceTypeEnum2.PermissionScheme = "permission-scheme", ResourceTypeEnum2.PipelineQuery = "pipeline-query", ResourceTypeEnum2.Plan = "plan", ResourceTypeEnum2.PlanCrossProjectScenarioVersion = "plan-cross-project-scenario-version", ResourceTypeEnum2.PlanCrossProjectVersion = "plan-cross-project-version", ResourceTypeEnum2.Planner = "planner", ResourceTypeEnum2.PlannerCalendar = "planner-calendar", ResourceTypeEnum2.PlannerEventCard = "planner-event-card", ResourceTypeEnum2.PlanScenario = "plan-scenario", ResourceTypeEnum2.PlanScenarioIssue = "plan-scenario-issue", ResourceTypeEnum2.PlanScenarioIssueField = "plan-scenario-issue-field", ResourceTypeEnum2.PlanScenarioVersion = "plan-scenario-version", ResourceTypeEnum2.Playbook = "playbook", ResourceTypeEnum2.PlaybookInstance = "playbook-instance", ResourceTypeEnum2.PlaybookInstanceStep = "playbook-instance-step", ResourceTypeEnum2.PlaybookLabel = "playbook-label", ResourceTypeEnum2.PlaybookStep = "playbook-step", ResourceTypeEnum2.PlaybookStepRun = "playbook-step-run", ResourceTypeEnum2.Policy = "policy", ResourceTypeEnum2.Portal = "portal", ResourceTypeEnum2.Position = "position", ResourceTypeEnum2.PositionHistory = "position-history", ResourceTypeEnum2.PostIncidentReview = "post-incident-review", ResourceTypeEnum2.PostIncidentReviewHistory = "post-incident-review-history", ResourceTypeEnum2.PostIncidentReviewLink = "post-incident-review-link", ResourceTypeEnum2.Precalibration = "precalibration", ResourceTypeEnum2.PrecalibrationPillar = "precalibration-pillar", ResourceTypeEnum2.Presentation = "presentation", ResourceTypeEnum2.PricingPlan = "pricing-plan", ResourceTypeEnum2.Priority = "priority", ResourceTypeEnum2.Product = "product", ResourceTypeEnum2.Program = "program", ResourceTypeEnum2.ProgramStatusUpdate = "program-status-update", ResourceTypeEnum2.Project = "project", ResourceTypeEnum2.ProjectCategory = "project-category", ResourceTypeEnum2.ProjectFeature = "project-feature", ResourceTypeEnum2.ProjectForm = "project-form", ResourceTypeEnum2.ProjectHistory = "project-history", ResourceTypeEnum2.ProjectOverview = "project-overview", ResourceTypeEnum2.ProjectRoleActor = "project-role-actor", ResourceTypeEnum2.ProjectRoleByProject = "project-role-by-project", ResourceTypeEnum2.ProjectShortcut = "project-shortcut", ResourceTypeEnum2.ProjectType = "project-type", ResourceTypeEnum2.ProjectUpdate = "project-update", ResourceTypeEnum2.Promotion = "promotion", ResourceTypeEnum2.Provider = "provider", ResourceTypeEnum2.PublicLink = "public-link", ResourceTypeEnum2.Pullrequest = "pullrequest", ResourceTypeEnum2.PullRequest = "pull-request", ResourceTypeEnum2.PullRequestHistory = "pull-request-history", ResourceTypeEnum2.Question = "question", ResourceTypeEnum2.Queue = "queue", ResourceTypeEnum2.Quote = "quote", ResourceTypeEnum2.Recipe = "recipe", ResourceTypeEnum2.Relationship = "relationship", ResourceTypeEnum2.RelationshipType = "relationship-type", ResourceTypeEnum2.RemoteLink = "remote-link", ResourceTypeEnum2.RemoteLinkHistory = "remote-link-history", ResourceTypeEnum2.ReportRequestProxy = "report-request-proxy", ResourceTypeEnum2.Repository = "repository", ResourceTypeEnum2.RepositoryTransfer = "repository-transfer", ResourceTypeEnum2.RequestForm = "request-form", ResourceTypeEnum2.RequestType = "request-type", ResourceTypeEnum2.Resolution = "resolution", ResourceTypeEnum2.Resource = "resource", ResourceTypeEnum2.ResourceUsageMetric = "resource-usage-metric", ResourceTypeEnum2.ResourceUsageRecommendation = "resource-usage-recommendation", ResourceTypeEnum2.Role = "role", ResourceTypeEnum2.Rule = "rule", ResourceTypeEnum2.SavedSearch = "saved-search", ResourceTypeEnum2.Scenario = "scenario", ResourceTypeEnum2.Schedule = "schedule", ResourceTypeEnum2.ScheduleRotation = "schedule-rotation", ResourceTypeEnum2.Schema = "schema", ResourceTypeEnum2.ScopedGroup = "scoped-group", ResourceTypeEnum2.Scorecard = "scorecard", ResourceTypeEnum2.Screen = "screen", ResourceTypeEnum2.ScreenScheme = "screen-scheme", ResourceTypeEnum2.ScreenTab = "screen-tab", ResourceTypeEnum2.SecureTunnel = "secure-tunnel", ResourceTypeEnum2.SecurityContainer = "security-container", ResourceTypeEnum2.SecurityLevel = "security-level", ResourceTypeEnum2.SecurityWorkspace = "security-workspace", ResourceTypeEnum2.SelfAssessment = "self-assessment", ResourceTypeEnum2.SelfAssessmentPillar = "self-assessment-pillar", ResourceTypeEnum2.Sentence = "sentence", ResourceTypeEnum2.Service = "service", ResourceTypeEnum2.ServiceAndJiraProjectRelationship = "service-and-jira-project-relationship", ResourceTypeEnum2.ServiceAndOperationsTeamRelationship = "service-and-operations-team-relationship", ResourceTypeEnum2.ServiceAndVcsRepositoryRelationship = "service-and-vcs-repository-relationship", ResourceTypeEnum2.ServiceRelationship = "service-relationship", ResourceTypeEnum2.Settings = "settings", ResourceTypeEnum2.SharepointDocument = "sharepoint-document", ResourceTypeEnum2.ShipToParty = "ship-to-party", ResourceTypeEnum2.Site = "site", ResourceTypeEnum2.SiteUser = "site-user", ResourceTypeEnum2.Sla = "sla", ResourceTypeEnum2.Space = "space", ResourceTypeEnum2.SpaceHistory = "space-history", ResourceTypeEnum2.Spreadsheet = "spreadsheet", ResourceTypeEnum2.Sprint = "sprint", ResourceTypeEnum2.Staff = "staff", ResourceTypeEnum2.StandaloneWorkspace = "standalone-workspace", ResourceTypeEnum2.Sticker = "sticker", ResourceTypeEnum2.StrategicEvent = "strategic-event", ResourceTypeEnum2.StrategicEventStatus = "strategic-event-status", ResourceTypeEnum2.StreamhubSchema = "streamhub-schema", ResourceTypeEnum2.Subscription = "subscription", ResourceTypeEnum2.SupervisoryOrg = "supervisory-org", ResourceTypeEnum2.Swimlane = "swimlane", ResourceTypeEnum2.Tag = "tag", ResourceTypeEnum2.Task = "task", ResourceTypeEnum2.Team = "team", ResourceTypeEnum2.TeamCalendar = "team-calendar", ResourceTypeEnum2.TeamMember = "team-member", ResourceTypeEnum2.TemplateForm = "template-form", ResourceTypeEnum2.TestProvisioningEntity = "test-provisioning-entity", ResourceTypeEnum2.ThirdPartyDirectory = "third-party-directory", ResourceTypeEnum2.ThirdPartyGroup = "third-party-group", ResourceTypeEnum2.ThirdPartyUser = "third-party-user", ResourceTypeEnum2.ThreadChunk = "thread-chunk", ResourceTypeEnum2.Timeline = "timeline", ResourceTypeEnum2.Tool = "tool", ResourceTypeEnum2.Topic = "topic", ResourceTypeEnum2.TransactionAccount = "transaction-account", ResourceTypeEnum2.Trigger = "trigger", ResourceTypeEnum2.Type = "type", ResourceTypeEnum2.UnifiedAccount = "unified-account", ResourceTypeEnum2.UnifiedProfile = "unified-profile", ResourceTypeEnum2.UpdateNote = "update-note", ResourceTypeEnum2.Usage = "usage", ResourceTypeEnum2.User = "user", ResourceTypeEnum2.Userbase = "userbase", ResourceTypeEnum2.UserBoardConfig = "user-board-config", ResourceTypeEnum2.UserBroadcastMessage = "user-broadcast-message", ResourceTypeEnum2.UserDefinedParameter = "user-defined-parameter", ResourceTypeEnum2.UserGrant = "userGrant", ResourceTypeEnum2.UserProperty = "user-property", ResourceTypeEnum2.Version = "version", ResourceTypeEnum2.VersionApprover = "version-approver", ResourceTypeEnum2.Video = "video", ResourceTypeEnum2.VideoHistory = "video-history", ResourceTypeEnum2.View = "view", ResourceTypeEnum2.ViewConfig = "view-config", ResourceTypeEnum2.Vulnerability = "vulnerability", ResourceTypeEnum2.VulnerabilityHistory = "vulnerability-history", ResourceTypeEnum2.Webhook = "webhook", ResourceTypeEnum2.Whiteboard = "whiteboard", ResourceTypeEnum2.WorkbenchResource = "workbench-resource", ResourceTypeEnum2.Worker = "worker", ResourceTypeEnum2.WorkerHistory = "worker-history", ResourceTypeEnum2.Workflow = "workflow", ResourceTypeEnum2.WorkflowScheme = "workflow-scheme", ResourceTypeEnum2.WorkItem = "work-item", ResourceTypeEnum2.WorkItemHistory = "work-item-history", ResourceTypeEnum2.Worklog = "worklog", ResourceTypeEnum2.Workspace = "workspace", ResourceTypeEnum2))(ResourceTypeEnum || {});

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/adobe.adobexd/remote-link/types.ts
var AdobeAdobexdRemoteLinkAriResourceOwner = "adobe.adobexd", AdobeAdobexdRemoteLinkAriResourceType = "remote-link";

// src/adobe.adobexd/remote-link/manifest.ts
var adobeAdobexdRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AdobeAdobexdRemoteLinkAriResourceOwner,
  resourceType: AdobeAdobexdRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/adobe.adobexd/remote-link/index.ts
var AdobeAdobexdRemoteLinkAri = class _AdobeAdobexdRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: adobeAdobexdRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: adobeAdobexdRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: adobeAdobexdRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: adobeAdobexdRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, adobeAdobexdRemoteLinkAriStaticOpts);
    return new _AdobeAdobexdRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, adobeAdobexdRemoteLinkAriStaticOpts);
    return new _AdobeAdobexdRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/adobe.sign/document/types.ts
var AdobeSignDocumentAriResourceOwner = "adobe.sign", AdobeSignDocumentAriResourceType = "document";

// src/adobe.sign/document/manifest.ts
var adobeSignDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AdobeSignDocumentAriResourceOwner,
  resourceType: AdobeSignDocumentAriResourceType,
  resourceIdSlug: "shard/{shard}/agreement/{agreementId}",
  resourceIdSegmentFormats: {
    shard: /[a-zA-Z]{2}[0-9]{1}/,
    // eslint-disable-line no-useless-escape
    agreementId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/adobe.sign/document/index.ts
var AdobeSignDocumentAri = class _AdobeSignDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._shard = opts.resourceIdSegmentValues.shard, this._agreementId = opts.resourceIdSegmentValues.agreementId;
  }
  get shard() {
    return this._shard;
  }
  get agreementId() {
    return this._agreementId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: adobeSignDocumentAriStaticOpts.qualifier,
      platformQualifier: adobeSignDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: adobeSignDocumentAriStaticOpts.resourceOwner,
      resourceType: adobeSignDocumentAriStaticOpts.resourceType,
      resourceId: `shard/${opts.shard}/agreement/${opts.agreementId}`,
      resourceIdSegmentValues: {
        shard: opts.shard,
        agreementId: opts.agreementId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, adobeSignDocumentAriStaticOpts);
    return new _AdobeSignDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, adobeSignDocumentAriStaticOpts);
    return new _AdobeSignDocumentAri(opts);
  }
  getVariables() {
    return {
      shard: this.shard,
      agreementId: this.agreementId
    };
  }
};

// src/aha.aha/work-item/types.ts
var AhaAhaWorkItemAriResourceOwner = "aha.aha", AhaAhaWorkItemAriResourceType = "work-item";

// src/aha.aha/work-item/manifest.ts
var ahaAhaWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AhaAhaWorkItemAriResourceOwner,
  resourceType: AhaAhaWorkItemAriResourceType,
  resourceIdSlug: "domain/{domain}/feature/{id}",
  resourceIdSegmentFormats: {
    domain: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    id: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/aha.aha/work-item/index.ts
var AhaAhaWorkItemAri = class _AhaAhaWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domain = opts.resourceIdSegmentValues.domain, this._id = opts.resourceIdSegmentValues.id;
  }
  get domain() {
    return this._domain;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ahaAhaWorkItemAriStaticOpts.qualifier,
      platformQualifier: ahaAhaWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ahaAhaWorkItemAriStaticOpts.resourceOwner,
      resourceType: ahaAhaWorkItemAriStaticOpts.resourceType,
      resourceId: `domain/${opts.domain}/feature/${opts.id}`,
      resourceIdSegmentValues: {
        domain: opts.domain || "",
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ahaAhaWorkItemAriStaticOpts);
    return new _AhaAhaWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ahaAhaWorkItemAriStaticOpts);
    return new _AhaAhaWorkItemAri(opts);
  }
  getVariables() {
    return {
      domain: this.domain,
      id: this.id
    };
  }
};

// src/airtable.airtable/document/types.ts
var AirtableAirtableDocumentAriResourceOwner = "airtable.airtable", AirtableAirtableDocumentAriResourceType = "document";

// src/airtable.airtable/document/manifest.ts
var airtableAirtableDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AirtableAirtableDocumentAriResourceOwner,
  resourceType: AirtableAirtableDocumentAriResourceType,
  resourceIdSlug: "{compositeAirtableDocument}",
  resourceIdSegmentFormats: {
    compositeAirtableDocument: /(base\/[a-zA-Z0-9_-]+\/table\/[a-zA-Z0-9_-]+|base\/[a-zA-Z0-9_-]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/airtable.airtable/document/index.ts
var AirtableAirtableDocumentAri = class _AirtableAirtableDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._compositeAirtableDocument = opts.resourceIdSegmentValues.compositeAirtableDocument;
  }
  get compositeAirtableDocument() {
    return this._compositeAirtableDocument;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: airtableAirtableDocumentAriStaticOpts.qualifier,
      platformQualifier: airtableAirtableDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: airtableAirtableDocumentAriStaticOpts.resourceOwner,
      resourceType: airtableAirtableDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.compositeAirtableDocument}`,
      resourceIdSegmentValues: {
        compositeAirtableDocument: opts.compositeAirtableDocument
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, airtableAirtableDocumentAriStaticOpts);
    return new _AirtableAirtableDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, airtableAirtableDocumentAriStaticOpts);
    return new _AirtableAirtableDocumentAri(opts);
  }
  getVariables() {
    return {
      compositeAirtableDocument: this.compositeAirtableDocument
    };
  }
};

// src/airtable.airtable/remote-link/types.ts
var AirtableAirtableRemoteLinkAriResourceOwner = "airtable.airtable", AirtableAirtableRemoteLinkAriResourceType = "remote-link";

// src/airtable.airtable/remote-link/manifest.ts
var airtableAirtableRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AirtableAirtableRemoteLinkAriResourceOwner,
  resourceType: AirtableAirtableRemoteLinkAriResourceType,
  resourceIdSlug: "base/{baseId}/table/{tableId}",
  resourceIdSegmentFormats: {
    baseId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    tableId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/airtable.airtable/remote-link/index.ts
var AirtableAirtableRemoteLinkAri = class _AirtableAirtableRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._baseId = opts.resourceIdSegmentValues.baseId, this._tableId = opts.resourceIdSegmentValues.tableId;
  }
  get baseId() {
    return this._baseId;
  }
  get tableId() {
    return this._tableId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: airtableAirtableRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: airtableAirtableRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: airtableAirtableRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: airtableAirtableRemoteLinkAriStaticOpts.resourceType,
      resourceId: `base/${opts.baseId}/table/${opts.tableId}`,
      resourceIdSegmentValues: {
        baseId: opts.baseId,
        tableId: opts.tableId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, airtableAirtableRemoteLinkAriStaticOpts);
    return new _AirtableAirtableRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, airtableAirtableRemoteLinkAriStaticOpts);
    return new _AirtableAirtableRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      baseId: this.baseId,
      tableId: this.tableId
    };
  }
};

// src/amplitude.amplitude/remote-link/types.ts
var AmplitudeAmplitudeRemoteLinkAriResourceOwner = "amplitude.amplitude", AmplitudeAmplitudeRemoteLinkAriResourceType = "remote-link";

// src/amplitude.amplitude/remote-link/manifest.ts
var amplitudeAmplitudeRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AmplitudeAmplitudeRemoteLinkAriResourceOwner,
  resourceType: AmplitudeAmplitudeRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/chart/{chartId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    chartId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/amplitude.amplitude/remote-link/index.ts
var AmplitudeAmplitudeRemoteLinkAri = class _AmplitudeAmplitudeRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._chartId = opts.resourceIdSegmentValues.chartId;
  }
  get orgId() {
    return this._orgId;
  }
  get chartId() {
    return this._chartId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: amplitudeAmplitudeRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: amplitudeAmplitudeRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: amplitudeAmplitudeRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: amplitudeAmplitudeRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/chart/${opts.chartId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        chartId: opts.chartId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, amplitudeAmplitudeRemoteLinkAriStaticOpts);
    return new _AmplitudeAmplitudeRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, amplitudeAmplitudeRemoteLinkAriStaticOpts);
    return new _AmplitudeAmplitudeRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      chartId: this.chartId
    };
  }
};

// src/analytics/user/types.ts
var AnalyticsUserAriResourceOwner = "analytics", AnalyticsUserAriResourceType = "user";

// src/analytics/user/manifest.ts
var analyticsUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AnalyticsUserAriResourceOwner,
  resourceType: AnalyticsUserAriResourceType,
  resourceIdSlug: "anonymous/{anonUserId}",
  resourceIdSegmentFormats: {
    anonUserId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/analytics/user/index.ts
var AnalyticsUserAri = class _AnalyticsUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._anonUserId = opts.resourceIdSegmentValues.anonUserId;
  }
  get anonUserId() {
    return this._anonUserId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: analyticsUserAriStaticOpts.qualifier,
      platformQualifier: analyticsUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: analyticsUserAriStaticOpts.resourceOwner,
      resourceType: analyticsUserAriStaticOpts.resourceType,
      resourceId: `anonymous/${opts.anonUserId}`,
      resourceIdSegmentValues: {
        anonUserId: opts.anonUserId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, analyticsUserAriStaticOpts);
    return new _AnalyticsUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, analyticsUserAriStaticOpts);
    return new _AnalyticsUserAri(opts);
  }
  getVariables() {
    return {
      anonUserId: this.anonUserId
    };
  }
};

// src/app-migration/app-data/types.ts
var AppMigrationAppDataAriResourceOwner = "app-migration", AppMigrationAppDataAriResourceType = "app-data";

// src/app-migration/app-data/manifest.ts
var appMigrationAppDataAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AppMigrationAppDataAriResourceOwner,
  resourceType: AppMigrationAppDataAriResourceType,
  resourceIdSlug: "{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/app-migration/app-data/index.ts
var AppMigrationAppDataAri = class _AppMigrationAppDataAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: appMigrationAppDataAriStaticOpts.qualifier,
      platformQualifier: appMigrationAppDataAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: appMigrationAppDataAriStaticOpts.resourceOwner,
      resourceType: appMigrationAppDataAriStaticOpts.resourceType,
      resourceId: `${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, appMigrationAppDataAriStaticOpts);
    return new _AppMigrationAppDataAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, appMigrationAppDataAriStaticOpts);
    return new _AppMigrationAppDataAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/approval-desk/decision-table/types.ts
var ApprovalDeskDecisionTableAriResourceOwner = "approval-desk", ApprovalDeskDecisionTableAriResourceType = "decision-table";

// src/approval-desk/decision-table/manifest.ts
var approvalDeskDecisionTableAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ApprovalDeskDecisionTableAriResourceOwner,
  resourceType: ApprovalDeskDecisionTableAriResourceType,
  resourceIdSlug: "{workspaceId}/{workflowId}/{decisionTableId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    workflowId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    decisionTableId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/approval-desk/decision-table/index.ts
var ApprovalDeskDecisionTableAri = class _ApprovalDeskDecisionTableAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._workflowId = opts.resourceIdSegmentValues.workflowId, this._decisionTableId = opts.resourceIdSegmentValues.decisionTableId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get workflowId() {
    return this._workflowId;
  }
  get decisionTableId() {
    return this._decisionTableId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: approvalDeskDecisionTableAriStaticOpts.qualifier,
      platformQualifier: approvalDeskDecisionTableAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: approvalDeskDecisionTableAriStaticOpts.resourceOwner,
      resourceType: approvalDeskDecisionTableAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.workflowId}/${opts.decisionTableId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        workflowId: opts.workflowId,
        decisionTableId: opts.decisionTableId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskDecisionTableAriStaticOpts);
    return new _ApprovalDeskDecisionTableAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, approvalDeskDecisionTableAriStaticOpts);
    return new _ApprovalDeskDecisionTableAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      workflowId: this.workflowId,
      decisionTableId: this.decisionTableId
    };
  }
};

// src/approval-desk/role/types.ts
var ApprovalDeskRoleAriResourceOwner = "approval-desk", ApprovalDeskRoleAriResourceType = "role";

// src/approval-desk/role/manifest.ts
var approvalDeskRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ApprovalDeskRoleAriResourceOwner,
  resourceType: ApprovalDeskRoleAriResourceType,
  resourceIdSlug: "{scope}/{roleId}",
  resourceIdSegmentFormats: {
    scope: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/approval-desk/role/index.ts
var ApprovalDeskRoleAri = class _ApprovalDeskRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._scope = opts.resourceIdSegmentValues.scope, this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get scope() {
    return this._scope;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: approvalDeskRoleAriStaticOpts.qualifier,
      platformQualifier: approvalDeskRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: approvalDeskRoleAriStaticOpts.resourceOwner,
      resourceType: approvalDeskRoleAriStaticOpts.resourceType,
      resourceId: `${opts.scope}/${opts.roleId}`,
      resourceIdSegmentValues: {
        scope: opts.scope,
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskRoleAriStaticOpts);
    return new _ApprovalDeskRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, approvalDeskRoleAriStaticOpts);
    return new _ApprovalDeskRoleAri(opts);
  }
  getVariables() {
    return {
      scope: this.scope,
      roleId: this.roleId
    };
  }
};

// src/approval-desk/workflow/types.ts
var ApprovalDeskWorkflowAriResourceOwner = "approval-desk", ApprovalDeskWorkflowAriResourceType = "workflow";

// src/approval-desk/workflow/manifest.ts
var approvalDeskWorkflowAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ApprovalDeskWorkflowAriResourceOwner,
  resourceType: ApprovalDeskWorkflowAriResourceType,
  resourceIdSlug: "{workspaceId}/{workflowId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    workflowId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/approval-desk/workflow/index.ts
var ApprovalDeskWorkflowAri = class _ApprovalDeskWorkflowAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._workflowId = opts.resourceIdSegmentValues.workflowId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get workflowId() {
    return this._workflowId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: approvalDeskWorkflowAriStaticOpts.qualifier,
      platformQualifier: approvalDeskWorkflowAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: approvalDeskWorkflowAriStaticOpts.resourceOwner,
      resourceType: approvalDeskWorkflowAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.workflowId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        workflowId: opts.workflowId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskWorkflowAriStaticOpts);
    return new _ApprovalDeskWorkflowAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, approvalDeskWorkflowAriStaticOpts);
    return new _ApprovalDeskWorkflowAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      workflowId: this.workflowId
    };
  }
};

// src/approval-desk/workspace/types.ts
var ApprovalDeskWorkspaceAriResourceOwner = "approval-desk", ApprovalDeskWorkspaceAriResourceType = "workspace";

// src/approval-desk/workspace/manifest.ts
var approvalDeskWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ApprovalDeskWorkspaceAriResourceOwner,
  resourceType: ApprovalDeskWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/approval-desk/workspace/index.ts
var ApprovalDeskWorkspaceAri = class _ApprovalDeskWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: approvalDeskWorkspaceAriStaticOpts.qualifier,
      platformQualifier: approvalDeskWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: approvalDeskWorkspaceAriStaticOpts.resourceOwner,
      resourceType: approvalDeskWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskWorkspaceAriStaticOpts);
    return new _ApprovalDeskWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, approvalDeskWorkspaceAriStaticOpts);
    return new _ApprovalDeskWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/asana.asana/remote-link/types.ts
var AsanaAsanaRemoteLinkAriResourceOwner = "asana.asana", AsanaAsanaRemoteLinkAriResourceType = "remote-link";

// src/asana.asana/remote-link/manifest.ts
var asanaAsanaRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AsanaAsanaRemoteLinkAriResourceOwner,
  resourceType: AsanaAsanaRemoteLinkAriResourceType,
  resourceIdSlug: "task/{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/asana.asana/remote-link/index.ts
var AsanaAsanaRemoteLinkAri = class _AsanaAsanaRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: asanaAsanaRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: asanaAsanaRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: asanaAsanaRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: asanaAsanaRemoteLinkAriStaticOpts.resourceType,
      resourceId: `task/${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, asanaAsanaRemoteLinkAriStaticOpts);
    return new _AsanaAsanaRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, asanaAsanaRemoteLinkAriStaticOpts);
    return new _AsanaAsanaRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      taskId: this.taskId
    };
  }
};

// src/asana.asana/work-item/types.ts
var AsanaAsanaWorkItemAriResourceOwner = "asana.asana", AsanaAsanaWorkItemAriResourceType = "work-item";

// src/asana.asana/work-item/manifest.ts
var asanaAsanaWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AsanaAsanaWorkItemAriResourceOwner,
  resourceType: AsanaAsanaWorkItemAriResourceType,
  resourceIdSlug: "task/{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/asana.asana/work-item/index.ts
var AsanaAsanaWorkItemAri = class _AsanaAsanaWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: asanaAsanaWorkItemAriStaticOpts.qualifier,
      platformQualifier: asanaAsanaWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: asanaAsanaWorkItemAriStaticOpts.resourceOwner,
      resourceType: asanaAsanaWorkItemAriStaticOpts.resourceType,
      resourceId: `task/${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, asanaAsanaWorkItemAriStaticOpts);
    return new _AsanaAsanaWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, asanaAsanaWorkItemAriStaticOpts);
    return new _AsanaAsanaWorkItemAri(opts);
  }
  getVariables() {
    return {
      taskId: this.taskId
    };
  }
};

// src/atlashub/id/types.ts
var AtlashubIdAriResourceOwner = "atlashub", AtlashubIdAriResourceType = "id";

// src/atlashub/id/manifest.ts
var atlashubIdAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AtlashubIdAriResourceOwner,
  resourceType: AtlashubIdAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/atlashub/id/index.ts
var AtlashubIdAri = class _AtlashubIdAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: atlashubIdAriStaticOpts.qualifier,
      platformQualifier: atlashubIdAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: atlashubIdAriStaticOpts.resourceOwner,
      resourceType: atlashubIdAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, atlashubIdAriStaticOpts);
    return new _AtlashubIdAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, atlashubIdAriStaticOpts);
    return new _AtlashubIdAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

// src/atlashub/site/types.ts
var AtlashubSiteAriResourceOwner = "atlashub", AtlashubSiteAriResourceType = "site";

// src/atlashub/site/manifest.ts
var atlashubSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AtlashubSiteAriResourceOwner,
  resourceType: AtlashubSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/atlashub/site/index.ts
var AtlashubSiteAri = class _AtlashubSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: atlashubSiteAriStaticOpts.qualifier,
      platformQualifier: atlashubSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: atlashubSiteAriStaticOpts.resourceOwner,
      resourceType: atlashubSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, atlashubSiteAriStaticOpts);
    return new _AtlashubSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, atlashubSiteAriStaticOpts);
    return new _AtlashubSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/atlassian-web-crawler.atlassian-web-crawler/document/types.ts
var AtlassianWebCrawlerAtlassianWebCrawlerDocumentAriResourceOwner = "atlassian-web-crawler.atlassian-web-crawler", AtlassianWebCrawlerAtlassianWebCrawlerDocumentAriResourceType = "document";

// src/atlassian-web-crawler.atlassian-web-crawler/document/manifest.ts
var atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AtlassianWebCrawlerAtlassianWebCrawlerDocumentAriResourceOwner,
  resourceType: AtlassianWebCrawlerAtlassianWebCrawlerDocumentAriResourceType,
  resourceIdSlug: "{documentId}",
  resourceIdSegmentFormats: {
    documentId: /[a-f0-9]{64}(-raw)?(-[0-9]{1,4})?/
    // eslint-disable-line no-useless-escape
  }
};

// src/atlassian-web-crawler.atlassian-web-crawler/document/index.ts
var AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri = class _AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts.qualifier,
      platformQualifier: atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts.resourceOwner,
      resourceType: atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.documentId}`,
      resourceIdSegmentValues: {
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts);
    return new _AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, atlassianWebCrawlerAtlassianWebCrawlerDocumentAriStaticOpts);
    return new _AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri(opts);
  }
  getVariables() {
    return {
      documentId: this.documentId
    };
  }
};

// src/audit-log/attribute/types.ts
var AuditLogAttributeAriResourceOwner = "audit-log", AuditLogAttributeAriResourceType = "attribute";

// src/audit-log/attribute/manifest.ts
var auditLogAttributeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogAttributeAriResourceOwner,
  resourceType: AuditLogAttributeAriResourceType,
  resourceIdSlug: "event/{eventId}/{attributeId}",
  resourceIdSegmentFormats: {
    eventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    attributeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/attribute/index.ts
var AuditLogAttributeAri = class _AuditLogAttributeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventId = opts.resourceIdSegmentValues.eventId, this._attributeId = opts.resourceIdSegmentValues.attributeId;
  }
  get eventId() {
    return this._eventId;
  }
  get attributeId() {
    return this._attributeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogAttributeAriStaticOpts.qualifier,
      platformQualifier: auditLogAttributeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogAttributeAriStaticOpts.resourceOwner,
      resourceType: auditLogAttributeAriStaticOpts.resourceType,
      resourceId: `event/${opts.eventId}/${opts.attributeId}`,
      resourceIdSegmentValues: {
        eventId: opts.eventId,
        attributeId: opts.attributeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogAttributeAriStaticOpts);
    return new _AuditLogAttributeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogAttributeAriStaticOpts);
    return new _AuditLogAttributeAri(opts);
  }
  getVariables() {
    return {
      eventId: this.eventId,
      attributeId: this.attributeId
    };
  }
};

// src/audit-log/container/types.ts
var AuditLogContainerAriResourceOwner = "audit-log", AuditLogContainerAriResourceType = "container";

// src/audit-log/container/manifest.ts
var auditLogContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogContainerAriResourceOwner,
  resourceType: AuditLogContainerAriResourceType,
  resourceIdSlug: "event/{eventId}/{containerId}",
  resourceIdSegmentFormats: {
    eventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    containerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/container/index.ts
var AuditLogContainerAri = class _AuditLogContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventId = opts.resourceIdSegmentValues.eventId, this._containerId = opts.resourceIdSegmentValues.containerId;
  }
  get eventId() {
    return this._eventId;
  }
  get containerId() {
    return this._containerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogContainerAriStaticOpts.qualifier,
      platformQualifier: auditLogContainerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogContainerAriStaticOpts.resourceOwner,
      resourceType: auditLogContainerAriStaticOpts.resourceType,
      resourceId: `event/${opts.eventId}/${opts.containerId}`,
      resourceIdSegmentValues: {
        eventId: opts.eventId,
        containerId: opts.containerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogContainerAriStaticOpts);
    return new _AuditLogContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogContainerAriStaticOpts);
    return new _AuditLogContainerAri(opts);
  }
  getVariables() {
    return {
      eventId: this.eventId,
      containerId: this.containerId
    };
  }
};

// src/audit-log/context/types.ts
var AuditLogContextAriResourceOwner = "audit-log", AuditLogContextAriResourceType = "context";

// src/audit-log/context/manifest.ts
var auditLogContextAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogContextAriResourceOwner,
  resourceType: AuditLogContextAriResourceType,
  resourceIdSlug: "event/{eventId}/{contextId}",
  resourceIdSegmentFormats: {
    eventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    contextId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/context/index.ts
var AuditLogContextAri = class _AuditLogContextAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventId = opts.resourceIdSegmentValues.eventId, this._contextId = opts.resourceIdSegmentValues.contextId;
  }
  get eventId() {
    return this._eventId;
  }
  get contextId() {
    return this._contextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogContextAriStaticOpts.qualifier,
      platformQualifier: auditLogContextAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogContextAriStaticOpts.resourceOwner,
      resourceType: auditLogContextAriStaticOpts.resourceType,
      resourceId: `event/${opts.eventId}/${opts.contextId}`,
      resourceIdSegmentValues: {
        eventId: opts.eventId,
        contextId: opts.contextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogContextAriStaticOpts);
    return new _AuditLogContextAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogContextAriStaticOpts);
    return new _AuditLogContextAri(opts);
  }
  getVariables() {
    return {
      eventId: this.eventId,
      contextId: this.contextId
    };
  }
};

// src/audit-log/event/types.ts
var AuditLogEventAriResourceOwner = "audit-log", AuditLogEventAriResourceType = "event";

// src/audit-log/event/manifest.ts
var auditLogEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogEventAriResourceOwner,
  resourceType: AuditLogEventAriResourceType,
  resourceIdSlug: "{eventId}",
  resourceIdSegmentFormats: {
    eventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/event/index.ts
var AuditLogEventAri = class _AuditLogEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogEventAriStaticOpts.qualifier,
      platformQualifier: auditLogEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogEventAriStaticOpts.resourceOwner,
      resourceType: auditLogEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventId}`,
      resourceIdSegmentValues: {
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogEventAriStaticOpts);
    return new _AuditLogEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogEventAriStaticOpts);
    return new _AuditLogEventAri(opts);
  }
  getVariables() {
    return {
      eventId: this.eventId
    };
  }
};

// src/audit-log/workspace/types.ts
var AuditLogWorkspaceAriResourceOwner = "audit-log", AuditLogWorkspaceAriResourceType = "workspace";

// src/audit-log/workspace/manifest.ts
var auditLogWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogWorkspaceAriResourceOwner,
  resourceType: AuditLogWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/workspace/index.ts
var AuditLogWorkspaceAri = class _AuditLogWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogWorkspaceAriStaticOpts.qualifier,
      platformQualifier: auditLogWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogWorkspaceAriStaticOpts.resourceOwner,
      resourceType: auditLogWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogWorkspaceAriStaticOpts);
    return new _AuditLogWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogWorkspaceAriStaticOpts);
    return new _AuditLogWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/automation/automation-rule/types.ts
var AutomationAutomationRuleAriResourceOwner = "automation", AutomationAutomationRuleAriResourceType = "automation-rule";

// src/automation/automation-rule/manifest.ts
var automationAutomationRuleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AutomationAutomationRuleAriResourceOwner,
  resourceType: AutomationAutomationRuleAriResourceType,
  resourceIdSlug: "{ruleId}/partition/{partitionId}",
  resourceIdSegmentFormats: {
    ruleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    partitionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/automation/automation-rule/index.ts
var AutomationAutomationRuleAri = class _AutomationAutomationRuleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._ruleId = opts.resourceIdSegmentValues.ruleId, this._partitionId = opts.resourceIdSegmentValues.partitionId;
  }
  get ruleId() {
    return this._ruleId;
  }
  get partitionId() {
    return this._partitionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: automationAutomationRuleAriStaticOpts.qualifier,
      platformQualifier: automationAutomationRuleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: automationAutomationRuleAriStaticOpts.resourceOwner,
      resourceType: automationAutomationRuleAriStaticOpts.resourceType,
      resourceId: `${opts.ruleId}/partition/${opts.partitionId}`,
      resourceIdSegmentValues: {
        ruleId: opts.ruleId,
        partitionId: opts.partitionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, automationAutomationRuleAriStaticOpts);
    return new _AutomationAutomationRuleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, automationAutomationRuleAriStaticOpts);
    return new _AutomationAutomationRuleAri(opts);
  }
  getVariables() {
    return {
      ruleId: this.ruleId,
      partitionId: this.partitionId
    };
  }
};

// src/automation/role/types.ts
var AutomationRoleAriResourceOwner = "automation", AutomationRoleAriResourceType = "role";

// src/automation/role/manifest.ts
var automationRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AutomationRoleAriResourceOwner,
  resourceType: AutomationRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/automation/role/index.ts
var AutomationRoleAri = class _AutomationRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: automationRoleAriStaticOpts.qualifier,
      platformQualifier: automationRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: automationRoleAriStaticOpts.resourceOwner,
      resourceType: automationRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, automationRoleAriStaticOpts);
    return new _AutomationRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, automationRoleAriStaticOpts);
    return new _AutomationRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/avp/control/types.ts
var AvpControlAriResourceOwner = "avp", AvpControlAriResourceType = "control";

// src/avp/control/manifest.ts
var avpControlAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpControlAriResourceOwner,
  resourceType: AvpControlAriResourceType,
  resourceIdSlug: "activation/{activationId}/{controlId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    controlId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/control/index.ts
var AvpControlAri = class _AvpControlAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._controlId = opts.resourceIdSegmentValues.controlId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get controlId() {
    return this._controlId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpControlAriStaticOpts.qualifier,
      platformQualifier: avpControlAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpControlAriStaticOpts.resourceOwner,
      resourceType: avpControlAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.controlId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        controlId: opts.controlId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpControlAriStaticOpts);
    return new _AvpControlAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpControlAriStaticOpts);
    return new _AvpControlAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      controlId: this.controlId
    };
  }
};

// src/avp/dashboard/types.ts
var AvpDashboardAriResourceOwner = "avp", AvpDashboardAriResourceType = "dashboard";

// src/avp/dashboard/manifest.ts
var avpDashboardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpDashboardAriResourceOwner,
  resourceType: AvpDashboardAriResourceType,
  resourceIdSlug: "activation/{activationId}/{dashboardId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dashboardId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/dashboard/index.ts
var AvpDashboardAri = class _AvpDashboardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dashboardId() {
    return this._dashboardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpDashboardAriStaticOpts.qualifier,
      platformQualifier: avpDashboardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpDashboardAriStaticOpts.resourceOwner,
      resourceType: avpDashboardAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.dashboardId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dashboardId: opts.dashboardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDashboardAriStaticOpts);
    return new _AvpDashboardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpDashboardAriStaticOpts);
    return new _AvpDashboardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dashboardId: this.dashboardId
    };
  }
};

// src/avp/dashboard-chart/types.ts
var AvpDashboardChartAriResourceOwner = "avp", AvpDashboardChartAriResourceType = "dashboard-chart";

// src/avp/dashboard-chart/manifest.ts
var avpDashboardChartAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpDashboardChartAriResourceOwner,
  resourceType: AvpDashboardChartAriResourceType,
  resourceIdSlug: "activation/{activationId}/dashboard/{dashboardId}/{chartId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dashboardId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    chartId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/dashboard-chart/index.ts
var AvpDashboardChartAri = class _AvpDashboardChartAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId, this._chartId = opts.resourceIdSegmentValues.chartId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dashboardId() {
    return this._dashboardId;
  }
  get chartId() {
    return this._chartId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpDashboardChartAriStaticOpts.qualifier,
      platformQualifier: avpDashboardChartAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpDashboardChartAriStaticOpts.resourceOwner,
      resourceType: avpDashboardChartAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/dashboard/${opts.dashboardId}/${opts.chartId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dashboardId: opts.dashboardId,
        chartId: opts.chartId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDashboardChartAriStaticOpts);
    return new _AvpDashboardChartAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpDashboardChartAriStaticOpts);
    return new _AvpDashboardChartAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dashboardId: this.dashboardId,
      chartId: this.chartId
    };
  }
};

// src/avp/data-share/types.ts
var AvpDataShareAriResourceOwner = "avp", AvpDataShareAriResourceType = "data-share";

// src/avp/data-share/manifest.ts
var avpDataShareAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpDataShareAriResourceOwner,
  resourceType: AvpDataShareAriResourceType,
  resourceIdSlug: "activation/{activationId}/{datashareId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    datashareId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/data-share/index.ts
var AvpDataShareAri = class _AvpDataShareAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._datashareId = opts.resourceIdSegmentValues.datashareId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get datashareId() {
    return this._datashareId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpDataShareAriStaticOpts.qualifier,
      platformQualifier: avpDataShareAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpDataShareAriStaticOpts.resourceOwner,
      resourceType: avpDataShareAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.datashareId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        datashareId: opts.datashareId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDataShareAriStaticOpts);
    return new _AvpDataShareAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpDataShareAriStaticOpts);
    return new _AvpDataShareAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      datashareId: this.datashareId
    };
  }
};

// src/avp/datasource/types.ts
var AvpDatasourceAriResourceOwner = "avp", AvpDatasourceAriResourceType = "datasource";

// src/avp/datasource/manifest.ts
var avpDatasourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpDatasourceAriResourceOwner,
  resourceType: AvpDatasourceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{datasourceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    datasourceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/datasource/index.ts
var AvpDatasourceAri = class _AvpDatasourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._datasourceId = opts.resourceIdSegmentValues.datasourceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get datasourceId() {
    return this._datasourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpDatasourceAriStaticOpts.qualifier,
      platformQualifier: avpDatasourceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpDatasourceAriStaticOpts.resourceOwner,
      resourceType: avpDatasourceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.datasourceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        datasourceId: opts.datasourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDatasourceAriStaticOpts);
    return new _AvpDatasourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpDatasourceAriStaticOpts);
    return new _AvpDatasourceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      datasourceId: this.datasourceId
    };
  }
};

// src/avp/pipeline-query/types.ts
var AvpPipelineQueryAriResourceOwner = "avp", AvpPipelineQueryAriResourceType = "pipeline-query";

// src/avp/pipeline-query/manifest.ts
var avpPipelineQueryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpPipelineQueryAriResourceOwner,
  resourceType: AvpPipelineQueryAriResourceType,
  resourceIdSlug: "activation/{activationId}/pipeline/{pipelineId}/{pipelineQueryId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pipelineId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    pipelineQueryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/pipeline-query/index.ts
var AvpPipelineQueryAri = class _AvpPipelineQueryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._pipelineId = opts.resourceIdSegmentValues.pipelineId, this._pipelineQueryId = opts.resourceIdSegmentValues.pipelineQueryId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get pipelineId() {
    return this._pipelineId;
  }
  get pipelineQueryId() {
    return this._pipelineQueryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpPipelineQueryAriStaticOpts.qualifier,
      platformQualifier: avpPipelineQueryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpPipelineQueryAriStaticOpts.resourceOwner,
      resourceType: avpPipelineQueryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/pipeline/${opts.pipelineId}/${opts.pipelineQueryId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pipelineId: opts.pipelineId,
        pipelineQueryId: opts.pipelineQueryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpPipelineQueryAriStaticOpts);
    return new _AvpPipelineQueryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpPipelineQueryAriStaticOpts);
    return new _AvpPipelineQueryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      pipelineId: this.pipelineId,
      pipelineQueryId: this.pipelineQueryId
    };
  }
};

// src/avp/role/types.ts
var AvpRoleAriResourceOwner = "avp", AvpRoleAriResourceType = "role";

// src/avp/role/manifest.ts
var avpRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpRoleAriResourceOwner,
  resourceType: AvpRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/role/index.ts
var AvpRoleAri = class _AvpRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpRoleAriStaticOpts.qualifier,
      platformQualifier: avpRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: avpRoleAriStaticOpts.resourceOwner,
      resourceType: avpRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpRoleAriStaticOpts);
    return new _AvpRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpRoleAriStaticOpts);
    return new _AvpRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/avp/site/types.ts
var AvpSiteAriResourceOwner = "avp", AvpSiteAriResourceType = "site";

// src/avp/site/manifest.ts
var avpSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpSiteAriResourceOwner,
  resourceType: AvpSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/site/index.ts
var AvpSiteAri = class _AvpSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpSiteAriStaticOpts.qualifier,
      platformQualifier: avpSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: avpSiteAriStaticOpts.resourceOwner,
      resourceType: avpSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpSiteAriStaticOpts);
    return new _AvpSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpSiteAriStaticOpts);
    return new _AvpSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/avp/subscription/types.ts
var AvpSubscriptionAriResourceOwner = "avp", AvpSubscriptionAriResourceType = "subscription";

// src/avp/subscription/manifest.ts
var avpSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpSubscriptionAriResourceOwner,
  resourceType: AvpSubscriptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{subscriptionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    subscriptionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/subscription/index.ts
var AvpSubscriptionAri = class _AvpSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get subscriptionId() {
    return this._subscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpSubscriptionAriStaticOpts.qualifier,
      platformQualifier: avpSubscriptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpSubscriptionAriStaticOpts.resourceOwner,
      resourceType: avpSubscriptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.subscriptionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        subscriptionId: opts.subscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpSubscriptionAriStaticOpts);
    return new _AvpSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpSubscriptionAriStaticOpts);
    return new _AvpSubscriptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      subscriptionId: this.subscriptionId
    };
  }
};

// src/avp/workspace/types.ts
var AvpWorkspaceAriResourceOwner = "avp", AvpWorkspaceAriResourceType = "workspace";

// src/avp/workspace/manifest.ts
var avpWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpWorkspaceAriResourceOwner,
  resourceType: AvpWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/workspace/index.ts
var AvpWorkspaceAri = class _AvpWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpWorkspaceAriStaticOpts.qualifier,
      platformQualifier: avpWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpWorkspaceAriStaticOpts.resourceOwner,
      resourceType: avpWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpWorkspaceAriStaticOpts);
    return new _AvpWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpWorkspaceAriStaticOpts);
    return new _AvpWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

// src/azure-devops.azure-devops/remote-link/types.ts
var AzureDevopsAzureDevopsRemoteLinkAriResourceOwner = "azure-devops.azure-devops", AzureDevopsAzureDevopsRemoteLinkAriResourceType = "remote-link";

// src/azure-devops.azure-devops/remote-link/manifest.ts
var azureDevopsAzureDevopsRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AzureDevopsAzureDevopsRemoteLinkAriResourceOwner,
  resourceType: AzureDevopsAzureDevopsRemoteLinkAriResourceType,
  resourceIdSlug: "organization/{organization}/project/{projectId}/repository/{repositoryId}",
  resourceIdSegmentFormats: {
    organization: /[a-fA-F0-9]{64}/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/azure-devops.azure-devops/remote-link/index.ts
var AzureDevopsAzureDevopsRemoteLinkAri = class _AzureDevopsAzureDevopsRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._organization = opts.resourceIdSegmentValues.organization, this._projectId = opts.resourceIdSegmentValues.projectId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get organization() {
    return this._organization;
  }
  get projectId() {
    return this._projectId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.resourceType,
      resourceId: `organization/${opts.organization}/project/${opts.projectId}/repository/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        organization: opts.organization,
        projectId: opts.projectId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, azureDevopsAzureDevopsRemoteLinkAriStaticOpts);
    return new _AzureDevopsAzureDevopsRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, azureDevopsAzureDevopsRemoteLinkAriStaticOpts);
    return new _AzureDevopsAzureDevopsRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      organization: this.organization,
      projectId: this.projectId,
      repositoryId: this.repositoryId
    };
  }
};

// src/azure-devops.azure-devops/repository/types.ts
var AzureDevopsAzureDevopsRepositoryAriResourceOwner = "azure-devops.azure-devops", AzureDevopsAzureDevopsRepositoryAriResourceType = "repository";

// src/azure-devops.azure-devops/repository/manifest.ts
var azureDevopsAzureDevopsRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AzureDevopsAzureDevopsRepositoryAriResourceOwner,
  resourceType: AzureDevopsAzureDevopsRepositoryAriResourceType,
  resourceIdSlug: "organization/{organization}/project/{projectId}/repository/{repositoryId}",
  resourceIdSegmentFormats: {
    organization: /[A-Za-z0-9](?:[A-Za-z0-9\-]{0,48}[A-Za-z0-9])?/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/azure-devops.azure-devops/repository/index.ts
var AzureDevopsAzureDevopsRepositoryAri = class _AzureDevopsAzureDevopsRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._organization = opts.resourceIdSegmentValues.organization, this._projectId = opts.resourceIdSegmentValues.projectId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get organization() {
    return this._organization;
  }
  get projectId() {
    return this._projectId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: azureDevopsAzureDevopsRepositoryAriStaticOpts.qualifier,
      platformQualifier: azureDevopsAzureDevopsRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: azureDevopsAzureDevopsRepositoryAriStaticOpts.resourceOwner,
      resourceType: azureDevopsAzureDevopsRepositoryAriStaticOpts.resourceType,
      resourceId: `organization/${opts.organization}/project/${opts.projectId}/repository/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        organization: opts.organization,
        projectId: opts.projectId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, azureDevopsAzureDevopsRepositoryAriStaticOpts);
    return new _AzureDevopsAzureDevopsRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, azureDevopsAzureDevopsRepositoryAriStaticOpts);
    return new _AzureDevopsAzureDevopsRepositoryAri(opts);
  }
  getVariables() {
    return {
      organization: this.organization,
      projectId: this.projectId,
      repositoryId: this.repositoryId
    };
  }
};

// src/beacon/alert/types.ts
var BeaconAlertAriResourceOwner = "beacon", BeaconAlertAriResourceType = "alert";

// src/beacon/alert/manifest.ts
var beaconAlertAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconAlertAriResourceOwner,
  resourceType: BeaconAlertAriResourceType,
  resourceIdSlug: "{workspaceId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    alertId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/alert/index.ts
var BeaconAlertAri = class _BeaconAlertAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconAlertAriStaticOpts.qualifier,
      platformQualifier: beaconAlertAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconAlertAriStaticOpts.resourceOwner,
      resourceType: beaconAlertAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconAlertAriStaticOpts);
    return new _BeaconAlertAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconAlertAriStaticOpts);
    return new _BeaconAlertAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      alertId: this.alertId
    };
  }
};

// src/beacon/custom-detection/types.ts
var BeaconCustomDetectionAriResourceOwner = "beacon", BeaconCustomDetectionAriResourceType = "custom-detection";

// src/beacon/custom-detection/manifest.ts
var beaconCustomDetectionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconCustomDetectionAriResourceOwner,
  resourceType: BeaconCustomDetectionAriResourceType,
  resourceIdSlug: "{workspaceId}/{customDetectionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    customDetectionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/custom-detection/index.ts
var BeaconCustomDetectionAri = class _BeaconCustomDetectionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._customDetectionId = opts.resourceIdSegmentValues.customDetectionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get customDetectionId() {
    return this._customDetectionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconCustomDetectionAriStaticOpts.qualifier,
      platformQualifier: beaconCustomDetectionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconCustomDetectionAriStaticOpts.resourceOwner,
      resourceType: beaconCustomDetectionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.customDetectionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        customDetectionId: opts.customDetectionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconCustomDetectionAriStaticOpts);
    return new _BeaconCustomDetectionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconCustomDetectionAriStaticOpts);
    return new _BeaconCustomDetectionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      customDetectionId: this.customDetectionId
    };
  }
};

// src/beacon/detection/types.ts
var BeaconDetectionAriResourceOwner = "beacon", BeaconDetectionAriResourceType = "detection";

// src/beacon/detection/manifest.ts
var beaconDetectionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconDetectionAriResourceOwner,
  resourceType: BeaconDetectionAriResourceType,
  resourceIdSlug: "{workspaceId}/{detectionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    detectionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/detection/index.ts
var BeaconDetectionAri = class _BeaconDetectionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._detectionId = opts.resourceIdSegmentValues.detectionId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get detectionId() {
    return this._detectionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconDetectionAriStaticOpts.qualifier,
      platformQualifier: beaconDetectionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: beaconDetectionAriStaticOpts.resourceOwner,
      resourceType: beaconDetectionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.detectionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        detectionId: opts.detectionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconDetectionAriStaticOpts);
    return new _BeaconDetectionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconDetectionAriStaticOpts);
    return new _BeaconDetectionAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      detectionId: this.detectionId
    };
  }
};

// src/beacon/detection-setting/types.ts
var BeaconDetectionSettingAriResourceOwner = "beacon", BeaconDetectionSettingAriResourceType = "detection-setting";

// src/beacon/detection-setting/manifest.ts
var beaconDetectionSettingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconDetectionSettingAriResourceOwner,
  resourceType: BeaconDetectionSettingAriResourceType,
  resourceIdSlug: "{workspaceId}/{detectionType}/{detectionId}/{settingId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    detectionType: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    detectionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    settingId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/detection-setting/index.ts
var BeaconDetectionSettingAri = class _BeaconDetectionSettingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._detectionType = opts.resourceIdSegmentValues.detectionType, this._detectionId = opts.resourceIdSegmentValues.detectionId, this._settingId = opts.resourceIdSegmentValues.settingId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get detectionType() {
    return this._detectionType;
  }
  get detectionId() {
    return this._detectionId;
  }
  get settingId() {
    return this._settingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconDetectionSettingAriStaticOpts.qualifier,
      platformQualifier: beaconDetectionSettingAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconDetectionSettingAriStaticOpts.resourceOwner,
      resourceType: beaconDetectionSettingAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.detectionType}/${opts.detectionId}/${opts.settingId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        detectionType: opts.detectionType,
        detectionId: opts.detectionId,
        settingId: opts.settingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconDetectionSettingAriStaticOpts);
    return new _BeaconDetectionSettingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconDetectionSettingAriStaticOpts);
    return new _BeaconDetectionSettingAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      detectionType: this.detectionType,
      detectionId: this.detectionId,
      settingId: this.settingId
    };
  }
};

// src/beacon/role/types.ts
var BeaconRoleAriResourceOwner = "beacon", BeaconRoleAriResourceType = "role";

// src/beacon/role/manifest.ts
var beaconRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconRoleAriResourceOwner,
  resourceType: BeaconRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/role/index.ts
var BeaconRoleAri = class _BeaconRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconRoleAriStaticOpts.qualifier,
      platformQualifier: beaconRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: beaconRoleAriStaticOpts.resourceOwner,
      resourceType: beaconRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconRoleAriStaticOpts);
    return new _BeaconRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconRoleAriStaticOpts);
    return new _BeaconRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/beacon/site/types.ts
var BeaconSiteAriResourceOwner = "beacon", BeaconSiteAriResourceType = "site";

// src/beacon/site/manifest.ts
var beaconSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconSiteAriResourceOwner,
  resourceType: BeaconSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/site/index.ts
var BeaconSiteAri = class _BeaconSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconSiteAriStaticOpts.qualifier,
      platformQualifier: beaconSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: beaconSiteAriStaticOpts.resourceOwner,
      resourceType: beaconSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconSiteAriStaticOpts);
    return new _BeaconSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconSiteAriStaticOpts);
    return new _BeaconSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/beacon/subscription/types.ts
var BeaconSubscriptionAriResourceOwner = "beacon", BeaconSubscriptionAriResourceType = "subscription";

// src/beacon/subscription/manifest.ts
var beaconSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconSubscriptionAriResourceOwner,
  resourceType: BeaconSubscriptionAriResourceType,
  resourceIdSlug: "{workspaceId}/{subscriptionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    subscriptionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/subscription/index.ts
var BeaconSubscriptionAri = class _BeaconSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get subscriptionId() {
    return this._subscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconSubscriptionAriStaticOpts.qualifier,
      platformQualifier: beaconSubscriptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconSubscriptionAriStaticOpts.resourceOwner,
      resourceType: beaconSubscriptionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.subscriptionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        subscriptionId: opts.subscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconSubscriptionAriStaticOpts);
    return new _BeaconSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconSubscriptionAriStaticOpts);
    return new _BeaconSubscriptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      subscriptionId: this.subscriptionId
    };
  }
};

// src/beacon/workspace/types.ts
var BeaconWorkspaceAriResourceOwner = "beacon", BeaconWorkspaceAriResourceType = "workspace";

// src/beacon/workspace/manifest.ts
var beaconWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BeaconWorkspaceAriResourceOwner,
  resourceType: BeaconWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/beacon/workspace/index.ts
var BeaconWorkspaceAri = class _BeaconWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: beaconWorkspaceAriStaticOpts.qualifier,
      platformQualifier: beaconWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: beaconWorkspaceAriStaticOpts.resourceOwner,
      resourceType: beaconWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconWorkspaceAriStaticOpts);
    return new _BeaconWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, beaconWorkspaceAriStaticOpts);
    return new _BeaconWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

// src/bitbucket/app/types.ts
var BitbucketAppAriResourceOwner = "bitbucket", BitbucketAppAriResourceType = "app";

// src/bitbucket/app/manifest.ts
var bitbucketAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketAppAriResourceOwner,
  resourceType: BitbucketAppAriResourceType,
  resourceIdSlug: "{workspaceId}/{appId}",
  resourceIdSegmentFormats: {
    workspaceId: /\{[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}}/,
    // eslint-disable-line no-useless-escape
    appId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/app/index.ts
var BitbucketAppAri = class _BitbucketAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._appId = opts.resourceIdSegmentValues.appId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get appId() {
    return this._appId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketAppAriStaticOpts.qualifier,
      platformQualifier: bitbucketAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketAppAriStaticOpts.resourceOwner,
      resourceType: bitbucketAppAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.appId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        appId: opts.appId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketAppAriStaticOpts);
    return new _BitbucketAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketAppAriStaticOpts);
    return new _BitbucketAppAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      appId: this.appId
    };
  }
};

// src/bitbucket/oauth-consumer/types.ts
var BitbucketOauthConsumerAriResourceOwner = "bitbucket", BitbucketOauthConsumerAriResourceType = "oauth-consumer";

// src/bitbucket/oauth-consumer/manifest.ts
var bitbucketOauthConsumerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketOauthConsumerAriResourceOwner,
  resourceType: BitbucketOauthConsumerAriResourceType,
  resourceIdSlug: "{clientId}",
  resourceIdSegmentFormats: {
    clientId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/oauth-consumer/index.ts
var BitbucketOauthConsumerAri = class _BitbucketOauthConsumerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketOauthConsumerAriStaticOpts.qualifier,
      platformQualifier: bitbucketOauthConsumerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketOauthConsumerAriStaticOpts.resourceOwner,
      resourceType: bitbucketOauthConsumerAriStaticOpts.resourceType,
      resourceId: `${opts.clientId}`,
      resourceIdSegmentValues: {
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketOauthConsumerAriStaticOpts);
    return new _BitbucketOauthConsumerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketOauthConsumerAriStaticOpts);
    return new _BitbucketOauthConsumerAri(opts);
  }
  getVariables() {
    return {
      clientId: this.clientId
    };
  }
};

// src/bitbucket/project/types.ts
var BitbucketProjectAriResourceOwner = "bitbucket", BitbucketProjectAriResourceType = "project";

// src/bitbucket/project/manifest.ts
var bitbucketProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketProjectAriResourceOwner,
  resourceType: BitbucketProjectAriResourceType,
  resourceIdSlug: "{projectId}",
  resourceIdSegmentFormats: {
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/project/index.ts
var BitbucketProjectAri = class _BitbucketProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketProjectAriStaticOpts.qualifier,
      platformQualifier: bitbucketProjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketProjectAriStaticOpts.resourceOwner,
      resourceType: bitbucketProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectId}`,
      resourceIdSegmentValues: {
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketProjectAriStaticOpts);
    return new _BitbucketProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketProjectAriStaticOpts);
    return new _BitbucketProjectAri(opts);
  }
  getVariables() {
    return {
      projectId: this.projectId
    };
  }
};

// src/bitbucket/pullrequest/types.ts
var BitbucketPullrequestAriResourceOwner = "bitbucket", BitbucketPullrequestAriResourceType = "pullrequest";

// src/bitbucket/pullrequest/manifest.ts
var bitbucketPullrequestAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketPullrequestAriResourceOwner,
  resourceType: BitbucketPullrequestAriResourceType,
  resourceIdSlug: "{pullRequestId}",
  resourceIdSegmentFormats: {
    pullRequestId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/pullrequest/index.ts
var BitbucketPullrequestAri = class _BitbucketPullrequestAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketPullrequestAriStaticOpts.qualifier,
      platformQualifier: bitbucketPullrequestAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketPullrequestAriStaticOpts.resourceOwner,
      resourceType: bitbucketPullrequestAriStaticOpts.resourceType,
      resourceId: `${opts.pullRequestId}`,
      resourceIdSegmentValues: {
        pullRequestId: opts.pullRequestId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketPullrequestAriStaticOpts);
    return new _BitbucketPullrequestAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketPullrequestAriStaticOpts);
    return new _BitbucketPullrequestAri(opts);
  }
  getVariables() {
    return {
      pullRequestId: this.pullRequestId
    };
  }
};

// src/bitbucket/repository/types.ts
var BitbucketRepositoryAriResourceOwner = "bitbucket", BitbucketRepositoryAriResourceType = "repository";

// src/bitbucket/repository/manifest.ts
var bitbucketRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketRepositoryAriResourceOwner,
  resourceType: BitbucketRepositoryAriResourceType,
  resourceIdSlug: "{repositoryId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/repository/index.ts
var BitbucketRepositoryAri = class _BitbucketRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketRepositoryAriStaticOpts.qualifier,
      platformQualifier: bitbucketRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketRepositoryAriStaticOpts.resourceOwner,
      resourceType: bitbucketRepositoryAriStaticOpts.resourceType,
      resourceId: `${opts.repositoryId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketRepositoryAriStaticOpts);
    return new _BitbucketRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketRepositoryAriStaticOpts);
    return new _BitbucketRepositoryAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId
    };
  }
};

// src/bitbucket/repository-transfer/types.ts
var BitbucketRepositoryTransferAriResourceOwner = "bitbucket", BitbucketRepositoryTransferAriResourceType = "repository-transfer";

// src/bitbucket/repository-transfer/manifest.ts
var bitbucketRepositoryTransferAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketRepositoryTransferAriResourceOwner,
  resourceType: BitbucketRepositoryTransferAriResourceType,
  resourceIdSlug: "{transferId}",
  resourceIdSegmentFormats: {
    transferId: /[a-f0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/repository-transfer/index.ts
var BitbucketRepositoryTransferAri = class _BitbucketRepositoryTransferAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._transferId = opts.resourceIdSegmentValues.transferId;
  }
  get transferId() {
    return this._transferId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketRepositoryTransferAriStaticOpts.qualifier,
      platformQualifier: bitbucketRepositoryTransferAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketRepositoryTransferAriStaticOpts.resourceOwner,
      resourceType: bitbucketRepositoryTransferAriStaticOpts.resourceType,
      resourceId: `${opts.transferId}`,
      resourceIdSegmentValues: {
        transferId: opts.transferId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketRepositoryTransferAriStaticOpts);
    return new _BitbucketRepositoryTransferAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketRepositoryTransferAriStaticOpts);
    return new _BitbucketRepositoryTransferAri(opts);
  }
  getVariables() {
    return {
      transferId: this.transferId
    };
  }
};

// src/bitbucket/site/types.ts
var BitbucketSiteAriResourceOwner = "bitbucket", BitbucketSiteAriResourceType = "site";

// src/bitbucket/site/manifest.ts
var bitbucketSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketSiteAriResourceOwner,
  resourceType: BitbucketSiteAriResourceType,
  resourceIdSlug: "bitbucket",
  resourceIdSegmentFormats: {}
};

// src/bitbucket/site/index.ts
var BitbucketSiteAri = class _BitbucketSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketSiteAriStaticOpts.qualifier,
      platformQualifier: bitbucketSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketSiteAriStaticOpts.resourceOwner,
      resourceType: bitbucketSiteAriStaticOpts.resourceType,
      resourceId: "bitbucket",
      resourceIdSegmentValues: {}
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketSiteAriStaticOpts);
    return new _BitbucketSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketSiteAriStaticOpts);
    return new _BitbucketSiteAri(opts);
  }
  getVariables() {
    return {};
  }
};

// src/bitbucket/team/types.ts
var BitbucketTeamAriResourceOwner = "bitbucket", BitbucketTeamAriResourceType = "team";

// src/bitbucket/team/manifest.ts
var bitbucketTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketTeamAriResourceOwner,
  resourceType: BitbucketTeamAriResourceType,
  resourceIdSlug: "{teamId}",
  resourceIdSegmentFormats: {
    teamId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/team/index.ts
var BitbucketTeamAri = class _BitbucketTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId;
  }
  get teamId() {
    return this._teamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketTeamAriStaticOpts.qualifier,
      platformQualifier: bitbucketTeamAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketTeamAriStaticOpts.resourceOwner,
      resourceType: bitbucketTeamAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketTeamAriStaticOpts);
    return new _BitbucketTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketTeamAriStaticOpts);
    return new _BitbucketTeamAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId
    };
  }
};

// src/bitbucket/workspace/types.ts
var BitbucketWorkspaceAriResourceOwner = "bitbucket", BitbucketWorkspaceAriResourceType = "workspace";

// src/bitbucket/workspace/manifest.ts
var bitbucketWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BitbucketWorkspaceAriResourceOwner,
  resourceType: BitbucketWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/bitbucket/workspace/index.ts
var BitbucketWorkspaceAri = class _BitbucketWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: bitbucketWorkspaceAriStaticOpts.qualifier,
      platformQualifier: bitbucketWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: bitbucketWorkspaceAriStaticOpts.resourceOwner,
      resourceType: bitbucketWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketWorkspaceAriStaticOpts);
    return new _BitbucketWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, bitbucketWorkspaceAriStaticOpts);
    return new _BitbucketWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/box.box/document/types.ts
var BoxBoxDocumentAriResourceOwner = "box.box", BoxBoxDocumentAriResourceType = "document";

// src/box.box/document/manifest.ts
var boxBoxDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BoxBoxDocumentAriResourceOwner,
  resourceType: BoxBoxDocumentAriResourceType,
  resourceIdSlug: "{item}/{itemId}",
  resourceIdSegmentFormats: {
    item: /(?:fileId|folderId)/,
    // eslint-disable-line no-useless-escape
    itemId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/box.box/document/index.ts
var BoxBoxDocumentAri = class _BoxBoxDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._item = opts.resourceIdSegmentValues.item, this._itemId = opts.resourceIdSegmentValues.itemId;
  }
  get item() {
    return this._item;
  }
  get itemId() {
    return this._itemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: boxBoxDocumentAriStaticOpts.qualifier,
      platformQualifier: boxBoxDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: boxBoxDocumentAriStaticOpts.resourceOwner,
      resourceType: boxBoxDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.item}/${opts.itemId}`,
      resourceIdSegmentValues: {
        item: opts.item,
        itemId: opts.itemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, boxBoxDocumentAriStaticOpts);
    return new _BoxBoxDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, boxBoxDocumentAriStaticOpts);
    return new _BoxBoxDocumentAri(opts);
  }
  getVariables() {
    return {
      item: this.item,
      itemId: this.itemId
    };
  }
};

// src/box.box/remote-link/types.ts
var BoxBoxRemoteLinkAriResourceOwner = "box.box", BoxBoxRemoteLinkAriResourceType = "remote-link";

// src/box.box/remote-link/manifest.ts
var boxBoxRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BoxBoxRemoteLinkAriResourceOwner,
  resourceType: BoxBoxRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/box.box/remote-link/index.ts
var BoxBoxRemoteLinkAri = class _BoxBoxRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: boxBoxRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: boxBoxRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: boxBoxRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: boxBoxRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, boxBoxRemoteLinkAriStaticOpts);
    return new _BoxBoxRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, boxBoxRemoteLinkAriStaticOpts);
    return new _BoxBoxRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/brie/role/types.ts
var BrieRoleAriResourceOwner = "brie", BrieRoleAriResourceType = "role";

// src/brie/role/manifest.ts
var brieRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BrieRoleAriResourceOwner,
  resourceType: BrieRoleAriResourceType,
  resourceIdSlug: "scope/{roleTypeId}",
  resourceIdSegmentFormats: {
    roleTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/brie/role/index.ts
var BrieRoleAri = class _BrieRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleTypeId = opts.resourceIdSegmentValues.roleTypeId;
  }
  get roleTypeId() {
    return this._roleTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: brieRoleAriStaticOpts.qualifier,
      platformQualifier: brieRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: brieRoleAriStaticOpts.resourceOwner,
      resourceType: brieRoleAriStaticOpts.resourceType,
      resourceId: `scope/${opts.roleTypeId}`,
      resourceIdSegmentValues: {
        roleTypeId: opts.roleTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, brieRoleAriStaticOpts);
    return new _BrieRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, brieRoleAriStaticOpts);
    return new _BrieRoleAri(opts);
  }
  getVariables() {
    return {
      roleTypeId: this.roleTypeId
    };
  }
};

// src/brie/site/types.ts
var BrieSiteAriResourceOwner = "brie", BrieSiteAriResourceType = "site";

// src/brie/site/manifest.ts
var brieSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: BrieSiteAriResourceOwner,
  resourceType: BrieSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/brie/site/index.ts
var BrieSiteAri = class _BrieSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: brieSiteAriStaticOpts.qualifier,
      platformQualifier: brieSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: brieSiteAriStaticOpts.resourceOwner,
      resourceType: brieSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, brieSiteAriStaticOpts);
    return new _BrieSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, brieSiteAriStaticOpts);
    return new _BrieSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/canva.canva/remote-link/types.ts
var CanvaCanvaRemoteLinkAriResourceOwner = "canva.canva", CanvaCanvaRemoteLinkAriResourceType = "remote-link";

// src/canva.canva/remote-link/manifest.ts
var canvaCanvaRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CanvaCanvaRemoteLinkAriResourceOwner,
  resourceType: CanvaCanvaRemoteLinkAriResourceType,
  resourceIdSlug: "designId/{designId}",
  resourceIdSegmentFormats: {
    designId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/canva.canva/remote-link/index.ts
var CanvaCanvaRemoteLinkAri = class _CanvaCanvaRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._designId = opts.resourceIdSegmentValues.designId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvaCanvaRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: canvaCanvaRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: canvaCanvaRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: canvaCanvaRemoteLinkAriStaticOpts.resourceType,
      resourceId: `designId/${opts.designId}`,
      resourceIdSegmentValues: {
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvaCanvaRemoteLinkAriStaticOpts);
    return new _CanvaCanvaRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvaCanvaRemoteLinkAriStaticOpts);
    return new _CanvaCanvaRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      designId: this.designId
    };
  }
};

// src/canvas/board/types.ts
var CanvasBoardAriResourceOwner = "canvas", CanvasBoardAriResourceType = "board";

// src/canvas/board/manifest.ts
var canvasBoardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CanvasBoardAriResourceOwner,
  resourceType: CanvasBoardAriResourceType,
  resourceIdSlug: "{boardId}",
  resourceIdSegmentFormats: {
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/canvas/board/index.ts
var CanvasBoardAri = class _CanvasBoardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get siteId() {
    return this._siteId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvasBoardAriStaticOpts.qualifier,
      platformQualifier: canvasBoardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: canvasBoardAriStaticOpts.resourceOwner,
      resourceType: canvasBoardAriStaticOpts.resourceType,
      resourceId: `${opts.boardId}`,
      resourceIdSegmentValues: {
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasBoardAriStaticOpts);
    return new _CanvasBoardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvasBoardAriStaticOpts);
    return new _CanvasBoardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      boardId: this.boardId
    };
  }
};

// src/canvas/database/types.ts
var CanvasDatabaseAriResourceOwner = "canvas", CanvasDatabaseAriResourceType = "database";

// src/canvas/database/manifest.ts
var canvasDatabaseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CanvasDatabaseAriResourceOwner,
  resourceType: CanvasDatabaseAriResourceType,
  resourceIdSlug: "{databaseId}",
  resourceIdSegmentFormats: {
    databaseId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/canvas/database/index.ts
var CanvasDatabaseAri = class _CanvasDatabaseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._databaseId = opts.resourceIdSegmentValues.databaseId;
  }
  get siteId() {
    return this._siteId;
  }
  get databaseId() {
    return this._databaseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvasDatabaseAriStaticOpts.qualifier,
      platformQualifier: canvasDatabaseAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: canvasDatabaseAriStaticOpts.resourceOwner,
      resourceType: canvasDatabaseAriStaticOpts.resourceType,
      resourceId: `${opts.databaseId}`,
      resourceIdSegmentValues: {
        databaseId: opts.databaseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasDatabaseAriStaticOpts);
    return new _CanvasDatabaseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvasDatabaseAriStaticOpts);
    return new _CanvasDatabaseAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      databaseId: this.databaseId
    };
  }
};

// src/canvas/site/types.ts
var CanvasSiteAriResourceOwner = "canvas", CanvasSiteAriResourceType = "site";

// src/canvas/site/manifest.ts
var canvasSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CanvasSiteAriResourceOwner,
  resourceType: CanvasSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/canvas/site/index.ts
var CanvasSiteAri = class _CanvasSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvasSiteAriStaticOpts.qualifier,
      platformQualifier: canvasSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: canvasSiteAriStaticOpts.resourceOwner,
      resourceType: canvasSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasSiteAriStaticOpts);
    return new _CanvasSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvasSiteAriStaticOpts);
    return new _CanvasSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/canvas/workspace/types.ts
var CanvasWorkspaceAriResourceOwner = "canvas", CanvasWorkspaceAriResourceType = "workspace";

// src/canvas/workspace/manifest.ts
var canvasWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CanvasWorkspaceAriResourceOwner,
  resourceType: CanvasWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/canvas/workspace/index.ts
var CanvasWorkspaceAri = class _CanvasWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: canvasWorkspaceAriStaticOpts.qualifier,
      platformQualifier: canvasWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: canvasWorkspaceAriStaticOpts.resourceOwner,
      resourceType: canvasWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasWorkspaceAriStaticOpts);
    return new _CanvasWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, canvasWorkspaceAriStaticOpts);
    return new _CanvasWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

// src/cia/cprs-email/types.ts
var CiaCprsEmailAriResourceOwner = "cia", CiaCprsEmailAriResourceType = "cprs-email";

// src/cia/cprs-email/manifest.ts
var ciaCprsEmailAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CiaCprsEmailAriResourceOwner,
  resourceType: CiaCprsEmailAriResourceType,
  resourceIdSlug: "{emailType}",
  resourceIdSegmentFormats: {
    emailType: /(added|approved|rejected|blocked|unapproved|unblocked|pending|other)/
    // eslint-disable-line no-useless-escape
  }
};

// src/cia/cprs-email/index.ts
var CiaCprsEmailAri = class _CiaCprsEmailAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._emailType = opts.resourceIdSegmentValues.emailType;
  }
  get emailType() {
    return this._emailType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ciaCprsEmailAriStaticOpts.qualifier,
      platformQualifier: ciaCprsEmailAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ciaCprsEmailAriStaticOpts.resourceOwner,
      resourceType: ciaCprsEmailAriStaticOpts.resourceType,
      resourceId: `${opts.emailType}`,
      resourceIdSegmentValues: {
        emailType: opts.emailType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ciaCprsEmailAriStaticOpts);
    return new _CiaCprsEmailAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ciaCprsEmailAriStaticOpts);
    return new _CiaCprsEmailAri(opts);
  }
  getVariables() {
    return {
      emailType: this.emailType
    };
  }
};

// src/cisco.webex/remote-link/types.ts
var CiscoWebexRemoteLinkAriResourceOwner = "cisco.webex", CiscoWebexRemoteLinkAriResourceType = "remote-link";

// src/cisco.webex/remote-link/manifest.ts
var ciscoWebexRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CiscoWebexRemoteLinkAriResourceOwner,
  resourceType: CiscoWebexRemoteLinkAriResourceType,
  resourceIdSlug: "recording/{recordingId}",
  resourceIdSegmentFormats: {
    recordingId: /[a-zA-Z0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/cisco.webex/remote-link/index.ts
var CiscoWebexRemoteLinkAri = class _CiscoWebexRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._recordingId = opts.resourceIdSegmentValues.recordingId;
  }
  get recordingId() {
    return this._recordingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ciscoWebexRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: ciscoWebexRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ciscoWebexRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: ciscoWebexRemoteLinkAriStaticOpts.resourceType,
      resourceId: `recording/${opts.recordingId}`,
      resourceIdSegmentValues: {
        recordingId: opts.recordingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ciscoWebexRemoteLinkAriStaticOpts);
    return new _CiscoWebexRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ciscoWebexRemoteLinkAriStaticOpts);
    return new _CiscoWebexRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      recordingId: this.recordingId
    };
  }
};

// src/clickup.clickup/remote-link/types.ts
var ClickupClickupRemoteLinkAriResourceOwner = "clickup.clickup", ClickupClickupRemoteLinkAriResourceType = "remote-link";

// src/clickup.clickup/remote-link/manifest.ts
var clickupClickupRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ClickupClickupRemoteLinkAriResourceOwner,
  resourceType: ClickupClickupRemoteLinkAriResourceType,
  resourceIdSlug: "task/{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/clickup.clickup/remote-link/index.ts
var ClickupClickupRemoteLinkAri = class _ClickupClickupRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: clickupClickupRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: clickupClickupRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: clickupClickupRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: clickupClickupRemoteLinkAriStaticOpts.resourceType,
      resourceId: `task/${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, clickupClickupRemoteLinkAriStaticOpts);
    return new _ClickupClickupRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, clickupClickupRemoteLinkAriStaticOpts);
    return new _ClickupClickupRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      taskId: this.taskId
    };
  }
};

// src/cmdb/attribute/types.ts
var CmdbAttributeAriResourceOwner = "cmdb", CmdbAttributeAriResourceType = "attribute";

// src/cmdb/attribute/manifest.ts
var cmdbAttributeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbAttributeAriResourceOwner,
  resourceType: CmdbAttributeAriResourceType,
  resourceIdSlug: "{workspaceId}/{attributeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    attributeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/attribute/index.ts
var CmdbAttributeAri = class _CmdbAttributeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._attributeId = opts.resourceIdSegmentValues.attributeId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get attributeId() {
    return this._attributeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbAttributeAriStaticOpts.qualifier,
      platformQualifier: cmdbAttributeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbAttributeAriStaticOpts.resourceOwner,
      resourceType: cmdbAttributeAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.attributeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        attributeId: opts.attributeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbAttributeAriStaticOpts);
    return new _CmdbAttributeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbAttributeAriStaticOpts);
    return new _CmdbAttributeAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      attributeId: this.attributeId
    };
  }
};

// src/cmdb/import-configuration/types.ts
var CmdbImportConfigurationAriResourceOwner = "cmdb", CmdbImportConfigurationAriResourceType = "import-configuration";

// src/cmdb/import-configuration/manifest.ts
var cmdbImportConfigurationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbImportConfigurationAriResourceOwner,
  resourceType: CmdbImportConfigurationAriResourceType,
  resourceIdSlug: "{workspaceId}/{importConfigId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    importConfigId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/import-configuration/index.ts
var CmdbImportConfigurationAri = class _CmdbImportConfigurationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._importConfigId = opts.resourceIdSegmentValues.importConfigId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get importConfigId() {
    return this._importConfigId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbImportConfigurationAriStaticOpts.qualifier,
      platformQualifier: cmdbImportConfigurationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbImportConfigurationAriStaticOpts.resourceOwner,
      resourceType: cmdbImportConfigurationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.importConfigId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        importConfigId: opts.importConfigId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbImportConfigurationAriStaticOpts);
    return new _CmdbImportConfigurationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbImportConfigurationAriStaticOpts);
    return new _CmdbImportConfigurationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      importConfigId: this.importConfigId
    };
  }
};

// src/cmdb/object/types.ts
var CmdbObjectAriResourceOwner = "cmdb", CmdbObjectAriResourceType = "object";

// src/cmdb/object/manifest.ts
var cmdbObjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbObjectAriResourceOwner,
  resourceType: CmdbObjectAriResourceType,
  resourceIdSlug: "{workspaceId}/{objectId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    objectId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/object/index.ts
var CmdbObjectAri = class _CmdbObjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._objectId = opts.resourceIdSegmentValues.objectId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get objectId() {
    return this._objectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbObjectAriStaticOpts.qualifier,
      platformQualifier: cmdbObjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbObjectAriStaticOpts.resourceOwner,
      resourceType: cmdbObjectAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.objectId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        objectId: opts.objectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbObjectAriStaticOpts);
    return new _CmdbObjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbObjectAriStaticOpts);
    return new _CmdbObjectAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      objectId: this.objectId
    };
  }
};

// src/cmdb/role/types.ts
var CmdbRoleAriResourceOwner = "cmdb", CmdbRoleAriResourceType = "role";

// src/cmdb/role/manifest.ts
var cmdbRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbRoleAriResourceOwner,
  resourceType: CmdbRoleAriResourceType,
  resourceIdSlug: "{roleGroup}/{roleType}",
  resourceIdSegmentFormats: {
    roleGroup: /(?:schema|airtrack|airtrack-buoy)/,
    // eslint-disable-line no-useless-escape
    roleType: /(?:viewer|admin|report-viewer|report-editor)/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/role/index.ts
var CmdbRoleAri = class _CmdbRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleGroup = opts.resourceIdSegmentValues.roleGroup, this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleGroup() {
    return this._roleGroup;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbRoleAriStaticOpts.qualifier,
      platformQualifier: cmdbRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbRoleAriStaticOpts.resourceOwner,
      resourceType: cmdbRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleGroup}/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleGroup: opts.roleGroup,
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbRoleAriStaticOpts);
    return new _CmdbRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbRoleAriStaticOpts);
    return new _CmdbRoleAri(opts);
  }
  getVariables() {
    return {
      roleGroup: this.roleGroup,
      roleType: this.roleType
    };
  }
};

// src/cmdb/schema/types.ts
var CmdbSchemaAriResourceOwner = "cmdb", CmdbSchemaAriResourceType = "schema";

// src/cmdb/schema/manifest.ts
var cmdbSchemaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbSchemaAriResourceOwner,
  resourceType: CmdbSchemaAriResourceType,
  resourceIdSlug: "{workspaceId}/{schemaId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    schemaId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/schema/index.ts
var CmdbSchemaAri = class _CmdbSchemaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._schemaId = opts.resourceIdSegmentValues.schemaId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get schemaId() {
    return this._schemaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbSchemaAriStaticOpts.qualifier,
      platformQualifier: cmdbSchemaAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbSchemaAriStaticOpts.resourceOwner,
      resourceType: cmdbSchemaAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.schemaId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        schemaId: opts.schemaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbSchemaAriStaticOpts);
    return new _CmdbSchemaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbSchemaAriStaticOpts);
    return new _CmdbSchemaAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      schemaId: this.schemaId
    };
  }
};

// src/cmdb/type/types.ts
var CmdbTypeAriResourceOwner = "cmdb", CmdbTypeAriResourceType = "type";

// src/cmdb/type/manifest.ts
var cmdbTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbTypeAriResourceOwner,
  resourceType: CmdbTypeAriResourceType,
  resourceIdSlug: "{workspaceId}/{typeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    typeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/type/index.ts
var CmdbTypeAri = class _CmdbTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._typeId = opts.resourceIdSegmentValues.typeId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get typeId() {
    return this._typeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbTypeAriStaticOpts.qualifier,
      platformQualifier: cmdbTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbTypeAriStaticOpts.resourceOwner,
      resourceType: cmdbTypeAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.typeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        typeId: opts.typeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbTypeAriStaticOpts);
    return new _CmdbTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbTypeAriStaticOpts);
    return new _CmdbTypeAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      typeId: this.typeId
    };
  }
};

// src/cmdb/workspace/types.ts
var CmdbWorkspaceAriResourceOwner = "cmdb", CmdbWorkspaceAriResourceType = "workspace";

// src/cmdb/workspace/manifest.ts
var cmdbWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CmdbWorkspaceAriResourceOwner,
  resourceType: CmdbWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/cmdb/workspace/index.ts
var CmdbWorkspaceAri = class _CmdbWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cmdbWorkspaceAriStaticOpts.qualifier,
      platformQualifier: cmdbWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cmdbWorkspaceAriStaticOpts.resourceOwner,
      resourceType: cmdbWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbWorkspaceAriStaticOpts);
    return new _CmdbWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cmdbWorkspaceAriStaticOpts);
    return new _CmdbWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/commerce/catalog-account/types.ts
var CommerceCatalogAccountAriResourceOwner = "commerce", CommerceCatalogAccountAriResourceType = "catalog-account";

// src/commerce/catalog-account/manifest.ts
var commerceCatalogAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceCatalogAccountAriResourceOwner,
  resourceType: CommerceCatalogAccountAriResourceType,
  resourceIdSlug: "{catalogAccountId}",
  resourceIdSegmentFormats: {
    catalogAccountId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/catalog-account/index.ts
var CommerceCatalogAccountAri = class _CommerceCatalogAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._catalogAccountId = opts.resourceIdSegmentValues.catalogAccountId;
  }
  get catalogAccountId() {
    return this._catalogAccountId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceCatalogAccountAriStaticOpts.qualifier,
      platformQualifier: commerceCatalogAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceCatalogAccountAriStaticOpts.resourceOwner,
      resourceType: commerceCatalogAccountAriStaticOpts.resourceType,
      resourceId: `${opts.catalogAccountId}`,
      resourceIdSegmentValues: {
        catalogAccountId: opts.catalogAccountId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceCatalogAccountAriStaticOpts);
    return new _CommerceCatalogAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceCatalogAccountAriStaticOpts);
    return new _CommerceCatalogAccountAri(opts);
  }
  getVariables() {
    return {
      catalogAccountId: this.catalogAccountId
    };
  }
};

// src/commerce/change/types.ts
var CommerceChangeAriResourceOwner = "commerce", CommerceChangeAriResourceType = "change";

// src/commerce/change/manifest.ts
var commerceChangeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceChangeAriResourceOwner,
  resourceType: CommerceChangeAriResourceType,
  resourceIdSlug: "{changeUuid}",
  resourceIdSegmentFormats: {
    changeUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/change/index.ts
var CommerceChangeAri = class _CommerceChangeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._changeUuid = opts.resourceIdSegmentValues.changeUuid;
  }
  get changeUuid() {
    return this._changeUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceChangeAriStaticOpts.qualifier,
      platformQualifier: commerceChangeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceChangeAriStaticOpts.resourceOwner,
      resourceType: commerceChangeAriStaticOpts.resourceType,
      resourceId: `${opts.changeUuid}`,
      resourceIdSegmentValues: {
        changeUuid: opts.changeUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceChangeAriStaticOpts);
    return new _CommerceChangeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceChangeAriStaticOpts);
    return new _CommerceChangeAri(opts);
  }
  getVariables() {
    return {
      changeUuid: this.changeUuid
    };
  }
};

// src/commerce/entitlement/types.ts
var CommerceEntitlementAriResourceOwner = "commerce", CommerceEntitlementAriResourceType = "entitlement";

// src/commerce/entitlement/manifest.ts
var commerceEntitlementAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceEntitlementAriResourceOwner,
  resourceType: CommerceEntitlementAriResourceType,
  resourceIdSlug: "{entitlementId}",
  resourceIdSegmentFormats: {
    entitlementId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/entitlement/index.ts
var CommerceEntitlementAri = class _CommerceEntitlementAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._entitlementId = opts.resourceIdSegmentValues.entitlementId;
  }
  get entitlementId() {
    return this._entitlementId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceEntitlementAriStaticOpts.qualifier,
      platformQualifier: commerceEntitlementAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceEntitlementAriStaticOpts.resourceOwner,
      resourceType: commerceEntitlementAriStaticOpts.resourceType,
      resourceId: `${opts.entitlementId}`,
      resourceIdSegmentValues: {
        entitlementId: opts.entitlementId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceEntitlementAriStaticOpts);
    return new _CommerceEntitlementAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceEntitlementAriStaticOpts);
    return new _CommerceEntitlementAri(opts);
  }
  getVariables() {
    return {
      entitlementId: this.entitlementId
    };
  }
};

// src/commerce/entitlement-template/types.ts
var CommerceEntitlementTemplateAriResourceOwner = "commerce", CommerceEntitlementTemplateAriResourceType = "entitlement-template";

// src/commerce/entitlement-template/manifest.ts
var commerceEntitlementTemplateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceEntitlementTemplateAriResourceOwner,
  resourceType: CommerceEntitlementTemplateAriResourceType,
  resourceIdSlug: "{entitlementTemplateId}",
  resourceIdSegmentFormats: {
    entitlementTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/entitlement-template/index.ts
var CommerceEntitlementTemplateAri = class _CommerceEntitlementTemplateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._entitlementTemplateId = opts.resourceIdSegmentValues.entitlementTemplateId;
  }
  get entitlementTemplateId() {
    return this._entitlementTemplateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceEntitlementTemplateAriStaticOpts.qualifier,
      platformQualifier: commerceEntitlementTemplateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceEntitlementTemplateAriStaticOpts.resourceOwner,
      resourceType: commerceEntitlementTemplateAriStaticOpts.resourceType,
      resourceId: `${opts.entitlementTemplateId}`,
      resourceIdSegmentValues: {
        entitlementTemplateId: opts.entitlementTemplateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceEntitlementTemplateAriStaticOpts);
    return new _CommerceEntitlementTemplateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceEntitlementTemplateAriStaticOpts);
    return new _CommerceEntitlementTemplateAri(opts);
  }
  getVariables() {
    return {
      entitlementTemplateId: this.entitlementTemplateId
    };
  }
};

// src/commerce/initiative/types.ts
var CommerceInitiativeAriResourceOwner = "commerce", CommerceInitiativeAriResourceType = "initiative";

// src/commerce/initiative/manifest.ts
var commerceInitiativeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceInitiativeAriResourceOwner,
  resourceType: CommerceInitiativeAriResourceType,
  resourceIdSlug: "{initiativeUuid}",
  resourceIdSegmentFormats: {
    initiativeUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/initiative/index.ts
var CommerceInitiativeAri = class _CommerceInitiativeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._initiativeUuid = opts.resourceIdSegmentValues.initiativeUuid;
  }
  get initiativeUuid() {
    return this._initiativeUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceInitiativeAriStaticOpts.qualifier,
      platformQualifier: commerceInitiativeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceInitiativeAriStaticOpts.resourceOwner,
      resourceType: commerceInitiativeAriStaticOpts.resourceType,
      resourceId: `${opts.initiativeUuid}`,
      resourceIdSegmentValues: {
        initiativeUuid: opts.initiativeUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceInitiativeAriStaticOpts);
    return new _CommerceInitiativeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceInitiativeAriStaticOpts);
    return new _CommerceInitiativeAri(opts);
  }
  getVariables() {
    return {
      initiativeUuid: this.initiativeUuid
    };
  }
};

// src/commerce/invoice-group/types.ts
var CommerceInvoiceGroupAriResourceOwner = "commerce", CommerceInvoiceGroupAriResourceType = "invoice-group";

// src/commerce/invoice-group/manifest.ts
var commerceInvoiceGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9\\-]+$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceInvoiceGroupAriResourceOwner,
  resourceType: CommerceInvoiceGroupAriResourceType,
  resourceIdSlug: "{invoiceGroupId}",
  resourceIdSegmentFormats: {
    invoiceGroupId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/invoice-group/index.ts
var CommerceInvoiceGroupAri = class _CommerceInvoiceGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.cloudId || "", this._invoiceGroupId = opts.resourceIdSegmentValues.invoiceGroupId;
  }
  get txaId() {
    return this._txaId;
  }
  get invoiceGroupId() {
    return this._invoiceGroupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceInvoiceGroupAriStaticOpts.qualifier,
      platformQualifier: commerceInvoiceGroupAriStaticOpts.platformQualifier,
      cloudId: opts.txaId,
      resourceOwner: commerceInvoiceGroupAriStaticOpts.resourceOwner,
      resourceType: commerceInvoiceGroupAriStaticOpts.resourceType,
      resourceId: `${opts.invoiceGroupId}`,
      resourceIdSegmentValues: {
        invoiceGroupId: opts.invoiceGroupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceInvoiceGroupAriStaticOpts);
    return new _CommerceInvoiceGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceInvoiceGroupAriStaticOpts);
    return new _CommerceInvoiceGroupAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId,
      invoiceGroupId: this.invoiceGroupId
    };
  }
};

// src/commerce/offering/types.ts
var CommerceOfferingAriResourceOwner = "commerce", CommerceOfferingAriResourceType = "offering";

// src/commerce/offering/manifest.ts
var commerceOfferingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceOfferingAriResourceOwner,
  resourceType: CommerceOfferingAriResourceType,
  resourceIdSlug: "{offeringId}",
  resourceIdSegmentFormats: {
    offeringId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/offering/index.ts
var CommerceOfferingAri = class _CommerceOfferingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._offeringId = opts.resourceIdSegmentValues.offeringId;
  }
  get offeringId() {
    return this._offeringId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceOfferingAriStaticOpts.qualifier,
      platformQualifier: commerceOfferingAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceOfferingAriStaticOpts.resourceOwner,
      resourceType: commerceOfferingAriStaticOpts.resourceType,
      resourceId: `${opts.offeringId}`,
      resourceIdSegmentValues: {
        offeringId: opts.offeringId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOfferingAriStaticOpts);
    return new _CommerceOfferingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceOfferingAriStaticOpts);
    return new _CommerceOfferingAri(opts);
  }
  getVariables() {
    return {
      offeringId: this.offeringId
    };
  }
};

// src/commerce/offering-relationship-template/types.ts
var CommerceOfferingRelationshipTemplateAriResourceOwner = "commerce", CommerceOfferingRelationshipTemplateAriResourceType = "offering-relationship-template";

// src/commerce/offering-relationship-template/manifest.ts
var commerceOfferingRelationshipTemplateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceOfferingRelationshipTemplateAriResourceOwner,
  resourceType: CommerceOfferingRelationshipTemplateAriResourceType,
  resourceIdSlug: "{offeringRelationshipTemplateId}",
  resourceIdSegmentFormats: {
    offeringRelationshipTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/offering-relationship-template/index.ts
var CommerceOfferingRelationshipTemplateAri = class _CommerceOfferingRelationshipTemplateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._offeringRelationshipTemplateId = opts.resourceIdSegmentValues.offeringRelationshipTemplateId;
  }
  get offeringRelationshipTemplateId() {
    return this._offeringRelationshipTemplateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceOfferingRelationshipTemplateAriStaticOpts.qualifier,
      platformQualifier: commerceOfferingRelationshipTemplateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceOfferingRelationshipTemplateAriStaticOpts.resourceOwner,
      resourceType: commerceOfferingRelationshipTemplateAriStaticOpts.resourceType,
      resourceId: `${opts.offeringRelationshipTemplateId}`,
      resourceIdSegmentValues: {
        offeringRelationshipTemplateId: opts.offeringRelationshipTemplateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOfferingRelationshipTemplateAriStaticOpts);
    return new _CommerceOfferingRelationshipTemplateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceOfferingRelationshipTemplateAriStaticOpts);
    return new _CommerceOfferingRelationshipTemplateAri(opts);
  }
  getVariables() {
    return {
      offeringRelationshipTemplateId: this.offeringRelationshipTemplateId
    };
  }
};

// src/commerce/order/types.ts
var CommerceOrderAriResourceOwner = "commerce", CommerceOrderAriResourceType = "order";

// src/commerce/order/manifest.ts
var commerceOrderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceOrderAriResourceOwner,
  resourceType: CommerceOrderAriResourceType,
  resourceIdSlug: "{orderId}",
  resourceIdSegmentFormats: {
    orderId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/order/index.ts
var CommerceOrderAri = class _CommerceOrderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orderId = opts.resourceIdSegmentValues.orderId;
  }
  get orderId() {
    return this._orderId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceOrderAriStaticOpts.qualifier,
      platformQualifier: commerceOrderAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceOrderAriStaticOpts.resourceOwner,
      resourceType: commerceOrderAriStaticOpts.resourceType,
      resourceId: `${opts.orderId}`,
      resourceIdSegmentValues: {
        orderId: opts.orderId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOrderAriStaticOpts);
    return new _CommerceOrderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceOrderAriStaticOpts);
    return new _CommerceOrderAri(opts);
  }
  getVariables() {
    return {
      orderId: this.orderId
    };
  }
};

// src/commerce/payment-method/types.ts
var CommercePaymentMethodAriResourceOwner = "commerce", CommercePaymentMethodAriResourceType = "payment-method";

// src/commerce/payment-method/manifest.ts
var commercePaymentMethodAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9\\-]+$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommercePaymentMethodAriResourceOwner,
  resourceType: CommercePaymentMethodAriResourceType,
  resourceIdSlug: "{paymentMethodId}",
  resourceIdSegmentFormats: {
    paymentMethodId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/payment-method/index.ts
var CommercePaymentMethodAri = class _CommercePaymentMethodAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.cloudId || "", this._paymentMethodId = opts.resourceIdSegmentValues.paymentMethodId;
  }
  get txaId() {
    return this._txaId;
  }
  get paymentMethodId() {
    return this._paymentMethodId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commercePaymentMethodAriStaticOpts.qualifier,
      platformQualifier: commercePaymentMethodAriStaticOpts.platformQualifier,
      cloudId: opts.txaId,
      resourceOwner: commercePaymentMethodAriStaticOpts.resourceOwner,
      resourceType: commercePaymentMethodAriStaticOpts.resourceType,
      resourceId: `${opts.paymentMethodId}`,
      resourceIdSegmentValues: {
        paymentMethodId: opts.paymentMethodId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePaymentMethodAriStaticOpts);
    return new _CommercePaymentMethodAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commercePaymentMethodAriStaticOpts);
    return new _CommercePaymentMethodAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId,
      paymentMethodId: this.paymentMethodId
    };
  }
};

// src/commerce/pricing-plan/types.ts
var CommercePricingPlanAriResourceOwner = "commerce", CommercePricingPlanAriResourceType = "pricing-plan";

// src/commerce/pricing-plan/manifest.ts
var commercePricingPlanAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommercePricingPlanAriResourceOwner,
  resourceType: CommercePricingPlanAriResourceType,
  resourceIdSlug: "{pricingPlanId}",
  resourceIdSegmentFormats: {
    pricingPlanId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/pricing-plan/index.ts
var CommercePricingPlanAri = class _CommercePricingPlanAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pricingPlanId = opts.resourceIdSegmentValues.pricingPlanId;
  }
  get pricingPlanId() {
    return this._pricingPlanId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commercePricingPlanAriStaticOpts.qualifier,
      platformQualifier: commercePricingPlanAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commercePricingPlanAriStaticOpts.resourceOwner,
      resourceType: commercePricingPlanAriStaticOpts.resourceType,
      resourceId: `${opts.pricingPlanId}`,
      resourceIdSegmentValues: {
        pricingPlanId: opts.pricingPlanId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePricingPlanAriStaticOpts);
    return new _CommercePricingPlanAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commercePricingPlanAriStaticOpts);
    return new _CommercePricingPlanAri(opts);
  }
  getVariables() {
    return {
      pricingPlanId: this.pricingPlanId
    };
  }
};

// src/commerce/product/types.ts
var CommerceProductAriResourceOwner = "commerce", CommerceProductAriResourceType = "product";

// src/commerce/product/manifest.ts
var commerceProductAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceProductAriResourceOwner,
  resourceType: CommerceProductAriResourceType,
  resourceIdSlug: "{productId}",
  resourceIdSegmentFormats: {
    productId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/product/index.ts
var CommerceProductAri = class _CommerceProductAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._productId = opts.resourceIdSegmentValues.productId;
  }
  get productId() {
    return this._productId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceProductAriStaticOpts.qualifier,
      platformQualifier: commerceProductAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceProductAriStaticOpts.resourceOwner,
      resourceType: commerceProductAriStaticOpts.resourceType,
      resourceId: `${opts.productId}`,
      resourceIdSegmentValues: {
        productId: opts.productId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceProductAriStaticOpts);
    return new _CommerceProductAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceProductAriStaticOpts);
    return new _CommerceProductAri(opts);
  }
  getVariables() {
    return {
      productId: this.productId
    };
  }
};

// src/commerce/promotion/types.ts
var CommercePromotionAriResourceOwner = "commerce", CommercePromotionAriResourceType = "promotion";

// src/commerce/promotion/manifest.ts
var commercePromotionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommercePromotionAriResourceOwner,
  resourceType: CommercePromotionAriResourceType,
  resourceIdSlug: "{promotionId}",
  resourceIdSegmentFormats: {
    promotionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/promotion/index.ts
var CommercePromotionAri = class _CommercePromotionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._promotionId = opts.resourceIdSegmentValues.promotionId;
  }
  get promotionId() {
    return this._promotionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commercePromotionAriStaticOpts.qualifier,
      platformQualifier: commercePromotionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commercePromotionAriStaticOpts.resourceOwner,
      resourceType: commercePromotionAriStaticOpts.resourceType,
      resourceId: `${opts.promotionId}`,
      resourceIdSegmentValues: {
        promotionId: opts.promotionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePromotionAriStaticOpts);
    return new _CommercePromotionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commercePromotionAriStaticOpts);
    return new _CommercePromotionAri(opts);
  }
  getVariables() {
    return {
      promotionId: this.promotionId
    };
  }
};

// src/commerce/quote/types.ts
var CommerceQuoteAriResourceOwner = "commerce", CommerceQuoteAriResourceType = "quote";

// src/commerce/quote/manifest.ts
var commerceQuoteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9\\-]+$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceQuoteAriResourceOwner,
  resourceType: CommerceQuoteAriResourceType,
  resourceIdSlug: "{quoteId}",
  resourceIdSegmentFormats: {
    quoteId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/quote/index.ts
var CommerceQuoteAri = class _CommerceQuoteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.cloudId || "", this._quoteId = opts.resourceIdSegmentValues.quoteId;
  }
  get txaId() {
    return this._txaId;
  }
  get quoteId() {
    return this._quoteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceQuoteAriStaticOpts.qualifier,
      platformQualifier: commerceQuoteAriStaticOpts.platformQualifier,
      cloudId: opts.txaId,
      resourceOwner: commerceQuoteAriStaticOpts.resourceOwner,
      resourceType: commerceQuoteAriStaticOpts.resourceType,
      resourceId: `${opts.quoteId}`,
      resourceIdSegmentValues: {
        quoteId: opts.quoteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceQuoteAriStaticOpts);
    return new _CommerceQuoteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceQuoteAriStaticOpts);
    return new _CommerceQuoteAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId,
      quoteId: this.quoteId
    };
  }
};

// src/commerce/role/types.ts
var CommerceRoleAriResourceOwner = "commerce", CommerceRoleAriResourceType = "role";

// src/commerce/role/manifest.ts
var commerceRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceRoleAriResourceOwner,
  resourceType: CommerceRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/role/index.ts
var CommerceRoleAri = class _CommerceRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceRoleAriStaticOpts.qualifier,
      platformQualifier: commerceRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceRoleAriStaticOpts.resourceOwner,
      resourceType: commerceRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceRoleAriStaticOpts);
    return new _CommerceRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceRoleAriStaticOpts);
    return new _CommerceRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/commerce/ship-to-party/types.ts
var CommerceShipToPartyAriResourceOwner = "commerce", CommerceShipToPartyAriResourceType = "ship-to-party";

// src/commerce/ship-to-party/manifest.ts
var commerceShipToPartyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9\\-]+$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceShipToPartyAriResourceOwner,
  resourceType: CommerceShipToPartyAriResourceType,
  resourceIdSlug: "{shipToPartyId}",
  resourceIdSegmentFormats: {
    shipToPartyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/ship-to-party/index.ts
var CommerceShipToPartyAri = class _CommerceShipToPartyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.cloudId || "", this._shipToPartyId = opts.resourceIdSegmentValues.shipToPartyId;
  }
  get txaId() {
    return this._txaId;
  }
  get shipToPartyId() {
    return this._shipToPartyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceShipToPartyAriStaticOpts.qualifier,
      platformQualifier: commerceShipToPartyAriStaticOpts.platformQualifier,
      cloudId: opts.txaId,
      resourceOwner: commerceShipToPartyAriStaticOpts.resourceOwner,
      resourceType: commerceShipToPartyAriStaticOpts.resourceType,
      resourceId: `${opts.shipToPartyId}`,
      resourceIdSegmentValues: {
        shipToPartyId: opts.shipToPartyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceShipToPartyAriStaticOpts);
    return new _CommerceShipToPartyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceShipToPartyAriStaticOpts);
    return new _CommerceShipToPartyAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId,
      shipToPartyId: this.shipToPartyId
    };
  }
};

// src/commerce/transaction-account/types.ts
var CommerceTransactionAccountAriResourceOwner = "commerce", CommerceTransactionAccountAriResourceType = "transaction-account";

// src/commerce/transaction-account/manifest.ts
var commerceTransactionAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceTransactionAccountAriResourceOwner,
  resourceType: CommerceTransactionAccountAriResourceType,
  resourceIdSlug: "{txaId}",
  resourceIdSegmentFormats: {
    txaId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/transaction-account/index.ts
var CommerceTransactionAccountAri = class _CommerceTransactionAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._txaId = opts.resourceIdSegmentValues.txaId;
  }
  get txaId() {
    return this._txaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceTransactionAccountAriStaticOpts.qualifier,
      platformQualifier: commerceTransactionAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceTransactionAccountAriStaticOpts.resourceOwner,
      resourceType: commerceTransactionAccountAriStaticOpts.resourceType,
      resourceId: `${opts.txaId}`,
      resourceIdSegmentValues: {
        txaId: opts.txaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceTransactionAccountAriStaticOpts);
    return new _CommerceTransactionAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceTransactionAccountAriStaticOpts);
    return new _CommerceTransactionAccountAri(opts);
  }
  getVariables() {
    return {
      txaId: this.txaId
    };
  }
};

// src/commerce/workbench-resource/types.ts
var CommerceWorkbenchResourceAriResourceOwner = "commerce", CommerceWorkbenchResourceAriResourceType = "workbench-resource";

// src/commerce/workbench-resource/manifest.ts
var commerceWorkbenchResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CommerceWorkbenchResourceAriResourceOwner,
  resourceType: CommerceWorkbenchResourceAriResourceType,
  resourceIdSlug: "{resourceName}",
  resourceIdSegmentFormats: {
    resourceName: /(database)/
    // eslint-disable-line no-useless-escape
  }
};

// src/commerce/workbench-resource/index.ts
var CommerceWorkbenchResourceAri = class _CommerceWorkbenchResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceName = opts.resourceIdSegmentValues.resourceName;
  }
  get resourceName() {
    return this._resourceName;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: commerceWorkbenchResourceAriStaticOpts.qualifier,
      platformQualifier: commerceWorkbenchResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: commerceWorkbenchResourceAriStaticOpts.resourceOwner,
      resourceType: commerceWorkbenchResourceAriStaticOpts.resourceType,
      resourceId: `${opts.resourceName}`,
      resourceIdSegmentValues: {
        resourceName: opts.resourceName
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceWorkbenchResourceAriStaticOpts);
    return new _CommerceWorkbenchResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, commerceWorkbenchResourceAriStaticOpts);
    return new _CommerceWorkbenchResourceAri(opts);
  }
  getVariables() {
    return {
      resourceName: this.resourceName
    };
  }
};

// src/compass/api-endpoint/types.ts
var CompassApiEndpointAriResourceOwner = "compass", CompassApiEndpointAriResourceType = "api-endpoint";

// src/compass/api-endpoint/manifest.ts
var compassApiEndpointAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassApiEndpointAriResourceOwner,
  resourceType: CompassApiEndpointAriResourceType,
  resourceIdSlug: "{workspaceId}/{endpointId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    endpointId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/api-endpoint/index.ts
var CompassApiEndpointAri = class _CompassApiEndpointAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._endpointId = opts.resourceIdSegmentValues.endpointId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get endpointId() {
    return this._endpointId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassApiEndpointAriStaticOpts.qualifier,
      platformQualifier: compassApiEndpointAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassApiEndpointAriStaticOpts.resourceOwner,
      resourceType: compassApiEndpointAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.endpointId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        endpointId: opts.endpointId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassApiEndpointAriStaticOpts);
    return new _CompassApiEndpointAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassApiEndpointAriStaticOpts);
    return new _CompassApiEndpointAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      endpointId: this.endpointId
    };
  }
};

// src/compass/assistant-answer/types.ts
var CompassAssistantAnswerAriResourceOwner = "compass", CompassAssistantAnswerAriResourceType = "assistant-answer";

// src/compass/assistant-answer/manifest.ts
var compassAssistantAnswerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassAssistantAnswerAriResourceOwner,
  resourceType: CompassAssistantAnswerAriResourceType,
  resourceIdSlug: "{workspaceId}/{answerId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    answerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/assistant-answer/index.ts
var CompassAssistantAnswerAri = class _CompassAssistantAnswerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._answerId = opts.resourceIdSegmentValues.answerId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get answerId() {
    return this._answerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassAssistantAnswerAriStaticOpts.qualifier,
      platformQualifier: compassAssistantAnswerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassAssistantAnswerAriStaticOpts.resourceOwner,
      resourceType: compassAssistantAnswerAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.answerId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        answerId: opts.answerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassAssistantAnswerAriStaticOpts);
    return new _CompassAssistantAnswerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassAssistantAnswerAriStaticOpts);
    return new _CompassAssistantAnswerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      answerId: this.answerId
    };
  }
};

// src/compass/campaign/types.ts
var CompassCampaignAriResourceOwner = "compass", CompassCampaignAriResourceType = "campaign";

// src/compass/campaign/manifest.ts
var compassCampaignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassCampaignAriResourceOwner,
  resourceType: CompassCampaignAriResourceType,
  resourceIdSlug: "{workspaceId}/{campaignId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    campaignId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/campaign/index.ts
var CompassCampaignAri = class _CompassCampaignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._campaignId = opts.resourceIdSegmentValues.campaignId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get campaignId() {
    return this._campaignId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassCampaignAriStaticOpts.qualifier,
      platformQualifier: compassCampaignAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassCampaignAriStaticOpts.resourceOwner,
      resourceType: compassCampaignAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.campaignId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        campaignId: opts.campaignId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassCampaignAriStaticOpts);
    return new _CompassCampaignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassCampaignAriStaticOpts);
    return new _CompassCampaignAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      campaignId: this.campaignId
    };
  }
};

// src/compass/component/types.ts
var CompassComponentAriResourceOwner = "compass", CompassComponentAriResourceType = "component";

// src/compass/component/manifest.ts
var compassComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassComponentAriResourceOwner,
  resourceType: CompassComponentAriResourceType,
  resourceIdSlug: "{workspaceId}/{componentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component/index.ts
var CompassComponentAri = class _CompassComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get componentId() {
    return this._componentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentAriStaticOpts.qualifier,
      platformQualifier: compassComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentAriStaticOpts.resourceOwner,
      resourceType: compassComponentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.componentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        componentId: opts.componentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentAriStaticOpts);
    return new _CompassComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentAriStaticOpts);
    return new _CompassComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      componentId: this.componentId
    };
  }
};

// src/compass/component-label/types.ts
var CompassComponentLabelAriResourceOwner = "compass", CompassComponentLabelAriResourceType = "component-label";

// src/compass/component-label/manifest.ts
var compassComponentLabelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassComponentLabelAriResourceOwner,
  resourceType: CompassComponentLabelAriResourceType,
  resourceIdSlug: "{workspaceId}/{labelId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    labelId: /[0-9a-f\-]{36,64}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-label/index.ts
var CompassComponentLabelAri = class _CompassComponentLabelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._labelId = opts.resourceIdSegmentValues.labelId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get labelId() {
    return this._labelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentLabelAriStaticOpts.qualifier,
      platformQualifier: compassComponentLabelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentLabelAriStaticOpts.resourceOwner,
      resourceType: compassComponentLabelAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.labelId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        labelId: opts.labelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLabelAriStaticOpts);
    return new _CompassComponentLabelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentLabelAriStaticOpts);
    return new _CompassComponentLabelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      labelId: this.labelId
    };
  }
};

// src/compass/component-link/types.ts
var CompassComponentLinkAriResourceOwner = "compass", CompassComponentLinkAriResourceType = "component-link";

// src/compass/component-link/manifest.ts
var compassComponentLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassComponentLinkAriResourceOwner,
  resourceType: CompassComponentLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{componentId}/{componentLinkId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    componentLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-link/index.ts
var CompassComponentLinkAri = class _CompassComponentLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId, this._componentLinkId = opts.resourceIdSegmentValues.componentLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get componentId() {
    return this._componentId;
  }
  get componentLinkId() {
    return this._componentLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentLinkAriStaticOpts.qualifier,
      platformQualifier: compassComponentLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentLinkAriStaticOpts.resourceOwner,
      resourceType: compassComponentLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.componentId}/${opts.componentLinkId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        componentId: opts.componentId,
        componentLinkId: opts.componentLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLinkAriStaticOpts);
    return new _CompassComponentLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentLinkAriStaticOpts);
    return new _CompassComponentLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      componentId: this.componentId,
      componentLinkId: this.componentLinkId
    };
  }
};

// src/compass/component-type/types.ts
var CompassComponentTypeAriResourceOwner = "compass", CompassComponentTypeAriResourceType = "component-type";

// src/compass/component-type/manifest.ts
var compassComponentTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassComponentTypeAriResourceOwner,
  resourceType: CompassComponentTypeAriResourceType,
  resourceIdSlug: "{workspaceId}/{typeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    typeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-type/index.ts
var CompassComponentTypeAri = class _CompassComponentTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._typeId = opts.resourceIdSegmentValues.typeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get typeId() {
    return this._typeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentTypeAriStaticOpts.qualifier,
      platformQualifier: compassComponentTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentTypeAriStaticOpts.resourceOwner,
      resourceType: compassComponentTypeAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.typeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        typeId: opts.typeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentTypeAriStaticOpts);
    return new _CompassComponentTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentTypeAriStaticOpts);
    return new _CompassComponentTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      typeId: this.typeId
    };
  }
};

// src/compass/custom-field-definition/types.ts
var CompassCustomFieldDefinitionAriResourceOwner = "compass", CompassCustomFieldDefinitionAriResourceType = "custom-field-definition";

// src/compass/custom-field-definition/manifest.ts
var compassCustomFieldDefinitionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassCustomFieldDefinitionAriResourceOwner,
  resourceType: CompassCustomFieldDefinitionAriResourceType,
  resourceIdSlug: "{workspaceId}/{definitionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    definitionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/custom-field-definition/index.ts
var CompassCustomFieldDefinitionAri = class _CompassCustomFieldDefinitionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._definitionId = opts.resourceIdSegmentValues.definitionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get definitionId() {
    return this._definitionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassCustomFieldDefinitionAriStaticOpts.qualifier,
      platformQualifier: compassCustomFieldDefinitionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassCustomFieldDefinitionAriStaticOpts.resourceOwner,
      resourceType: compassCustomFieldDefinitionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.definitionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        definitionId: opts.definitionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassCustomFieldDefinitionAriStaticOpts);
    return new _CompassCustomFieldDefinitionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassCustomFieldDefinitionAriStaticOpts);
    return new _CompassCustomFieldDefinitionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      definitionId: this.definitionId
    };
  }
};

// src/compass/document/types.ts
var CompassDocumentAriResourceOwner = "compass", CompassDocumentAriResourceType = "document";

// src/compass/document/manifest.ts
var compassDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassDocumentAriResourceOwner,
  resourceType: CompassDocumentAriResourceType,
  resourceIdSlug: "{workspaceId}/{documentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/document/index.ts
var CompassDocumentAri = class _CompassDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassDocumentAriStaticOpts.qualifier,
      platformQualifier: compassDocumentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassDocumentAriStaticOpts.resourceOwner,
      resourceType: compassDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.documentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentAriStaticOpts);
    return new _CompassDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassDocumentAriStaticOpts);
    return new _CompassDocumentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      documentId: this.documentId
    };
  }
};

// src/compass/documentation-category/types.ts
var CompassDocumentationCategoryAriResourceOwner = "compass", CompassDocumentationCategoryAriResourceType = "documentation-category";

// src/compass/documentation-category/manifest.ts
var compassDocumentationCategoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassDocumentationCategoryAriResourceOwner,
  resourceType: CompassDocumentationCategoryAriResourceType,
  resourceIdSlug: "{workspaceId}/{documentationCategoryId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    documentationCategoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/documentation-category/index.ts
var CompassDocumentationCategoryAri = class _CompassDocumentationCategoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentationCategoryId = opts.resourceIdSegmentValues.documentationCategoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get documentationCategoryId() {
    return this._documentationCategoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassDocumentationCategoryAriStaticOpts.qualifier,
      platformQualifier: compassDocumentationCategoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassDocumentationCategoryAriStaticOpts.resourceOwner,
      resourceType: compassDocumentationCategoryAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.documentationCategoryId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        documentationCategoryId: opts.documentationCategoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentationCategoryAriStaticOpts);
    return new _CompassDocumentationCategoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassDocumentationCategoryAriStaticOpts);
    return new _CompassDocumentationCategoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      documentationCategoryId: this.documentationCategoryId
    };
  }
};

// src/compass/event-source/types.ts
var CompassEventSourceAriResourceOwner = "compass", CompassEventSourceAriResourceType = "event-source";

// src/compass/event-source/manifest.ts
var compassEventSourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassEventSourceAriResourceOwner,
  resourceType: CompassEventSourceAriResourceType,
  resourceIdSlug: "{workspaceId}/{eventSourceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    eventSourceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/event-source/index.ts
var CompassEventSourceAri = class _CompassEventSourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventSourceId = opts.resourceIdSegmentValues.eventSourceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get eventSourceId() {
    return this._eventSourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassEventSourceAriStaticOpts.qualifier,
      platformQualifier: compassEventSourceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassEventSourceAriStaticOpts.resourceOwner,
      resourceType: compassEventSourceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.eventSourceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        eventSourceId: opts.eventSourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassEventSourceAriStaticOpts);
    return new _CompassEventSourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassEventSourceAriStaticOpts);
    return new _CompassEventSourceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      eventSourceId: this.eventSourceId
    };
  }
};

// src/compass/incoming-webhook/types.ts
var CompassIncomingWebhookAriResourceOwner = "compass", CompassIncomingWebhookAriResourceType = "incoming-webhook";

// src/compass/incoming-webhook/manifest.ts
var compassIncomingWebhookAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassIncomingWebhookAriResourceOwner,
  resourceType: CompassIncomingWebhookAriResourceType,
  resourceIdSlug: "{workspaceId}/{incomingWebhookId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    incomingWebhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/incoming-webhook/index.ts
var CompassIncomingWebhookAri = class _CompassIncomingWebhookAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingWebhookId = opts.resourceIdSegmentValues.incomingWebhookId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incomingWebhookId() {
    return this._incomingWebhookId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassIncomingWebhookAriStaticOpts.qualifier,
      platformQualifier: compassIncomingWebhookAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassIncomingWebhookAriStaticOpts.resourceOwner,
      resourceType: compassIncomingWebhookAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incomingWebhookId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incomingWebhookId: opts.incomingWebhookId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassIncomingWebhookAriStaticOpts);
    return new _CompassIncomingWebhookAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassIncomingWebhookAriStaticOpts);
    return new _CompassIncomingWebhookAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      incomingWebhookId: this.incomingWebhookId
    };
  }
};

// src/compass/library-scorecard/types.ts
var CompassLibraryScorecardAriResourceOwner = "compass", CompassLibraryScorecardAriResourceType = "library-scorecard";

// src/compass/library-scorecard/manifest.ts
var compassLibraryScorecardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassLibraryScorecardAriResourceOwner,
  resourceType: CompassLibraryScorecardAriResourceType,
  resourceIdSlug: "{workspaceId}/{libraryScorecardId}",
  resourceIdSegmentFormats: {
    workspaceId: /(?:builtin|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/,
    // eslint-disable-line no-useless-escape
    libraryScorecardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/library-scorecard/index.ts
var CompassLibraryScorecardAri = class _CompassLibraryScorecardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._libraryScorecardId = opts.resourceIdSegmentValues.libraryScorecardId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get libraryScorecardId() {
    return this._libraryScorecardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassLibraryScorecardAriStaticOpts.qualifier,
      platformQualifier: compassLibraryScorecardAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: compassLibraryScorecardAriStaticOpts.resourceOwner,
      resourceType: compassLibraryScorecardAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.libraryScorecardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        libraryScorecardId: opts.libraryScorecardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassLibraryScorecardAriStaticOpts);
    return new _CompassLibraryScorecardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassLibraryScorecardAriStaticOpts);
    return new _CompassLibraryScorecardAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      workspaceId: this.workspaceId,
      libraryScorecardId: this.libraryScorecardId
    };
  }
};

// src/compass/metric-definition/types.ts
var CompassMetricDefinitionAriResourceOwner = "compass", CompassMetricDefinitionAriResourceType = "metric-definition";

// src/compass/metric-definition/manifest.ts
var compassMetricDefinitionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassMetricDefinitionAriResourceOwner,
  resourceType: CompassMetricDefinitionAriResourceType,
  resourceIdSlug: "{containerId}/{definitionId}",
  resourceIdSegmentFormats: {
    containerId: /(?:builtin|forge|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/,
    // eslint-disable-line no-useless-escape
    definitionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/metric-definition/index.ts
var CompassMetricDefinitionAri = class _CompassMetricDefinitionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._containerId = opts.resourceIdSegmentValues.containerId, this._definitionId = opts.resourceIdSegmentValues.definitionId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get containerId() {
    return this._containerId;
  }
  get definitionId() {
    return this._definitionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassMetricDefinitionAriStaticOpts.qualifier,
      platformQualifier: compassMetricDefinitionAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: compassMetricDefinitionAriStaticOpts.resourceOwner,
      resourceType: compassMetricDefinitionAriStaticOpts.resourceType,
      resourceId: `${opts.containerId}/${opts.definitionId}`,
      resourceIdSegmentValues: {
        containerId: opts.containerId,
        definitionId: opts.definitionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricDefinitionAriStaticOpts);
    return new _CompassMetricDefinitionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassMetricDefinitionAriStaticOpts);
    return new _CompassMetricDefinitionAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      containerId: this.containerId,
      definitionId: this.definitionId
    };
  }
};

// src/compass/metric-source/types.ts
var CompassMetricSourceAriResourceOwner = "compass", CompassMetricSourceAriResourceType = "metric-source";

// src/compass/metric-source/manifest.ts
var compassMetricSourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassMetricSourceAriResourceOwner,
  resourceType: CompassMetricSourceAriResourceType,
  resourceIdSlug: "{workspaceId}/{metricSourceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    metricSourceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/metric-source/index.ts
var CompassMetricSourceAri = class _CompassMetricSourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._metricSourceId = opts.resourceIdSegmentValues.metricSourceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get metricSourceId() {
    return this._metricSourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassMetricSourceAriStaticOpts.qualifier,
      platformQualifier: compassMetricSourceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassMetricSourceAriStaticOpts.resourceOwner,
      resourceType: compassMetricSourceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.metricSourceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        metricSourceId: opts.metricSourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricSourceAriStaticOpts);
    return new _CompassMetricSourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassMetricSourceAriStaticOpts);
    return new _CompassMetricSourceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      metricSourceId: this.metricSourceId
    };
  }
};

// src/compass/package/types.ts
var CompassPackageAriResourceOwner = "compass", CompassPackageAriResourceType = "package";

// src/compass/package/manifest.ts
var compassPackageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassPackageAriResourceOwner,
  resourceType: CompassPackageAriResourceType,
  resourceIdSlug: "{workspaceId}/{packageId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    packageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/package/index.ts
var CompassPackageAri = class _CompassPackageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._packageId = opts.resourceIdSegmentValues.packageId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get packageId() {
    return this._packageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassPackageAriStaticOpts.qualifier,
      platformQualifier: compassPackageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassPackageAriStaticOpts.resourceOwner,
      resourceType: compassPackageAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.packageId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        packageId: opts.packageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassPackageAriStaticOpts);
    return new _CompassPackageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassPackageAriStaticOpts);
    return new _CompassPackageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      packageId: this.packageId
    };
  }
};

// src/compass/role/types.ts
var CompassRoleAriResourceOwner = "compass", CompassRoleAriResourceType = "role";

// src/compass/role/manifest.ts
var compassRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassRoleAriResourceOwner,
  resourceType: CompassRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:basic|member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/role/index.ts
var CompassRoleAri = class _CompassRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassRoleAriStaticOpts.qualifier,
      platformQualifier: compassRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: compassRoleAriStaticOpts.resourceOwner,
      resourceType: compassRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassRoleAriStaticOpts);
    return new _CompassRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassRoleAriStaticOpts);
    return new _CompassRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/compass/scorecard/types.ts
var CompassScorecardAriResourceOwner = "compass", CompassScorecardAriResourceType = "scorecard";

// src/compass/scorecard/manifest.ts
var compassScorecardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassScorecardAriResourceOwner,
  resourceType: CompassScorecardAriResourceType,
  resourceIdSlug: "{workspaceId}/{scorecardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    scorecardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/scorecard/index.ts
var CompassScorecardAri = class _CompassScorecardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scorecardId = opts.resourceIdSegmentValues.scorecardId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scorecardId() {
    return this._scorecardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassScorecardAriStaticOpts.qualifier,
      platformQualifier: compassScorecardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassScorecardAriStaticOpts.resourceOwner,
      resourceType: compassScorecardAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scorecardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scorecardId: opts.scorecardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassScorecardAriStaticOpts);
    return new _CompassScorecardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassScorecardAriStaticOpts);
    return new _CompassScorecardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      scorecardId: this.scorecardId
    };
  }
};

// src/compass/site/types.ts
var CompassSiteAriResourceOwner = "compass", CompassSiteAriResourceType = "site";

// src/compass/site/manifest.ts
var compassSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassSiteAriResourceOwner,
  resourceType: CompassSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/site/index.ts
var CompassSiteAri = class _CompassSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassSiteAriStaticOpts.qualifier,
      platformQualifier: compassSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: compassSiteAriStaticOpts.resourceOwner,
      resourceType: compassSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassSiteAriStaticOpts);
    return new _CompassSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassSiteAriStaticOpts);
    return new _CompassSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/compass/user-defined-parameter/types.ts
var CompassUserDefinedParameterAriResourceOwner = "compass", CompassUserDefinedParameterAriResourceType = "user-defined-parameter";

// src/compass/user-defined-parameter/manifest.ts
var compassUserDefinedParameterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassUserDefinedParameterAriResourceOwner,
  resourceType: CompassUserDefinedParameterAriResourceType,
  resourceIdSlug: "{workspaceId}/{userDefinedParameterId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userDefinedParameterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/user-defined-parameter/index.ts
var CompassUserDefinedParameterAri = class _CompassUserDefinedParameterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._userDefinedParameterId = opts.resourceIdSegmentValues.userDefinedParameterId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get userDefinedParameterId() {
    return this._userDefinedParameterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassUserDefinedParameterAriStaticOpts.qualifier,
      platformQualifier: compassUserDefinedParameterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassUserDefinedParameterAriStaticOpts.resourceOwner,
      resourceType: compassUserDefinedParameterAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.userDefinedParameterId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        userDefinedParameterId: opts.userDefinedParameterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassUserDefinedParameterAriStaticOpts);
    return new _CompassUserDefinedParameterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      userDefinedParameterId: this.userDefinedParameterId
    };
  }
};

// src/compass/webhook/types.ts
var CompassWebhookAriResourceOwner = "compass", CompassWebhookAriResourceType = "webhook";

// src/compass/webhook/manifest.ts
var compassWebhookAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassWebhookAriResourceOwner,
  resourceType: CompassWebhookAriResourceType,
  resourceIdSlug: "{workspaceId}/{webhookId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    webhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/webhook/index.ts
var CompassWebhookAri = class _CompassWebhookAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._webhookId = opts.resourceIdSegmentValues.webhookId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get webhookId() {
    return this._webhookId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassWebhookAriStaticOpts.qualifier,
      platformQualifier: compassWebhookAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassWebhookAriStaticOpts.resourceOwner,
      resourceType: compassWebhookAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.webhookId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        webhookId: opts.webhookId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWebhookAriStaticOpts);
    return new _CompassWebhookAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassWebhookAriStaticOpts);
    return new _CompassWebhookAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      webhookId: this.webhookId
    };
  }
};

// src/compass/workspace/types.ts
var CompassWorkspaceAriResourceOwner = "compass", CompassWorkspaceAriResourceType = "workspace";

// src/compass/workspace/manifest.ts
var compassWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassWorkspaceAriResourceOwner,
  resourceType: CompassWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/workspace/index.ts
var CompassWorkspaceAri = class _CompassWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassWorkspaceAriStaticOpts.qualifier,
      platformQualifier: compassWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassWorkspaceAriStaticOpts.resourceOwner,
      resourceType: compassWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWorkspaceAriStaticOpts);
    return new _CompassWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassWorkspaceAriStaticOpts);
    return new _CompassWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

// src/confluence/admin-announcement-banner/types.ts
var ConfluenceAdminAnnouncementBannerAriResourceOwner = "confluence", ConfluenceAdminAnnouncementBannerAriResourceType = "admin-announcement-banner";

// src/confluence/admin-announcement-banner/manifest.ts
var confluenceAdminAnnouncementBannerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceAdminAnnouncementBannerAriResourceOwner,
  resourceType: ConfluenceAdminAnnouncementBannerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{bannerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    bannerId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/admin-announcement-banner/index.ts
var ConfluenceAdminAnnouncementBannerAri = class _ConfluenceAdminAnnouncementBannerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._bannerId = opts.resourceIdSegmentValues.bannerId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get bannerId() {
    return this._bannerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceAdminAnnouncementBannerAriStaticOpts.qualifier,
      platformQualifier: confluenceAdminAnnouncementBannerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceAdminAnnouncementBannerAriStaticOpts.resourceOwner,
      resourceType: confluenceAdminAnnouncementBannerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.bannerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        bannerId: opts.bannerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceAdminAnnouncementBannerAriStaticOpts);
    return new _ConfluenceAdminAnnouncementBannerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceAdminAnnouncementBannerAriStaticOpts);
    return new _ConfluenceAdminAnnouncementBannerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      bannerId: this.bannerId
    };
  }
};

// src/confluence/attachment/types.ts
var ConfluenceAttachmentAriResourceOwner = "confluence", ConfluenceAttachmentAriResourceType = "attachment";

// src/confluence/attachment/manifest.ts
var confluenceAttachmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceAttachmentAriResourceOwner,
  resourceType: ConfluenceAttachmentAriResourceType,
  resourceIdSlug: "{attachmentId}",
  resourceIdSegmentFormats: {
    attachmentId: /(att)?[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/attachment/index.ts
var ConfluenceAttachmentAri = class _ConfluenceAttachmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._attachmentId = opts.resourceIdSegmentValues.attachmentId;
  }
  get siteId() {
    return this._siteId;
  }
  get attachmentId() {
    return this._attachmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceAttachmentAriStaticOpts.qualifier,
      platformQualifier: confluenceAttachmentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceAttachmentAriStaticOpts.resourceOwner,
      resourceType: confluenceAttachmentAriStaticOpts.resourceType,
      resourceId: `${opts.attachmentId}`,
      resourceIdSegmentValues: {
        attachmentId: opts.attachmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceAttachmentAriStaticOpts);
    return new _ConfluenceAttachmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceAttachmentAriStaticOpts);
    return new _ConfluenceAttachmentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      attachmentId: this.attachmentId
    };
  }
};

// src/confluence/blogpost/types.ts
var ConfluenceBlogpostAriResourceOwner = "confluence", ConfluenceBlogpostAriResourceType = "blogpost";

// src/confluence/blogpost/manifest.ts
var confluenceBlogpostAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceBlogpostAriResourceOwner,
  resourceType: ConfluenceBlogpostAriResourceType,
  resourceIdSlug: "{blogpostId}",
  resourceIdSegmentFormats: {
    blogpostId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/blogpost/index.ts
var ConfluenceBlogpostAri = class _ConfluenceBlogpostAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._blogpostId = opts.resourceIdSegmentValues.blogpostId;
  }
  get siteId() {
    return this._siteId;
  }
  get blogpostId() {
    return this._blogpostId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceBlogpostAriStaticOpts.qualifier,
      platformQualifier: confluenceBlogpostAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceBlogpostAriStaticOpts.resourceOwner,
      resourceType: confluenceBlogpostAriStaticOpts.resourceType,
      resourceId: `${opts.blogpostId}`,
      resourceIdSegmentValues: {
        blogpostId: opts.blogpostId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceBlogpostAriStaticOpts);
    return new _ConfluenceBlogpostAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceBlogpostAriStaticOpts);
    return new _ConfluenceBlogpostAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      blogpostId: this.blogpostId
    };
  }
};

// src/confluence/comment/types.ts
var ConfluenceCommentAriResourceOwner = "confluence", ConfluenceCommentAriResourceType = "comment";

// src/confluence/comment/manifest.ts
var confluenceCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceCommentAriResourceOwner,
  resourceType: ConfluenceCommentAriResourceType,
  resourceIdSlug: "{commentId}",
  resourceIdSegmentFormats: {
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/comment/index.ts
var ConfluenceCommentAri = class _ConfluenceCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceCommentAriStaticOpts.qualifier,
      platformQualifier: confluenceCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceCommentAriStaticOpts.resourceOwner,
      resourceType: confluenceCommentAriStaticOpts.resourceType,
      resourceId: `${opts.commentId}`,
      resourceIdSegmentValues: {
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceCommentAriStaticOpts);
    return new _ConfluenceCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceCommentAriStaticOpts);
    return new _ConfluenceCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/confluence/content/types.ts
var ConfluenceContentAriResourceOwner = "confluence", ConfluenceContentAriResourceType = "content";

// src/confluence/content/manifest.ts
var confluenceContentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceContentAriResourceOwner,
  resourceType: ConfluenceContentAriResourceType,
  resourceIdSlug: "{contentId}",
  resourceIdSegmentFormats: {
    contentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/content/index.ts
var ConfluenceContentAri = class _ConfluenceContentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._contentId = opts.resourceIdSegmentValues.contentId;
  }
  get siteId() {
    return this._siteId;
  }
  get contentId() {
    return this._contentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceContentAriStaticOpts.qualifier,
      platformQualifier: confluenceContentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceContentAriStaticOpts.resourceOwner,
      resourceType: confluenceContentAriStaticOpts.resourceType,
      resourceId: `${opts.contentId}`,
      resourceIdSegmentValues: {
        contentId: opts.contentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceContentAriStaticOpts);
    return new _ConfluenceContentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceContentAriStaticOpts);
    return new _ConfluenceContentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      contentId: this.contentId
    };
  }
};

// src/confluence/custom-content/types.ts
var ConfluenceCustomContentAriResourceOwner = "confluence", ConfluenceCustomContentAriResourceType = "custom-content";

// src/confluence/custom-content/manifest.ts
var confluenceCustomContentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceCustomContentAriResourceOwner,
  resourceType: ConfluenceCustomContentAriResourceType,
  resourceIdSlug: "{customContentType}/activation/{activationId}/{customContentId}",
  resourceIdSegmentFormats: {
    customContentType: /[a-zA-Z0-9\-:]+/,
    // eslint-disable-line no-useless-escape
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    customContentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/custom-content/index.ts
var ConfluenceCustomContentAri = class _ConfluenceCustomContentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._customContentType = opts.resourceIdSegmentValues.customContentType, this._activationId = opts.resourceIdSegmentValues.activationId, this._customContentId = opts.resourceIdSegmentValues.customContentId;
  }
  get siteId() {
    return this._siteId;
  }
  get customContentType() {
    return this._customContentType;
  }
  get activationId() {
    return this._activationId;
  }
  get customContentId() {
    return this._customContentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceCustomContentAriStaticOpts.qualifier,
      platformQualifier: confluenceCustomContentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceCustomContentAriStaticOpts.resourceOwner,
      resourceType: confluenceCustomContentAriStaticOpts.resourceType,
      resourceId: `${opts.customContentType}/activation/${opts.activationId}/${opts.customContentId}`,
      resourceIdSegmentValues: {
        customContentType: opts.customContentType,
        activationId: opts.activationId,
        customContentId: opts.customContentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceCustomContentAriStaticOpts);
    return new _ConfluenceCustomContentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceCustomContentAriStaticOpts);
    return new _ConfluenceCustomContentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      customContentType: this.customContentType,
      activationId: this.activationId,
      customContentId: this.customContentId
    };
  }
};

// src/confluence/database/types.ts
var ConfluenceDatabaseAriResourceOwner = "confluence", ConfluenceDatabaseAriResourceType = "database";

// src/confluence/database/manifest.ts
var confluenceDatabaseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceDatabaseAriResourceOwner,
  resourceType: ConfluenceDatabaseAriResourceType,
  resourceIdSlug: "activation/{activationId}/{databaseId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    databaseId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/database/index.ts
var ConfluenceDatabaseAri = class _ConfluenceDatabaseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._databaseId = opts.resourceIdSegmentValues.databaseId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get databaseId() {
    return this._databaseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceDatabaseAriStaticOpts.qualifier,
      platformQualifier: confluenceDatabaseAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceDatabaseAriStaticOpts.resourceOwner,
      resourceType: confluenceDatabaseAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.databaseId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        databaseId: opts.databaseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceDatabaseAriStaticOpts);
    return new _ConfluenceDatabaseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceDatabaseAriStaticOpts);
    return new _ConfluenceDatabaseAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      databaseId: this.databaseId
    };
  }
};

// src/confluence/embed/types.ts
var ConfluenceEmbedAriResourceOwner = "confluence", ConfluenceEmbedAriResourceType = "embed";

// src/confluence/embed/manifest.ts
var confluenceEmbedAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceEmbedAriResourceOwner,
  resourceType: ConfluenceEmbedAriResourceType,
  resourceIdSlug: "activation/{activationId}/{embedId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    embedId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/embed/index.ts
var ConfluenceEmbedAri = class _ConfluenceEmbedAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._embedId = opts.resourceIdSegmentValues.embedId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get embedId() {
    return this._embedId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceEmbedAriStaticOpts.qualifier,
      platformQualifier: confluenceEmbedAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceEmbedAriStaticOpts.resourceOwner,
      resourceType: confluenceEmbedAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.embedId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        embedId: opts.embedId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceEmbedAriStaticOpts);
    return new _ConfluenceEmbedAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceEmbedAriStaticOpts);
    return new _ConfluenceEmbedAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      embedId: this.embedId
    };
  }
};

// src/confluence/event/types.ts
var ConfluenceEventAriResourceOwner = "confluence", ConfluenceEventAriResourceType = "event";

// src/confluence/event/manifest.ts
var confluenceEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceEventAriResourceOwner,
  resourceType: ConfluenceEventAriResourceType,
  resourceIdSlug: "{eventType}/activation/{activationId}/event/{eventId}",
  resourceIdSegmentFormats: {
    eventType: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/event/index.ts
var ConfluenceEventAri = class _ConfluenceEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._eventType = opts.resourceIdSegmentValues.eventType, this._activationId = opts.resourceIdSegmentValues.activationId, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get siteId() {
    return this._siteId;
  }
  get eventType() {
    return this._eventType;
  }
  get activationId() {
    return this._activationId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceEventAriStaticOpts.qualifier,
      platformQualifier: confluenceEventAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceEventAriStaticOpts.resourceOwner,
      resourceType: confluenceEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventType}/activation/${opts.activationId}/event/${opts.eventId}`,
      resourceIdSegmentValues: {
        eventType: opts.eventType,
        activationId: opts.activationId,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceEventAriStaticOpts);
    return new _ConfluenceEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceEventAriStaticOpts);
    return new _ConfluenceEventAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      eventType: this.eventType,
      activationId: this.activationId,
      eventId: this.eventId
    };
  }
};

// src/confluence/folder/types.ts
var ConfluenceFolderAriResourceOwner = "confluence", ConfluenceFolderAriResourceType = "folder";

// src/confluence/folder/manifest.ts
var confluenceFolderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceFolderAriResourceOwner,
  resourceType: ConfluenceFolderAriResourceType,
  resourceIdSlug: "activation/{activationId}/{folderId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    folderId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/folder/index.ts
var ConfluenceFolderAri = class _ConfluenceFolderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._folderId = opts.resourceIdSegmentValues.folderId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get folderId() {
    return this._folderId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceFolderAriStaticOpts.qualifier,
      platformQualifier: confluenceFolderAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceFolderAriStaticOpts.resourceOwner,
      resourceType: confluenceFolderAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.folderId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        folderId: opts.folderId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceFolderAriStaticOpts);
    return new _ConfluenceFolderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceFolderAriStaticOpts);
    return new _ConfluenceFolderAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      folderId: this.folderId
    };
  }
};

// src/confluence/label/types.ts
var ConfluenceLabelAriResourceOwner = "confluence", ConfluenceLabelAriResourceType = "label";

// src/confluence/label/manifest.ts
var confluenceLabelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceLabelAriResourceOwner,
  resourceType: ConfluenceLabelAriResourceType,
  resourceIdSlug: "activation/{activationId}/{labelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    labelId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/label/index.ts
var ConfluenceLabelAri = class _ConfluenceLabelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._labelId = opts.resourceIdSegmentValues.labelId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get labelId() {
    return this._labelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceLabelAriStaticOpts.qualifier,
      platformQualifier: confluenceLabelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceLabelAriStaticOpts.resourceOwner,
      resourceType: confluenceLabelAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.labelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        labelId: opts.labelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceLabelAriStaticOpts);
    return new _ConfluenceLabelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceLabelAriStaticOpts);
    return new _ConfluenceLabelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      labelId: this.labelId
    };
  }
};

// src/confluence/long-running-task/types.ts
var ConfluenceLongRunningTaskAriResourceOwner = "confluence", ConfluenceLongRunningTaskAriResourceType = "long-running-task";

// src/confluence/long-running-task/manifest.ts
var confluenceLongRunningTaskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceLongRunningTaskAriResourceOwner,
  resourceType: ConfluenceLongRunningTaskAriResourceType,
  resourceIdSlug: "activation/{activationId}/{taskId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    taskId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/long-running-task/index.ts
var ConfluenceLongRunningTaskAri = class _ConfluenceLongRunningTaskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceLongRunningTaskAriStaticOpts.qualifier,
      platformQualifier: confluenceLongRunningTaskAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceLongRunningTaskAriStaticOpts.resourceOwner,
      resourceType: confluenceLongRunningTaskAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.taskId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceLongRunningTaskAriStaticOpts);
    return new _ConfluenceLongRunningTaskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceLongRunningTaskAriStaticOpts);
    return new _ConfluenceLongRunningTaskAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      taskId: this.taskId
    };
  }
};

// src/confluence/note/types.ts
var ConfluenceNoteAriResourceOwner = "confluence", ConfluenceNoteAriResourceType = "note";

// src/confluence/note/manifest.ts
var confluenceNoteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceNoteAriResourceOwner,
  resourceType: ConfluenceNoteAriResourceType,
  resourceIdSlug: "activation/{activationId}/{noteId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    noteId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/note/index.ts
var ConfluenceNoteAri = class _ConfluenceNoteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._noteId = opts.resourceIdSegmentValues.noteId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get noteId() {
    return this._noteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceNoteAriStaticOpts.qualifier,
      platformQualifier: confluenceNoteAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceNoteAriStaticOpts.resourceOwner,
      resourceType: confluenceNoteAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.noteId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        noteId: opts.noteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceNoteAriStaticOpts);
    return new _ConfluenceNoteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceNoteAriStaticOpts);
    return new _ConfluenceNoteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      noteId: this.noteId
    };
  }
};

// src/confluence/page/types.ts
var ConfluencePageAriResourceOwner = "confluence", ConfluencePageAriResourceType = "page";

// src/confluence/page/manifest.ts
var confluencePageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluencePageAriResourceOwner,
  resourceType: ConfluencePageAriResourceType,
  resourceIdSlug: "{pageId}",
  resourceIdSegmentFormats: {
    pageId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/page/index.ts
var ConfluencePageAri = class _ConfluencePageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._pageId = opts.resourceIdSegmentValues.pageId;
  }
  get siteId() {
    return this._siteId;
  }
  get pageId() {
    return this._pageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluencePageAriStaticOpts.qualifier,
      platformQualifier: confluencePageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluencePageAriStaticOpts.resourceOwner,
      resourceType: confluencePageAriStaticOpts.resourceType,
      resourceId: `${opts.pageId}`,
      resourceIdSegmentValues: {
        pageId: opts.pageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluencePageAriStaticOpts);
    return new _ConfluencePageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluencePageAriStaticOpts);
    return new _ConfluencePageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      pageId: this.pageId
    };
  }
};

// src/confluence/public-link/types.ts
var ConfluencePublicLinkAriResourceOwner = "confluence", ConfluencePublicLinkAriResourceType = "public-link";

// src/confluence/public-link/manifest.ts
var confluencePublicLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluencePublicLinkAriResourceOwner,
  resourceType: ConfluencePublicLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{publicLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    publicLinkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/public-link/index.ts
var ConfluencePublicLinkAri = class _ConfluencePublicLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._publicLinkId = opts.resourceIdSegmentValues.publicLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get publicLinkId() {
    return this._publicLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluencePublicLinkAriStaticOpts.qualifier,
      platformQualifier: confluencePublicLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluencePublicLinkAriStaticOpts.resourceOwner,
      resourceType: confluencePublicLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.publicLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        publicLinkId: opts.publicLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluencePublicLinkAriStaticOpts);
    return new _ConfluencePublicLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluencePublicLinkAriStaticOpts);
    return new _ConfluencePublicLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      publicLinkId: this.publicLinkId
    };
  }
};

// src/confluence/role/types.ts
var ConfluenceRoleAriResourceOwner = "confluence", ConfluenceRoleAriResourceType = "role";

// src/confluence/role/manifest.ts
var confluenceRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceRoleAriResourceOwner,
  resourceType: ConfluenceRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/role/index.ts
var ConfluenceRoleAri = class _ConfluenceRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceRoleAriStaticOpts.qualifier,
      platformQualifier: confluenceRoleAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: confluenceRoleAriStaticOpts.resourceOwner,
      resourceType: confluenceRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceRoleAriStaticOpts);
    return new _ConfluenceRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceRoleAriStaticOpts);
    return new _ConfluenceRoleAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      roleId: this.roleId
    };
  }
};

// src/confluence/site/types.ts
var ConfluenceSiteAriResourceOwner = "confluence", ConfluenceSiteAriResourceType = "site";

// src/confluence/site/manifest.ts
var confluenceSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceSiteAriResourceOwner,
  resourceType: ConfluenceSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/site/index.ts
var ConfluenceSiteAri = class _ConfluenceSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceSiteAriStaticOpts.qualifier,
      platformQualifier: confluenceSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: confluenceSiteAriStaticOpts.resourceOwner,
      resourceType: confluenceSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceSiteAriStaticOpts);
    return new _ConfluenceSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceSiteAriStaticOpts);
    return new _ConfluenceSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/confluence/space/types.ts
var ConfluenceSpaceAriResourceOwner = "confluence", ConfluenceSpaceAriResourceType = "space";

// src/confluence/space/manifest.ts
var confluenceSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceSpaceAriResourceOwner,
  resourceType: ConfluenceSpaceAriResourceType,
  resourceIdSlug: "{spaceId}",
  resourceIdSegmentFormats: {
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/space/index.ts
var ConfluenceSpaceAri = class _ConfluenceSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceSpaceAriStaticOpts.qualifier,
      platformQualifier: confluenceSpaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceSpaceAriStaticOpts.resourceOwner,
      resourceType: confluenceSpaceAriStaticOpts.resourceType,
      resourceId: `${opts.spaceId}`,
      resourceIdSegmentValues: {
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceSpaceAriStaticOpts);
    return new _ConfluenceSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceSpaceAriStaticOpts);
    return new _ConfluenceSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      spaceId: this.spaceId
    };
  }
};

// src/confluence/task/types.ts
var ConfluenceTaskAriResourceOwner = "confluence", ConfluenceTaskAriResourceType = "task";

// src/confluence/task/manifest.ts
var confluenceTaskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceTaskAriResourceOwner,
  resourceType: ConfluenceTaskAriResourceType,
  resourceIdSlug: "{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/task/index.ts
var ConfluenceTaskAri = class _ConfluenceTaskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get siteId() {
    return this._siteId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceTaskAriStaticOpts.qualifier,
      platformQualifier: confluenceTaskAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceTaskAriStaticOpts.resourceOwner,
      resourceType: confluenceTaskAriStaticOpts.resourceType,
      resourceId: `${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceTaskAriStaticOpts);
    return new _ConfluenceTaskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceTaskAriStaticOpts);
    return new _ConfluenceTaskAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      taskId: this.taskId
    };
  }
};

// src/confluence/team-calendar/types.ts
var ConfluenceTeamCalendarAriResourceOwner = "confluence", ConfluenceTeamCalendarAriResourceType = "team-calendar";

// src/confluence/team-calendar/manifest.ts
var confluenceTeamCalendarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceTeamCalendarAriResourceOwner,
  resourceType: ConfluenceTeamCalendarAriResourceType,
  resourceIdSlug: "activation/{activationId}/{calendarId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    calendarId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/team-calendar/index.ts
var ConfluenceTeamCalendarAri = class _ConfluenceTeamCalendarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarId = opts.resourceIdSegmentValues.calendarId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get calendarId() {
    return this._calendarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceTeamCalendarAriStaticOpts.qualifier,
      platformQualifier: confluenceTeamCalendarAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceTeamCalendarAriStaticOpts.resourceOwner,
      resourceType: confluenceTeamCalendarAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.calendarId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        calendarId: opts.calendarId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceTeamCalendarAriStaticOpts);
    return new _ConfluenceTeamCalendarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceTeamCalendarAriStaticOpts);
    return new _ConfluenceTeamCalendarAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      calendarId: this.calendarId
    };
  }
};

// src/confluence/user-property/types.ts
var ConfluenceUserPropertyAriResourceOwner = "confluence", ConfluenceUserPropertyAriResourceType = "user-property";

// src/confluence/user-property/manifest.ts
var confluenceUserPropertyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceUserPropertyAriResourceOwner,
  resourceType: ConfluenceUserPropertyAriResourceType,
  resourceIdSlug: "{userPropertyId}",
  resourceIdSegmentFormats: {
    userPropertyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/user-property/index.ts
var ConfluenceUserPropertyAri = class _ConfluenceUserPropertyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._userPropertyId = opts.resourceIdSegmentValues.userPropertyId;
  }
  get siteId() {
    return this._siteId;
  }
  get userPropertyId() {
    return this._userPropertyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceUserPropertyAriStaticOpts.qualifier,
      platformQualifier: confluenceUserPropertyAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceUserPropertyAriStaticOpts.resourceOwner,
      resourceType: confluenceUserPropertyAriStaticOpts.resourceType,
      resourceId: `${opts.userPropertyId}`,
      resourceIdSegmentValues: {
        userPropertyId: opts.userPropertyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceUserPropertyAriStaticOpts);
    return new _ConfluenceUserPropertyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceUserPropertyAriStaticOpts);
    return new _ConfluenceUserPropertyAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      userPropertyId: this.userPropertyId
    };
  }
};

// src/confluence/whiteboard/types.ts
var ConfluenceWhiteboardAriResourceOwner = "confluence", ConfluenceWhiteboardAriResourceType = "whiteboard";

// src/confluence/whiteboard/manifest.ts
var confluenceWhiteboardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceWhiteboardAriResourceOwner,
  resourceType: ConfluenceWhiteboardAriResourceType,
  resourceIdSlug: "{whiteboardId}",
  resourceIdSegmentFormats: {
    whiteboardId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/whiteboard/index.ts
var ConfluenceWhiteboardAri = class _ConfluenceWhiteboardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._whiteboardId = opts.resourceIdSegmentValues.whiteboardId;
  }
  get siteId() {
    return this._siteId;
  }
  get whiteboardId() {
    return this._whiteboardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceWhiteboardAriStaticOpts.qualifier,
      platformQualifier: confluenceWhiteboardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceWhiteboardAriStaticOpts.resourceOwner,
      resourceType: confluenceWhiteboardAriStaticOpts.resourceType,
      resourceId: `${opts.whiteboardId}`,
      resourceIdSegmentValues: {
        whiteboardId: opts.whiteboardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWhiteboardAriStaticOpts);
    return new _ConfluenceWhiteboardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceWhiteboardAriStaticOpts);
    return new _ConfluenceWhiteboardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      whiteboardId: this.whiteboardId
    };
  }
};

// src/confluence/workflow/types.ts
var ConfluenceWorkflowAriResourceOwner = "confluence", ConfluenceWorkflowAriResourceType = "workflow";

// src/confluence/workflow/manifest.ts
var confluenceWorkflowAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceWorkflowAriResourceOwner,
  resourceType: ConfluenceWorkflowAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workflowId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workflowId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/workflow/index.ts
var ConfluenceWorkflowAri = class _ConfluenceWorkflowAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowId = opts.resourceIdSegmentValues.workflowId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get workflowId() {
    return this._workflowId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceWorkflowAriStaticOpts.qualifier,
      platformQualifier: confluenceWorkflowAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceWorkflowAriStaticOpts.resourceOwner,
      resourceType: confluenceWorkflowAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workflowId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workflowId: opts.workflowId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWorkflowAriStaticOpts);
    return new _ConfluenceWorkflowAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceWorkflowAriStaticOpts);
    return new _ConfluenceWorkflowAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      workflowId: this.workflowId
    };
  }
};

// src/confluence/workspace/types.ts
var ConfluenceWorkspaceAriResourceOwner = "confluence", ConfluenceWorkspaceAriResourceType = "workspace";

// src/confluence/workspace/manifest.ts
var confluenceWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceWorkspaceAriResourceOwner,
  resourceType: ConfluenceWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence/workspace/index.ts
var ConfluenceWorkspaceAri = class _ConfluenceWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceWorkspaceAriStaticOpts.qualifier,
      platformQualifier: confluenceWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: confluenceWorkspaceAriStaticOpts.resourceOwner,
      resourceType: confluenceWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWorkspaceAriStaticOpts);
    return new _ConfluenceWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceWorkspaceAriStaticOpts);
    return new _ConfluenceWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/confluence-dc.confluence-dc/comment/types.ts
var ConfluenceDcConfluenceDcCommentAriResourceOwner = "confluence-dc.confluence-dc", ConfluenceDcConfluenceDcCommentAriResourceType = "comment";

// src/confluence-dc.confluence-dc/comment/manifest.ts
var confluenceDcConfluenceDcCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceDcConfluenceDcCommentAriResourceOwner,
  resourceType: ConfluenceDcConfluenceDcCommentAriResourceType,
  resourceIdSlug: "{siteId}/{commentId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence-dc.confluence-dc/comment/index.ts
var ConfluenceDcConfluenceDcCommentAri = class _ConfluenceDcConfluenceDcCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceDcConfluenceDcCommentAriStaticOpts.qualifier,
      platformQualifier: confluenceDcConfluenceDcCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: confluenceDcConfluenceDcCommentAriStaticOpts.resourceOwner,
      resourceType: confluenceDcConfluenceDcCommentAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceDcConfluenceDcCommentAriStaticOpts);
    return new _ConfluenceDcConfluenceDcCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceDcConfluenceDcCommentAriStaticOpts);
    return new _ConfluenceDcConfluenceDcCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/confluence-dc.confluence-dc/document/types.ts
var ConfluenceDcConfluenceDcDocumentAriResourceOwner = "confluence-dc.confluence-dc", ConfluenceDcConfluenceDcDocumentAriResourceType = "document";

// src/confluence-dc.confluence-dc/document/manifest.ts
var confluenceDcConfluenceDcDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceDcConfluenceDcDocumentAriResourceOwner,
  resourceType: ConfluenceDcConfluenceDcDocumentAriResourceType,
  resourceIdSlug: "{siteId}/type/{docType}/{docId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    docType: /(?:page|blogpost|attachment)/,
    // eslint-disable-line no-useless-escape
    docId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence-dc.confluence-dc/document/index.ts
var ConfluenceDcConfluenceDcDocumentAri = class _ConfluenceDcConfluenceDcDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._docType = opts.resourceIdSegmentValues.docType, this._docId = opts.resourceIdSegmentValues.docId;
  }
  get siteId() {
    return this._siteId;
  }
  get docType() {
    return this._docType;
  }
  get docId() {
    return this._docId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceDcConfluenceDcDocumentAriStaticOpts.qualifier,
      platformQualifier: confluenceDcConfluenceDcDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: confluenceDcConfluenceDcDocumentAriStaticOpts.resourceOwner,
      resourceType: confluenceDcConfluenceDcDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/type/${opts.docType}/${opts.docId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        docType: opts.docType,
        docId: opts.docId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceDcConfluenceDcDocumentAriStaticOpts);
    return new _ConfluenceDcConfluenceDcDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceDcConfluenceDcDocumentAriStaticOpts);
    return new _ConfluenceDcConfluenceDcDocumentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      docType: this.docType,
      docId: this.docId
    };
  }
};

// src/confluence-dc.confluence-dc/space/types.ts
var ConfluenceDcConfluenceDcSpaceAriResourceOwner = "confluence-dc.confluence-dc", ConfluenceDcConfluenceDcSpaceAriResourceType = "space";

// src/confluence-dc.confluence-dc/space/manifest.ts
var confluenceDcConfluenceDcSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConfluenceDcConfluenceDcSpaceAriResourceOwner,
  resourceType: ConfluenceDcConfluenceDcSpaceAriResourceType,
  resourceIdSlug: "{siteId}/{spaceId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/confluence-dc.confluence-dc/space/index.ts
var ConfluenceDcConfluenceDcSpaceAri = class _ConfluenceDcConfluenceDcSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: confluenceDcConfluenceDcSpaceAriStaticOpts.qualifier,
      platformQualifier: confluenceDcConfluenceDcSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: confluenceDcConfluenceDcSpaceAriStaticOpts.resourceOwner,
      resourceType: confluenceDcConfluenceDcSpaceAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceDcConfluenceDcSpaceAriStaticOpts);
    return new _ConfluenceDcConfluenceDcSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, confluenceDcConfluenceDcSpaceAriStaticOpts);
    return new _ConfluenceDcConfluenceDcSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      spaceId: this.spaceId
    };
  }
};

// src/connection-registry/link/types.ts
var ConnectionRegistryLinkAriResourceOwner = "connection-registry", ConnectionRegistryLinkAriResourceType = "link";

// src/connection-registry/link/manifest.ts
var connectionRegistryLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConnectionRegistryLinkAriResourceOwner,
  resourceType: ConnectionRegistryLinkAriResourceType,
  resourceIdSlug: "{linkId}",
  resourceIdSegmentFormats: {
    linkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/connection-registry/link/index.ts
var ConnectionRegistryLinkAri = class _ConnectionRegistryLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: connectionRegistryLinkAriStaticOpts.qualifier,
      platformQualifier: connectionRegistryLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: connectionRegistryLinkAriStaticOpts.resourceOwner,
      resourceType: connectionRegistryLinkAriStaticOpts.resourceType,
      resourceId: `${opts.linkId}`,
      resourceIdSegmentValues: {
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, connectionRegistryLinkAriStaticOpts);
    return new _ConnectionRegistryLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, connectionRegistryLinkAriStaticOpts);
    return new _ConnectionRegistryLinkAri(opts);
  }
  getVariables() {
    return {
      linkId: this.linkId
    };
  }
};

// src/conversational-help/conversation/types.ts
var ConversationalHelpConversationAriResourceOwner = "conversational-help", ConversationalHelpConversationAriResourceType = "conversation";

// src/conversational-help/conversation/manifest.ts
var conversationalHelpConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConversationalHelpConversationAriResourceOwner,
  resourceType: ConversationalHelpConversationAriResourceType,
  resourceIdSlug: "{conversationId}",
  resourceIdSegmentFormats: {
    conversationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/conversational-help/conversation/index.ts
var ConversationalHelpConversationAri = class _ConversationalHelpConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._conversationId = opts.resourceIdSegmentValues.conversationId;
  }
  get siteId() {
    return this._siteId;
  }
  get conversationId() {
    return this._conversationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: conversationalHelpConversationAriStaticOpts.qualifier,
      platformQualifier: conversationalHelpConversationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: conversationalHelpConversationAriStaticOpts.resourceOwner,
      resourceType: conversationalHelpConversationAriStaticOpts.resourceType,
      resourceId: `${opts.conversationId}`,
      resourceIdSegmentValues: {
        conversationId: opts.conversationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, conversationalHelpConversationAriStaticOpts);
    return new _ConversationalHelpConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, conversationalHelpConversationAriStaticOpts);
    return new _ConversationalHelpConversationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      conversationId: this.conversationId
    };
  }
};

// src/conversational-help/conversation-message/types.ts
var ConversationalHelpConversationMessageAriResourceOwner = "conversational-help", ConversationalHelpConversationMessageAriResourceType = "conversation-message";

// src/conversational-help/conversation-message/manifest.ts
var conversationalHelpConversationMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConversationalHelpConversationMessageAriResourceOwner,
  resourceType: ConversationalHelpConversationMessageAriResourceType,
  resourceIdSlug: "{conversationMessageId}",
  resourceIdSegmentFormats: {
    conversationMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/conversational-help/conversation-message/index.ts
var ConversationalHelpConversationMessageAri = class _ConversationalHelpConversationMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._conversationMessageId = opts.resourceIdSegmentValues.conversationMessageId;
  }
  get siteId() {
    return this._siteId;
  }
  get conversationMessageId() {
    return this._conversationMessageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: conversationalHelpConversationMessageAriStaticOpts.qualifier,
      platformQualifier: conversationalHelpConversationMessageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: conversationalHelpConversationMessageAriStaticOpts.resourceOwner,
      resourceType: conversationalHelpConversationMessageAriStaticOpts.resourceType,
      resourceId: `${opts.conversationMessageId}`,
      resourceIdSegmentValues: {
        conversationMessageId: opts.conversationMessageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, conversationalHelpConversationMessageAriStaticOpts);
    return new _ConversationalHelpConversationMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, conversationalHelpConversationMessageAriStaticOpts);
    return new _ConversationalHelpConversationMessageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      conversationMessageId: this.conversationMessageId
    };
  }
};

// src/convo-ai/workspace/types.ts
var ConvoAiWorkspaceAriResourceOwner = "convo-ai", ConvoAiWorkspaceAriResourceType = "workspace";

// src/convo-ai/workspace/manifest.ts
var convoAiWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ConvoAiWorkspaceAriResourceOwner,
  resourceType: ConvoAiWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/convo-ai/workspace/index.ts
var ConvoAiWorkspaceAri = class _ConvoAiWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: convoAiWorkspaceAriStaticOpts.qualifier,
      platformQualifier: convoAiWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: convoAiWorkspaceAriStaticOpts.resourceOwner,
      resourceType: convoAiWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, convoAiWorkspaceAriStaticOpts);
    return new _ConvoAiWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, convoAiWorkspaceAriStaticOpts);
    return new _ConvoAiWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/css-xp/role/types.ts
var CssXpRoleAriResourceOwner = "css-xp", CssXpRoleAriResourceType = "role";

// src/css-xp/role/manifest.ts
var cssXpRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CssXpRoleAriResourceOwner,
  resourceType: CssXpRoleAriResourceType,
  resourceIdSlug: "{roleId}/{scope}",
  resourceIdSegmentFormats: {
    roleId: /forge/,
    // eslint-disable-line no-useless-escape
    scope: /(?:read|write)/
    // eslint-disable-line no-useless-escape
  }
};

// src/css-xp/role/index.ts
var CssXpRoleAri = class _CssXpRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId, this._scope = opts.resourceIdSegmentValues.scope;
  }
  get roleId() {
    return this._roleId;
  }
  get scope() {
    return this._scope;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: cssXpRoleAriStaticOpts.qualifier,
      platformQualifier: cssXpRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: cssXpRoleAriStaticOpts.resourceOwner,
      resourceType: cssXpRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}/${opts.scope}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId,
        scope: opts.scope
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, cssXpRoleAriStaticOpts);
    return new _CssXpRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, cssXpRoleAriStaticOpts);
    return new _CssXpRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId,
      scope: this.scope
    };
  }
};

// src/data-lake/lake-connection/types.ts
var DataLakeLakeConnectionAriResourceOwner = "data-lake", DataLakeLakeConnectionAriResourceType = "lake-connection";

// src/data-lake/lake-connection/manifest.ts
var dataLakeLakeConnectionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DataLakeLakeConnectionAriResourceOwner,
  resourceType: DataLakeLakeConnectionAriResourceType,
  resourceIdSlug: "{lakeConnectionId}",
  resourceIdSegmentFormats: {
    lakeConnectionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/data-lake/lake-connection/index.ts
var DataLakeLakeConnectionAri = class _DataLakeLakeConnectionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lakeConnectionId = opts.resourceIdSegmentValues.lakeConnectionId;
  }
  get lakeConnectionId() {
    return this._lakeConnectionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dataLakeLakeConnectionAriStaticOpts.qualifier,
      platformQualifier: dataLakeLakeConnectionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dataLakeLakeConnectionAriStaticOpts.resourceOwner,
      resourceType: dataLakeLakeConnectionAriStaticOpts.resourceType,
      resourceId: `${opts.lakeConnectionId}`,
      resourceIdSegmentValues: {
        lakeConnectionId: opts.lakeConnectionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dataLakeLakeConnectionAriStaticOpts);
    return new _DataLakeLakeConnectionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dataLakeLakeConnectionAriStaticOpts);
    return new _DataLakeLakeConnectionAri(opts);
  }
  getVariables() {
    return {
      lakeConnectionId: this.lakeConnectionId
    };
  }
};

// src/devai/autodev-job/types.ts
var DevaiAutodevJobAriResourceOwner = "devai", DevaiAutodevJobAriResourceType = "autodev-job";

// src/devai/autodev-job/manifest.ts
var devaiAutodevJobAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevaiAutodevJobAriResourceOwner,
  resourceType: DevaiAutodevJobAriResourceType,
  resourceIdSlug: "{workspaceId}/{jobId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    jobId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/devai/autodev-job/index.ts
var DevaiAutodevJobAri = class _DevaiAutodevJobAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._jobId = opts.resourceIdSegmentValues.jobId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get jobId() {
    return this._jobId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devaiAutodevJobAriStaticOpts.qualifier,
      platformQualifier: devaiAutodevJobAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: devaiAutodevJobAriStaticOpts.resourceOwner,
      resourceType: devaiAutodevJobAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.jobId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        jobId: opts.jobId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devaiAutodevJobAriStaticOpts);
    return new _DevaiAutodevJobAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devaiAutodevJobAriStaticOpts);
    return new _DevaiAutodevJobAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      jobId: this.jobId
    };
  }
};

// src/devai/workspace/types.ts
var DevaiWorkspaceAriResourceOwner = "devai", DevaiWorkspaceAriResourceType = "workspace";

// src/devai/workspace/manifest.ts
var devaiWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevaiWorkspaceAriResourceOwner,
  resourceType: DevaiWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/devai/workspace/index.ts
var DevaiWorkspaceAri = class _DevaiWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devaiWorkspaceAriStaticOpts.qualifier,
      platformQualifier: devaiWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: devaiWorkspaceAriStaticOpts.resourceOwner,
      resourceType: devaiWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devaiWorkspaceAriStaticOpts);
    return new _DevaiWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devaiWorkspaceAriStaticOpts);
    return new _DevaiWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/devops/container/types.ts
var DevopsContainerAriResourceOwner = "devops", DevopsContainerAriResourceType = "container";

// src/devops/container/manifest.ts
var devopsContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevopsContainerAriResourceOwner,
  resourceType: DevopsContainerAriResourceType,
  resourceIdSlug: "{containerId}",
  resourceIdSegmentFormats: {
    containerId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/devops/container/index.ts
var DevopsContainerAri = class _DevopsContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._containerId = opts.resourceIdSegmentValues.containerId;
  }
  get siteId() {
    return this._siteId;
  }
  get containerId() {
    return this._containerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devopsContainerAriStaticOpts.qualifier,
      platformQualifier: devopsContainerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: devopsContainerAriStaticOpts.resourceOwner,
      resourceType: devopsContainerAriStaticOpts.resourceType,
      resourceId: `${opts.containerId}`,
      resourceIdSegmentValues: {
        containerId: opts.containerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsContainerAriStaticOpts);
    return new _DevopsContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devopsContainerAriStaticOpts);
    return new _DevopsContainerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      containerId: this.containerId
    };
  }
};

// src/devops/namespace/types.ts
var DevopsNamespaceAriResourceOwner = "devops", DevopsNamespaceAriResourceType = "namespace";

// src/devops/namespace/manifest.ts
var devopsNamespaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevopsNamespaceAriResourceOwner,
  resourceType: DevopsNamespaceAriResourceType,
  resourceIdSlug: "{namespaceId}",
  resourceIdSegmentFormats: {
    namespaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/devops/namespace/index.ts
var DevopsNamespaceAri = class _DevopsNamespaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._namespaceId = opts.resourceIdSegmentValues.namespaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get namespaceId() {
    return this._namespaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devopsNamespaceAriStaticOpts.qualifier,
      platformQualifier: devopsNamespaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: devopsNamespaceAriStaticOpts.resourceOwner,
      resourceType: devopsNamespaceAriStaticOpts.resourceType,
      resourceId: `${opts.namespaceId}`,
      resourceIdSegmentValues: {
        namespaceId: opts.namespaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsNamespaceAriStaticOpts);
    return new _DevopsNamespaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devopsNamespaceAriStaticOpts);
    return new _DevopsNamespaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      namespaceId: this.namespaceId
    };
  }
};

// src/devops/provider/types.ts
var DevopsProviderAriResourceOwner = "devops", DevopsProviderAriResourceType = "provider";

// src/devops/provider/manifest.ts
var devopsProviderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevopsProviderAriResourceOwner,
  resourceType: DevopsProviderAriResourceType,
  resourceIdSlug: "{providerNamespace}/{providerAppId}",
  resourceIdSegmentFormats: {
    providerNamespace: /(classic|forge|asap|oauth)/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/devops/provider/index.ts
var DevopsProviderAri = class _DevopsProviderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._providerNamespace = opts.resourceIdSegmentValues.providerNamespace, this._providerAppId = opts.resourceIdSegmentValues.providerAppId;
  }
  get providerNamespace() {
    return this._providerNamespace;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devopsProviderAriStaticOpts.qualifier,
      platformQualifier: devopsProviderAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: devopsProviderAriStaticOpts.resourceOwner,
      resourceType: devopsProviderAriStaticOpts.resourceType,
      resourceId: `${opts.providerNamespace}/${opts.providerAppId}`,
      resourceIdSegmentValues: {
        providerNamespace: opts.providerNamespace,
        providerAppId: opts.providerAppId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsProviderAriStaticOpts);
    return new _DevopsProviderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devopsProviderAriStaticOpts);
    return new _DevopsProviderAri(opts);
  }
  getVariables() {
    return {
      providerNamespace: this.providerNamespace,
      providerAppId: this.providerAppId
    };
  }
};

// src/devops/relationship/types.ts
var DevopsRelationshipAriResourceOwner = "devops", DevopsRelationshipAriResourceType = "relationship";

// src/devops/relationship/manifest.ts
var devopsRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevopsRelationshipAriResourceOwner,
  resourceType: DevopsRelationshipAriResourceType,
  resourceIdSlug: "{relationshipId}",
  resourceIdSegmentFormats: {
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/devops/relationship/index.ts
var DevopsRelationshipAri = class _DevopsRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devopsRelationshipAriStaticOpts.qualifier,
      platformQualifier: devopsRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: devopsRelationshipAriStaticOpts.resourceOwner,
      resourceType: devopsRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.relationshipId}`,
      resourceIdSegmentValues: {
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsRelationshipAriStaticOpts);
    return new _DevopsRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devopsRelationshipAriStaticOpts);
    return new _DevopsRelationshipAri(opts);
  }
  getVariables() {
    return {
      relationshipId: this.relationshipId
    };
  }
};

// src/devops/tool/types.ts
var DevopsToolAriResourceOwner = "devops", DevopsToolAriResourceType = "tool";

// src/devops/tool/manifest.ts
var devopsToolAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevopsToolAriResourceOwner,
  resourceType: DevopsToolAriResourceType,
  resourceIdSlug: "{toolId}",
  resourceIdSegmentFormats: {
    toolId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/devops/tool/index.ts
var DevopsToolAri = class _DevopsToolAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._toolId = opts.resourceIdSegmentValues.toolId;
  }
  get siteId() {
    return this._siteId;
  }
  get toolId() {
    return this._toolId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devopsToolAriStaticOpts.qualifier,
      platformQualifier: devopsToolAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: devopsToolAriStaticOpts.resourceOwner,
      resourceType: devopsToolAriStaticOpts.resourceType,
      resourceId: `${opts.toolId}`,
      resourceIdSegmentValues: {
        toolId: opts.toolId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsToolAriStaticOpts);
    return new _DevopsToolAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devopsToolAriStaticOpts);
    return new _DevopsToolAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      toolId: this.toolId
    };
  }
};

// src/docusign.docusign/document/types.ts
var DocusignDocusignDocumentAriResourceOwner = "docusign.docusign", DocusignDocusignDocumentAriResourceType = "document";

// src/docusign.docusign/document/manifest.ts
var docusignDocusignDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DocusignDocusignDocumentAriResourceOwner,
  resourceType: DocusignDocusignDocumentAriResourceType,
  resourceIdSlug: "shard/{shardRegion}/account/{accountId}/envelope/{envelopeId}",
  resourceIdSegmentFormats: {
    shardRegion: /[a-zA-Z0-9_-]+/,
    // eslint-disable-line no-useless-escape
    accountId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    envelopeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/docusign.docusign/document/index.ts
var DocusignDocusignDocumentAri = class _DocusignDocusignDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._shardRegion = opts.resourceIdSegmentValues.shardRegion, this._accountId = opts.resourceIdSegmentValues.accountId, this._envelopeId = opts.resourceIdSegmentValues.envelopeId;
  }
  get shardRegion() {
    return this._shardRegion;
  }
  get accountId() {
    return this._accountId;
  }
  get envelopeId() {
    return this._envelopeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: docusignDocusignDocumentAriStaticOpts.qualifier,
      platformQualifier: docusignDocusignDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: docusignDocusignDocumentAriStaticOpts.resourceOwner,
      resourceType: docusignDocusignDocumentAriStaticOpts.resourceType,
      resourceId: `shard/${opts.shardRegion}/account/${opts.accountId}/envelope/${opts.envelopeId}`,
      resourceIdSegmentValues: {
        shardRegion: opts.shardRegion,
        accountId: opts.accountId,
        envelopeId: opts.envelopeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, docusignDocusignDocumentAriStaticOpts);
    return new _DocusignDocusignDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, docusignDocusignDocumentAriStaticOpts);
    return new _DocusignDocusignDocumentAri(opts);
  }
  getVariables() {
    return {
      shardRegion: this.shardRegion,
      accountId: this.accountId,
      envelopeId: this.envelopeId
    };
  }
};

// src/docusign.docusign/remote-link/types.ts
var DocusignDocusignRemoteLinkAriResourceOwner = "docusign.docusign", DocusignDocusignRemoteLinkAriResourceType = "remote-link";

// src/docusign.docusign/remote-link/manifest.ts
var docusignDocusignRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DocusignDocusignRemoteLinkAriResourceOwner,
  resourceType: DocusignDocusignRemoteLinkAriResourceType,
  resourceIdSlug: "shard/{shardRegion}/account/{accountId}/envelope/{envelopeId}",
  resourceIdSegmentFormats: {
    shardRegion: /[a-zA-Z0-9_-]+/,
    // eslint-disable-line no-useless-escape
    accountId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    envelopeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/docusign.docusign/remote-link/index.ts
var DocusignDocusignRemoteLinkAri = class _DocusignDocusignRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._shardRegion = opts.resourceIdSegmentValues.shardRegion, this._accountId = opts.resourceIdSegmentValues.accountId, this._envelopeId = opts.resourceIdSegmentValues.envelopeId;
  }
  get shardRegion() {
    return this._shardRegion;
  }
  get accountId() {
    return this._accountId;
  }
  get envelopeId() {
    return this._envelopeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: docusignDocusignRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: docusignDocusignRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: docusignDocusignRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: docusignDocusignRemoteLinkAriStaticOpts.resourceType,
      resourceId: `shard/${opts.shardRegion}/account/${opts.accountId}/envelope/${opts.envelopeId}`,
      resourceIdSegmentValues: {
        shardRegion: opts.shardRegion,
        accountId: opts.accountId,
        envelopeId: opts.envelopeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, docusignDocusignRemoteLinkAriStaticOpts);
    return new _DocusignDocusignRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, docusignDocusignRemoteLinkAriStaticOpts);
    return new _DocusignDocusignRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      shardRegion: this.shardRegion,
      accountId: this.accountId,
      envelopeId: this.envelopeId
    };
  }
};

// src/dovetail.dovetail/remote-link/types.ts
var DovetailDovetailRemoteLinkAriResourceOwner = "dovetail.dovetail", DovetailDovetailRemoteLinkAriResourceType = "remote-link";

// src/dovetail.dovetail/remote-link/manifest.ts
var dovetailDovetailRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DovetailDovetailRemoteLinkAriResourceOwner,
  resourceType: DovetailDovetailRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/note/{noteId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    noteId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dovetail.dovetail/remote-link/index.ts
var DovetailDovetailRemoteLinkAri = class _DovetailDovetailRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._noteId = opts.resourceIdSegmentValues.noteId;
  }
  get orgId() {
    return this._orgId;
  }
  get noteId() {
    return this._noteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dovetailDovetailRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: dovetailDovetailRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dovetailDovetailRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: dovetailDovetailRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/note/${opts.noteId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        noteId: opts.noteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dovetailDovetailRemoteLinkAriStaticOpts);
    return new _DovetailDovetailRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dovetailDovetailRemoteLinkAriStaticOpts);
    return new _DovetailDovetailRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      noteId: this.noteId
    };
  }
};

// src/dropbox/document/types.ts
var DropboxDocumentAriResourceOwner = "dropbox", DropboxDocumentAriResourceType = "document";

// src/dropbox/document/manifest.ts
var dropboxDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DropboxDocumentAriResourceOwner,
  resourceType: DropboxDocumentAriResourceType,
  resourceIdSlug: "{documentId}",
  resourceIdSegmentFormats: {
    documentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dropbox/document/index.ts
var DropboxDocumentAri = class _DropboxDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dropboxDocumentAriStaticOpts.qualifier,
      platformQualifier: dropboxDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dropboxDocumentAriStaticOpts.resourceOwner,
      resourceType: dropboxDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.documentId}`,
      resourceIdSegmentValues: {
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dropboxDocumentAriStaticOpts);
    return new _DropboxDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dropboxDocumentAriStaticOpts);
    return new _DropboxDocumentAri(opts);
  }
  getVariables() {
    return {
      documentId: this.documentId
    };
  }
};

// src/dropbox/remote-link/types.ts
var DropboxRemoteLinkAriResourceOwner = "dropbox", DropboxRemoteLinkAriResourceType = "remote-link";

// src/dropbox/remote-link/manifest.ts
var dropboxRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DropboxRemoteLinkAriResourceOwner,
  resourceType: DropboxRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dropbox/remote-link/index.ts
var DropboxRemoteLinkAri = class _DropboxRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dropboxRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: dropboxRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dropboxRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: dropboxRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dropboxRemoteLinkAriStaticOpts);
    return new _DropboxRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dropboxRemoteLinkAriStaticOpts);
    return new _DropboxRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/dropbox.dropbox/document/types.ts
var DropboxDropboxDocumentAriResourceOwner = "dropbox.dropbox", DropboxDropboxDocumentAriResourceType = "document";

// src/dropbox.dropbox/document/manifest.ts
var dropboxDropboxDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DropboxDropboxDocumentAriResourceOwner,
  resourceType: DropboxDropboxDocumentAriResourceType,
  resourceIdSlug: "{documentId}",
  resourceIdSegmentFormats: {
    documentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dropbox.dropbox/document/index.ts
var DropboxDropboxDocumentAri = class _DropboxDropboxDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dropboxDropboxDocumentAriStaticOpts.qualifier,
      platformQualifier: dropboxDropboxDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dropboxDropboxDocumentAriStaticOpts.resourceOwner,
      resourceType: dropboxDropboxDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.documentId}`,
      resourceIdSegmentValues: {
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dropboxDropboxDocumentAriStaticOpts);
    return new _DropboxDropboxDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dropboxDropboxDocumentAriStaticOpts);
    return new _DropboxDropboxDocumentAri(opts);
  }
  getVariables() {
    return {
      documentId: this.documentId
    };
  }
};

// src/dropbox.dropbox/remote-link/types.ts
var DropboxDropboxRemoteLinkAriResourceOwner = "dropbox.dropbox", DropboxDropboxRemoteLinkAriResourceType = "remote-link";

// src/dropbox.dropbox/remote-link/manifest.ts
var dropboxDropboxRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DropboxDropboxRemoteLinkAriResourceOwner,
  resourceType: DropboxDropboxRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dropbox.dropbox/remote-link/index.ts
var DropboxDropboxRemoteLinkAri = class _DropboxDropboxRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dropboxDropboxRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: dropboxDropboxRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dropboxDropboxRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: dropboxDropboxRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dropboxDropboxRemoteLinkAriStaticOpts);
    return new _DropboxDropboxRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dropboxDropboxRemoteLinkAriStaticOpts);
    return new _DropboxDropboxRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/ecosystem/app/types.ts
var EcosystemAppAriResourceOwner = "ecosystem", EcosystemAppAriResourceType = "app";

// src/ecosystem/app/manifest.ts
var ecosystemAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemAppAriResourceOwner,
  resourceType: EcosystemAppAriResourceType,
  resourceIdSlug: "{appId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/app/index.ts
var EcosystemAppAri = class _EcosystemAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId;
  }
  get appId() {
    return this._appId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemAppAriStaticOpts.qualifier,
      platformQualifier: ecosystemAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemAppAriStaticOpts.resourceOwner,
      resourceType: ecosystemAppAriStaticOpts.resourceType,
      resourceId: `${opts.appId}`,
      resourceIdSegmentValues: {
        appId: opts.appId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemAppAriStaticOpts);
    return new _EcosystemAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemAppAriStaticOpts);
    return new _EcosystemAppAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId
    };
  }
};

// src/ecosystem/app-environment-version/types.ts
var EcosystemAppEnvironmentVersionAriResourceOwner = "ecosystem", EcosystemAppEnvironmentVersionAriResourceType = "app-environment-version";

// src/ecosystem/app-environment-version/manifest.ts
var ecosystemAppEnvironmentVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemAppEnvironmentVersionAriResourceOwner,
  resourceType: EcosystemAppEnvironmentVersionAriResourceType,
  resourceIdSlug: "{appId}/{environmentId}/{versionId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    versionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/app-environment-version/index.ts
var EcosystemAppEnvironmentVersionAri = class _EcosystemAppEnvironmentVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._versionId = opts.resourceIdSegmentValues.versionId;
  }
  get appId() {
    return this._appId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get versionId() {
    return this._versionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemAppEnvironmentVersionAriStaticOpts.qualifier,
      platformQualifier: ecosystemAppEnvironmentVersionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemAppEnvironmentVersionAriStaticOpts.resourceOwner,
      resourceType: ecosystemAppEnvironmentVersionAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.environmentId}/${opts.versionId}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        environmentId: opts.environmentId,
        versionId: opts.versionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemAppEnvironmentVersionAriStaticOpts);
    return new _EcosystemAppEnvironmentVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemAppEnvironmentVersionAriStaticOpts);
    return new _EcosystemAppEnvironmentVersionAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId,
      environmentId: this.environmentId,
      versionId: this.versionId
    };
  }
};

// src/ecosystem/connect-app/types.ts
var EcosystemConnectAppAriResourceOwner = "ecosystem", EcosystemConnectAppAriResourceType = "connect-app";

// src/ecosystem/connect-app/manifest.ts
var ecosystemConnectAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemConnectAppAriResourceOwner,
  resourceType: EcosystemConnectAppAriResourceType,
  resourceIdSlug: "{appKey}",
  resourceIdSegmentFormats: {
    appKey: /[a-zA-Z0-9-._]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/connect-app/index.ts
var EcosystemConnectAppAri = class _EcosystemConnectAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appKey = opts.resourceIdSegmentValues.appKey;
  }
  get appKey() {
    return this._appKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemConnectAppAriStaticOpts.qualifier,
      platformQualifier: ecosystemConnectAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemConnectAppAriStaticOpts.resourceOwner,
      resourceType: ecosystemConnectAppAriStaticOpts.resourceType,
      resourceId: `${opts.appKey}`,
      resourceIdSegmentValues: {
        appKey: opts.appKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemConnectAppAriStaticOpts);
    return new _EcosystemConnectAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemConnectAppAriStaticOpts);
    return new _EcosystemConnectAppAri(opts);
  }
  getVariables() {
    return {
      appKey: this.appKey
    };
  }
};

// src/ecosystem/connect-module/types.ts
var EcosystemConnectModuleAriResourceOwner = "ecosystem", EcosystemConnectModuleAriResourceType = "connect-module";

// src/ecosystem/connect-module/manifest.ts
var ecosystemConnectModuleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemConnectModuleAriResourceOwner,
  resourceType: EcosystemConnectModuleAriResourceType,
  resourceIdSlug: "{appKey}/{moduleKey}",
  resourceIdSegmentFormats: {
    appKey: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    moduleKey: /[a-zA-Z0-9-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/connect-module/index.ts
var EcosystemConnectModuleAri = class _EcosystemConnectModuleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appKey = opts.resourceIdSegmentValues.appKey, this._moduleKey = opts.resourceIdSegmentValues.moduleKey;
  }
  get appKey() {
    return this._appKey;
  }
  get moduleKey() {
    return this._moduleKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemConnectModuleAriStaticOpts.qualifier,
      platformQualifier: ecosystemConnectModuleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemConnectModuleAriStaticOpts.resourceOwner,
      resourceType: ecosystemConnectModuleAriStaticOpts.resourceType,
      resourceId: `${opts.appKey}/${opts.moduleKey}`,
      resourceIdSegmentValues: {
        appKey: opts.appKey,
        moduleKey: opts.moduleKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemConnectModuleAriStaticOpts);
    return new _EcosystemConnectModuleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemConnectModuleAriStaticOpts);
    return new _EcosystemConnectModuleAri(opts);
  }
  getVariables() {
    return {
      appKey: this.appKey,
      moduleKey: this.moduleKey
    };
  }
};

// src/ecosystem/environment/types.ts
var EcosystemEnvironmentAriResourceOwner = "ecosystem", EcosystemEnvironmentAriResourceType = "environment";

// src/ecosystem/environment/manifest.ts
var ecosystemEnvironmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemEnvironmentAriResourceOwner,
  resourceType: EcosystemEnvironmentAriResourceType,
  resourceIdSlug: "{appId}/{environmentId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/environment/index.ts
var EcosystemEnvironmentAri = class _EcosystemEnvironmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId;
  }
  get appId() {
    return this._appId;
  }
  get environmentId() {
    return this._environmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemEnvironmentAriStaticOpts.qualifier,
      platformQualifier: ecosystemEnvironmentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemEnvironmentAriStaticOpts.resourceOwner,
      resourceType: ecosystemEnvironmentAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.environmentId}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        environmentId: opts.environmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemEnvironmentAriStaticOpts);
    return new _EcosystemEnvironmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemEnvironmentAriStaticOpts);
    return new _EcosystemEnvironmentAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId,
      environmentId: this.environmentId
    };
  }
};

// src/ecosystem/extension/types.ts
var EcosystemExtensionAriResourceOwner = "ecosystem", EcosystemExtensionAriResourceType = "extension";

// src/ecosystem/extension/manifest.ts
var ecosystemExtensionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemExtensionAriResourceOwner,
  resourceType: EcosystemExtensionAriResourceType,
  resourceIdSlug: "{appId}/{environmentId}/{groupId}/{extensionKey}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    groupId: /([0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}|static)/,
    // eslint-disable-line no-useless-escape
    extensionKey: /[a-zA-Z0-9-._]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/extension/index.ts
var EcosystemExtensionAri = class _EcosystemExtensionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._groupId = opts.resourceIdSegmentValues.groupId, this._extensionKey = opts.resourceIdSegmentValues.extensionKey;
  }
  get appId() {
    return this._appId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get groupId() {
    return this._groupId;
  }
  get extensionKey() {
    return this._extensionKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemExtensionAriStaticOpts.qualifier,
      platformQualifier: ecosystemExtensionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemExtensionAriStaticOpts.resourceOwner,
      resourceType: ecosystemExtensionAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.environmentId}/${opts.groupId}/${opts.extensionKey}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        environmentId: opts.environmentId,
        groupId: opts.groupId,
        extensionKey: opts.extensionKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemExtensionAriStaticOpts);
    return new _EcosystemExtensionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemExtensionAriStaticOpts);
    return new _EcosystemExtensionAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId,
      environmentId: this.environmentId,
      groupId: this.groupId,
      extensionKey: this.extensionKey
    };
  }
};

// src/ecosystem/extension-group/types.ts
var EcosystemExtensionGroupAriResourceOwner = "ecosystem", EcosystemExtensionGroupAriResourceType = "extension-group";

// src/ecosystem/extension-group/manifest.ts
var ecosystemExtensionGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemExtensionGroupAriResourceOwner,
  resourceType: EcosystemExtensionGroupAriResourceType,
  resourceIdSlug: "{appId}/{environmentId}/{groupId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    groupId: /([0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}|static)/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/extension-group/index.ts
var EcosystemExtensionGroupAri = class _EcosystemExtensionGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get appId() {
    return this._appId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemExtensionGroupAriStaticOpts.qualifier,
      platformQualifier: ecosystemExtensionGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemExtensionGroupAriStaticOpts.resourceOwner,
      resourceType: ecosystemExtensionGroupAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.environmentId}/${opts.groupId}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        environmentId: opts.environmentId,
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemExtensionGroupAriStaticOpts);
    return new _EcosystemExtensionGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemExtensionGroupAriStaticOpts);
    return new _EcosystemExtensionGroupAri(opts);
  }
  getVariables() {
    return {
      appId: this.appId,
      environmentId: this.environmentId,
      groupId: this.groupId
    };
  }
};

// src/ecosystem/installation/types.ts
var EcosystemInstallationAriResourceOwner = "ecosystem", EcosystemInstallationAriResourceType = "installation";

// src/ecosystem/installation/manifest.ts
var ecosystemInstallationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemInstallationAriResourceOwner,
  resourceType: EcosystemInstallationAriResourceType,
  resourceIdSlug: "{installationId}",
  resourceIdSegmentFormats: {
    installationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/installation/index.ts
var EcosystemInstallationAri = class _EcosystemInstallationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._installationId = opts.resourceIdSegmentValues.installationId;
  }
  get installationId() {
    return this._installationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemInstallationAriStaticOpts.qualifier,
      platformQualifier: ecosystemInstallationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemInstallationAriStaticOpts.resourceOwner,
      resourceType: ecosystemInstallationAriStaticOpts.resourceType,
      resourceId: `${opts.installationId}`,
      resourceIdSegmentValues: {
        installationId: opts.installationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemInstallationAriStaticOpts);
    return new _EcosystemInstallationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemInstallationAriStaticOpts);
    return new _EcosystemInstallationAri(opts);
  }
  getVariables() {
    return {
      installationId: this.installationId
    };
  }
};

// src/ecosystem/installation-link/types.ts
var EcosystemInstallationLinkAriResourceOwner = "ecosystem", EcosystemInstallationLinkAriResourceType = "installation-link";

// src/ecosystem/installation-link/manifest.ts
var ecosystemInstallationLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: EcosystemInstallationLinkAriResourceOwner,
  resourceType: EcosystemInstallationLinkAriResourceType,
  resourceIdSlug: "{installationId}/{installationLinkId}",
  resourceIdSegmentFormats: {
    installationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    installationLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ecosystem/installation-link/index.ts
var EcosystemInstallationLinkAri = class _EcosystemInstallationLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._installationId = opts.resourceIdSegmentValues.installationId, this._installationLinkId = opts.resourceIdSegmentValues.installationLinkId;
  }
  get installationId() {
    return this._installationId;
  }
  get installationLinkId() {
    return this._installationLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ecosystemInstallationLinkAriStaticOpts.qualifier,
      platformQualifier: ecosystemInstallationLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ecosystemInstallationLinkAriStaticOpts.resourceOwner,
      resourceType: ecosystemInstallationLinkAriStaticOpts.resourceType,
      resourceId: `${opts.installationId}/${opts.installationLinkId}`,
      resourceIdSegmentValues: {
        installationId: opts.installationId,
        installationLinkId: opts.installationLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemInstallationLinkAriStaticOpts);
    return new _EcosystemInstallationLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ecosystemInstallationLinkAriStaticOpts);
    return new _EcosystemInstallationLinkAri(opts);
  }
  getVariables() {
    return {
      installationId: this.installationId,
      installationLinkId: this.installationLinkId
    };
  }
};

// src/elements/custom-emoji-metadata/types.ts
var ElementsCustomEmojiMetadataAriResourceOwner = "elements", ElementsCustomEmojiMetadataAriResourceType = "custom-emoji-metadata";

// src/elements/custom-emoji-metadata/manifest.ts
var elementsCustomEmojiMetadataAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElementsCustomEmojiMetadataAriResourceOwner,
  resourceType: ElementsCustomEmojiMetadataAriResourceType,
  resourceIdSlug: "{customEmojiMetadataId}",
  resourceIdSegmentFormats: {
    customEmojiMetadataId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/elements/custom-emoji-metadata/index.ts
var ElementsCustomEmojiMetadataAri = class _ElementsCustomEmojiMetadataAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customEmojiMetadataId = opts.resourceIdSegmentValues.customEmojiMetadataId;
  }
  get customEmojiMetadataId() {
    return this._customEmojiMetadataId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elementsCustomEmojiMetadataAriStaticOpts.qualifier,
      platformQualifier: elementsCustomEmojiMetadataAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: elementsCustomEmojiMetadataAriStaticOpts.resourceOwner,
      resourceType: elementsCustomEmojiMetadataAriStaticOpts.resourceType,
      resourceId: `${opts.customEmojiMetadataId}`,
      resourceIdSegmentValues: {
        customEmojiMetadataId: opts.customEmojiMetadataId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elementsCustomEmojiMetadataAriStaticOpts);
    return new _ElementsCustomEmojiMetadataAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elementsCustomEmojiMetadataAriStaticOpts);
    return new _ElementsCustomEmojiMetadataAri(opts);
  }
  getVariables() {
    return {
      customEmojiMetadataId: this.customEmojiMetadataId
    };
  }
};

// src/elements/workspace/types.ts
var ElementsWorkspaceAriResourceOwner = "elements", ElementsWorkspaceAriResourceType = "workspace";

// src/elements/workspace/manifest.ts
var elementsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElementsWorkspaceAriResourceOwner,
  resourceType: ElementsWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/elements/workspace/index.ts
var ElementsWorkspaceAri = class _ElementsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elementsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: elementsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: elementsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: elementsWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elementsWorkspaceAriStaticOpts);
    return new _ElementsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elementsWorkspaceAriStaticOpts);
    return new _ElementsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/elevate/precalibration/types.ts
var ElevatePrecalibrationAriResourceOwner = "elevate", ElevatePrecalibrationAriResourceType = "precalibration";

// src/elevate/precalibration/manifest.ts
var elevatePrecalibrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevatePrecalibrationAriResourceOwner,
  resourceType: ElevatePrecalibrationAriResourceType,
  resourceIdSlug: "{precalibrationId}",
  resourceIdSegmentFormats: {
    precalibrationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/precalibration/index.ts
var ElevatePrecalibrationAri = class _ElevatePrecalibrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._precalibrationId = opts.resourceIdSegmentValues.precalibrationId;
  }
  get siteId() {
    return this._siteId;
  }
  get precalibrationId() {
    return this._precalibrationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevatePrecalibrationAriStaticOpts.qualifier,
      platformQualifier: elevatePrecalibrationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevatePrecalibrationAriStaticOpts.resourceOwner,
      resourceType: elevatePrecalibrationAriStaticOpts.resourceType,
      resourceId: `${opts.precalibrationId}`,
      resourceIdSegmentValues: {
        precalibrationId: opts.precalibrationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevatePrecalibrationAriStaticOpts);
    return new _ElevatePrecalibrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevatePrecalibrationAriStaticOpts);
    return new _ElevatePrecalibrationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      precalibrationId: this.precalibrationId
    };
  }
};

// src/elevate/precalibration-pillar/types.ts
var ElevatePrecalibrationPillarAriResourceOwner = "elevate", ElevatePrecalibrationPillarAriResourceType = "precalibration-pillar";

// src/elevate/precalibration-pillar/manifest.ts
var elevatePrecalibrationPillarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevatePrecalibrationPillarAriResourceOwner,
  resourceType: ElevatePrecalibrationPillarAriResourceType,
  resourceIdSlug: "{precalibrationId}/{precalibrationPillarId}",
  resourceIdSegmentFormats: {
    precalibrationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    precalibrationPillarId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/precalibration-pillar/index.ts
var ElevatePrecalibrationPillarAri = class _ElevatePrecalibrationPillarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._precalibrationId = opts.resourceIdSegmentValues.precalibrationId, this._precalibrationPillarId = opts.resourceIdSegmentValues.precalibrationPillarId;
  }
  get siteId() {
    return this._siteId;
  }
  get precalibrationId() {
    return this._precalibrationId;
  }
  get precalibrationPillarId() {
    return this._precalibrationPillarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevatePrecalibrationPillarAriStaticOpts.qualifier,
      platformQualifier: elevatePrecalibrationPillarAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevatePrecalibrationPillarAriStaticOpts.resourceOwner,
      resourceType: elevatePrecalibrationPillarAriStaticOpts.resourceType,
      resourceId: `${opts.precalibrationId}/${opts.precalibrationPillarId}`,
      resourceIdSegmentValues: {
        precalibrationId: opts.precalibrationId,
        precalibrationPillarId: opts.precalibrationPillarId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevatePrecalibrationPillarAriStaticOpts);
    return new _ElevatePrecalibrationPillarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevatePrecalibrationPillarAriStaticOpts);
    return new _ElevatePrecalibrationPillarAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      precalibrationId: this.precalibrationId,
      precalibrationPillarId: this.precalibrationPillarId
    };
  }
};

// src/elevate/self-assessment/types.ts
var ElevateSelfAssessmentAriResourceOwner = "elevate", ElevateSelfAssessmentAriResourceType = "self-assessment";

// src/elevate/self-assessment/manifest.ts
var elevateSelfAssessmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevateSelfAssessmentAriResourceOwner,
  resourceType: ElevateSelfAssessmentAriResourceType,
  resourceIdSlug: "{selfAssessmentId}",
  resourceIdSegmentFormats: {
    selfAssessmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/self-assessment/index.ts
var ElevateSelfAssessmentAri = class _ElevateSelfAssessmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._selfAssessmentId = opts.resourceIdSegmentValues.selfAssessmentId;
  }
  get siteId() {
    return this._siteId;
  }
  get selfAssessmentId() {
    return this._selfAssessmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevateSelfAssessmentAriStaticOpts.qualifier,
      platformQualifier: elevateSelfAssessmentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevateSelfAssessmentAriStaticOpts.resourceOwner,
      resourceType: elevateSelfAssessmentAriStaticOpts.resourceType,
      resourceId: `${opts.selfAssessmentId}`,
      resourceIdSegmentValues: {
        selfAssessmentId: opts.selfAssessmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevateSelfAssessmentAriStaticOpts);
    return new _ElevateSelfAssessmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevateSelfAssessmentAriStaticOpts);
    return new _ElevateSelfAssessmentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      selfAssessmentId: this.selfAssessmentId
    };
  }
};

// src/elevate/self-assessment-pillar/types.ts
var ElevateSelfAssessmentPillarAriResourceOwner = "elevate", ElevateSelfAssessmentPillarAriResourceType = "self-assessment-pillar";

// src/elevate/self-assessment-pillar/manifest.ts
var elevateSelfAssessmentPillarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevateSelfAssessmentPillarAriResourceOwner,
  resourceType: ElevateSelfAssessmentPillarAriResourceType,
  resourceIdSlug: "{selfAssessmentId}/{selfAssessmentPillarId}",
  resourceIdSegmentFormats: {
    selfAssessmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    selfAssessmentPillarId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/self-assessment-pillar/index.ts
var ElevateSelfAssessmentPillarAri = class _ElevateSelfAssessmentPillarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._selfAssessmentId = opts.resourceIdSegmentValues.selfAssessmentId, this._selfAssessmentPillarId = opts.resourceIdSegmentValues.selfAssessmentPillarId;
  }
  get siteId() {
    return this._siteId;
  }
  get selfAssessmentId() {
    return this._selfAssessmentId;
  }
  get selfAssessmentPillarId() {
    return this._selfAssessmentPillarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevateSelfAssessmentPillarAriStaticOpts.qualifier,
      platformQualifier: elevateSelfAssessmentPillarAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevateSelfAssessmentPillarAriStaticOpts.resourceOwner,
      resourceType: elevateSelfAssessmentPillarAriStaticOpts.resourceType,
      resourceId: `${opts.selfAssessmentId}/${opts.selfAssessmentPillarId}`,
      resourceIdSegmentValues: {
        selfAssessmentId: opts.selfAssessmentId,
        selfAssessmentPillarId: opts.selfAssessmentPillarId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevateSelfAssessmentPillarAriStaticOpts);
    return new _ElevateSelfAssessmentPillarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevateSelfAssessmentPillarAriStaticOpts);
    return new _ElevateSelfAssessmentPillarAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      selfAssessmentId: this.selfAssessmentId,
      selfAssessmentPillarId: this.selfAssessmentPillarId
    };
  }
};

// src/exus-external/user/types.ts
var ExusExternalUserAriResourceOwner = "exus-external", ExusExternalUserAriResourceType = "user";

// src/exus-external/user/manifest.ts
var exusExternalUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ExusExternalUserAriResourceOwner,
  resourceType: ExusExternalUserAriResourceType,
  resourceIdSlug: "{thirdPartySource}/{thirdPartyUserId}",
  resourceIdSegmentFormats: {
    thirdPartySource: /[a-z0-9-]+/,
    // eslint-disable-line no-useless-escape
    thirdPartyUserId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/exus-external/user/index.ts
var ExusExternalUserAri = class _ExusExternalUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._thirdPartySource = opts.resourceIdSegmentValues.thirdPartySource, this._thirdPartyUserId = opts.resourceIdSegmentValues.thirdPartyUserId;
  }
  get thirdPartySource() {
    return this._thirdPartySource;
  }
  get thirdPartyUserId() {
    return this._thirdPartyUserId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: exusExternalUserAriStaticOpts.qualifier,
      platformQualifier: exusExternalUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: exusExternalUserAriStaticOpts.resourceOwner,
      resourceType: exusExternalUserAriStaticOpts.resourceType,
      resourceId: `${opts.thirdPartySource}/${opts.thirdPartyUserId}`,
      resourceIdSegmentValues: {
        thirdPartySource: opts.thirdPartySource,
        thirdPartyUserId: opts.thirdPartyUserId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, exusExternalUserAriStaticOpts);
    return new _ExusExternalUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, exusExternalUserAriStaticOpts);
    return new _ExusExternalUserAri(opts);
  }
  getVariables() {
    return {
      thirdPartySource: this.thirdPartySource,
      thirdPartyUserId: this.thirdPartyUserId
    };
  }
};

// src/figma.figma/design/types.ts
var FigmaFigmaDesignAriResourceOwner = "figma.figma", FigmaFigmaDesignAriResourceType = "design";

// src/figma.figma/design/manifest.ts
var figmaFigmaDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: FigmaFigmaDesignAriResourceOwner,
  resourceType: FigmaFigmaDesignAriResourceType,
  resourceIdSlug: "{designId}",
  resourceIdSegmentFormats: {
    designId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/figma.figma/design/index.ts
var FigmaFigmaDesignAri = class _FigmaFigmaDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._designId = opts.resourceIdSegmentValues.designId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: figmaFigmaDesignAriStaticOpts.qualifier,
      platformQualifier: figmaFigmaDesignAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: figmaFigmaDesignAriStaticOpts.resourceOwner,
      resourceType: figmaFigmaDesignAriStaticOpts.resourceType,
      resourceId: `${opts.designId}`,
      resourceIdSegmentValues: {
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, figmaFigmaDesignAriStaticOpts);
    return new _FigmaFigmaDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, figmaFigmaDesignAriStaticOpts);
    return new _FigmaFigmaDesignAri(opts);
  }
  getVariables() {
    return {
      designId: this.designId
    };
  }
};

// src/figma.figma/remote-link/types.ts
var FigmaFigmaRemoteLinkAriResourceOwner = "figma.figma", FigmaFigmaRemoteLinkAriResourceType = "remote-link";

// src/figma.figma/remote-link/manifest.ts
var figmaFigmaRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: FigmaFigmaRemoteLinkAriResourceOwner,
  resourceType: FigmaFigmaRemoteLinkAriResourceType,
  resourceIdSlug: "{remoteLinkId}",
  resourceIdSegmentFormats: {
    remoteLinkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/figma.figma/remote-link/index.ts
var FigmaFigmaRemoteLinkAri = class _FigmaFigmaRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: figmaFigmaRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: figmaFigmaRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: figmaFigmaRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: figmaFigmaRemoteLinkAriStaticOpts.resourceType,
      resourceId: `${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, figmaFigmaRemoteLinkAriStaticOpts);
    return new _FigmaFigmaRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, figmaFigmaRemoteLinkAriStaticOpts);
    return new _FigmaFigmaRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/github.github/branch/types.ts
var GithubGithubBranchAriResourceOwner = "github.github", GithubGithubBranchAriResourceType = "branch";

// src/github.github/branch/manifest.ts
var githubGithubBranchAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubBranchAriResourceOwner,
  resourceType: GithubGithubBranchAriResourceType,
  resourceIdSlug: "repositoryId/{repositoryId}/branchId/{branchId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/branch/index.ts
var GithubGithubBranchAri = class _GithubGithubBranchAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId, this._branchId = opts.resourceIdSegmentValues.branchId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  get branchId() {
    return this._branchId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubBranchAriStaticOpts.qualifier,
      platformQualifier: githubGithubBranchAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubBranchAriStaticOpts.resourceOwner,
      resourceType: githubGithubBranchAriStaticOpts.resourceType,
      resourceId: `repositoryId/${opts.repositoryId}/branchId/${opts.branchId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId,
        branchId: opts.branchId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubBranchAriStaticOpts);
    return new _GithubGithubBranchAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubBranchAriStaticOpts);
    return new _GithubGithubBranchAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId,
      branchId: this.branchId
    };
  }
};

// src/github.github/build/types.ts
var GithubGithubBuildAriResourceOwner = "github.github", GithubGithubBuildAriResourceType = "build";

// src/github.github/build/manifest.ts
var githubGithubBuildAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubBuildAriResourceOwner,
  resourceType: GithubGithubBuildAriResourceType,
  resourceIdSlug: "pipelineId/{pipelineId}/buildId/{buildId}",
  resourceIdSegmentFormats: {
    pipelineId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/build/index.ts
var GithubGithubBuildAri = class _GithubGithubBuildAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pipelineId = opts.resourceIdSegmentValues.pipelineId, this._buildId = opts.resourceIdSegmentValues.buildId;
  }
  get pipelineId() {
    return this._pipelineId;
  }
  get buildId() {
    return this._buildId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubBuildAriStaticOpts.qualifier,
      platformQualifier: githubGithubBuildAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubBuildAriStaticOpts.resourceOwner,
      resourceType: githubGithubBuildAriStaticOpts.resourceType,
      resourceId: `pipelineId/${opts.pipelineId}/buildId/${opts.buildId}`,
      resourceIdSegmentValues: {
        pipelineId: opts.pipelineId,
        buildId: opts.buildId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubBuildAriStaticOpts);
    return new _GithubGithubBuildAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubBuildAriStaticOpts);
    return new _GithubGithubBuildAri(opts);
  }
  getVariables() {
    return {
      pipelineId: this.pipelineId,
      buildId: this.buildId
    };
  }
};

// src/github.github/comment/types.ts
var GithubGithubCommentAriResourceOwner = "github.github", GithubGithubCommentAriResourceType = "comment";

// src/github.github/comment/manifest.ts
var githubGithubCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubCommentAriResourceOwner,
  resourceType: GithubGithubCommentAriResourceType,
  resourceIdSlug: "repositoryId/{repositoryId}/pullRequestId/{pullRequestId}/comment/{commentId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/comment/index.ts
var GithubGithubCommentAri = class _GithubGithubCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubCommentAriStaticOpts.qualifier,
      platformQualifier: githubGithubCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubCommentAriStaticOpts.resourceOwner,
      resourceType: githubGithubCommentAriStaticOpts.resourceType,
      resourceId: `repositoryId/${opts.repositoryId}/pullRequestId/${opts.pullRequestId}/comment/${opts.commentId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId,
        pullRequestId: opts.pullRequestId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubCommentAriStaticOpts);
    return new _GithubGithubCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubCommentAriStaticOpts);
    return new _GithubGithubCommentAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId,
      pullRequestId: this.pullRequestId,
      commentId: this.commentId
    };
  }
};

// src/github.github/commit/types.ts
var GithubGithubCommitAriResourceOwner = "github.github", GithubGithubCommitAriResourceType = "commit";

// src/github.github/commit/manifest.ts
var githubGithubCommitAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubCommitAriResourceOwner,
  resourceType: GithubGithubCommitAriResourceType,
  resourceIdSlug: "repositoryId/{repositoryId}/commitId/{commitId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    commitId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/commit/index.ts
var GithubGithubCommitAri = class _GithubGithubCommitAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId, this._commitId = opts.resourceIdSegmentValues.commitId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  get commitId() {
    return this._commitId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubCommitAriStaticOpts.qualifier,
      platformQualifier: githubGithubCommitAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubCommitAriStaticOpts.resourceOwner,
      resourceType: githubGithubCommitAriStaticOpts.resourceType,
      resourceId: `repositoryId/${opts.repositoryId}/commitId/${opts.commitId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId,
        commitId: opts.commitId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubCommitAriStaticOpts);
    return new _GithubGithubCommitAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubCommitAriStaticOpts);
    return new _GithubGithubCommitAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId,
      commitId: this.commitId
    };
  }
};

// src/github.github/deployment/types.ts
var GithubGithubDeploymentAriResourceOwner = "github.github", GithubGithubDeploymentAriResourceType = "deployment";

// src/github.github/deployment/manifest.ts
var githubGithubDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubDeploymentAriResourceOwner,
  resourceType: GithubGithubDeploymentAriResourceType,
  resourceIdSlug: "pipelineId/{pipelineId}/environmentId/{environmentId}/deploymentSequenceNumber/{deploymentSequenceNumber}",
  resourceIdSegmentFormats: {
    pipelineId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    environmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    deploymentSequenceNumber: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/deployment/index.ts
var GithubGithubDeploymentAri = class _GithubGithubDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pipelineId = opts.resourceIdSegmentValues.pipelineId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._deploymentSequenceNumber = opts.resourceIdSegmentValues.deploymentSequenceNumber;
  }
  get pipelineId() {
    return this._pipelineId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get deploymentSequenceNumber() {
    return this._deploymentSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubDeploymentAriStaticOpts.qualifier,
      platformQualifier: githubGithubDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubDeploymentAriStaticOpts.resourceOwner,
      resourceType: githubGithubDeploymentAriStaticOpts.resourceType,
      resourceId: `pipelineId/${opts.pipelineId}/environmentId/${opts.environmentId}/deploymentSequenceNumber/${opts.deploymentSequenceNumber}`,
      resourceIdSegmentValues: {
        pipelineId: opts.pipelineId,
        environmentId: opts.environmentId,
        deploymentSequenceNumber: opts.deploymentSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubDeploymentAriStaticOpts);
    return new _GithubGithubDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubDeploymentAriStaticOpts);
    return new _GithubGithubDeploymentAri(opts);
  }
  getVariables() {
    return {
      pipelineId: this.pipelineId,
      environmentId: this.environmentId,
      deploymentSequenceNumber: this.deploymentSequenceNumber
    };
  }
};

// src/github.github/pull-request/types.ts
var GithubGithubPullRequestAriResourceOwner = "github.github", GithubGithubPullRequestAriResourceType = "pull-request";

// src/github.github/pull-request/manifest.ts
var githubGithubPullRequestAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubPullRequestAriResourceOwner,
  resourceType: GithubGithubPullRequestAriResourceType,
  resourceIdSlug: "repositoryId/{repositoryId}/pullRequestId/{pullRequestId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/pull-request/index.ts
var GithubGithubPullRequestAri = class _GithubGithubPullRequestAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubPullRequestAriStaticOpts.qualifier,
      platformQualifier: githubGithubPullRequestAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubPullRequestAriStaticOpts.resourceOwner,
      resourceType: githubGithubPullRequestAriStaticOpts.resourceType,
      resourceId: `repositoryId/${opts.repositoryId}/pullRequestId/${opts.pullRequestId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId,
        pullRequestId: opts.pullRequestId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubPullRequestAriStaticOpts);
    return new _GithubGithubPullRequestAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubPullRequestAriStaticOpts);
    return new _GithubGithubPullRequestAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId,
      pullRequestId: this.pullRequestId
    };
  }
};

// src/github.github/remote-link/types.ts
var GithubGithubRemoteLinkAriResourceOwner = "github.github", GithubGithubRemoteLinkAriResourceType = "remote-link";

// src/github.github/remote-link/manifest.ts
var githubGithubRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubRemoteLinkAriResourceOwner,
  resourceType: GithubGithubRemoteLinkAriResourceType,
  resourceIdSlug: "{remoteLinkId}",
  resourceIdSegmentFormats: {
    remoteLinkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/remote-link/index.ts
var GithubGithubRemoteLinkAri = class _GithubGithubRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: githubGithubRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: githubGithubRemoteLinkAriStaticOpts.resourceType,
      resourceId: `${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubRemoteLinkAriStaticOpts);
    return new _GithubGithubRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubRemoteLinkAriStaticOpts);
    return new _GithubGithubRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/github.github/repository/types.ts
var GithubGithubRepositoryAriResourceOwner = "github.github", GithubGithubRepositoryAriResourceType = "repository";

// src/github.github/repository/manifest.ts
var githubGithubRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubRepositoryAriResourceOwner,
  resourceType: GithubGithubRepositoryAriResourceType,
  resourceIdSlug: "{repositoryId}",
  resourceIdSegmentFormats: {
    repositoryId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/repository/index.ts
var GithubGithubRepositoryAri = class _GithubGithubRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubRepositoryAriStaticOpts.qualifier,
      platformQualifier: githubGithubRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubRepositoryAriStaticOpts.resourceOwner,
      resourceType: githubGithubRepositoryAriStaticOpts.resourceType,
      resourceId: `${opts.repositoryId}`,
      resourceIdSegmentValues: {
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubRepositoryAriStaticOpts);
    return new _GithubGithubRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubRepositoryAriStaticOpts);
    return new _GithubGithubRepositoryAri(opts);
  }
  getVariables() {
    return {
      repositoryId: this.repositoryId
    };
  }
};

// src/github.github/vulnerability/types.ts
var GithubGithubVulnerabilityAriResourceOwner = "github.github", GithubGithubVulnerabilityAriResourceType = "vulnerability";

// src/github.github/vulnerability/manifest.ts
var githubGithubVulnerabilityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GithubGithubVulnerabilityAriResourceOwner,
  resourceType: GithubGithubVulnerabilityAriResourceType,
  resourceIdSlug: "{vulnerabilityId}",
  resourceIdSegmentFormats: {
    vulnerabilityId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/github.github/vulnerability/index.ts
var GithubGithubVulnerabilityAri = class _GithubGithubVulnerabilityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: githubGithubVulnerabilityAriStaticOpts.qualifier,
      platformQualifier: githubGithubVulnerabilityAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: githubGithubVulnerabilityAriStaticOpts.resourceOwner,
      resourceType: githubGithubVulnerabilityAriStaticOpts.resourceType,
      resourceId: `${opts.vulnerabilityId}`,
      resourceIdSegmentValues: {
        vulnerabilityId: opts.vulnerabilityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, githubGithubVulnerabilityAriStaticOpts);
    return new _GithubGithubVulnerabilityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, githubGithubVulnerabilityAriStaticOpts);
    return new _GithubGithubVulnerabilityAri(opts);
  }
  getVariables() {
    return {
      vulnerabilityId: this.vulnerabilityId
    };
  }
};

// src/gitlab.gitlab/remote-link/types.ts
var GitlabGitlabRemoteLinkAriResourceOwner = "gitlab.gitlab", GitlabGitlabRemoteLinkAriResourceType = "remote-link";

// src/gitlab.gitlab/remote-link/manifest.ts
var gitlabGitlabRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GitlabGitlabRemoteLinkAriResourceOwner,
  resourceType: GitlabGitlabRemoteLinkAriResourceType,
  resourceIdSlug: "{category}/{remoteLinkId}",
  resourceIdSegmentFormats: {
    category: /[a-zA-Z]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/gitlab.gitlab/remote-link/index.ts
var GitlabGitlabRemoteLinkAri = class _GitlabGitlabRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._category = opts.resourceIdSegmentValues.category, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get category() {
    return this._category;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: gitlabGitlabRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: gitlabGitlabRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: gitlabGitlabRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: gitlabGitlabRemoteLinkAriStaticOpts.resourceType,
      resourceId: `${opts.category}/${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        category: opts.category,
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, gitlabGitlabRemoteLinkAriStaticOpts);
    return new _GitlabGitlabRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, gitlabGitlabRemoteLinkAriStaticOpts);
    return new _GitlabGitlabRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      category: this.category,
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/gitlab.gitlab/repository/types.ts
var GitlabGitlabRepositoryAriResourceOwner = "gitlab.gitlab", GitlabGitlabRepositoryAriResourceType = "repository";

// src/gitlab.gitlab/repository/manifest.ts
var gitlabGitlabRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GitlabGitlabRepositoryAriResourceOwner,
  resourceType: GitlabGitlabRepositoryAriResourceType,
  resourceIdSlug: "project/{projectId}",
  resourceIdSegmentFormats: {
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/gitlab.gitlab/repository/index.ts
var GitlabGitlabRepositoryAri = class _GitlabGitlabRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: gitlabGitlabRepositoryAriStaticOpts.qualifier,
      platformQualifier: gitlabGitlabRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: gitlabGitlabRepositoryAriStaticOpts.resourceOwner,
      resourceType: gitlabGitlabRepositoryAriStaticOpts.resourceType,
      resourceId: `project/${opts.projectId}`,
      resourceIdSegmentValues: {
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, gitlabGitlabRepositoryAriStaticOpts);
    return new _GitlabGitlabRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, gitlabGitlabRepositoryAriStaticOpts);
    return new _GitlabGitlabRepositoryAri(opts);
  }
  getVariables() {
    return {
      projectId: this.projectId
    };
  }
};

// src/goal/goal-type/types.ts
var GoalGoalTypeAriResourceOwner = "goal", GoalGoalTypeAriResourceType = "goal-type";

// src/goal/goal-type/manifest.ts
var goalGoalTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoalGoalTypeAriResourceOwner,
  resourceType: GoalGoalTypeAriResourceType,
  resourceIdSlug: "{activationId}/{goalTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    goalTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/goal/goal-type/index.ts
var GoalGoalTypeAri = class _GoalGoalTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._goalTypeId = opts.resourceIdSegmentValues.goalTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get goalTypeId() {
    return this._goalTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: goalGoalTypeAriStaticOpts.qualifier,
      platformQualifier: goalGoalTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: goalGoalTypeAriStaticOpts.resourceOwner,
      resourceType: goalGoalTypeAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.goalTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        goalTypeId: opts.goalTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, goalGoalTypeAriStaticOpts);
    return new _GoalGoalTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, goalGoalTypeAriStaticOpts);
    return new _GoalGoalTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      goalTypeId: this.goalTypeId
    };
  }
};

// src/goal/metric-update/types.ts
var GoalMetricUpdateAriResourceOwner = "goal", GoalMetricUpdateAriResourceType = "metric-update";

// src/goal/metric-update/manifest.ts
var goalMetricUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoalMetricUpdateAriResourceOwner,
  resourceType: GoalMetricUpdateAriResourceType,
  resourceIdSlug: "{activationId}/{goalMetricUpdateId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    goalMetricUpdateId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/goal/metric-update/index.ts
var GoalMetricUpdateAri = class _GoalMetricUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._goalMetricUpdateId = opts.resourceIdSegmentValues.goalMetricUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get goalMetricUpdateId() {
    return this._goalMetricUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: goalMetricUpdateAriStaticOpts.qualifier,
      platformQualifier: goalMetricUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: goalMetricUpdateAriStaticOpts.resourceOwner,
      resourceType: goalMetricUpdateAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.goalMetricUpdateId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        goalMetricUpdateId: opts.goalMetricUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, goalMetricUpdateAriStaticOpts);
    return new _GoalMetricUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, goalMetricUpdateAriStaticOpts);
    return new _GoalMetricUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      goalMetricUpdateId: this.goalMetricUpdateId
    };
  }
};

// src/goal/site/types.ts
var GoalSiteAriResourceOwner = "goal", GoalSiteAriResourceType = "site";

// src/goal/site/manifest.ts
var goalSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoalSiteAriResourceOwner,
  resourceType: GoalSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/goal/site/index.ts
var GoalSiteAri = class _GoalSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: goalSiteAriStaticOpts.qualifier,
      platformQualifier: goalSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: goalSiteAriStaticOpts.resourceOwner,
      resourceType: goalSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, goalSiteAriStaticOpts);
    return new _GoalSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, goalSiteAriStaticOpts);
    return new _GoalSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/goal/workspace/types.ts
var GoalWorkspaceAriResourceOwner = "goal", GoalWorkspaceAriResourceType = "workspace";

// src/goal/workspace/manifest.ts
var goalWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoalWorkspaceAriResourceOwner,
  resourceType: GoalWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/goal/workspace/index.ts
var GoalWorkspaceAri = class _GoalWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: goalWorkspaceAriStaticOpts.qualifier,
      platformQualifier: goalWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: goalWorkspaceAriStaticOpts.resourceOwner,
      resourceType: goalWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, goalWorkspaceAriStaticOpts);
    return new _GoalWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, goalWorkspaceAriStaticOpts);
    return new _GoalWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/google/account/types.ts
var GoogleAccountAriResourceOwner = "google", GoogleAccountAriResourceType = "account";

// src/google/account/manifest.ts
var googleAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleAccountAriResourceOwner,
  resourceType: GoogleAccountAriResourceType,
  resourceIdSlug: "{accountId}",
  resourceIdSegmentFormats: {
    accountId: /[a-zA-Z0-9\-_.~@;{}=]{0,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/google/account/index.ts
var GoogleAccountAri = class _GoogleAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._accountId = opts.resourceIdSegmentValues.accountId;
  }
  get accountId() {
    return this._accountId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleAccountAriStaticOpts.qualifier,
      platformQualifier: googleAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleAccountAriStaticOpts.resourceOwner,
      resourceType: googleAccountAriStaticOpts.resourceType,
      resourceId: `${opts.accountId}`,
      resourceIdSegmentValues: {
        accountId: opts.accountId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleAccountAriStaticOpts);
    return new _GoogleAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleAccountAriStaticOpts);
    return new _GoogleAccountAri(opts);
  }
  getVariables() {
    return {
      accountId: this.accountId
    };
  }
};

// src/google.gmail/message/types.ts
var GoogleGmailMessageAriResourceOwner = "google.gmail", GoogleGmailMessageAriResourceType = "message";

// src/google.gmail/message/manifest.ts
var googleGmailMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGmailMessageAriResourceOwner,
  resourceType: GoogleGmailMessageAriResourceType,
  resourceIdSlug: "{messageId}",
  resourceIdSegmentFormats: {
    messageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.gmail/message/index.ts
var GoogleGmailMessageAri = class _GoogleGmailMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._messageId = opts.resourceIdSegmentValues.messageId;
  }
  get messageId() {
    return this._messageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGmailMessageAriStaticOpts.qualifier,
      platformQualifier: googleGmailMessageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGmailMessageAriStaticOpts.resourceOwner,
      resourceType: googleGmailMessageAriStaticOpts.resourceType,
      resourceId: `${opts.messageId}`,
      resourceIdSegmentValues: {
        messageId: opts.messageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGmailMessageAriStaticOpts);
    return new _GoogleGmailMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGmailMessageAriStaticOpts);
    return new _GoogleGmailMessageAri(opts);
  }
  getVariables() {
    return {
      messageId: this.messageId
    };
  }
};

// src/google.google-calendar/calendar-event/types.ts
var GoogleGoogleCalendarCalendarEventAriResourceOwner = "google.google-calendar", GoogleGoogleCalendarCalendarEventAriResourceType = "calendar-event";

// src/google.google-calendar/calendar-event/manifest.ts
var googleGoogleCalendarCalendarEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGoogleCalendarCalendarEventAriResourceOwner,
  resourceType: GoogleGoogleCalendarCalendarEventAriResourceType,
  resourceIdSlug: "calendarId/{calendarId}/eventId/{eventId}",
  resourceIdSegmentFormats: {
    calendarId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.google-calendar/calendar-event/index.ts
var GoogleGoogleCalendarCalendarEventAri = class _GoogleGoogleCalendarCalendarEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._calendarId = opts.resourceIdSegmentValues.calendarId, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get calendarId() {
    return this._calendarId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGoogleCalendarCalendarEventAriStaticOpts.qualifier,
      platformQualifier: googleGoogleCalendarCalendarEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGoogleCalendarCalendarEventAriStaticOpts.resourceOwner,
      resourceType: googleGoogleCalendarCalendarEventAriStaticOpts.resourceType,
      resourceId: `calendarId/${opts.calendarId}/eventId/${opts.eventId}`,
      resourceIdSegmentValues: {
        calendarId: opts.calendarId,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGoogleCalendarCalendarEventAriStaticOpts);
    return new _GoogleGoogleCalendarCalendarEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGoogleCalendarCalendarEventAriStaticOpts);
    return new _GoogleGoogleCalendarCalendarEventAri(opts);
  }
  getVariables() {
    return {
      calendarId: this.calendarId,
      eventId: this.eventId
    };
  }
};

// src/google.google-drive/document/types.ts
var GoogleGoogleDriveDocumentAriResourceOwner = "google.google-drive", GoogleGoogleDriveDocumentAriResourceType = "document";

// src/google.google-drive/document/manifest.ts
var googleGoogleDriveDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGoogleDriveDocumentAriResourceOwner,
  resourceType: GoogleGoogleDriveDocumentAriResourceType,
  resourceIdSlug: "{googleDriveDocumentIdType}/{docId}",
  resourceIdSegmentFormats: {
    googleDriveDocumentIdType: /(documentId|spreadsheetId|presentationId|formId|folderId|imageId|audioId|videoId|pdfId|shortcutId|codeId|archiveId|web-pageId|pageId|blogpostId|otherId)/,
    // eslint-disable-line no-useless-escape
    docId: /[a-zA-Z0-9_-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.google-drive/document/index.ts
var GoogleGoogleDriveDocumentAri = class _GoogleGoogleDriveDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._googleDriveDocumentIdType = opts.resourceIdSegmentValues.googleDriveDocumentIdType, this._docId = opts.resourceIdSegmentValues.docId;
  }
  get googleDriveDocumentIdType() {
    return this._googleDriveDocumentIdType;
  }
  get docId() {
    return this._docId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGoogleDriveDocumentAriStaticOpts.qualifier,
      platformQualifier: googleGoogleDriveDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGoogleDriveDocumentAriStaticOpts.resourceOwner,
      resourceType: googleGoogleDriveDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.googleDriveDocumentIdType}/${opts.docId}`,
      resourceIdSegmentValues: {
        googleDriveDocumentIdType: opts.googleDriveDocumentIdType,
        docId: opts.docId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGoogleDriveDocumentAriStaticOpts);
    return new _GoogleGoogleDriveDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGoogleDriveDocumentAriStaticOpts);
    return new _GoogleGoogleDriveDocumentAri(opts);
  }
  getVariables() {
    return {
      googleDriveDocumentIdType: this.googleDriveDocumentIdType,
      docId: this.docId
    };
  }
};

// src/google.google-drive/remote-link/types.ts
var GoogleGoogleDriveRemoteLinkAriResourceOwner = "google.google-drive", GoogleGoogleDriveRemoteLinkAriResourceType = "remote-link";

// src/google.google-drive/remote-link/manifest.ts
var googleGoogleDriveRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGoogleDriveRemoteLinkAriResourceOwner,
  resourceType: GoogleGoogleDriveRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.google-drive/remote-link/index.ts
var GoogleGoogleDriveRemoteLinkAri = class _GoogleGoogleDriveRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGoogleDriveRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: googleGoogleDriveRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGoogleDriveRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: googleGoogleDriveRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGoogleDriveRemoteLinkAriStaticOpts);
    return new _GoogleGoogleDriveRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGoogleDriveRemoteLinkAriStaticOpts);
    return new _GoogleGoogleDriveRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/google.google-drive-rsl/document/types.ts
var GoogleGoogleDriveRslDocumentAriResourceOwner = "google.google-drive-rsl", GoogleGoogleDriveRslDocumentAriResourceType = "document";

// src/google.google-drive-rsl/document/manifest.ts
var googleGoogleDriveRslDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGoogleDriveRslDocumentAriResourceOwner,
  resourceType: GoogleGoogleDriveRslDocumentAriResourceType,
  resourceIdSlug: "{googleDriveDocumentIdType}/{docId}",
  resourceIdSegmentFormats: {
    googleDriveDocumentIdType: /(documentId|spreadsheetId|presentationId|formId|folderId|imageId|audioId|videoId|pdfId|shortcutId|codeId|archiveId|web-pageId|pageId|blogpostId|otherId)/,
    // eslint-disable-line no-useless-escape
    docId: /[a-zA-Z0-9_-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.google-drive-rsl/document/index.ts
var GoogleGoogleDriveRslDocumentAri = class _GoogleGoogleDriveRslDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._googleDriveDocumentIdType = opts.resourceIdSegmentValues.googleDriveDocumentIdType, this._docId = opts.resourceIdSegmentValues.docId;
  }
  get googleDriveDocumentIdType() {
    return this._googleDriveDocumentIdType;
  }
  get docId() {
    return this._docId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGoogleDriveRslDocumentAriStaticOpts.qualifier,
      platformQualifier: googleGoogleDriveRslDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGoogleDriveRslDocumentAriStaticOpts.resourceOwner,
      resourceType: googleGoogleDriveRslDocumentAriStaticOpts.resourceType,
      resourceId: `${opts.googleDriveDocumentIdType}/${opts.docId}`,
      resourceIdSegmentValues: {
        googleDriveDocumentIdType: opts.googleDriveDocumentIdType,
        docId: opts.docId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGoogleDriveRslDocumentAriStaticOpts);
    return new _GoogleGoogleDriveRslDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGoogleDriveRslDocumentAriStaticOpts);
    return new _GoogleGoogleDriveRslDocumentAri(opts);
  }
  getVariables() {
    return {
      googleDriveDocumentIdType: this.googleDriveDocumentIdType,
      docId: this.docId
    };
  }
};

// src/graph/branch/types.ts
var GraphBranchAriResourceOwner = "graph", GraphBranchAriResourceType = "branch";

// src/graph/branch/manifest.ts
var graphBranchAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphBranchAriResourceOwner,
  resourceType: GraphBranchAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/branch/index.ts
var GraphBranchAri = class _GraphBranchAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphBranchAriStaticOpts.qualifier,
      platformQualifier: graphBranchAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphBranchAriStaticOpts.resourceOwner,
      resourceType: graphBranchAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBranchAriStaticOpts);
    return new _GraphBranchAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphBranchAriStaticOpts);
    return new _GraphBranchAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      branchId: this.branchId
    };
  }
};

// src/graph/branch-history/types.ts
var GraphBranchHistoryAriResourceOwner = "graph", GraphBranchHistoryAriResourceType = "branch-history";

// src/graph/branch-history/manifest.ts
var graphBranchHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphBranchHistoryAriResourceOwner,
  resourceType: GraphBranchHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/branch-history/index.ts
var GraphBranchHistoryAri = class _GraphBranchHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphBranchHistoryAriStaticOpts.qualifier,
      platformQualifier: graphBranchHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphBranchHistoryAriStaticOpts.resourceOwner,
      resourceType: graphBranchHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBranchHistoryAriStaticOpts);
    return new _GraphBranchHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphBranchHistoryAriStaticOpts);
    return new _GraphBranchHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      branchId: this.branchId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/build/types.ts
var GraphBuildAriResourceOwner = "graph", GraphBuildAriResourceType = "build";

// src/graph/build/manifest.ts
var graphBuildAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphBuildAriResourceOwner,
  resourceType: GraphBuildAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/build/index.ts
var GraphBuildAri = class _GraphBuildAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphBuildAriStaticOpts.qualifier,
      platformQualifier: graphBuildAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphBuildAriStaticOpts.resourceOwner,
      resourceType: graphBuildAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBuildAriStaticOpts);
    return new _GraphBuildAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphBuildAriStaticOpts);
    return new _GraphBuildAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      buildId: this.buildId
    };
  }
};

// src/graph/build-history/types.ts
var GraphBuildHistoryAriResourceOwner = "graph", GraphBuildHistoryAriResourceType = "build-history";

// src/graph/build-history/manifest.ts
var graphBuildHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphBuildHistoryAriResourceOwner,
  resourceType: GraphBuildHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/build-history/index.ts
var GraphBuildHistoryAri = class _GraphBuildHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphBuildHistoryAriStaticOpts.qualifier,
      platformQualifier: graphBuildHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphBuildHistoryAriStaticOpts.resourceOwner,
      resourceType: graphBuildHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBuildHistoryAriStaticOpts);
    return new _GraphBuildHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphBuildHistoryAriStaticOpts);
    return new _GraphBuildHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      buildId: this.buildId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/calendar-event/types.ts
var GraphCalendarEventAriResourceOwner = "graph", GraphCalendarEventAriResourceType = "calendar-event";

// src/graph/calendar-event/manifest.ts
var graphCalendarEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCalendarEventAriResourceOwner,
  resourceType: GraphCalendarEventAriResourceType,
  resourceIdSlug: "activation/{activationId}/{calendarEventId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    calendarEventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/calendar-event/index.ts
var GraphCalendarEventAri = class _GraphCalendarEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId;
  }
  get activationId() {
    return this._activationId;
  }
  get calendarEventId() {
    return this._calendarEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCalendarEventAriStaticOpts.qualifier,
      platformQualifier: graphCalendarEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCalendarEventAriStaticOpts.resourceOwner,
      resourceType: graphCalendarEventAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.calendarEventId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        calendarEventId: opts.calendarEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCalendarEventAriStaticOpts);
    return new _GraphCalendarEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCalendarEventAriStaticOpts);
    return new _GraphCalendarEventAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      calendarEventId: this.calendarEventId
    };
  }
};

// src/graph/calendar-event-history/types.ts
var GraphCalendarEventHistoryAriResourceOwner = "graph", GraphCalendarEventHistoryAriResourceType = "calendar-event-history";

// src/graph/calendar-event-history/manifest.ts
var graphCalendarEventHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCalendarEventHistoryAriResourceOwner,
  resourceType: GraphCalendarEventHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{calendarEventId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    calendarEventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/calendar-event-history/index.ts
var GraphCalendarEventHistoryAri = class _GraphCalendarEventHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get calendarEventId() {
    return this._calendarEventId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCalendarEventHistoryAriStaticOpts.qualifier,
      platformQualifier: graphCalendarEventHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCalendarEventHistoryAriStaticOpts.resourceOwner,
      resourceType: graphCalendarEventHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.calendarEventId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        calendarEventId: opts.calendarEventId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCalendarEventHistoryAriStaticOpts);
    return new _GraphCalendarEventHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCalendarEventHistoryAriStaticOpts);
    return new _GraphCalendarEventHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      calendarEventId: this.calendarEventId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/comment/types.ts
var GraphCommentAriResourceOwner = "graph", GraphCommentAriResourceType = "comment";

// src/graph/comment/manifest.ts
var graphCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCommentAriResourceOwner,
  resourceType: GraphCommentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/comment/index.ts
var GraphCommentAri = class _GraphCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCommentAriStaticOpts.qualifier,
      platformQualifier: graphCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCommentAriStaticOpts.resourceOwner,
      resourceType: graphCommentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCommentAriStaticOpts);
    return new _GraphCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCommentAriStaticOpts);
    return new _GraphCommentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

// src/graph/comment-history/types.ts
var GraphCommentHistoryAriResourceOwner = "graph", GraphCommentHistoryAriResourceType = "comment-history";

// src/graph/comment-history/manifest.ts
var graphCommentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCommentHistoryAriResourceOwner,
  resourceType: GraphCommentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/comment-history/index.ts
var GraphCommentHistoryAri = class _GraphCommentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCommentHistoryAriStaticOpts.qualifier,
      platformQualifier: graphCommentHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCommentHistoryAriStaticOpts.resourceOwner,
      resourceType: graphCommentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCommentHistoryAriStaticOpts);
    return new _GraphCommentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCommentHistoryAriStaticOpts);
    return new _GraphCommentHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/commit/types.ts
var GraphCommitAriResourceOwner = "graph", GraphCommitAriResourceType = "commit";

// src/graph/commit/manifest.ts
var graphCommitAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCommitAriResourceOwner,
  resourceType: GraphCommitAriResourceType,
  resourceIdSlug: "activation/{activationId}/{commitId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commitId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/commit/index.ts
var GraphCommitAri = class _GraphCommitAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._commitId = opts.resourceIdSegmentValues.commitId;
  }
  get activationId() {
    return this._activationId;
  }
  get commitId() {
    return this._commitId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCommitAriStaticOpts.qualifier,
      platformQualifier: graphCommitAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCommitAriStaticOpts.resourceOwner,
      resourceType: graphCommitAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.commitId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        commitId: opts.commitId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCommitAriStaticOpts);
    return new _GraphCommitAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCommitAriStaticOpts);
    return new _GraphCommitAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      commitId: this.commitId
    };
  }
};

// src/graph/content/types.ts
var GraphContentAriResourceOwner = "graph", GraphContentAriResourceType = "content";

// src/graph/content/manifest.ts
var graphContentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphContentAriResourceOwner,
  resourceType: GraphContentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{contentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    contentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/content/index.ts
var GraphContentAri = class _GraphContentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._contentId = opts.resourceIdSegmentValues.contentId;
  }
  get activationId() {
    return this._activationId;
  }
  get contentId() {
    return this._contentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphContentAriStaticOpts.qualifier,
      platformQualifier: graphContentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphContentAriStaticOpts.resourceOwner,
      resourceType: graphContentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.contentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        contentId: opts.contentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphContentAriStaticOpts);
    return new _GraphContentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphContentAriStaticOpts);
    return new _GraphContentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      contentId: this.contentId
    };
  }
};

// src/graph/conversation/types.ts
var GraphConversationAriResourceOwner = "graph", GraphConversationAriResourceType = "conversation";

// src/graph/conversation/manifest.ts
var graphConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphConversationAriResourceOwner,
  resourceType: GraphConversationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/conversation/index.ts
var GraphConversationAri = class _GraphConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphConversationAriStaticOpts.qualifier,
      platformQualifier: graphConversationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphConversationAriStaticOpts.resourceOwner,
      resourceType: graphConversationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphConversationAriStaticOpts);
    return new _GraphConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphConversationAriStaticOpts);
    return new _GraphConversationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

// src/graph/conversation-chunk/types.ts
var GraphConversationChunkAriResourceOwner = "graph", GraphConversationChunkAriResourceType = "conversation-chunk";

// src/graph/conversation-chunk/manifest.ts
var graphConversationChunkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphConversationChunkAriResourceOwner,
  resourceType: GraphConversationChunkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{chunkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    chunkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/conversation-chunk/index.ts
var GraphConversationChunkAri = class _GraphConversationChunkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._chunkId = opts.resourceIdSegmentValues.chunkId;
  }
  get activationId() {
    return this._activationId;
  }
  get chunkId() {
    return this._chunkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphConversationChunkAriStaticOpts.qualifier,
      platformQualifier: graphConversationChunkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphConversationChunkAriStaticOpts.resourceOwner,
      resourceType: graphConversationChunkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.chunkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        chunkId: opts.chunkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphConversationChunkAriStaticOpts);
    return new _GraphConversationChunkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphConversationChunkAriStaticOpts);
    return new _GraphConversationChunkAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      chunkId: this.chunkId
    };
  }
};

// src/graph/conversation-history/types.ts
var GraphConversationHistoryAriResourceOwner = "graph", GraphConversationHistoryAriResourceType = "conversation-history";

// src/graph/conversation-history/manifest.ts
var graphConversationHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphConversationHistoryAriResourceOwner,
  resourceType: GraphConversationHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/conversation-history/index.ts
var GraphConversationHistoryAri = class _GraphConversationHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphConversationHistoryAriStaticOpts.qualifier,
      platformQualifier: graphConversationHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphConversationHistoryAriStaticOpts.resourceOwner,
      resourceType: graphConversationHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphConversationHistoryAriStaticOpts);
    return new _GraphConversationHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphConversationHistoryAriStaticOpts);
    return new _GraphConversationHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/customer-org/types.ts
var GraphCustomerOrgAriResourceOwner = "graph", GraphCustomerOrgAriResourceType = "customer-org";

// src/graph/customer-org/manifest.ts
var graphCustomerOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCustomerOrgAriResourceOwner,
  resourceType: GraphCustomerOrgAriResourceType,
  resourceIdSlug: "activation/{activationId}/{customerOrgId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    customerOrgId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/customer-org/index.ts
var GraphCustomerOrgAri = class _GraphCustomerOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._customerOrgId = opts.resourceIdSegmentValues.customerOrgId;
  }
  get activationId() {
    return this._activationId;
  }
  get customerOrgId() {
    return this._customerOrgId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCustomerOrgAriStaticOpts.qualifier,
      platformQualifier: graphCustomerOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCustomerOrgAriStaticOpts.resourceOwner,
      resourceType: graphCustomerOrgAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.customerOrgId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        customerOrgId: opts.customerOrgId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCustomerOrgAriStaticOpts);
    return new _GraphCustomerOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCustomerOrgAriStaticOpts);
    return new _GraphCustomerOrgAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      customerOrgId: this.customerOrgId
    };
  }
};

// src/graph/customer-org-history/types.ts
var GraphCustomerOrgHistoryAriResourceOwner = "graph", GraphCustomerOrgHistoryAriResourceType = "customer-org-history";

// src/graph/customer-org-history/manifest.ts
var graphCustomerOrgHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphCustomerOrgHistoryAriResourceOwner,
  resourceType: GraphCustomerOrgHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{customerOrgId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    customerOrgId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/customer-org-history/index.ts
var GraphCustomerOrgHistoryAri = class _GraphCustomerOrgHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._customerOrgId = opts.resourceIdSegmentValues.customerOrgId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get customerOrgId() {
    return this._customerOrgId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphCustomerOrgHistoryAriStaticOpts.qualifier,
      platformQualifier: graphCustomerOrgHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphCustomerOrgHistoryAriStaticOpts.resourceOwner,
      resourceType: graphCustomerOrgHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.customerOrgId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        customerOrgId: opts.customerOrgId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCustomerOrgHistoryAriStaticOpts);
    return new _GraphCustomerOrgHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphCustomerOrgHistoryAriStaticOpts);
    return new _GraphCustomerOrgHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      customerOrgId: this.customerOrgId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/deal/types.ts
var GraphDealAriResourceOwner = "graph", GraphDealAriResourceType = "deal";

// src/graph/deal/manifest.ts
var graphDealAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDealAriResourceOwner,
  resourceType: GraphDealAriResourceType,
  resourceIdSlug: "activation/{activationId}/{dealId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dealId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/deal/index.ts
var GraphDealAri = class _GraphDealAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._dealId = opts.resourceIdSegmentValues.dealId;
  }
  get activationId() {
    return this._activationId;
  }
  get dealId() {
    return this._dealId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDealAriStaticOpts.qualifier,
      platformQualifier: graphDealAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDealAriStaticOpts.resourceOwner,
      resourceType: graphDealAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.dealId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dealId: opts.dealId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDealAriStaticOpts);
    return new _GraphDealAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDealAriStaticOpts);
    return new _GraphDealAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      dealId: this.dealId
    };
  }
};

// src/graph/deal-history/types.ts
var GraphDealHistoryAriResourceOwner = "graph", GraphDealHistoryAriResourceType = "deal-history";

// src/graph/deal-history/manifest.ts
var graphDealHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDealHistoryAriResourceOwner,
  resourceType: GraphDealHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{dealId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dealId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/deal-history/index.ts
var GraphDealHistoryAri = class _GraphDealHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._dealId = opts.resourceIdSegmentValues.dealId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get dealId() {
    return this._dealId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDealHistoryAriStaticOpts.qualifier,
      platformQualifier: graphDealHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDealHistoryAriStaticOpts.resourceOwner,
      resourceType: graphDealHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.dealId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dealId: opts.dealId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDealHistoryAriStaticOpts);
    return new _GraphDealHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDealHistoryAriStaticOpts);
    return new _GraphDealHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      dealId: this.dealId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/deployment/types.ts
var GraphDeploymentAriResourceOwner = "graph", GraphDeploymentAriResourceType = "deployment";

// src/graph/deployment/manifest.ts
var graphDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDeploymentAriResourceOwner,
  resourceType: GraphDeploymentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/deployment/index.ts
var GraphDeploymentAri = class _GraphDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDeploymentAriStaticOpts.qualifier,
      platformQualifier: graphDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDeploymentAriStaticOpts.resourceOwner,
      resourceType: graphDeploymentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDeploymentAriStaticOpts);
    return new _GraphDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDeploymentAriStaticOpts);
    return new _GraphDeploymentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      deploymentId: this.deploymentId
    };
  }
};

// src/graph/deployment-history/types.ts
var GraphDeploymentHistoryAriResourceOwner = "graph", GraphDeploymentHistoryAriResourceType = "deployment-history";

// src/graph/deployment-history/manifest.ts
var graphDeploymentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDeploymentHistoryAriResourceOwner,
  resourceType: GraphDeploymentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/deployment-history/index.ts
var GraphDeploymentHistoryAri = class _GraphDeploymentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDeploymentHistoryAriStaticOpts.qualifier,
      platformQualifier: graphDeploymentHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDeploymentHistoryAriStaticOpts.resourceOwner,
      resourceType: graphDeploymentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDeploymentHistoryAriStaticOpts);
    return new _GraphDeploymentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDeploymentHistoryAriStaticOpts);
    return new _GraphDeploymentHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      deploymentId: this.deploymentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/design/types.ts
var GraphDesignAriResourceOwner = "graph", GraphDesignAriResourceType = "design";

// src/graph/design/manifest.ts
var graphDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDesignAriResourceOwner,
  resourceType: GraphDesignAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/design/index.ts
var GraphDesignAri = class _GraphDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDesignAriStaticOpts.qualifier,
      platformQualifier: graphDesignAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDesignAriStaticOpts.resourceOwner,
      resourceType: graphDesignAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDesignAriStaticOpts);
    return new _GraphDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDesignAriStaticOpts);
    return new _GraphDesignAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      designId: this.designId
    };
  }
};

// src/graph/design-history/types.ts
var GraphDesignHistoryAriResourceOwner = "graph", GraphDesignHistoryAriResourceType = "design-history";

// src/graph/design-history/manifest.ts
var graphDesignHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDesignHistoryAriResourceOwner,
  resourceType: GraphDesignHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/design-history/index.ts
var GraphDesignHistoryAri = class _GraphDesignHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDesignHistoryAriStaticOpts.qualifier,
      platformQualifier: graphDesignHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDesignHistoryAriStaticOpts.resourceOwner,
      resourceType: graphDesignHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDesignHistoryAriStaticOpts);
    return new _GraphDesignHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDesignHistoryAriStaticOpts);
    return new _GraphDesignHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      designId: this.designId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/devops-component/types.ts
var GraphDevopsComponentAriResourceOwner = "graph", GraphDevopsComponentAriResourceType = "devops-component";

// src/graph/devops-component/manifest.ts
var graphDevopsComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDevopsComponentAriResourceOwner,
  resourceType: GraphDevopsComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{devopsComponentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    devopsComponentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/devops-component/index.ts
var GraphDevopsComponentAri = class _GraphDevopsComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;
  }
  get activationId() {
    return this._activationId;
  }
  get devopsComponentId() {
    return this._devopsComponentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDevopsComponentAriStaticOpts.qualifier,
      platformQualifier: graphDevopsComponentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDevopsComponentAriStaticOpts.resourceOwner,
      resourceType: graphDevopsComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        devopsComponentId: opts.devopsComponentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDevopsComponentAriStaticOpts);
    return new _GraphDevopsComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDevopsComponentAriStaticOpts);
    return new _GraphDevopsComponentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      devopsComponentId: this.devopsComponentId
    };
  }
};

// src/graph/document/types.ts
var GraphDocumentAriResourceOwner = "graph", GraphDocumentAriResourceType = "document";

// src/graph/document/manifest.ts
var graphDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDocumentAriResourceOwner,
  resourceType: GraphDocumentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/document/index.ts
var GraphDocumentAri = class _GraphDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDocumentAriStaticOpts.qualifier,
      platformQualifier: graphDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDocumentAriStaticOpts.resourceOwner,
      resourceType: graphDocumentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDocumentAriStaticOpts);
    return new _GraphDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDocumentAriStaticOpts);
    return new _GraphDocumentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      documentId: this.documentId
    };
  }
};

// src/graph/document-history/types.ts
var GraphDocumentHistoryAriResourceOwner = "graph", GraphDocumentHistoryAriResourceType = "document-history";

// src/graph/document-history/manifest.ts
var graphDocumentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphDocumentHistoryAriResourceOwner,
  resourceType: GraphDocumentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/document-history/index.ts
var GraphDocumentHistoryAri = class _GraphDocumentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphDocumentHistoryAriStaticOpts.qualifier,
      platformQualifier: graphDocumentHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphDocumentHistoryAriStaticOpts.resourceOwner,
      resourceType: graphDocumentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDocumentHistoryAriStaticOpts);
    return new _GraphDocumentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphDocumentHistoryAriStaticOpts);
    return new _GraphDocumentHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      documentId: this.documentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/employee/types.ts
var GraphEmployeeAriResourceOwner = "graph", GraphEmployeeAriResourceType = "employee";

// src/graph/employee/manifest.ts
var graphEmployeeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphEmployeeAriResourceOwner,
  resourceType: GraphEmployeeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{employeeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    employeeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/employee/index.ts
var GraphEmployeeAri = class _GraphEmployeeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._employeeId = opts.resourceIdSegmentValues.employeeId;
  }
  get activationId() {
    return this._activationId;
  }
  get employeeId() {
    return this._employeeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphEmployeeAriStaticOpts.qualifier,
      platformQualifier: graphEmployeeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphEmployeeAriStaticOpts.resourceOwner,
      resourceType: graphEmployeeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.employeeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        employeeId: opts.employeeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphEmployeeAriStaticOpts);
    return new _GraphEmployeeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphEmployeeAriStaticOpts);
    return new _GraphEmployeeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      employeeId: this.employeeId
    };
  }
};

// src/graph/employee-history/types.ts
var GraphEmployeeHistoryAriResourceOwner = "graph", GraphEmployeeHistoryAriResourceType = "employee-history";

// src/graph/employee-history/manifest.ts
var graphEmployeeHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphEmployeeHistoryAriResourceOwner,
  resourceType: GraphEmployeeHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{employeeId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    employeeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/employee-history/index.ts
var GraphEmployeeHistoryAri = class _GraphEmployeeHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._employeeId = opts.resourceIdSegmentValues.employeeId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get employeeId() {
    return this._employeeId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphEmployeeHistoryAriStaticOpts.qualifier,
      platformQualifier: graphEmployeeHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphEmployeeHistoryAriStaticOpts.resourceOwner,
      resourceType: graphEmployeeHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.employeeId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        employeeId: opts.employeeId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphEmployeeHistoryAriStaticOpts);
    return new _GraphEmployeeHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphEmployeeHistoryAriStaticOpts);
    return new _GraphEmployeeHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      employeeId: this.employeeId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/feature-flag/types.ts
var GraphFeatureFlagAriResourceOwner = "graph", GraphFeatureFlagAriResourceType = "feature-flag";

// src/graph/feature-flag/manifest.ts
var graphFeatureFlagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphFeatureFlagAriResourceOwner,
  resourceType: GraphFeatureFlagAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/feature-flag/index.ts
var GraphFeatureFlagAri = class _GraphFeatureFlagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphFeatureFlagAriStaticOpts.qualifier,
      platformQualifier: graphFeatureFlagAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphFeatureFlagAriStaticOpts.resourceOwner,
      resourceType: graphFeatureFlagAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphFeatureFlagAriStaticOpts);
    return new _GraphFeatureFlagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphFeatureFlagAriStaticOpts);
    return new _GraphFeatureFlagAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      featureFlagId: this.featureFlagId
    };
  }
};

// src/graph/feature-flag-history/types.ts
var GraphFeatureFlagHistoryAriResourceOwner = "graph", GraphFeatureFlagHistoryAriResourceType = "feature-flag-history";

// src/graph/feature-flag-history/manifest.ts
var graphFeatureFlagHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphFeatureFlagHistoryAriResourceOwner,
  resourceType: GraphFeatureFlagHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/feature-flag-history/index.ts
var GraphFeatureFlagHistoryAri = class _GraphFeatureFlagHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphFeatureFlagHistoryAriStaticOpts.qualifier,
      platformQualifier: graphFeatureFlagHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphFeatureFlagHistoryAriStaticOpts.resourceOwner,
      resourceType: graphFeatureFlagHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphFeatureFlagHistoryAriStaticOpts);
    return new _GraphFeatureFlagHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphFeatureFlagHistoryAriStaticOpts);
    return new _GraphFeatureFlagHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      featureFlagId: this.featureFlagId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/incident/types.ts
var GraphIncidentAriResourceOwner = "graph", GraphIncidentAriResourceType = "incident";

// src/graph/incident/manifest.ts
var graphIncidentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphIncidentAriResourceOwner,
  resourceType: GraphIncidentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/incident/index.ts
var GraphIncidentAri = class _GraphIncidentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphIncidentAriStaticOpts.qualifier,
      platformQualifier: graphIncidentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphIncidentAriStaticOpts.resourceOwner,
      resourceType: graphIncidentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphIncidentAriStaticOpts);
    return new _GraphIncidentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphIncidentAriStaticOpts);
    return new _GraphIncidentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      incidentId: this.incidentId
    };
  }
};

// src/graph/incident-history/types.ts
var GraphIncidentHistoryAriResourceOwner = "graph", GraphIncidentHistoryAriResourceType = "incident-history";

// src/graph/incident-history/manifest.ts
var graphIncidentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphIncidentHistoryAriResourceOwner,
  resourceType: GraphIncidentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/incident-history/index.ts
var GraphIncidentHistoryAri = class _GraphIncidentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphIncidentHistoryAriStaticOpts.qualifier,
      platformQualifier: graphIncidentHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphIncidentHistoryAriStaticOpts.resourceOwner,
      resourceType: graphIncidentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphIncidentHistoryAriStaticOpts);
    return new _GraphIncidentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphIncidentHistoryAriStaticOpts);
    return new _GraphIncidentHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      incidentId: this.incidentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/integration-context/types.ts
var GraphIntegrationContextAriResourceOwner = "graph", GraphIntegrationContextAriResourceType = "integration-context";

// src/graph/integration-context/manifest.ts
var graphIntegrationContextAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphIntegrationContextAriResourceOwner,
  resourceType: GraphIntegrationContextAriResourceType,
  resourceIdSlug: "{integrationContextId}",
  resourceIdSegmentFormats: {
    integrationContextId: /(ecda99d9-9b42-4bf7-8b4f-ecb5fcf5868c|3d1b1176-a2e3-4233-82bd-29a9cfc80cab|161675af-ebe2-4e6b-b5fd-e3fdf9f5ad84)/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/integration-context/index.ts
var GraphIntegrationContextAri = class _GraphIntegrationContextAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._integrationContextId = opts.resourceIdSegmentValues.integrationContextId;
  }
  get integrationContextId() {
    return this._integrationContextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphIntegrationContextAriStaticOpts.qualifier,
      platformQualifier: graphIntegrationContextAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphIntegrationContextAriStaticOpts.resourceOwner,
      resourceType: graphIntegrationContextAriStaticOpts.resourceType,
      resourceId: `${opts.integrationContextId}`,
      resourceIdSegmentValues: {
        integrationContextId: opts.integrationContextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphIntegrationContextAriStaticOpts);
    return new _GraphIntegrationContextAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphIntegrationContextAriStaticOpts);
    return new _GraphIntegrationContextAri(opts);
  }
  getVariables() {
    return {
      integrationContextId: this.integrationContextId
    };
  }
};

// src/graph/jira-project-and-devops-tool-relationship/types.ts
var GraphJiraProjectAndDevopsToolRelationshipAriResourceOwner = "graph", GraphJiraProjectAndDevopsToolRelationshipAriResourceType = "jira-project-and-devops-tool-relationship";

// src/graph/jira-project-and-devops-tool-relationship/manifest.ts
var graphJiraProjectAndDevopsToolRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphJiraProjectAndDevopsToolRelationshipAriResourceOwner,
  resourceType: GraphJiraProjectAndDevopsToolRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/jira-project-and-devops-tool-relationship/index.ts
var GraphJiraProjectAndDevopsToolRelationshipAri = class _GraphJiraProjectAndDevopsToolRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndDevopsToolRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndDevopsToolRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndDevopsToolRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndDevopsToolRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/jira-project-and-documentation-space-relationship/types.ts
var GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceOwner = "graph", GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceType = "jira-project-and-documentation-space-relationship";

// src/graph/jira-project-and-documentation-space-relationship/manifest.ts
var graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceOwner,
  resourceType: GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/jira-project-and-documentation-space-relationship/index.ts
var GraphJiraProjectAndDocumentationSpaceRelationshipAri = class _GraphJiraProjectAndDocumentationSpaceRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndDocumentationSpaceRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndDocumentationSpaceRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/jira-project-and-operations-team-relationship/types.ts
var GraphJiraProjectAndOperationsTeamRelationshipAriResourceOwner = "graph", GraphJiraProjectAndOperationsTeamRelationshipAriResourceType = "jira-project-and-operations-team-relationship";

// src/graph/jira-project-and-operations-team-relationship/manifest.ts
var graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphJiraProjectAndOperationsTeamRelationshipAriResourceOwner,
  resourceType: GraphJiraProjectAndOperationsTeamRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/jira-project-and-operations-team-relationship/index.ts
var GraphJiraProjectAndOperationsTeamRelationshipAri = class _GraphJiraProjectAndOperationsTeamRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndOperationsTeamRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndOperationsTeamRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/jira-project-and-vcs-repository-relationship/types.ts
var GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner = "graph", GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType = "jira-project-and-vcs-repository-relationship";

// src/graph/jira-project-and-vcs-repository-relationship/manifest.ts
var graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner,
  resourceType: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/jira-project-and-vcs-repository-relationship/index.ts
var GraphJiraProjectAndVcsRepositoryRelationshipAri = class _GraphJiraProjectAndVcsRepositoryRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/message/types.ts
var GraphMessageAriResourceOwner = "graph", GraphMessageAriResourceType = "message";

// src/graph/message/manifest.ts
var graphMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphMessageAriResourceOwner,
  resourceType: GraphMessageAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/message/index.ts
var GraphMessageAri = class _GraphMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphMessageAriStaticOpts.qualifier,
      platformQualifier: graphMessageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphMessageAriStaticOpts.resourceOwner,
      resourceType: graphMessageAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphMessageAriStaticOpts);
    return new _GraphMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphMessageAriStaticOpts);
    return new _GraphMessageAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

// src/graph/operations-workspace/types.ts
var GraphOperationsWorkspaceAriResourceOwner = "graph", GraphOperationsWorkspaceAriResourceType = "operations-workspace";

// src/graph/operations-workspace/manifest.ts
var graphOperationsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphOperationsWorkspaceAriResourceOwner,
  resourceType: GraphOperationsWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{operationsWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    operationsWorkspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/operations-workspace/index.ts
var GraphOperationsWorkspaceAri = class _GraphOperationsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get operationsWorkspaceId() {
    return this._operationsWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphOperationsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: graphOperationsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphOperationsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: graphOperationsWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        operationsWorkspaceId: opts.operationsWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphOperationsWorkspaceAriStaticOpts);
    return new _GraphOperationsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphOperationsWorkspaceAriStaticOpts);
    return new _GraphOperationsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      operationsWorkspaceId: this.operationsWorkspaceId
    };
  }
};

// src/graph/organisation/types.ts
var GraphOrganisationAriResourceOwner = "graph", GraphOrganisationAriResourceType = "organisation";

// src/graph/organisation/manifest.ts
var graphOrganisationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphOrganisationAriResourceOwner,
  resourceType: GraphOrganisationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organisationUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organisationUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/organisation/index.ts
var GraphOrganisationAri = class _GraphOrganisationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organisationUUID = opts.resourceIdSegmentValues.organisationUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get organisationUUID() {
    return this._organisationUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphOrganisationAriStaticOpts.qualifier,
      platformQualifier: graphOrganisationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphOrganisationAriStaticOpts.resourceOwner,
      resourceType: graphOrganisationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organisationUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organisationUUID: opts.organisationUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphOrganisationAriStaticOpts);
    return new _GraphOrganisationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphOrganisationAriStaticOpts);
    return new _GraphOrganisationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organisationUUID: this.organisationUUID
    };
  }
};

// src/graph/organisation-history/types.ts
var GraphOrganisationHistoryAriResourceOwner = "graph", GraphOrganisationHistoryAriResourceType = "organisation-history";

// src/graph/organisation-history/manifest.ts
var graphOrganisationHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphOrganisationHistoryAriResourceOwner,
  resourceType: GraphOrganisationHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organisationUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organisationUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/organisation-history/index.ts
var GraphOrganisationHistoryAri = class _GraphOrganisationHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organisationUUID = opts.resourceIdSegmentValues.organisationUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get organisationUUID() {
    return this._organisationUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphOrganisationHistoryAriStaticOpts.qualifier,
      platformQualifier: graphOrganisationHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphOrganisationHistoryAriStaticOpts.resourceOwner,
      resourceType: graphOrganisationHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organisationUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organisationUUID: opts.organisationUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphOrganisationHistoryAriStaticOpts);
    return new _GraphOrganisationHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphOrganisationHistoryAriStaticOpts);
    return new _GraphOrganisationHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organisationUUID: this.organisationUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/position/types.ts
var GraphPositionAriResourceOwner = "graph", GraphPositionAriResourceType = "position";

// src/graph/position/manifest.ts
var graphPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPositionAriResourceOwner,
  resourceType: GraphPositionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{positionUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    positionUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/position/index.ts
var GraphPositionAri = class _GraphPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._positionUUID = opts.resourceIdSegmentValues.positionUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get positionUUID() {
    return this._positionUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPositionAriStaticOpts.qualifier,
      platformQualifier: graphPositionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPositionAriStaticOpts.resourceOwner,
      resourceType: graphPositionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.positionUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        positionUUID: opts.positionUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPositionAriStaticOpts);
    return new _GraphPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPositionAriStaticOpts);
    return new _GraphPositionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      positionUUID: this.positionUUID
    };
  }
};

// src/graph/position-history/types.ts
var GraphPositionHistoryAriResourceOwner = "graph", GraphPositionHistoryAriResourceType = "position-history";

// src/graph/position-history/manifest.ts
var graphPositionHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPositionHistoryAriResourceOwner,
  resourceType: GraphPositionHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{positionUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    positionUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/position-history/index.ts
var GraphPositionHistoryAri = class _GraphPositionHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._positionUUID = opts.resourceIdSegmentValues.positionUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get positionUUID() {
    return this._positionUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPositionHistoryAriStaticOpts.qualifier,
      platformQualifier: graphPositionHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPositionHistoryAriStaticOpts.resourceOwner,
      resourceType: graphPositionHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.positionUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        positionUUID: opts.positionUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPositionHistoryAriStaticOpts);
    return new _GraphPositionHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPositionHistoryAriStaticOpts);
    return new _GraphPositionHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      positionUUID: this.positionUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/post-incident-review/types.ts
var GraphPostIncidentReviewAriResourceOwner = "graph", GraphPostIncidentReviewAriResourceType = "post-incident-review";

// src/graph/post-incident-review/manifest.ts
var graphPostIncidentReviewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPostIncidentReviewAriResourceOwner,
  resourceType: GraphPostIncidentReviewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/post-incident-review/index.ts
var GraphPostIncidentReviewAri = class _GraphPostIncidentReviewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPostIncidentReviewAriStaticOpts.qualifier,
      platformQualifier: graphPostIncidentReviewAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPostIncidentReviewAriStaticOpts.resourceOwner,
      resourceType: graphPostIncidentReviewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPostIncidentReviewAriStaticOpts);
    return new _GraphPostIncidentReviewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPostIncidentReviewAriStaticOpts);
    return new _GraphPostIncidentReviewAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId
    };
  }
};

// src/graph/post-incident-review-history/types.ts
var GraphPostIncidentReviewHistoryAriResourceOwner = "graph", GraphPostIncidentReviewHistoryAriResourceType = "post-incident-review-history";

// src/graph/post-incident-review-history/manifest.ts
var graphPostIncidentReviewHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPostIncidentReviewHistoryAriResourceOwner,
  resourceType: GraphPostIncidentReviewHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/post-incident-review-history/index.ts
var GraphPostIncidentReviewHistoryAri = class _GraphPostIncidentReviewHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPostIncidentReviewHistoryAriStaticOpts.qualifier,
      platformQualifier: graphPostIncidentReviewHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPostIncidentReviewHistoryAriStaticOpts.resourceOwner,
      resourceType: graphPostIncidentReviewHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPostIncidentReviewHistoryAriStaticOpts);
    return new _GraphPostIncidentReviewHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPostIncidentReviewHistoryAriStaticOpts);
    return new _GraphPostIncidentReviewHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/project/types.ts
var GraphProjectAriResourceOwner = "graph", GraphProjectAriResourceType = "project";

// src/graph/project/manifest.ts
var graphProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphProjectAriResourceOwner,
  resourceType: GraphProjectAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/project/index.ts
var GraphProjectAri = class _GraphProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphProjectAriStaticOpts.qualifier,
      platformQualifier: graphProjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphProjectAriStaticOpts.resourceOwner,
      resourceType: graphProjectAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphProjectAriStaticOpts);
    return new _GraphProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphProjectAriStaticOpts);
    return new _GraphProjectAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      projectId: this.projectId
    };
  }
};

// src/graph/project-history/types.ts
var GraphProjectHistoryAriResourceOwner = "graph", GraphProjectHistoryAriResourceType = "project-history";

// src/graph/project-history/manifest.ts
var graphProjectHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphProjectHistoryAriResourceOwner,
  resourceType: GraphProjectHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/project-history/index.ts
var GraphProjectHistoryAri = class _GraphProjectHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphProjectHistoryAriStaticOpts.qualifier,
      platformQualifier: graphProjectHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphProjectHistoryAriStaticOpts.resourceOwner,
      resourceType: graphProjectHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphProjectHistoryAriStaticOpts);
    return new _GraphProjectHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphProjectHistoryAriStaticOpts);
    return new _GraphProjectHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      projectId: this.projectId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/pull-request/types.ts
var GraphPullRequestAriResourceOwner = "graph", GraphPullRequestAriResourceType = "pull-request";

// src/graph/pull-request/manifest.ts
var graphPullRequestAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPullRequestAriResourceOwner,
  resourceType: GraphPullRequestAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/pull-request/index.ts
var GraphPullRequestAri = class _GraphPullRequestAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPullRequestAriStaticOpts.qualifier,
      platformQualifier: graphPullRequestAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPullRequestAriStaticOpts.resourceOwner,
      resourceType: graphPullRequestAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPullRequestAriStaticOpts);
    return new _GraphPullRequestAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPullRequestAriStaticOpts);
    return new _GraphPullRequestAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      pullRequestId: this.pullRequestId
    };
  }
};

// src/graph/pull-request-history/types.ts
var GraphPullRequestHistoryAriResourceOwner = "graph", GraphPullRequestHistoryAriResourceType = "pull-request-history";

// src/graph/pull-request-history/manifest.ts
var graphPullRequestHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPullRequestHistoryAriResourceOwner,
  resourceType: GraphPullRequestHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/pull-request-history/index.ts
var GraphPullRequestHistoryAri = class _GraphPullRequestHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPullRequestHistoryAriStaticOpts.qualifier,
      platformQualifier: graphPullRequestHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPullRequestHistoryAriStaticOpts.resourceOwner,
      resourceType: graphPullRequestHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPullRequestHistoryAriStaticOpts);
    return new _GraphPullRequestHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPullRequestHistoryAriStaticOpts);
    return new _GraphPullRequestHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      pullRequestId: this.pullRequestId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/relationship-type/types.ts
var GraphRelationshipTypeAriResourceOwner = "graph", GraphRelationshipTypeAriResourceType = "relationship-type";

// src/graph/relationship-type/manifest.ts
var graphRelationshipTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphRelationshipTypeAriResourceOwner,
  resourceType: GraphRelationshipTypeAriResourceType,
  resourceIdSlug: "{relationshipTypeId}",
  resourceIdSegmentFormats: {
    relationshipTypeId: /[a-zA-Z0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/relationship-type/index.ts
var GraphRelationshipTypeAri = class _GraphRelationshipTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._relationshipTypeId = opts.resourceIdSegmentValues.relationshipTypeId;
  }
  get relationshipTypeId() {
    return this._relationshipTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphRelationshipTypeAriStaticOpts.qualifier,
      platformQualifier: graphRelationshipTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphRelationshipTypeAriStaticOpts.resourceOwner,
      resourceType: graphRelationshipTypeAriStaticOpts.resourceType,
      resourceId: `${opts.relationshipTypeId}`,
      resourceIdSegmentValues: {
        relationshipTypeId: opts.relationshipTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRelationshipTypeAriStaticOpts);
    return new _GraphRelationshipTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphRelationshipTypeAriStaticOpts);
    return new _GraphRelationshipTypeAri(opts);
  }
  getVariables() {
    return {
      relationshipTypeId: this.relationshipTypeId
    };
  }
};

// src/graph/remote-link/types.ts
var GraphRemoteLinkAriResourceOwner = "graph", GraphRemoteLinkAriResourceType = "remote-link";

// src/graph/remote-link/manifest.ts
var graphRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphRemoteLinkAriResourceOwner,
  resourceType: GraphRemoteLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/remote-link/index.ts
var GraphRemoteLinkAri = class _GraphRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: graphRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: graphRemoteLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRemoteLinkAriStaticOpts);
    return new _GraphRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphRemoteLinkAriStaticOpts);
    return new _GraphRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/graph/remote-link-history/types.ts
var GraphRemoteLinkHistoryAriResourceOwner = "graph", GraphRemoteLinkHistoryAriResourceType = "remote-link-history";

// src/graph/remote-link-history/manifest.ts
var graphRemoteLinkHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphRemoteLinkHistoryAriResourceOwner,
  resourceType: GraphRemoteLinkHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/remote-link-history/index.ts
var GraphRemoteLinkHistoryAri = class _GraphRemoteLinkHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphRemoteLinkHistoryAriStaticOpts.qualifier,
      platformQualifier: graphRemoteLinkHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphRemoteLinkHistoryAriStaticOpts.resourceOwner,
      resourceType: graphRemoteLinkHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRemoteLinkHistoryAriStaticOpts);
    return new _GraphRemoteLinkHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphRemoteLinkHistoryAriStaticOpts);
    return new _GraphRemoteLinkHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/repository/types.ts
var GraphRepositoryAriResourceOwner = "graph", GraphRepositoryAriResourceType = "repository";

// src/graph/repository/manifest.ts
var graphRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphRepositoryAriResourceOwner,
  resourceType: GraphRepositoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{repositoryId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/repository/index.ts
var GraphRepositoryAri = class _GraphRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get activationId() {
    return this._activationId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphRepositoryAriStaticOpts.qualifier,
      platformQualifier: graphRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphRepositoryAriStaticOpts.resourceOwner,
      resourceType: graphRepositoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRepositoryAriStaticOpts);
    return new _GraphRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphRepositoryAriStaticOpts);
    return new _GraphRepositoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      repositoryId: this.repositoryId
    };
  }
};

// src/graph/role/types.ts
var GraphRoleAriResourceOwner = "graph", GraphRoleAriResourceType = "role";

// src/graph/role/manifest.ts
var graphRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphRoleAriResourceOwner,
  resourceType: GraphRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/role/index.ts
var GraphRoleAri = class _GraphRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphRoleAriStaticOpts.qualifier,
      platformQualifier: graphRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphRoleAriStaticOpts.resourceOwner,
      resourceType: graphRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRoleAriStaticOpts);
    return new _GraphRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphRoleAriStaticOpts);
    return new _GraphRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/graph/security-container/types.ts
var GraphSecurityContainerAriResourceOwner = "graph", GraphSecurityContainerAriResourceType = "security-container";

// src/graph/security-container/manifest.ts
var graphSecurityContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphSecurityContainerAriResourceOwner,
  resourceType: GraphSecurityContainerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityContainerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityContainerId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/security-container/index.ts
var GraphSecurityContainerAri = class _GraphSecurityContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityContainerId() {
    return this._securityContainerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSecurityContainerAriStaticOpts.qualifier,
      platformQualifier: graphSecurityContainerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSecurityContainerAriStaticOpts.resourceOwner,
      resourceType: graphSecurityContainerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityContainerId: opts.securityContainerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityContainerAriStaticOpts);
    return new _GraphSecurityContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSecurityContainerAriStaticOpts);
    return new _GraphSecurityContainerAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityContainerId: this.securityContainerId
    };
  }
};

// src/graph/security-workspace/types.ts
var GraphSecurityWorkspaceAriResourceOwner = "graph", GraphSecurityWorkspaceAriResourceType = "security-workspace";

// src/graph/security-workspace/manifest.ts
var graphSecurityWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphSecurityWorkspaceAriResourceOwner,
  resourceType: GraphSecurityWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityWorkspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/security-workspace/index.ts
var GraphSecurityWorkspaceAri = class _GraphSecurityWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityWorkspaceId() {
    return this._securityWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSecurityWorkspaceAriStaticOpts.qualifier,
      platformQualifier: graphSecurityWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSecurityWorkspaceAriStaticOpts.resourceOwner,
      resourceType: graphSecurityWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityWorkspaceId: opts.securityWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityWorkspaceAriStaticOpts);
    return new _GraphSecurityWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSecurityWorkspaceAriStaticOpts);
    return new _GraphSecurityWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityWorkspaceId: this.securityWorkspaceId
    };
  }
};

// src/graph/service/types.ts
var GraphServiceAriResourceOwner = "graph", GraphServiceAriResourceType = "service";

// src/graph/service/manifest.ts
var graphServiceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphServiceAriResourceOwner,
  resourceType: GraphServiceAriResourceType,
  resourceIdSlug: "{workspaceId}/{serviceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    serviceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service/index.ts
var GraphServiceAri = class _GraphServiceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._serviceId = opts.resourceIdSegmentValues.serviceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get serviceId() {
    return this._serviceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceAriStaticOpts.qualifier,
      platformQualifier: graphServiceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceAriStaticOpts.resourceOwner,
      resourceType: graphServiceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.serviceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        serviceId: opts.serviceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAriStaticOpts);
    return new _GraphServiceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceAriStaticOpts);
    return new _GraphServiceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      serviceId: this.serviceId
    };
  }
};

// src/graph/service-and-jira-project-relationship/types.ts
var GraphServiceAndJiraProjectRelationshipAriResourceOwner = "graph", GraphServiceAndJiraProjectRelationshipAriResourceType = "service-and-jira-project-relationship";

// src/graph/service-and-jira-project-relationship/manifest.ts
var graphServiceAndJiraProjectRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphServiceAndJiraProjectRelationshipAriResourceOwner,
  resourceType: GraphServiceAndJiraProjectRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service-and-jira-project-relationship/index.ts
var GraphServiceAndJiraProjectRelationshipAri = class _GraphServiceAndJiraProjectRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceAndJiraProjectRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphServiceAndJiraProjectRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceAndJiraProjectRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphServiceAndJiraProjectRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndJiraProjectRelationshipAriStaticOpts);
    return new _GraphServiceAndJiraProjectRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceAndJiraProjectRelationshipAriStaticOpts);
    return new _GraphServiceAndJiraProjectRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/service-and-operations-team-relationship/types.ts
var GraphServiceAndOperationsTeamRelationshipAriResourceOwner = "graph", GraphServiceAndOperationsTeamRelationshipAriResourceType = "service-and-operations-team-relationship";

// src/graph/service-and-operations-team-relationship/manifest.ts
var graphServiceAndOperationsTeamRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphServiceAndOperationsTeamRelationshipAriResourceOwner,
  resourceType: GraphServiceAndOperationsTeamRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service-and-operations-team-relationship/index.ts
var GraphServiceAndOperationsTeamRelationshipAri = class _GraphServiceAndOperationsTeamRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceAndOperationsTeamRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphServiceAndOperationsTeamRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceAndOperationsTeamRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphServiceAndOperationsTeamRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndOperationsTeamRelationshipAriStaticOpts);
    return new _GraphServiceAndOperationsTeamRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceAndOperationsTeamRelationshipAriStaticOpts);
    return new _GraphServiceAndOperationsTeamRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/service-and-vcs-repository-relationship/types.ts
var GraphServiceAndVcsRepositoryRelationshipAriResourceOwner = "graph", GraphServiceAndVcsRepositoryRelationshipAriResourceType = "service-and-vcs-repository-relationship";

// src/graph/service-and-vcs-repository-relationship/manifest.ts
var graphServiceAndVcsRepositoryRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphServiceAndVcsRepositoryRelationshipAriResourceOwner,
  resourceType: GraphServiceAndVcsRepositoryRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service-and-vcs-repository-relationship/index.ts
var GraphServiceAndVcsRepositoryRelationshipAri = class _GraphServiceAndVcsRepositoryRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphServiceAndVcsRepositoryRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceAndVcsRepositoryRelationshipAriStaticOpts);
    return new _GraphServiceAndVcsRepositoryRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/service-relationship/types.ts
var GraphServiceRelationshipAriResourceOwner = "graph", GraphServiceRelationshipAriResourceType = "service-relationship";

// src/graph/service-relationship/manifest.ts
var graphServiceRelationshipAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphServiceRelationshipAriResourceOwner,
  resourceType: GraphServiceRelationshipAriResourceType,
  resourceIdSlug: "{workspaceId}/{relationshipId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/service-relationship/index.ts
var GraphServiceRelationshipAri = class _GraphServiceRelationshipAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get relationshipId() {
    return this._relationshipId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphServiceRelationshipAriStaticOpts.qualifier,
      platformQualifier: graphServiceRelationshipAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphServiceRelationshipAriStaticOpts.resourceOwner,
      resourceType: graphServiceRelationshipAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        relationshipId: opts.relationshipId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceRelationshipAriStaticOpts);
    return new _GraphServiceRelationshipAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphServiceRelationshipAriStaticOpts);
    return new _GraphServiceRelationshipAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      relationshipId: this.relationshipId
    };
  }
};

// src/graph/space/types.ts
var GraphSpaceAriResourceOwner = "graph", GraphSpaceAriResourceType = "space";

// src/graph/space/manifest.ts
var graphSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphSpaceAriResourceOwner,
  resourceType: GraphSpaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/space/index.ts
var GraphSpaceAri = class _GraphSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSpaceAriStaticOpts.qualifier,
      platformQualifier: graphSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSpaceAriStaticOpts.resourceOwner,
      resourceType: graphSpaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSpaceAriStaticOpts);
    return new _GraphSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSpaceAriStaticOpts);
    return new _GraphSpaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

// src/graph/space-history/types.ts
var GraphSpaceHistoryAriResourceOwner = "graph", GraphSpaceHistoryAriResourceType = "space-history";

// src/graph/space-history/manifest.ts
var graphSpaceHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphSpaceHistoryAriResourceOwner,
  resourceType: GraphSpaceHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/space-history/index.ts
var GraphSpaceHistoryAri = class _GraphSpaceHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSpaceHistoryAriStaticOpts.qualifier,
      platformQualifier: graphSpaceHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSpaceHistoryAriStaticOpts.resourceOwner,
      resourceType: graphSpaceHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSpaceHistoryAriStaticOpts);
    return new _GraphSpaceHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSpaceHistoryAriStaticOpts);
    return new _GraphSpaceHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/thread-chunk/types.ts
var GraphThreadChunkAriResourceOwner = "graph", GraphThreadChunkAriResourceType = "thread-chunk";

// src/graph/thread-chunk/manifest.ts
var graphThreadChunkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphThreadChunkAriResourceOwner,
  resourceType: GraphThreadChunkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{chunkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    chunkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/thread-chunk/index.ts
var GraphThreadChunkAri = class _GraphThreadChunkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._chunkId = opts.resourceIdSegmentValues.chunkId;
  }
  get activationId() {
    return this._activationId;
  }
  get chunkId() {
    return this._chunkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphThreadChunkAriStaticOpts.qualifier,
      platformQualifier: graphThreadChunkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphThreadChunkAriStaticOpts.resourceOwner,
      resourceType: graphThreadChunkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.chunkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        chunkId: opts.chunkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphThreadChunkAriStaticOpts);
    return new _GraphThreadChunkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphThreadChunkAriStaticOpts);
    return new _GraphThreadChunkAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      chunkId: this.chunkId
    };
  }
};

// src/graph/video/types.ts
var GraphVideoAriResourceOwner = "graph", GraphVideoAriResourceType = "video";

// src/graph/video/manifest.ts
var graphVideoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphVideoAriResourceOwner,
  resourceType: GraphVideoAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/video/index.ts
var GraphVideoAri = class _GraphVideoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphVideoAriStaticOpts.qualifier,
      platformQualifier: graphVideoAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphVideoAriStaticOpts.resourceOwner,
      resourceType: graphVideoAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVideoAriStaticOpts);
    return new _GraphVideoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphVideoAriStaticOpts);
    return new _GraphVideoAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

// src/graph/video-history/types.ts
var GraphVideoHistoryAriResourceOwner = "graph", GraphVideoHistoryAriResourceType = "video-history";

// src/graph/video-history/manifest.ts
var graphVideoHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphVideoHistoryAriResourceOwner,
  resourceType: GraphVideoHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/video-history/index.ts
var GraphVideoHistoryAri = class _GraphVideoHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphVideoHistoryAriStaticOpts.qualifier,
      platformQualifier: graphVideoHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphVideoHistoryAriStaticOpts.resourceOwner,
      resourceType: graphVideoHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVideoHistoryAriStaticOpts);
    return new _GraphVideoHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphVideoHistoryAriStaticOpts);
    return new _GraphVideoHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/vulnerability/types.ts
var GraphVulnerabilityAriResourceOwner = "graph", GraphVulnerabilityAriResourceType = "vulnerability";

// src/graph/vulnerability/manifest.ts
var graphVulnerabilityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphVulnerabilityAriResourceOwner,
  resourceType: GraphVulnerabilityAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/vulnerability/index.ts
var GraphVulnerabilityAri = class _GraphVulnerabilityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphVulnerabilityAriStaticOpts.qualifier,
      platformQualifier: graphVulnerabilityAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphVulnerabilityAriStaticOpts.resourceOwner,
      resourceType: graphVulnerabilityAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVulnerabilityAriStaticOpts);
    return new _GraphVulnerabilityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphVulnerabilityAriStaticOpts);
    return new _GraphVulnerabilityAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId
    };
  }
};

// src/graph/vulnerability-history/types.ts
var GraphVulnerabilityHistoryAriResourceOwner = "graph", GraphVulnerabilityHistoryAriResourceType = "vulnerability-history";

// src/graph/vulnerability-history/manifest.ts
var graphVulnerabilityHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphVulnerabilityHistoryAriResourceOwner,
  resourceType: GraphVulnerabilityHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/vulnerability-history/index.ts
var GraphVulnerabilityHistoryAri = class _GraphVulnerabilityHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphVulnerabilityHistoryAriStaticOpts.qualifier,
      platformQualifier: graphVulnerabilityHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphVulnerabilityHistoryAriStaticOpts.resourceOwner,
      resourceType: graphVulnerabilityHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVulnerabilityHistoryAriStaticOpts);
    return new _GraphVulnerabilityHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphVulnerabilityHistoryAriStaticOpts);
    return new _GraphVulnerabilityHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/work-item/types.ts
var GraphWorkItemAriResourceOwner = "graph", GraphWorkItemAriResourceType = "work-item";

// src/graph/work-item/manifest.ts
var graphWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkItemAriResourceOwner,
  resourceType: GraphWorkItemAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workItemId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/work-item/index.ts
var GraphWorkItemAri = class _GraphWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workItemId = opts.resourceIdSegmentValues.workItemId;
  }
  get activationId() {
    return this._activationId;
  }
  get workItemId() {
    return this._workItemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkItemAriStaticOpts.qualifier,
      platformQualifier: graphWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkItemAriStaticOpts.resourceOwner,
      resourceType: graphWorkItemAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workItemId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workItemId: opts.workItemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkItemAriStaticOpts);
    return new _GraphWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkItemAriStaticOpts);
    return new _GraphWorkItemAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workItemId: this.workItemId
    };
  }
};

// src/graph/work-item-history/types.ts
var GraphWorkItemHistoryAriResourceOwner = "graph", GraphWorkItemHistoryAriResourceType = "work-item-history";

// src/graph/work-item-history/manifest.ts
var graphWorkItemHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkItemHistoryAriResourceOwner,
  resourceType: GraphWorkItemHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workItemId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/work-item-history/index.ts
var GraphWorkItemHistoryAri = class _GraphWorkItemHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workItemId = opts.resourceIdSegmentValues.workItemId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get workItemId() {
    return this._workItemId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkItemHistoryAriStaticOpts.qualifier,
      platformQualifier: graphWorkItemHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkItemHistoryAriStaticOpts.resourceOwner,
      resourceType: graphWorkItemHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workItemId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workItemId: opts.workItemId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkItemHistoryAriStaticOpts);
    return new _GraphWorkItemHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkItemHistoryAriStaticOpts);
    return new _GraphWorkItemHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workItemId: this.workItemId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/worker/types.ts
var GraphWorkerAriResourceOwner = "graph", GraphWorkerAriResourceType = "worker";

// src/graph/worker/manifest.ts
var graphWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkerAriResourceOwner,
  resourceType: GraphWorkerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workerUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workerUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/worker/index.ts
var GraphWorkerAri = class _GraphWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workerUUID = opts.resourceIdSegmentValues.workerUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get workerUUID() {
    return this._workerUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkerAriStaticOpts.qualifier,
      platformQualifier: graphWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkerAriStaticOpts.resourceOwner,
      resourceType: graphWorkerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workerUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workerUUID: opts.workerUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkerAriStaticOpts);
    return new _GraphWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkerAriStaticOpts);
    return new _GraphWorkerAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workerUUID: this.workerUUID
    };
  }
};

// src/graph/worker-history/types.ts
var GraphWorkerHistoryAriResourceOwner = "graph", GraphWorkerHistoryAriResourceType = "worker-history";

// src/graph/worker-history/manifest.ts
var graphWorkerHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkerHistoryAriResourceOwner,
  resourceType: GraphWorkerHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workerUUID}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workerUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/worker-history/index.ts
var GraphWorkerHistoryAri = class _GraphWorkerHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workerUUID = opts.resourceIdSegmentValues.workerUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get workerUUID() {
    return this._workerUUID;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkerHistoryAriStaticOpts.qualifier,
      platformQualifier: graphWorkerHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkerHistoryAriStaticOpts.resourceOwner,
      resourceType: graphWorkerHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workerUUID}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workerUUID: opts.workerUUID,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkerHistoryAriStaticOpts);
    return new _GraphWorkerHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkerHistoryAriStaticOpts);
    return new _GraphWorkerHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workerUUID: this.workerUUID,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/graph/workspace/types.ts
var GraphWorkspaceAriResourceOwner = "graph", GraphWorkspaceAriResourceType = "workspace";

// src/graph/workspace/manifest.ts
var graphWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkspaceAriResourceOwner,
  resourceType: GraphWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/workspace/index.ts
var GraphWorkspaceAri = class _GraphWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkspaceAriStaticOpts.qualifier,
      platformQualifier: graphWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkspaceAriStaticOpts.resourceOwner,
      resourceType: graphWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkspaceAriStaticOpts);
    return new _GraphWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkspaceAriStaticOpts);
    return new _GraphWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/help/article/types.ts
var HelpArticleAriResourceOwner = "help", HelpArticleAriResourceType = "article";

// src/help/article/manifest.ts
var helpArticleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpArticleAriResourceOwner,
  resourceType: HelpArticleAriResourceType,
  resourceIdSlug: "{activationId}/{helpObjectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/article/index.ts
var HelpArticleAri = class _HelpArticleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpObjectId() {
    return this._helpObjectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpArticleAriStaticOpts.qualifier,
      platformQualifier: helpArticleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpArticleAriStaticOpts.resourceOwner,
      resourceType: helpArticleAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpObjectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpObjectId: opts.helpObjectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpArticleAriStaticOpts);
    return new _HelpArticleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpArticleAriStaticOpts);
    return new _HelpArticleAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpObjectId: this.helpObjectId
    };
  }
};

// src/help/channel/types.ts
var HelpChannelAriResourceOwner = "help", HelpChannelAriResourceType = "channel";

// src/help/channel/manifest.ts
var helpChannelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpChannelAriResourceOwner,
  resourceType: HelpChannelAriResourceType,
  resourceIdSlug: "{activationId}/{helpObjectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/channel/index.ts
var HelpChannelAri = class _HelpChannelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpObjectId() {
    return this._helpObjectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpChannelAriStaticOpts.qualifier,
      platformQualifier: helpChannelAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpChannelAriStaticOpts.resourceOwner,
      resourceType: helpChannelAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpObjectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpObjectId: opts.helpObjectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpChannelAriStaticOpts);
    return new _HelpChannelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpChannelAriStaticOpts);
    return new _HelpChannelAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpObjectId: this.helpObjectId
    };
  }
};

// src/help/help-center/types.ts
var HelpHelpCenterAriResourceOwner = "help", HelpHelpCenterAriResourceType = "help-center";

// src/help/help-center/manifest.ts
var helpHelpCenterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpHelpCenterAriResourceOwner,
  resourceType: HelpHelpCenterAriResourceType,
  resourceIdSlug: "{activationId}/{helpCenterId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpCenterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/help-center/index.ts
var HelpHelpCenterAri = class _HelpHelpCenterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpCenterId = opts.resourceIdSegmentValues.helpCenterId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpCenterId() {
    return this._helpCenterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpHelpCenterAriStaticOpts.qualifier,
      platformQualifier: helpHelpCenterAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpHelpCenterAriStaticOpts.resourceOwner,
      resourceType: helpHelpCenterAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpCenterId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpCenterId: opts.helpCenterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpHelpCenterAriStaticOpts);
    return new _HelpHelpCenterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpHelpCenterAriStaticOpts);
    return new _HelpHelpCenterAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpCenterId: this.helpCenterId
    };
  }
};

// src/help/help-desk/types.ts
var HelpHelpDeskAriResourceOwner = "help", HelpHelpDeskAriResourceType = "help-desk";

// src/help/help-desk/manifest.ts
var helpHelpDeskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpHelpDeskAriResourceOwner,
  resourceType: HelpHelpDeskAriResourceType,
  resourceIdSlug: "{activationId}/{helpDeskId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpDeskId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/help-desk/index.ts
var HelpHelpDeskAri = class _HelpHelpDeskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpDeskId = opts.resourceIdSegmentValues.helpDeskId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpDeskId() {
    return this._helpDeskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpHelpDeskAriStaticOpts.qualifier,
      platformQualifier: helpHelpDeskAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpHelpDeskAriStaticOpts.resourceOwner,
      resourceType: helpHelpDeskAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpDeskId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpDeskId: opts.helpDeskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpHelpDeskAriStaticOpts);
    return new _HelpHelpDeskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpHelpDeskAriStaticOpts);
    return new _HelpHelpDeskAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpDeskId: this.helpDeskId
    };
  }
};

// src/help/layout/types.ts
var HelpLayoutAriResourceOwner = "help", HelpLayoutAriResourceType = "layout";

// src/help/layout/manifest.ts
var helpLayoutAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpLayoutAriResourceOwner,
  resourceType: HelpLayoutAriResourceType,
  resourceIdSlug: "{activationId}/{layoutId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    layoutId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/layout/index.ts
var HelpLayoutAri = class _HelpLayoutAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._layoutId = opts.resourceIdSegmentValues.layoutId;
  }
  get activationId() {
    return this._activationId;
  }
  get layoutId() {
    return this._layoutId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpLayoutAriStaticOpts.qualifier,
      platformQualifier: helpLayoutAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpLayoutAriStaticOpts.resourceOwner,
      resourceType: helpLayoutAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.layoutId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        layoutId: opts.layoutId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpLayoutAriStaticOpts);
    return new _HelpLayoutAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpLayoutAriStaticOpts);
    return new _HelpLayoutAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      layoutId: this.layoutId
    };
  }
};

// src/help/page/types.ts
var HelpPageAriResourceOwner = "help", HelpPageAriResourceType = "page";

// src/help/page/manifest.ts
var helpPageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpPageAriResourceOwner,
  resourceType: HelpPageAriResourceType,
  resourceIdSlug: "{activationId}/{pageId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/page/index.ts
var HelpPageAri = class _HelpPageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._pageId = opts.resourceIdSegmentValues.pageId;
  }
  get activationId() {
    return this._activationId;
  }
  get pageId() {
    return this._pageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpPageAriStaticOpts.qualifier,
      platformQualifier: helpPageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpPageAriStaticOpts.resourceOwner,
      resourceType: helpPageAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.pageId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pageId: opts.pageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpPageAriStaticOpts);
    return new _HelpPageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpPageAriStaticOpts);
    return new _HelpPageAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      pageId: this.pageId
    };
  }
};

// src/help/portal/types.ts
var HelpPortalAriResourceOwner = "help", HelpPortalAriResourceType = "portal";

// src/help/portal/manifest.ts
var helpPortalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpPortalAriResourceOwner,
  resourceType: HelpPortalAriResourceType,
  resourceIdSlug: "{activationId}/{helpObjectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/portal/index.ts
var HelpPortalAri = class _HelpPortalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpObjectId() {
    return this._helpObjectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpPortalAriStaticOpts.qualifier,
      platformQualifier: helpPortalAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpPortalAriStaticOpts.resourceOwner,
      resourceType: helpPortalAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpObjectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpObjectId: opts.helpObjectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpPortalAriStaticOpts);
    return new _HelpPortalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpPortalAriStaticOpts);
    return new _HelpPortalAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpObjectId: this.helpObjectId
    };
  }
};

// src/help/request-form/types.ts
var HelpRequestFormAriResourceOwner = "help", HelpRequestFormAriResourceType = "request-form";

// src/help/request-form/manifest.ts
var helpRequestFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpRequestFormAriResourceOwner,
  resourceType: HelpRequestFormAriResourceType,
  resourceIdSlug: "{activationId}/{helpObjectId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/request-form/index.ts
var HelpRequestFormAri = class _HelpRequestFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;
  }
  get activationId() {
    return this._activationId;
  }
  get helpObjectId() {
    return this._helpObjectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpRequestFormAriStaticOpts.qualifier,
      platformQualifier: helpRequestFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpRequestFormAriStaticOpts.resourceOwner,
      resourceType: helpRequestFormAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.helpObjectId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        helpObjectId: opts.helpObjectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpRequestFormAriStaticOpts);
    return new _HelpRequestFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpRequestFormAriStaticOpts);
    return new _HelpRequestFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      helpObjectId: this.helpObjectId
    };
  }
};

// src/help/role/types.ts
var HelpRoleAriResourceOwner = "help", HelpRoleAriResourceType = "role";

// src/help/role/manifest.ts
var helpRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpRoleAriResourceOwner,
  resourceType: HelpRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/role/index.ts
var HelpRoleAri = class _HelpRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpRoleAriStaticOpts.qualifier,
      platformQualifier: helpRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpRoleAriStaticOpts.resourceOwner,
      resourceType: helpRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpRoleAriStaticOpts);
    return new _HelpRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpRoleAriStaticOpts);
    return new _HelpRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/home/workspace/types.ts
var HomeWorkspaceAriResourceOwner = "home", HomeWorkspaceAriResourceType = "workspace";

// src/home/workspace/manifest.ts
var homeWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HomeWorkspaceAriResourceOwner,
  resourceType: HomeWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/home/workspace/index.ts
var HomeWorkspaceAri = class _HomeWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: homeWorkspaceAriStaticOpts.qualifier,
      platformQualifier: homeWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: homeWorkspaceAriStaticOpts.resourceOwner,
      resourceType: homeWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, homeWorkspaceAriStaticOpts);
    return new _HomeWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, homeWorkspaceAriStaticOpts);
    return new _HomeWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/hubspot.hubspot/customer-org/types.ts
var HubspotHubspotCustomerOrgAriResourceOwner = "hubspot.hubspot", HubspotHubspotCustomerOrgAriResourceType = "customer-org";

// src/hubspot.hubspot/customer-org/manifest.ts
var hubspotHubspotCustomerOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HubspotHubspotCustomerOrgAriResourceOwner,
  resourceType: HubspotHubspotCustomerOrgAriResourceType,
  resourceIdSlug: "portal/{portalId}/customer-org/{customerOrgId}",
  resourceIdSegmentFormats: {
    portalId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    customerOrgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/hubspot.hubspot/customer-org/index.ts
var HubspotHubspotCustomerOrgAri = class _HubspotHubspotCustomerOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._portalId = opts.resourceIdSegmentValues.portalId, this._customerOrgId = opts.resourceIdSegmentValues.customerOrgId;
  }
  get portalId() {
    return this._portalId;
  }
  get customerOrgId() {
    return this._customerOrgId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: hubspotHubspotCustomerOrgAriStaticOpts.qualifier,
      platformQualifier: hubspotHubspotCustomerOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: hubspotHubspotCustomerOrgAriStaticOpts.resourceOwner,
      resourceType: hubspotHubspotCustomerOrgAriStaticOpts.resourceType,
      resourceId: `portal/${opts.portalId}/customer-org/${opts.customerOrgId}`,
      resourceIdSegmentValues: {
        portalId: opts.portalId,
        customerOrgId: opts.customerOrgId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, hubspotHubspotCustomerOrgAriStaticOpts);
    return new _HubspotHubspotCustomerOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, hubspotHubspotCustomerOrgAriStaticOpts);
    return new _HubspotHubspotCustomerOrgAri(opts);
  }
  getVariables() {
    return {
      portalId: this.portalId,
      customerOrgId: this.customerOrgId
    };
  }
};

// src/hubspot.hubspot/deal/types.ts
var HubspotHubspotDealAriResourceOwner = "hubspot.hubspot", HubspotHubspotDealAriResourceType = "deal";

// src/hubspot.hubspot/deal/manifest.ts
var hubspotHubspotDealAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HubspotHubspotDealAriResourceOwner,
  resourceType: HubspotHubspotDealAriResourceType,
  resourceIdSlug: "portal/{portalId}/deal/{dealId}",
  resourceIdSegmentFormats: {
    portalId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    dealId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/hubspot.hubspot/deal/index.ts
var HubspotHubspotDealAri = class _HubspotHubspotDealAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._portalId = opts.resourceIdSegmentValues.portalId, this._dealId = opts.resourceIdSegmentValues.dealId;
  }
  get portalId() {
    return this._portalId;
  }
  get dealId() {
    return this._dealId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: hubspotHubspotDealAriStaticOpts.qualifier,
      platformQualifier: hubspotHubspotDealAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: hubspotHubspotDealAriStaticOpts.resourceOwner,
      resourceType: hubspotHubspotDealAriStaticOpts.resourceType,
      resourceId: `portal/${opts.portalId}/deal/${opts.dealId}`,
      resourceIdSegmentValues: {
        portalId: opts.portalId,
        dealId: opts.dealId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, hubspotHubspotDealAriStaticOpts);
    return new _HubspotHubspotDealAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, hubspotHubspotDealAriStaticOpts);
    return new _HubspotHubspotDealAri(opts);
  }
  getVariables() {
    return {
      portalId: this.portalId,
      dealId: this.dealId
    };
  }
};

// src/hubspot.hubspot/remote-link/types.ts
var HubspotHubspotRemoteLinkAriResourceOwner = "hubspot.hubspot", HubspotHubspotRemoteLinkAriResourceType = "remote-link";

// src/hubspot.hubspot/remote-link/manifest.ts
var hubspotHubspotRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HubspotHubspotRemoteLinkAriResourceOwner,
  resourceType: HubspotHubspotRemoteLinkAriResourceType,
  resourceIdSlug: "deal/{dealId}",
  resourceIdSegmentFormats: {
    dealId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/hubspot.hubspot/remote-link/index.ts
var HubspotHubspotRemoteLinkAri = class _HubspotHubspotRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._dealId = opts.resourceIdSegmentValues.dealId;
  }
  get dealId() {
    return this._dealId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: hubspotHubspotRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: hubspotHubspotRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: hubspotHubspotRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: hubspotHubspotRemoteLinkAriStaticOpts.resourceType,
      resourceId: `deal/${opts.dealId}`,
      resourceIdSegmentValues: {
        dealId: opts.dealId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, hubspotHubspotRemoteLinkAriStaticOpts);
    return new _HubspotHubspotRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, hubspotHubspotRemoteLinkAriStaticOpts);
    return new _HubspotHubspotRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      dealId: this.dealId
    };
  }
};

// src/identity/app/types.ts
var IdentityAppAriResourceOwner = "identity", IdentityAppAriResourceType = "app";

// src/identity/app/manifest.ts
var identityAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityAppAriResourceOwner,
  resourceType: IdentityAppAriResourceType,
  resourceIdSlug: "{platform}/{appId}",
  resourceIdSegmentFormats: {
    platform: /(android|ios|macos)/,
    // eslint-disable-line no-useless-escape
    appId: /(([a-zA-Z]+)\.)+([a-zA-Z]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/app/index.ts
var IdentityAppAri = class _IdentityAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._platform = opts.resourceIdSegmentValues.platform, this._appId = opts.resourceIdSegmentValues.appId;
  }
  get platform() {
    return this._platform;
  }
  get appId() {
    return this._appId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAppAriStaticOpts.qualifier,
      platformQualifier: identityAppAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAppAriStaticOpts.resourceOwner,
      resourceType: identityAppAriStaticOpts.resourceType,
      resourceId: `${opts.platform}/${opts.appId}`,
      resourceIdSegmentValues: {
        platform: opts.platform,
        appId: opts.appId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAppAriStaticOpts);
    return new _IdentityAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAppAriStaticOpts);
    return new _IdentityAppAri(opts);
  }
  getVariables() {
    return {
      platform: this.platform,
      appId: this.appId
    };
  }
};

// src/identity/app-grant/types.ts
var IdentityAppGrantAriResourceOwner = "identity", IdentityAppGrantAriResourceType = "app-grant";

// src/identity/app-grant/manifest.ts
var identityAppGrantAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityAppGrantAriResourceOwner,
  resourceType: IdentityAppGrantAriResourceType,
  resourceIdSlug: "{userId}-{clientId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9_\-\:]{1,128}/,
    // eslint-disable-line no-useless-escape
    clientId: /[0-9a-zA-Z-_]{5,50}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/app-grant/index.ts
var IdentityAppGrantAri = class _IdentityAppGrantAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId, this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get userId() {
    return this._userId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAppGrantAriStaticOpts.qualifier,
      platformQualifier: identityAppGrantAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAppGrantAriStaticOpts.resourceOwner,
      resourceType: identityAppGrantAriStaticOpts.resourceType,
      resourceId: `${opts.userId}-${opts.clientId}`,
      resourceIdSegmentValues: {
        userId: opts.userId,
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAppGrantAriStaticOpts);
    return new _IdentityAppGrantAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAppGrantAriStaticOpts);
    return new _IdentityAppGrantAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId,
      clientId: this.clientId
    };
  }
};

// src/identity/auth-policy/types.ts
var IdentityAuthPolicyAriResourceOwner = "identity", IdentityAuthPolicyAriResourceType = "auth-policy";

// src/identity/auth-policy/manifest.ts
var identityAuthPolicyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityAuthPolicyAriResourceOwner,
  resourceType: IdentityAuthPolicyAriResourceType,
  resourceIdSlug: "{authPolicyId}",
  resourceIdSegmentFormats: {
    authPolicyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/auth-policy/index.ts
var IdentityAuthPolicyAri = class _IdentityAuthPolicyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._authPolicyId = opts.resourceIdSegmentValues.authPolicyId;
  }
  get authPolicyId() {
    return this._authPolicyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityAuthPolicyAriStaticOpts.qualifier,
      platformQualifier: identityAuthPolicyAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityAuthPolicyAriStaticOpts.resourceOwner,
      resourceType: identityAuthPolicyAriStaticOpts.resourceType,
      resourceId: `${opts.authPolicyId}`,
      resourceIdSegmentValues: {
        authPolicyId: opts.authPolicyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityAuthPolicyAriStaticOpts);
    return new _IdentityAuthPolicyAri(opts);
  }
  getVariables() {
    return {
      authPolicyId: this.authPolicyId
    };
  }
};

// src/identity/customer-directory/types.ts
var IdentityCustomerDirectoryAriResourceOwner = "identity", IdentityCustomerDirectoryAriResourceType = "customer-directory";

// src/identity/customer-directory/manifest.ts
var identityCustomerDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityCustomerDirectoryAriResourceOwner,
  resourceType: IdentityCustomerDirectoryAriResourceType,
  resourceIdSlug: "{customerDirectoryId}",
  resourceIdSegmentFormats: {
    customerDirectoryId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/customer-directory/index.ts
var IdentityCustomerDirectoryAri = class _IdentityCustomerDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customerDirectoryId = opts.resourceIdSegmentValues.customerDirectoryId;
  }
  get customerDirectoryId() {
    return this._customerDirectoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityCustomerDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityCustomerDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityCustomerDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityCustomerDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.customerDirectoryId}`,
      resourceIdSegmentValues: {
        customerDirectoryId: opts.customerDirectoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerDirectoryAriStaticOpts);
    return new _IdentityCustomerDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityCustomerDirectoryAriStaticOpts);
    return new _IdentityCustomerDirectoryAri(opts);
  }
  getVariables() {
    return {
      customerDirectoryId: this.customerDirectoryId
    };
  }
};

// src/identity/customer-organization/types.ts
var IdentityCustomerOrganizationAriResourceOwner = "identity", IdentityCustomerOrganizationAriResourceType = "customer-organization";

// src/identity/customer-organization/manifest.ts
var identityCustomerOrganizationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityCustomerOrganizationAriResourceOwner,
  resourceType: IdentityCustomerOrganizationAriResourceType,
  resourceIdSlug: "{customerOrganizationId}",
  resourceIdSegmentFormats: {
    customerOrganizationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/customer-organization/index.ts
var IdentityCustomerOrganizationAri = class _IdentityCustomerOrganizationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customerOrganizationId = opts.resourceIdSegmentValues.customerOrganizationId;
  }
  get customerOrganizationId() {
    return this._customerOrganizationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityCustomerOrganizationAriStaticOpts.qualifier,
      platformQualifier: identityCustomerOrganizationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityCustomerOrganizationAriStaticOpts.resourceOwner,
      resourceType: identityCustomerOrganizationAriStaticOpts.resourceType,
      resourceId: `${opts.customerOrganizationId}`,
      resourceIdSegmentValues: {
        customerOrganizationId: opts.customerOrganizationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerOrganizationAriStaticOpts);
    return new _IdentityCustomerOrganizationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityCustomerOrganizationAriStaticOpts);
    return new _IdentityCustomerOrganizationAri(opts);
  }
  getVariables() {
    return {
      customerOrganizationId: this.customerOrganizationId
    };
  }
};

// src/identity/directory/types.ts
var IdentityDirectoryAriResourceOwner = "identity", IdentityDirectoryAriResourceType = "directory";

// src/identity/directory/manifest.ts
var identityDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityDirectoryAriResourceOwner,
  resourceType: IdentityDirectoryAriResourceType,
  resourceIdSlug: "{directoryId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/directory/index.ts
var IdentityDirectoryAri = class _IdentityDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId;
  }
  get directoryId() {
    return this._directoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDirectoryAriStaticOpts);
    return new _IdentityDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityDirectoryAriStaticOpts);
    return new _IdentityDirectoryAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId
    };
  }
};

// src/identity/domain/types.ts
var IdentityDomainAriResourceOwner = "identity", IdentityDomainAriResourceType = "domain";

// src/identity/domain/manifest.ts
var identityDomainAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityDomainAriResourceOwner,
  resourceType: IdentityDomainAriResourceType,
  resourceIdSlug: "{base64Domain}",
  resourceIdSegmentFormats: {
    base64Domain: /[a-zA-Z0-9=]+={0,1}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/domain/index.ts
var IdentityDomainAri = class _IdentityDomainAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._base64Domain = opts.resourceIdSegmentValues.base64Domain;
  }
  get base64Domain() {
    return this._base64Domain;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityDomainAriStaticOpts.qualifier,
      platformQualifier: identityDomainAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityDomainAriStaticOpts.resourceOwner,
      resourceType: identityDomainAriStaticOpts.resourceType,
      resourceId: `${opts.base64Domain}`,
      resourceIdSegmentValues: {
        base64Domain: opts.base64Domain
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDomainAriStaticOpts);
    return new _IdentityDomainAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityDomainAriStaticOpts);
    return new _IdentityDomainAri(opts);
  }
  getVariables() {
    return {
      base64Domain: this.base64Domain
    };
  }
};

// src/identity/forge-installation/types.ts
var IdentityForgeInstallationAriResourceOwner = "identity", IdentityForgeInstallationAriResourceType = "forge-installation";

// src/identity/forge-installation/manifest.ts
var identityForgeInstallationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityForgeInstallationAriResourceOwner,
  resourceType: IdentityForgeInstallationAriResourceType,
  resourceIdSlug: "{appId}/{envId}",
  resourceIdSegmentFormats: {
    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    envId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/forge-installation/index.ts
var IdentityForgeInstallationAri = class _IdentityForgeInstallationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._appId = opts.resourceIdSegmentValues.appId, this._envId = opts.resourceIdSegmentValues.envId;
  }
  get siteId() {
    return this._siteId;
  }
  get appId() {
    return this._appId;
  }
  get envId() {
    return this._envId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityForgeInstallationAriStaticOpts.qualifier,
      platformQualifier: identityForgeInstallationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: identityForgeInstallationAriStaticOpts.resourceOwner,
      resourceType: identityForgeInstallationAriStaticOpts.resourceType,
      resourceId: `${opts.appId}/${opts.envId}`,
      resourceIdSegmentValues: {
        appId: opts.appId,
        envId: opts.envId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityForgeInstallationAriStaticOpts);
    return new _IdentityForgeInstallationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityForgeInstallationAriStaticOpts);
    return new _IdentityForgeInstallationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      appId: this.appId,
      envId: this.envId
    };
  }
};

// src/identity/group/types.ts
var IdentityGroupAriResourceOwner = "identity", IdentityGroupAriResourceType = "group";

// src/identity/group/manifest.ts
var identityGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityGroupAriResourceOwner,
  resourceType: IdentityGroupAriResourceType,
  resourceIdSlug: "{groupId}",
  resourceIdSegmentFormats: {
    groupId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/group/index.ts
var IdentityGroupAri = class _IdentityGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityGroupAriStaticOpts.qualifier,
      platformQualifier: identityGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityGroupAriStaticOpts.resourceOwner,
      resourceType: identityGroupAriStaticOpts.resourceType,
      resourceId: `${opts.groupId}`,
      resourceIdSegmentValues: {
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityGroupAriStaticOpts);
    return new _IdentityGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityGroupAriStaticOpts);
    return new _IdentityGroupAri(opts);
  }
  getVariables() {
    return {
      groupId: this.groupId
    };
  }
};

// src/identity/role/types.ts
var IdentityRoleAriResourceOwner = "identity", IdentityRoleAriResourceType = "role";

// src/identity/role/manifest.ts
var identityRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityRoleAriResourceOwner,
  resourceType: IdentityRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/role/index.ts
var IdentityRoleAri = class _IdentityRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityRoleAriStaticOpts.qualifier,
      platformQualifier: identityRoleAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: identityRoleAriStaticOpts.resourceOwner,
      resourceType: identityRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityRoleAriStaticOpts);
    return new _IdentityRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityRoleAriStaticOpts);
    return new _IdentityRoleAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      roleId: this.roleId
    };
  }
};

// src/identity/scoped-group/types.ts
var IdentityScopedGroupAriResourceOwner = "identity", IdentityScopedGroupAriResourceType = "scoped-group";

// src/identity/scoped-group/manifest.ts
var identityScopedGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityScopedGroupAriResourceOwner,
  resourceType: IdentityScopedGroupAriResourceType,
  resourceIdSlug: "{scopeType}/{scopeId}/{groupId}",
  resourceIdSegmentFormats: {
    scopeType: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    scopeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    groupId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/scoped-group/index.ts
var IdentityScopedGroupAri = class _IdentityScopedGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._scopeType = opts.resourceIdSegmentValues.scopeType, this._scopeId = opts.resourceIdSegmentValues.scopeId, this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get scopeType() {
    return this._scopeType;
  }
  get scopeId() {
    return this._scopeId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityScopedGroupAriStaticOpts.qualifier,
      platformQualifier: identityScopedGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityScopedGroupAriStaticOpts.resourceOwner,
      resourceType: identityScopedGroupAriStaticOpts.resourceType,
      resourceId: `${opts.scopeType}/${opts.scopeId}/${opts.groupId}`,
      resourceIdSegmentValues: {
        scopeType: opts.scopeType,
        scopeId: opts.scopeId,
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityScopedGroupAriStaticOpts);
    return new _IdentityScopedGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityScopedGroupAriStaticOpts);
    return new _IdentityScopedGroupAri(opts);
  }
  getVariables() {
    return {
      scopeType: this.scopeType,
      scopeId: this.scopeId,
      groupId: this.groupId
    };
  }
};

// src/identity/team/types.ts
var IdentityTeamAriResourceOwner = "identity", IdentityTeamAriResourceType = "team";

// src/identity/team/manifest.ts
var identityTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityTeamAriResourceOwner,
  resourceType: IdentityTeamAriResourceType,
  resourceIdSlug: "{teamId}",
  resourceIdSegmentFormats: {
    teamId: /[a-zA-Z0-9.\-_~]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/team/index.ts
var IdentityTeamAri = class _IdentityTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId;
  }
  get teamId() {
    return this._teamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityTeamAriStaticOpts.qualifier,
      platformQualifier: identityTeamAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityTeamAriStaticOpts.resourceOwner,
      resourceType: identityTeamAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamAriStaticOpts);
    return new _IdentityTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityTeamAriStaticOpts);
    return new _IdentityTeamAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId
    };
  }
};

// src/identity/team-member/types.ts
var IdentityTeamMemberAriResourceOwner = "identity", IdentityTeamMemberAriResourceType = "team-member";

// src/identity/team-member/manifest.ts
var identityTeamMemberAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityTeamMemberAriResourceOwner,
  resourceType: IdentityTeamMemberAriResourceType,
  resourceIdSlug: "{teamId}/{userId}",
  resourceIdSegmentFormats: {
    teamId: /[a-zA-Z0-9.\-_~]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/team-member/index.ts
var IdentityTeamMemberAri = class _IdentityTeamMemberAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get teamId() {
    return this._teamId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityTeamMemberAriStaticOpts.qualifier,
      platformQualifier: identityTeamMemberAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityTeamMemberAriStaticOpts.resourceOwner,
      resourceType: identityTeamMemberAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}/${opts.userId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamMemberAriStaticOpts);
    return new _IdentityTeamMemberAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityTeamMemberAriStaticOpts);
    return new _IdentityTeamMemberAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId,
      userId: this.userId
    };
  }
};

// src/identity/third-party-directory/types.ts
var IdentityThirdPartyDirectoryAriResourceOwner = "identity", IdentityThirdPartyDirectoryAriResourceType = "third-party-directory";

// src/identity/third-party-directory/manifest.ts
var identityThirdPartyDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityThirdPartyDirectoryAriResourceOwner,
  resourceType: IdentityThirdPartyDirectoryAriResourceType,
  resourceIdSlug: "{directoryId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-directory/index.ts
var IdentityThirdPartyDirectoryAri = class _IdentityThirdPartyDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId;
  }
  get directoryId() {
    return this._directoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyDirectoryAriStaticOpts);
    return new _IdentityThirdPartyDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyDirectoryAriStaticOpts);
    return new _IdentityThirdPartyDirectoryAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId
    };
  }
};

// src/identity/third-party-group/types.ts
var IdentityThirdPartyGroupAriResourceOwner = "identity", IdentityThirdPartyGroupAriResourceType = "third-party-group";

// src/identity/third-party-group/manifest.ts
var identityThirdPartyGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityThirdPartyGroupAriResourceOwner,
  resourceType: IdentityThirdPartyGroupAriResourceType,
  resourceIdSlug: "{directoryId}/{groupId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    groupId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-group/index.ts
var IdentityThirdPartyGroupAri = class _IdentityThirdPartyGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get directoryId() {
    return this._directoryId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyGroupAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyGroupAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyGroupAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}/${opts.groupId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId,
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyGroupAriStaticOpts);
    return new _IdentityThirdPartyGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyGroupAriStaticOpts);
    return new _IdentityThirdPartyGroupAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId,
      groupId: this.groupId
    };
  }
};

// src/identity/third-party-user/types.ts
var IdentityThirdPartyUserAriResourceOwner = "identity", IdentityThirdPartyUserAriResourceType = "third-party-user";

// src/identity/third-party-user/manifest.ts
var identityThirdPartyUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityThirdPartyUserAriResourceOwner,
  resourceType: IdentityThirdPartyUserAriResourceType,
  resourceIdSlug: "{directoryId}/{userId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-user/index.ts
var IdentityThirdPartyUserAri = class _IdentityThirdPartyUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get directoryId() {
    return this._directoryId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyUserAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyUserAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyUserAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}/${opts.userId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyUserAriStaticOpts);
    return new _IdentityThirdPartyUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyUserAriStaticOpts);
    return new _IdentityThirdPartyUserAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId,
      userId: this.userId
    };
  }
};

// src/identity/user/types.ts
var IdentityUserAriResourceOwner = "identity", IdentityUserAriResourceType = "user";

// src/identity/user/manifest.ts
var identityUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityUserAriResourceOwner,
  resourceType: IdentityUserAriResourceType,
  resourceIdSlug: "{userId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/user/index.ts
var IdentityUserAri = class _IdentityUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserAriStaticOpts.qualifier,
      platformQualifier: identityUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserAriStaticOpts.resourceOwner,
      resourceType: identityUserAriStaticOpts.resourceType,
      resourceId: `${opts.userId}`,
      resourceIdSegmentValues: {
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserAriStaticOpts);
    return new _IdentityUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserAriStaticOpts);
    return new _IdentityUserAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId
    };
  }
};

// src/identity/userbase/types.ts
var IdentityUserbaseAriResourceOwner = "identity", IdentityUserbaseAriResourceType = "userbase";

// src/identity/userbase/manifest.ts
var identityUserbaseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityUserbaseAriResourceOwner,
  resourceType: IdentityUserbaseAriResourceType,
  resourceIdSlug: "{userbaseId}",
  resourceIdSegmentFormats: {
    userbaseId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/userbase/index.ts
var IdentityUserbaseAri = class _IdentityUserbaseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userbaseId = opts.resourceIdSegmentValues.userbaseId;
  }
  get userbaseId() {
    return this._userbaseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserbaseAriStaticOpts.qualifier,
      platformQualifier: identityUserbaseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserbaseAriStaticOpts.resourceOwner,
      resourceType: identityUserbaseAriStaticOpts.resourceType,
      resourceId: `${opts.userbaseId}`,
      resourceIdSegmentValues: {
        userbaseId: opts.userbaseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserbaseAriStaticOpts);
    return new _IdentityUserbaseAri(opts);
  }
  getVariables() {
    return {
      userbaseId: this.userbaseId
    };
  }
};

// src/identity/userGrant/types.ts
var IdentityUserGrantAriResourceOwner = "identity", IdentityUserGrantAriResourceType = "userGrant";

// src/identity/userGrant/manifest.ts
var identityUserGrantAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityUserGrantAriResourceOwner,
  resourceType: IdentityUserGrantAriResourceType,
  resourceIdSlug: "{userId}-{clientId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9_\-\:]{1,128}/,
    // eslint-disable-line no-useless-escape
    clientId: /[0-9a-zA-Z-_]{5,50}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/userGrant/index.ts
var IdentityUserGrantAri = class _IdentityUserGrantAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId, this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get userId() {
    return this._userId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityUserGrantAriStaticOpts.qualifier,
      platformQualifier: identityUserGrantAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityUserGrantAriStaticOpts.resourceOwner,
      resourceType: identityUserGrantAriStaticOpts.resourceType,
      resourceId: `${opts.userId}-${opts.clientId}`,
      resourceIdSegmentValues: {
        userId: opts.userId,
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserGrantAriStaticOpts);
    return new _IdentityUserGrantAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityUserGrantAriStaticOpts);
    return new _IdentityUserGrantAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId,
      clientId: this.clientId
    };
  }
};

// src/jira/announcement-banner/types.ts
var JiraAnnouncementBannerAriResourceOwner = "jira", JiraAnnouncementBannerAriResourceType = "announcement-banner";

// src/jira/announcement-banner/manifest.ts
var jiraAnnouncementBannerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAnnouncementBannerAriResourceOwner,
  resourceType: JiraAnnouncementBannerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{announcementBannerHashId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    announcementBannerHashId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/announcement-banner/index.ts
var JiraAnnouncementBannerAri = class _JiraAnnouncementBannerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._announcementBannerHashId = opts.resourceIdSegmentValues.announcementBannerHashId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get announcementBannerHashId() {
    return this._announcementBannerHashId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAnnouncementBannerAriStaticOpts.qualifier,
      platformQualifier: jiraAnnouncementBannerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraAnnouncementBannerAriStaticOpts.resourceOwner,
      resourceType: jiraAnnouncementBannerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.announcementBannerHashId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        announcementBannerHashId: opts.announcementBannerHashId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAnnouncementBannerAriStaticOpts);
    return new _JiraAnnouncementBannerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAnnouncementBannerAriStaticOpts);
    return new _JiraAnnouncementBannerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      announcementBannerHashId: this.announcementBannerHashId
    };
  }
};

// src/jira/available-fields/types.ts
var JiraAvailableFieldsAriResourceOwner = "jira", JiraAvailableFieldsAriResourceType = "available-fields";

// src/jira/available-fields/manifest.ts
var jiraAvailableFieldsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAvailableFieldsAriResourceOwner,
  resourceType: JiraAvailableFieldsAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}/{issueTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    issueTypeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/available-fields/index.ts
var JiraAvailableFieldsAri = class _JiraAvailableFieldsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAvailableFieldsAriStaticOpts.qualifier,
      platformQualifier: jiraAvailableFieldsAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraAvailableFieldsAriStaticOpts.resourceOwner,
      resourceType: jiraAvailableFieldsAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}/${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAvailableFieldsAriStaticOpts);
    return new _JiraAvailableFieldsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAvailableFieldsAriStaticOpts);
    return new _JiraAvailableFieldsAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/branch/types.ts
var JiraBranchAriResourceOwner = "jira", JiraBranchAriResourceType = "branch";

// src/jira/branch/manifest.ts
var jiraBranchAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraBranchAriResourceOwner,
  resourceType: JiraBranchAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/branch/index.ts
var JiraBranchAri = class _JiraBranchAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBranchAriStaticOpts.qualifier,
      platformQualifier: jiraBranchAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBranchAriStaticOpts.resourceOwner,
      resourceType: jiraBranchAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchAriStaticOpts);
    return new _JiraBranchAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBranchAriStaticOpts);
    return new _JiraBranchAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      branchId: this.branchId
    };
  }
};

// src/jira/branch-history/types.ts
var JiraBranchHistoryAriResourceOwner = "jira", JiraBranchHistoryAriResourceType = "branch-history";

// src/jira/branch-history/manifest.ts
var jiraBranchHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraBranchHistoryAriResourceOwner,
  resourceType: JiraBranchHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{branchId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/branch-history/index.ts
var JiraBranchHistoryAri = class _JiraBranchHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get branchId() {
    return this._branchId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBranchHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraBranchHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBranchHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraBranchHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.branchId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        branchId: opts.branchId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchHistoryAriStaticOpts);
    return new _JiraBranchHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBranchHistoryAriStaticOpts);
    return new _JiraBranchHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      branchId: this.branchId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/build/types.ts
var JiraBuildAriResourceOwner = "jira", JiraBuildAriResourceType = "build";

// src/jira/build/manifest.ts
var jiraBuildAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraBuildAriResourceOwner,
  resourceType: JiraBuildAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/build/index.ts
var JiraBuildAri = class _JiraBuildAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBuildAriStaticOpts.qualifier,
      platformQualifier: jiraBuildAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBuildAriStaticOpts.resourceOwner,
      resourceType: jiraBuildAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildAriStaticOpts);
    return new _JiraBuildAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBuildAriStaticOpts);
    return new _JiraBuildAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      buildId: this.buildId
    };
  }
};

// src/jira/build-history/types.ts
var JiraBuildHistoryAriResourceOwner = "jira", JiraBuildHistoryAriResourceType = "build-history";

// src/jira/build-history/manifest.ts
var jiraBuildHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraBuildHistoryAriResourceOwner,
  resourceType: JiraBuildHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{buildId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/build-history/index.ts
var JiraBuildHistoryAri = class _JiraBuildHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get buildId() {
    return this._buildId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBuildHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraBuildHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBuildHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraBuildHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        buildId: opts.buildId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBuildHistoryAriStaticOpts);
    return new _JiraBuildHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      buildId: this.buildId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/bulk-operation-task/types.ts
var JiraBulkOperationTaskAriResourceOwner = "jira", JiraBulkOperationTaskAriResourceType = "bulk-operation-task";

// src/jira/bulk-operation-task/manifest.ts
var jiraBulkOperationTaskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraBulkOperationTaskAriResourceOwner,
  resourceType: JiraBulkOperationTaskAriResourceType,
  resourceIdSlug: "activation/{activationId}/{taskId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    taskId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/bulk-operation-task/index.ts
var JiraBulkOperationTaskAri = class _JiraBulkOperationTaskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraBulkOperationTaskAriStaticOpts.qualifier,
      platformQualifier: jiraBulkOperationTaskAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraBulkOperationTaskAriStaticOpts.resourceOwner,
      resourceType: jiraBulkOperationTaskAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.taskId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBulkOperationTaskAriStaticOpts);
    return new _JiraBulkOperationTaskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraBulkOperationTaskAriStaticOpts);
    return new _JiraBulkOperationTaskAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      taskId: this.taskId
    };
  }
};

// src/jira/commit/types.ts
var JiraCommitAriResourceOwner = "jira", JiraCommitAriResourceType = "commit";

// src/jira/commit/manifest.ts
var jiraCommitAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCommitAriResourceOwner,
  resourceType: JiraCommitAriResourceType,
  resourceIdSlug: "activation/{activationId}/{commitId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commitId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/commit/index.ts
var JiraCommitAri = class _JiraCommitAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._commitId = opts.resourceIdSegmentValues.commitId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get commitId() {
    return this._commitId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCommitAriStaticOpts.qualifier,
      platformQualifier: jiraCommitAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraCommitAriStaticOpts.resourceOwner,
      resourceType: jiraCommitAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.commitId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        commitId: opts.commitId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCommitAriStaticOpts);
    return new _JiraCommitAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCommitAriStaticOpts);
    return new _JiraCommitAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      commitId: this.commitId
    };
  }
};

// src/jira/component/types.ts
var JiraComponentAriResourceOwner = "jira", JiraComponentAriResourceType = "component";

// src/jira/component/manifest.ts
var jiraComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraComponentAriResourceOwner,
  resourceType: JiraComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{componentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    componentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/component/index.ts
var JiraComponentAri = class _JiraComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._componentId = opts.resourceIdSegmentValues.componentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get componentId() {
    return this._componentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraComponentAriStaticOpts.qualifier,
      platformQualifier: jiraComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraComponentAriStaticOpts.resourceOwner,
      resourceType: jiraComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.componentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        componentId: opts.componentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraComponentAriStaticOpts);
    return new _JiraComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraComponentAriStaticOpts);
    return new _JiraComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      componentId: this.componentId
    };
  }
};

// src/jira/connect-app/types.ts
var JiraConnectAppAriResourceOwner = "jira", JiraConnectAppAriResourceType = "connect-app";

// src/jira/connect-app/manifest.ts
var jiraConnectAppAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraConnectAppAriResourceOwner,
  resourceType: JiraConnectAppAriResourceType,
  resourceIdSlug: "activation/{activationId}/{appKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    appKey: /[a-zA-Z0-9-._]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/connect-app/index.ts
var JiraConnectAppAri = class _JiraConnectAppAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._appKey = opts.resourceIdSegmentValues.appKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get appKey() {
    return this._appKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraConnectAppAriStaticOpts.qualifier,
      platformQualifier: jiraConnectAppAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraConnectAppAriStaticOpts.resourceOwner,
      resourceType: jiraConnectAppAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.appKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        appKey: opts.appKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraConnectAppAriStaticOpts);
    return new _JiraConnectAppAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraConnectAppAriStaticOpts);
    return new _JiraConnectAppAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      appKey: this.appKey
    };
  }
};

// src/jira/dashboard/types.ts
var JiraDashboardAriResourceOwner = "jira", JiraDashboardAriResourceType = "dashboard";

// src/jira/dashboard/manifest.ts
var jiraDashboardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDashboardAriResourceOwner,
  resourceType: JiraDashboardAriResourceType,
  resourceIdSlug: "activation/{activationId}/{dashboardId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dashboardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/dashboard/index.ts
var JiraDashboardAri = class _JiraDashboardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dashboardId() {
    return this._dashboardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDashboardAriStaticOpts.qualifier,
      platformQualifier: jiraDashboardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDashboardAriStaticOpts.resourceOwner,
      resourceType: jiraDashboardAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.dashboardId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dashboardId: opts.dashboardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDashboardAriStaticOpts);
    return new _JiraDashboardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDashboardAriStaticOpts);
    return new _JiraDashboardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dashboardId: this.dashboardId
    };
  }
};

// src/jira/deployment/types.ts
var JiraDeploymentAriResourceOwner = "jira", JiraDeploymentAriResourceType = "deployment";

// src/jira/deployment/manifest.ts
var jiraDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDeploymentAriResourceOwner,
  resourceType: JiraDeploymentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/deployment/index.ts
var JiraDeploymentAri = class _JiraDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDeploymentAriStaticOpts.qualifier,
      platformQualifier: jiraDeploymentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDeploymentAriStaticOpts.resourceOwner,
      resourceType: jiraDeploymentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentAriStaticOpts);
    return new _JiraDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDeploymentAriStaticOpts);
    return new _JiraDeploymentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      deploymentId: this.deploymentId
    };
  }
};

// src/jira/deployment-history/types.ts
var JiraDeploymentHistoryAriResourceOwner = "jira", JiraDeploymentHistoryAriResourceType = "deployment-history";

// src/jira/deployment-history/manifest.ts
var jiraDeploymentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDeploymentHistoryAriResourceOwner,
  resourceType: JiraDeploymentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{deploymentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/deployment-history/index.ts
var JiraDeploymentHistoryAri = class _JiraDeploymentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDeploymentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDeploymentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDeploymentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDeploymentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.deploymentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        deploymentId: opts.deploymentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentHistoryAriStaticOpts);
    return new _JiraDeploymentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDeploymentHistoryAriStaticOpts);
    return new _JiraDeploymentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      deploymentId: this.deploymentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/design/types.ts
var JiraDesignAriResourceOwner = "jira", JiraDesignAriResourceType = "design";

// src/jira/design/manifest.ts
var jiraDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDesignAriResourceOwner,
  resourceType: JiraDesignAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/design/index.ts
var JiraDesignAri = class _JiraDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDesignAriStaticOpts.qualifier,
      platformQualifier: jiraDesignAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDesignAriStaticOpts.resourceOwner,
      resourceType: jiraDesignAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignAriStaticOpts);
    return new _JiraDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDesignAriStaticOpts);
    return new _JiraDesignAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      designId: this.designId
    };
  }
};

// src/jira/design-history/types.ts
var JiraDesignHistoryAriResourceOwner = "jira", JiraDesignHistoryAriResourceType = "design-history";

// src/jira/design-history/manifest.ts
var jiraDesignHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDesignHistoryAriResourceOwner,
  resourceType: JiraDesignHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{designId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/design-history/index.ts
var JiraDesignHistoryAri = class _JiraDesignHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get designId() {
    return this._designId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDesignHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDesignHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDesignHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDesignHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.designId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        designId: opts.designId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignHistoryAriStaticOpts);
    return new _JiraDesignHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDesignHistoryAriStaticOpts);
    return new _JiraDesignHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      designId: this.designId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/devops-component/types.ts
var JiraDevopsComponentAriResourceOwner = "jira", JiraDevopsComponentAriResourceType = "devops-component";

// src/jira/devops-component/manifest.ts
var jiraDevopsComponentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDevopsComponentAriResourceOwner,
  resourceType: JiraDevopsComponentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{devopsComponentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    devopsComponentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/devops-component/index.ts
var JiraDevopsComponentAri = class _JiraDevopsComponentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get devopsComponentId() {
    return this._devopsComponentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDevopsComponentAriStaticOpts.qualifier,
      platformQualifier: jiraDevopsComponentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDevopsComponentAriStaticOpts.resourceOwner,
      resourceType: jiraDevopsComponentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        devopsComponentId: opts.devopsComponentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDevopsComponentAriStaticOpts);
    return new _JiraDevopsComponentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      devopsComponentId: this.devopsComponentId
    };
  }
};

// src/jira/document/types.ts
var JiraDocumentAriResourceOwner = "jira", JiraDocumentAriResourceType = "document";

// src/jira/document/manifest.ts
var jiraDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDocumentAriResourceOwner,
  resourceType: JiraDocumentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/document/index.ts
var JiraDocumentAri = class _JiraDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDocumentAriStaticOpts.qualifier,
      platformQualifier: jiraDocumentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDocumentAriStaticOpts.resourceOwner,
      resourceType: jiraDocumentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentAriStaticOpts);
    return new _JiraDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDocumentAriStaticOpts);
    return new _JiraDocumentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      documentId: this.documentId
    };
  }
};

// src/jira/document-history/types.ts
var JiraDocumentHistoryAriResourceOwner = "jira", JiraDocumentHistoryAriResourceType = "document-history";

// src/jira/document-history/manifest.ts
var jiraDocumentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDocumentHistoryAriResourceOwner,
  resourceType: JiraDocumentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/document-history/index.ts
var JiraDocumentHistoryAri = class _JiraDocumentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentId() {
    return this._documentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDocumentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraDocumentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraDocumentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraDocumentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentId: opts.documentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentHistoryAriStaticOpts);
    return new _JiraDocumentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDocumentHistoryAriStaticOpts);
    return new _JiraDocumentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      documentId: this.documentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/entitlement/types.ts
var JiraEntitlementAriResourceOwner = "jira", JiraEntitlementAriResourceType = "entitlement";

// src/jira/entitlement/manifest.ts
var jiraEntitlementAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraEntitlementAriResourceOwner,
  resourceType: JiraEntitlementAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entitlementId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entitlementId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/entitlement/index.ts
var JiraEntitlementAri = class _JiraEntitlementAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._entitlementId = opts.resourceIdSegmentValues.entitlementId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get entitlementId() {
    return this._entitlementId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraEntitlementAriStaticOpts.qualifier,
      platformQualifier: jiraEntitlementAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraEntitlementAriStaticOpts.resourceOwner,
      resourceType: jiraEntitlementAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entitlementId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entitlementId: opts.entitlementId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntitlementAriStaticOpts);
    return new _JiraEntitlementAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraEntitlementAriStaticOpts);
    return new _JiraEntitlementAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      entitlementId: this.entitlementId
    };
  }
};

// src/jira/entity-property/types.ts
var JiraEntityPropertyAriResourceOwner = "jira", JiraEntityPropertyAriResourceType = "entity-property";

// src/jira/entity-property/manifest.ts
var jiraEntityPropertyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraEntityPropertyAriResourceOwner,
  resourceType: JiraEntityPropertyAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityType}/{entityId}/{propertyKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityType: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    entityId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    propertyKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/entity-property/index.ts
var JiraEntityPropertyAri = class _JiraEntityPropertyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._entityType = opts.resourceIdSegmentValues.entityType, this._entityId = opts.resourceIdSegmentValues.entityId, this._propertyKey = opts.resourceIdSegmentValues.propertyKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get entityType() {
    return this._entityType;
  }
  get entityId() {
    return this._entityId;
  }
  get propertyKey() {
    return this._propertyKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraEntityPropertyAriStaticOpts.qualifier,
      platformQualifier: jiraEntityPropertyAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraEntityPropertyAriStaticOpts.resourceOwner,
      resourceType: jiraEntityPropertyAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityType}/${opts.entityId}/${opts.propertyKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityType: opts.entityType,
        entityId: opts.entityId,
        propertyKey: opts.propertyKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntityPropertyAriStaticOpts);
    return new _JiraEntityPropertyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraEntityPropertyAriStaticOpts);
    return new _JiraEntityPropertyAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      entityType: this.entityType,
      entityId: this.entityId,
      propertyKey: this.propertyKey
    };
  }
};

// src/jira/favourite/types.ts
var JiraFavouriteAriResourceOwner = "jira", JiraFavouriteAriResourceType = "favourite";

// src/jira/favourite/manifest.ts
var jiraFavouriteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFavouriteAriResourceOwner,
  resourceType: JiraFavouriteAriResourceType,
  resourceIdSlug: "activation/{activationId}/{favouriteId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    favouriteId: /[a-zA-Z0-9_\|\-\:~]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/favourite/index.ts
var JiraFavouriteAri = class _JiraFavouriteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._favouriteId = opts.resourceIdSegmentValues.favouriteId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get favouriteId() {
    return this._favouriteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFavouriteAriStaticOpts.qualifier,
      platformQualifier: jiraFavouriteAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFavouriteAriStaticOpts.resourceOwner,
      resourceType: jiraFavouriteAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.favouriteId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        favouriteId: opts.favouriteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFavouriteAriStaticOpts);
    return new _JiraFavouriteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFavouriteAriStaticOpts);
    return new _JiraFavouriteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      favouriteId: this.favouriteId
    };
  }
};

// src/jira/feature-flag/types.ts
var JiraFeatureFlagAriResourceOwner = "jira", JiraFeatureFlagAriResourceType = "feature-flag";

// src/jira/feature-flag/manifest.ts
var jiraFeatureFlagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFeatureFlagAriResourceOwner,
  resourceType: JiraFeatureFlagAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/feature-flag/index.ts
var JiraFeatureFlagAri = class _JiraFeatureFlagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFeatureFlagAriStaticOpts.qualifier,
      platformQualifier: jiraFeatureFlagAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFeatureFlagAriStaticOpts.resourceOwner,
      resourceType: jiraFeatureFlagAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagAriStaticOpts);
    return new _JiraFeatureFlagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagAriStaticOpts);
    return new _JiraFeatureFlagAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      featureFlagId: this.featureFlagId
    };
  }
};

// src/jira/feature-flag-history/types.ts
var JiraFeatureFlagHistoryAriResourceOwner = "jira", JiraFeatureFlagHistoryAriResourceType = "feature-flag-history";

// src/jira/feature-flag-history/manifest.ts
var jiraFeatureFlagHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFeatureFlagHistoryAriResourceOwner,
  resourceType: JiraFeatureFlagHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{featureFlagId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/feature-flag-history/index.ts
var JiraFeatureFlagHistoryAri = class _JiraFeatureFlagHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get featureFlagId() {
    return this._featureFlagId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFeatureFlagHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraFeatureFlagHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFeatureFlagHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraFeatureFlagHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        featureFlagId: opts.featureFlagId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagHistoryAriStaticOpts);
    return new _JiraFeatureFlagHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagHistoryAriStaticOpts);
    return new _JiraFeatureFlagHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      featureFlagId: this.featureFlagId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/field-configuration/types.ts
var JiraFieldConfigurationAriResourceOwner = "jira", JiraFieldConfigurationAriResourceType = "field-configuration";

// src/jira/field-configuration/manifest.ts
var jiraFieldConfigurationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFieldConfigurationAriResourceOwner,
  resourceType: JiraFieldConfigurationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldConfigurationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldConfigurationId: /[a-zA-Z]+(_[0-9]+)?/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/field-configuration/index.ts
var JiraFieldConfigurationAri = class _JiraFieldConfigurationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldConfigurationId = opts.resourceIdSegmentValues.fieldConfigurationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldConfigurationId() {
    return this._fieldConfigurationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFieldConfigurationAriStaticOpts.qualifier,
      platformQualifier: jiraFieldConfigurationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFieldConfigurationAriStaticOpts.resourceOwner,
      resourceType: jiraFieldConfigurationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldConfigurationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldConfigurationId: opts.fieldConfigurationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFieldConfigurationAriStaticOpts);
    return new _JiraFieldConfigurationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFieldConfigurationAriStaticOpts);
    return new _JiraFieldConfigurationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldConfigurationId: this.fieldConfigurationId
    };
  }
};

// src/jira/field-configuration-context/types.ts
var JiraFieldConfigurationContextAriResourceOwner = "jira", JiraFieldConfigurationContextAriResourceType = "field-configuration-context";

// src/jira/field-configuration-context/manifest.ts
var jiraFieldConfigurationContextAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFieldConfigurationContextAriResourceOwner,
  resourceType: JiraFieldConfigurationContextAriResourceType,
  resourceIdSlug: "activation/{activationId}/{contextId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    contextId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/field-configuration-context/index.ts
var JiraFieldConfigurationContextAri = class _JiraFieldConfigurationContextAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._contextId = opts.resourceIdSegmentValues.contextId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get contextId() {
    return this._contextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFieldConfigurationContextAriStaticOpts.qualifier,
      platformQualifier: jiraFieldConfigurationContextAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFieldConfigurationContextAriStaticOpts.resourceOwner,
      resourceType: jiraFieldConfigurationContextAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.contextId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        contextId: opts.contextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFieldConfigurationContextAriStaticOpts);
    return new _JiraFieldConfigurationContextAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFieldConfigurationContextAriStaticOpts);
    return new _JiraFieldConfigurationContextAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      contextId: this.contextId
    };
  }
};

// src/jira/field-set-view/types.ts
var JiraFieldSetViewAriResourceOwner = "jira", JiraFieldSetViewAriResourceType = "field-set-view";

// src/jira/field-set-view/manifest.ts
var jiraFieldSetViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFieldSetViewAriResourceOwner,
  resourceType: JiraFieldSetViewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldSetViewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldSetViewId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/field-set-view/index.ts
var JiraFieldSetViewAri = class _JiraFieldSetViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldSetViewId = opts.resourceIdSegmentValues.fieldSetViewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldSetViewId() {
    return this._fieldSetViewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFieldSetViewAriStaticOpts.qualifier,
      platformQualifier: jiraFieldSetViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFieldSetViewAriStaticOpts.resourceOwner,
      resourceType: jiraFieldSetViewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldSetViewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldSetViewId: opts.fieldSetViewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFieldSetViewAriStaticOpts);
    return new _JiraFieldSetViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFieldSetViewAriStaticOpts);
    return new _JiraFieldSetViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldSetViewId: this.fieldSetViewId
    };
  }
};

// src/jira/filter/types.ts
var JiraFilterAriResourceOwner = "jira", JiraFilterAriResourceType = "filter";

// src/jira/filter/manifest.ts
var jiraFilterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFilterAriResourceOwner,
  resourceType: JiraFilterAriResourceType,
  resourceIdSlug: "activation/{activationId}/{filterId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    filterId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/filter/index.ts
var JiraFilterAri = class _JiraFilterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterId = opts.resourceIdSegmentValues.filterId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get filterId() {
    return this._filterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFilterAriStaticOpts.qualifier,
      platformQualifier: jiraFilterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFilterAriStaticOpts.resourceOwner,
      resourceType: jiraFilterAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.filterId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        filterId: opts.filterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterAriStaticOpts);
    return new _JiraFilterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFilterAriStaticOpts);
    return new _JiraFilterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      filterId: this.filterId
    };
  }
};

// src/jira/filter-email-subscription/types.ts
var JiraFilterEmailSubscriptionAriResourceOwner = "jira", JiraFilterEmailSubscriptionAriResourceType = "filter-email-subscription";

// src/jira/filter-email-subscription/manifest.ts
var jiraFilterEmailSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFilterEmailSubscriptionAriResourceOwner,
  resourceType: JiraFilterEmailSubscriptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{filterEmailSubscriptionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    filterEmailSubscriptionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/filter-email-subscription/index.ts
var JiraFilterEmailSubscriptionAri = class _JiraFilterEmailSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterEmailSubscriptionId = opts.resourceIdSegmentValues.filterEmailSubscriptionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get filterEmailSubscriptionId() {
    return this._filterEmailSubscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFilterEmailSubscriptionAriStaticOpts.qualifier,
      platformQualifier: jiraFilterEmailSubscriptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFilterEmailSubscriptionAriStaticOpts.resourceOwner,
      resourceType: jiraFilterEmailSubscriptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.filterEmailSubscriptionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        filterEmailSubscriptionId: opts.filterEmailSubscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterEmailSubscriptionAriStaticOpts);
    return new _JiraFilterEmailSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFilterEmailSubscriptionAriStaticOpts);
    return new _JiraFilterEmailSubscriptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      filterEmailSubscriptionId: this.filterEmailSubscriptionId
    };
  }
};

// src/jira/form/types.ts
var JiraFormAriResourceOwner = "jira", JiraFormAriResourceType = "form";

// src/jira/form/manifest.ts
var jiraFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFormAriResourceOwner,
  resourceType: JiraFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{formId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    formId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/form/index.ts
var JiraFormAri = class _JiraFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._formId = opts.resourceIdSegmentValues.formId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get formId() {
    return this._formId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFormAriStaticOpts.qualifier,
      platformQualifier: jiraFormAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFormAriStaticOpts.resourceOwner,
      resourceType: jiraFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.formId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        formId: opts.formId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFormAriStaticOpts);
    return new _JiraFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFormAriStaticOpts);
    return new _JiraFormAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      formId: this.formId
    };
  }
};

// src/jira/incident/types.ts
var JiraIncidentAriResourceOwner = "jira", JiraIncidentAriResourceType = "incident";

// src/jira/incident/manifest.ts
var jiraIncidentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIncidentAriResourceOwner,
  resourceType: JiraIncidentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/incident/index.ts
var JiraIncidentAri = class _JiraIncidentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIncidentAriStaticOpts.qualifier,
      platformQualifier: jiraIncidentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIncidentAriStaticOpts.resourceOwner,
      resourceType: jiraIncidentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentAriStaticOpts);
    return new _JiraIncidentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIncidentAriStaticOpts);
    return new _JiraIncidentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      incidentId: this.incidentId
    };
  }
};

// src/jira/incident-history/types.ts
var JiraIncidentHistoryAriResourceOwner = "jira", JiraIncidentHistoryAriResourceType = "incident-history";

// src/jira/incident-history/manifest.ts
var jiraIncidentHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIncidentHistoryAriResourceOwner,
  resourceType: JiraIncidentHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{incidentId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/incident-history/index.ts
var JiraIncidentHistoryAri = class _JiraIncidentHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIncidentHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraIncidentHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIncidentHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraIncidentHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.incidentId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        incidentId: opts.incidentId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentHistoryAriStaticOpts);
    return new _JiraIncidentHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIncidentHistoryAriStaticOpts);
    return new _JiraIncidentHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      incidentId: this.incidentId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/issue/types.ts
var JiraIssueAriResourceOwner = "jira", JiraIssueAriResourceType = "issue";

// src/jira/issue/manifest.ts
var jiraIssueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueAriResourceOwner,
  resourceType: JiraIssueAriResourceType,
  resourceIdSlug: "{issueId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue/index.ts
var JiraIssueAri = class _JiraIssueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueAriStaticOpts.qualifier,
      platformQualifier: jiraIssueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueAriStaticOpts.resourceOwner,
      resourceType: jiraIssueAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAriStaticOpts);
    return new _JiraIssueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueAriStaticOpts);
    return new _JiraIssueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId
    };
  }
};

// src/jira/issue-attachment/types.ts
var JiraIssueAttachmentAriResourceOwner = "jira", JiraIssueAttachmentAriResourceType = "issue-attachment";

// src/jira/issue-attachment/manifest.ts
var jiraIssueAttachmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueAttachmentAriResourceOwner,
  resourceType: JiraIssueAttachmentAriResourceType,
  resourceIdSlug: "{issueId}/{attachmentId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    attachmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-attachment/index.ts
var JiraIssueAttachmentAri = class _JiraIssueAttachmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._attachmentId = opts.resourceIdSegmentValues.attachmentId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get attachmentId() {
    return this._attachmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueAttachmentAriStaticOpts.qualifier,
      platformQualifier: jiraIssueAttachmentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueAttachmentAriStaticOpts.resourceOwner,
      resourceType: jiraIssueAttachmentAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.attachmentId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        attachmentId: opts.attachmentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAttachmentAriStaticOpts);
    return new _JiraIssueAttachmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueAttachmentAriStaticOpts);
    return new _JiraIssueAttachmentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      attachmentId: this.attachmentId
    };
  }
};

// src/jira/issue-comment/types.ts
var JiraIssueCommentAriResourceOwner = "jira", JiraIssueCommentAriResourceType = "issue-comment";

// src/jira/issue-comment/manifest.ts
var jiraIssueCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueCommentAriResourceOwner,
  resourceType: JiraIssueCommentAriResourceType,
  resourceIdSlug: "{issueId}/{commentId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    commentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-comment/index.ts
var JiraIssueCommentAri = class _JiraIssueCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueCommentAriStaticOpts.qualifier,
      platformQualifier: jiraIssueCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueCommentAriStaticOpts.resourceOwner,
      resourceType: jiraIssueCommentAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueCommentAriStaticOpts);
    return new _JiraIssueCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueCommentAriStaticOpts);
    return new _JiraIssueCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      commentId: this.commentId
    };
  }
};

// src/jira/issue-field-metadata/types.ts
var JiraIssueFieldMetadataAriResourceOwner = "jira", JiraIssueFieldMetadataAriResourceType = "issue-field-metadata";

// src/jira/issue-field-metadata/manifest.ts
var jiraIssueFieldMetadataAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueFieldMetadataAriResourceOwner,
  resourceType: JiraIssueFieldMetadataAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-field-metadata/index.ts
var JiraIssueFieldMetadataAri = class _JiraIssueFieldMetadataAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueFieldMetadataAriStaticOpts.qualifier,
      platformQualifier: jiraIssueFieldMetadataAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueFieldMetadataAriStaticOpts.resourceOwner,
      resourceType: jiraIssueFieldMetadataAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldMetadataAriStaticOpts);
    return new _JiraIssueFieldMetadataAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueFieldMetadataAriStaticOpts);
    return new _JiraIssueFieldMetadataAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/issue-field-option/types.ts
var JiraIssueFieldOptionAriResourceOwner = "jira", JiraIssueFieldOptionAriResourceType = "issue-field-option";

// src/jira/issue-field-option/manifest.ts
var jiraIssueFieldOptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueFieldOptionAriResourceOwner,
  resourceType: JiraIssueFieldOptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldId}/{optionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    optionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-field-option/index.ts
var JiraIssueFieldOptionAri = class _JiraIssueFieldOptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId, this._optionId = opts.resourceIdSegmentValues.optionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldId() {
    return this._fieldId;
  }
  get optionId() {
    return this._optionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueFieldOptionAriStaticOpts.qualifier,
      platformQualifier: jiraIssueFieldOptionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueFieldOptionAriStaticOpts.resourceOwner,
      resourceType: jiraIssueFieldOptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldId}/${opts.optionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldId: opts.fieldId,
        optionId: opts.optionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldOptionAriStaticOpts);
    return new _JiraIssueFieldOptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueFieldOptionAriStaticOpts);
    return new _JiraIssueFieldOptionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldId: this.fieldId,
      optionId: this.optionId
    };
  }
};

// src/jira/issue-history/types.ts
var JiraIssueHistoryAriResourceOwner = "jira", JiraIssueHistoryAriResourceType = "issue-history";

// src/jira/issue-history/manifest.ts
var jiraIssueHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueHistoryAriResourceOwner,
  resourceType: JiraIssueHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{changeGroupId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    changeGroupId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-history/index.ts
var JiraIssueHistoryAri = class _JiraIssueHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._changeGroupId = opts.resourceIdSegmentValues.changeGroupId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get changeGroupId() {
    return this._changeGroupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraIssueHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraIssueHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.changeGroupId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        changeGroupId: opts.changeGroupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueHistoryAriStaticOpts);
    return new _JiraIssueHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueHistoryAriStaticOpts);
    return new _JiraIssueHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      changeGroupId: this.changeGroupId
    };
  }
};

// src/jira/issue-link/types.ts
var JiraIssueLinkAriResourceOwner = "jira", JiraIssueLinkAriResourceType = "issue-link";

// src/jira/issue-link/manifest.ts
var jiraIssueLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueLinkAriResourceOwner,
  resourceType: JiraIssueLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{linkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    linkId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-link/index.ts
var JiraIssueLinkAri = class _JiraIssueLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueLinkAriStaticOpts.qualifier,
      platformQualifier: jiraIssueLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueLinkAriStaticOpts.resourceOwner,
      resourceType: jiraIssueLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkAriStaticOpts);
    return new _JiraIssueLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueLinkAriStaticOpts);
    return new _JiraIssueLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      linkId: this.linkId
    };
  }
};

// src/jira/issue-link-type/types.ts
var JiraIssueLinkTypeAriResourceOwner = "jira", JiraIssueLinkTypeAriResourceType = "issue-link-type";

// src/jira/issue-link-type/manifest.ts
var jiraIssueLinkTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueLinkTypeAriResourceOwner,
  resourceType: JiraIssueLinkTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueLinkTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueLinkTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-link-type/index.ts
var JiraIssueLinkTypeAri = class _JiraIssueLinkTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueLinkTypeId = opts.resourceIdSegmentValues.issueLinkTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueLinkTypeId() {
    return this._issueLinkTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueLinkTypeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueLinkTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueLinkTypeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueLinkTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueLinkTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueLinkTypeId: opts.issueLinkTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkTypeAriStaticOpts);
    return new _JiraIssueLinkTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueLinkTypeAriStaticOpts);
    return new _JiraIssueLinkTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueLinkTypeId: this.issueLinkTypeId
    };
  }
};

// src/jira/issue-remote-link/types.ts
var JiraIssueRemoteLinkAriResourceOwner = "jira", JiraIssueRemoteLinkAriResourceType = "issue-remote-link";

// src/jira/issue-remote-link/manifest.ts
var jiraIssueRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueRemoteLinkAriResourceOwner,
  resourceType: JiraIssueRemoteLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueId}/{linkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    linkId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-remote-link/index.ts
var JiraIssueRemoteLinkAri = class _JiraIssueRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueId() {
    return this._issueId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: jiraIssueRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: jiraIssueRemoteLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueId: opts.issueId,
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueRemoteLinkAriStaticOpts);
    return new _JiraIssueRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueRemoteLinkAriStaticOpts);
    return new _JiraIssueRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueId: this.issueId,
      linkId: this.linkId
    };
  }
};

// src/jira/issue-search-view/types.ts
var JiraIssueSearchViewAriResourceOwner = "jira", JiraIssueSearchViewAriResourceType = "issue-search-view";

// src/jira/issue-search-view/manifest.ts
var jiraIssueSearchViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueSearchViewAriResourceOwner,
  resourceType: JiraIssueSearchViewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{namespaceId}/{viewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    namespaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    viewId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-search-view/index.ts
var JiraIssueSearchViewAri = class _JiraIssueSearchViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._namespaceId = opts.resourceIdSegmentValues.namespaceId, this._viewId = opts.resourceIdSegmentValues.viewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get namespaceId() {
    return this._namespaceId;
  }
  get viewId() {
    return this._viewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueSearchViewAriStaticOpts.qualifier,
      platformQualifier: jiraIssueSearchViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueSearchViewAriStaticOpts.resourceOwner,
      resourceType: jiraIssueSearchViewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.namespaceId}/${opts.viewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        namespaceId: opts.namespaceId,
        viewId: opts.viewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSearchViewAriStaticOpts);
    return new _JiraIssueSearchViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueSearchViewAriStaticOpts);
    return new _JiraIssueSearchViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      namespaceId: this.namespaceId,
      viewId: this.viewId
    };
  }
};

// src/jira/issue-search-view-type/types.ts
var JiraIssueSearchViewTypeAriResourceOwner = "jira", JiraIssueSearchViewTypeAriResourceType = "issue-search-view-type";

// src/jira/issue-search-view-type/manifest.ts
var jiraIssueSearchViewTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueSearchViewTypeAriResourceOwner,
  resourceType: JiraIssueSearchViewTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{namespaceId}/{viewId}/{viewType}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    namespaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    viewId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    viewType: /(list_view|grouped_list_view|detailed_view)/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-search-view-type/index.ts
var JiraIssueSearchViewTypeAri = class _JiraIssueSearchViewTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._namespaceId = opts.resourceIdSegmentValues.namespaceId, this._viewId = opts.resourceIdSegmentValues.viewId, this._viewType = opts.resourceIdSegmentValues.viewType;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get namespaceId() {
    return this._namespaceId;
  }
  get viewId() {
    return this._viewId;
  }
  get viewType() {
    return this._viewType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueSearchViewTypeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueSearchViewTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueSearchViewTypeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueSearchViewTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.namespaceId}/${opts.viewId}/${opts.viewType}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        namespaceId: opts.namespaceId,
        viewId: opts.viewId,
        viewType: opts.viewType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSearchViewTypeAriStaticOpts);
    return new _JiraIssueSearchViewTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueSearchViewTypeAriStaticOpts);
    return new _JiraIssueSearchViewTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      namespaceId: this.namespaceId,
      viewId: this.viewId,
      viewType: this.viewType
    };
  }
};

// src/jira/issue-security-level-permission/types.ts
var JiraIssueSecurityLevelPermissionAriResourceOwner = "jira", JiraIssueSecurityLevelPermissionAriResourceType = "issue-security-level-permission";

// src/jira/issue-security-level-permission/manifest.ts
var jiraIssueSecurityLevelPermissionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueSecurityLevelPermissionAriResourceOwner,
  resourceType: JiraIssueSecurityLevelPermissionAriResourceType,
  resourceIdSlug: "activation/{activationId}/project/{projectId}/{securityLevelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    securityLevelId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-security-level-permission/index.ts
var JiraIssueSecurityLevelPermissionAri = class _JiraIssueSecurityLevelPermissionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get securityLevelId() {
    return this._securityLevelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueSecurityLevelPermissionAriStaticOpts.qualifier,
      platformQualifier: jiraIssueSecurityLevelPermissionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraIssueSecurityLevelPermissionAriStaticOpts.resourceOwner,
      resourceType: jiraIssueSecurityLevelPermissionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/project/${opts.projectId}/${opts.securityLevelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        securityLevelId: opts.securityLevelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSecurityLevelPermissionAriStaticOpts);
    return new _JiraIssueSecurityLevelPermissionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueSecurityLevelPermissionAriStaticOpts);
    return new _JiraIssueSecurityLevelPermissionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      projectId: this.projectId,
      securityLevelId: this.securityLevelId
    };
  }
};

// src/jira/issue-status/types.ts
var JiraIssueStatusAriResourceOwner = "jira", JiraIssueStatusAriResourceType = "issue-status";

// src/jira/issue-status/manifest.ts
var jiraIssueStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueStatusAriResourceOwner,
  resourceType: JiraIssueStatusAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issuestatusId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issuestatusId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-status/index.ts
var JiraIssueStatusAri = class _JiraIssueStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issuestatusId = opts.resourceIdSegmentValues.issuestatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issuestatusId() {
    return this._issuestatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueStatusAriStaticOpts.qualifier,
      platformQualifier: jiraIssueStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueStatusAriStaticOpts.resourceOwner,
      resourceType: jiraIssueStatusAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issuestatusId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issuestatusId: opts.issuestatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueStatusAriStaticOpts);
    return new _JiraIssueStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueStatusAriStaticOpts);
    return new _JiraIssueStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issuestatusId: this.issuestatusId
    };
  }
};

// src/jira/issue-type/types.ts
var JiraIssueTypeAriResourceOwner = "jira", JiraIssueTypeAriResourceType = "issue-type";

// src/jira/issue-type/manifest.ts
var jiraIssueTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueTypeAriResourceOwner,
  resourceType: JiraIssueTypeAriResourceType,
  resourceIdSlug: "{issueTypeId}",
  resourceIdSegmentFormats: {
    issueTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type/index.ts
var JiraIssueTypeAri = class _JiraIssueTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeAriStaticOpts.resourceType,
      resourceId: `${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeAriStaticOpts);
    return new _JiraIssueTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeAriStaticOpts);
    return new _JiraIssueTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/issue-type-scheme/types.ts
var JiraIssueTypeSchemeAriResourceOwner = "jira", JiraIssueTypeSchemeAriResourceType = "issue-type-scheme";

// src/jira/issue-type-scheme/manifest.ts
var jiraIssueTypeSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueTypeSchemeAriResourceOwner,
  resourceType: JiraIssueTypeSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueTypeSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueTypeSchemeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type-scheme/index.ts
var JiraIssueTypeSchemeAri = class _JiraIssueTypeSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueTypeSchemeId() {
    return this._issueTypeSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueTypeSchemeId: opts.issueTypeSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeAriStaticOpts);
    return new _JiraIssueTypeSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeAriStaticOpts);
    return new _JiraIssueTypeSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueTypeSchemeId: this.issueTypeSchemeId
    };
  }
};

// src/jira/issue-type-scheme-mapping/types.ts
var JiraIssueTypeSchemeMappingAriResourceOwner = "jira", JiraIssueTypeSchemeMappingAriResourceType = "issue-type-scheme-mapping";

// src/jira/issue-type-scheme-mapping/manifest.ts
var jiraIssueTypeSchemeMappingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueTypeSchemeMappingAriResourceOwner,
  resourceType: JiraIssueTypeSchemeMappingAriResourceType,
  resourceIdSlug: "activation/{activationId}/{issueTypeSchemeId}/{issueTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    issueTypeSchemeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    issueTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-type-scheme-mapping/index.ts
var JiraIssueTypeSchemeMappingAri = class _JiraIssueTypeSchemeMappingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get issueTypeSchemeId() {
    return this._issueTypeSchemeId;
  }
  get issueTypeId() {
    return this._issueTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueTypeSchemeMappingAriStaticOpts.qualifier,
      platformQualifier: jiraIssueTypeSchemeMappingAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueTypeSchemeMappingAriStaticOpts.resourceOwner,
      resourceType: jiraIssueTypeSchemeMappingAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}/${opts.issueTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        issueTypeSchemeId: opts.issueTypeSchemeId,
        issueTypeId: opts.issueTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeMappingAriStaticOpts);
    return new _JiraIssueTypeSchemeMappingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeMappingAriStaticOpts);
    return new _JiraIssueTypeSchemeMappingAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      issueTypeSchemeId: this.issueTypeSchemeId,
      issueTypeId: this.issueTypeId
    };
  }
};

// src/jira/issue-worklog/types.ts
var JiraIssueWorklogAriResourceOwner = "jira", JiraIssueWorklogAriResourceType = "issue-worklog";

// src/jira/issue-worklog/manifest.ts
var jiraIssueWorklogAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueWorklogAriResourceOwner,
  resourceType: JiraIssueWorklogAriResourceType,
  resourceIdSlug: "{issueId}/{worklogId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    worklogId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-worklog/index.ts
var JiraIssueWorklogAri = class _JiraIssueWorklogAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._worklogId = opts.resourceIdSegmentValues.worklogId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get worklogId() {
    return this._worklogId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueWorklogAriStaticOpts.qualifier,
      platformQualifier: jiraIssueWorklogAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssueWorklogAriStaticOpts.resourceOwner,
      resourceType: jiraIssueWorklogAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.worklogId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        worklogId: opts.worklogId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueWorklogAriStaticOpts);
    return new _JiraIssueWorklogAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      worklogId: this.worklogId
    };
  }
};

// src/jira/issuefieldvalue/types.ts
var JiraIssuefieldvalueAriResourceOwner = "jira", JiraIssuefieldvalueAriResourceType = "issuefieldvalue";

// src/jira/issuefieldvalue/manifest.ts
var jiraIssuefieldvalueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssuefieldvalueAriResourceOwner,
  resourceType: JiraIssuefieldvalueAriResourceType,
  resourceIdSlug: "{issueId}/{fieldId}",
  resourceIdSegmentFormats: {
    issueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[a-zA-Z0-9_\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issuefieldvalue/index.ts
var JiraIssuefieldvalueAri = class _JiraIssuefieldvalueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._issueId = opts.resourceIdSegmentValues.issueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get issueId() {
    return this._issueId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssuefieldvalueAriStaticOpts.qualifier,
      platformQualifier: jiraIssuefieldvalueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraIssuefieldvalueAriStaticOpts.resourceOwner,
      resourceType: jiraIssuefieldvalueAriStaticOpts.resourceType,
      resourceId: `${opts.issueId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        issueId: opts.issueId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssuefieldvalueAriStaticOpts);
    return new _JiraIssuefieldvalueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssuefieldvalueAriStaticOpts);
    return new _JiraIssuefieldvalueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      issueId: this.issueId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/navigation-config/types.ts
var JiraNavigationConfigAriResourceOwner = "jira", JiraNavigationConfigAriResourceType = "navigation-config";

// src/jira/navigation-config/manifest.ts
var jiraNavigationConfigAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNavigationConfigAriResourceOwner,
  resourceType: JiraNavigationConfigAriResourceType,
  resourceIdSlug: "activation/{activationId}/{userId}/{navKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/,
    // eslint-disable-line no-useless-escape
    navKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-config/index.ts
var JiraNavigationConfigAri = class _JiraNavigationConfigAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._userId = opts.resourceIdSegmentValues.userId, this._navKey = opts.resourceIdSegmentValues.navKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get userId() {
    return this._userId;
  }
  get navKey() {
    return this._navKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationConfigAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationConfigAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationConfigAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationConfigAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.userId}/${opts.navKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        userId: opts.userId,
        navKey: opts.navKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationConfigAriStaticOpts);
    return new _JiraNavigationConfigAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationConfigAriStaticOpts);
    return new _JiraNavigationConfigAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      userId: this.userId,
      navKey: this.navKey
    };
  }
};

// src/jira/navigation-item/types.ts
var JiraNavigationItemAriResourceOwner = "jira", JiraNavigationItemAriResourceType = "navigation-item";

// src/jira/navigation-item/manifest.ts
var jiraNavigationItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNavigationItemAriResourceOwner,
  resourceType: JiraNavigationItemAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scopeType}/{scopeId}/{itemId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scopeType: /(?:project|board|global|plan|queue)/,
    // eslint-disable-line no-useless-escape
    scopeId: /[a-zA-Z0-9_\-.]+/,
    // eslint-disable-line no-useless-escape
    itemId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-item/index.ts
var JiraNavigationItemAri = class _JiraNavigationItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scopeType = opts.resourceIdSegmentValues.scopeType, this._scopeId = opts.resourceIdSegmentValues.scopeId, this._itemId = opts.resourceIdSegmentValues.itemId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scopeType() {
    return this._scopeType;
  }
  get scopeId() {
    return this._scopeId;
  }
  get itemId() {
    return this._itemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationItemAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationItemAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationItemAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationItemAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scopeType}/${opts.scopeId}/${opts.itemId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scopeType: opts.scopeType,
        scopeId: opts.scopeId,
        itemId: opts.itemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationItemAriStaticOpts);
    return new _JiraNavigationItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationItemAriStaticOpts);
    return new _JiraNavigationItemAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scopeType: this.scopeType,
      scopeId: this.scopeId,
      itemId: this.itemId
    };
  }
};

// src/jira/navigation-menu/types.ts
var JiraNavigationMenuAriResourceOwner = "jira", JiraNavigationMenuAriResourceType = "navigation-menu";

// src/jira/navigation-menu/manifest.ts
var jiraNavigationMenuAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNavigationMenuAriResourceOwner,
  resourceType: JiraNavigationMenuAriResourceType,
  resourceIdSlug: "activation/{activationId}/{navigationItemScope}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    navigationItemScope: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-menu/index.ts
var JiraNavigationMenuAri = class _JiraNavigationMenuAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._navigationItemScope = opts.resourceIdSegmentValues.navigationItemScope;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get navigationItemScope() {
    return this._navigationItemScope;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationMenuAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationMenuAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationMenuAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationMenuAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.navigationItemScope}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        navigationItemScope: opts.navigationItemScope
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationMenuAriStaticOpts);
    return new _JiraNavigationMenuAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationMenuAriStaticOpts);
    return new _JiraNavigationMenuAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      navigationItemScope: this.navigationItemScope
    };
  }
};

// src/jira/navigation-settings/types.ts
var JiraNavigationSettingsAriResourceOwner = "jira", JiraNavigationSettingsAriResourceType = "navigation-settings";

// src/jira/navigation-settings/manifest.ts
var jiraNavigationSettingsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNavigationSettingsAriResourceOwner,
  resourceType: JiraNavigationSettingsAriResourceType,
  resourceIdSlug: "activation/{activationId}/{navigationSettingScope}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    navigationSettingScope: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/navigation-settings/index.ts
var JiraNavigationSettingsAri = class _JiraNavigationSettingsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._navigationSettingScope = opts.resourceIdSegmentValues.navigationSettingScope;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get navigationSettingScope() {
    return this._navigationSettingScope;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNavigationSettingsAriStaticOpts.qualifier,
      platformQualifier: jiraNavigationSettingsAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraNavigationSettingsAriStaticOpts.resourceOwner,
      resourceType: jiraNavigationSettingsAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.navigationSettingScope}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        navigationSettingScope: opts.navigationSettingScope
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationSettingsAriStaticOpts);
    return new _JiraNavigationSettingsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNavigationSettingsAriStaticOpts);
    return new _JiraNavigationSettingsAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      navigationSettingScope: this.navigationSettingScope
    };
  }
};

// src/jira/notification-type/types.ts
var JiraNotificationTypeAriResourceOwner = "jira", JiraNotificationTypeAriResourceType = "notification-type";

// src/jira/notification-type/manifest.ts
var jiraNotificationTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNotificationTypeAriResourceOwner,
  resourceType: JiraNotificationTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationTypeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-type/index.ts
var JiraNotificationTypeAri = class _JiraNotificationTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeId = opts.resourceIdSegmentValues.notificationTypeId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationTypeId() {
    return this._notificationTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationTypeAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationTypeAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationTypeId: opts.notificationTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeAriStaticOpts);
    return new _JiraNotificationTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeAriStaticOpts);
    return new _JiraNotificationTypeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationTypeId: this.notificationTypeId
    };
  }
};

// src/jira/notification-type-scheme/types.ts
var JiraNotificationTypeSchemeAriResourceOwner = "jira", JiraNotificationTypeSchemeAriResourceType = "notification-type-scheme";

// src/jira/notification-type-scheme/manifest.ts
var jiraNotificationTypeSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNotificationTypeSchemeAriResourceOwner,
  resourceType: JiraNotificationTypeSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationTypeSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationTypeSchemeId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-type-scheme/index.ts
var JiraNotificationTypeSchemeAri = class _JiraNotificationTypeSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeSchemeId = opts.resourceIdSegmentValues.notificationTypeSchemeId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationTypeSchemeId() {
    return this._notificationTypeSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationTypeSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationTypeSchemeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationTypeSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationTypeSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationTypeSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationTypeSchemeId: opts.notificationTypeSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeSchemeAriStaticOpts);
    return new _JiraNotificationTypeSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeSchemeAriStaticOpts);
    return new _JiraNotificationTypeSchemeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationTypeSchemeId: this.notificationTypeSchemeId
    };
  }
};

// src/jira/notification-user-preference/types.ts
var JiraNotificationUserPreferenceAriResourceOwner = "jira", JiraNotificationUserPreferenceAriResourceType = "notification-user-preference";

// src/jira/notification-user-preference/manifest.ts
var jiraNotificationUserPreferenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraNotificationUserPreferenceAriResourceOwner,
  resourceType: JiraNotificationUserPreferenceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{notificationUserPreferenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationUserPreferenceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/notification-user-preference/index.ts
var JiraNotificationUserPreferenceAri = class _JiraNotificationUserPreferenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationUserPreferenceId = opts.resourceIdSegmentValues.notificationUserPreferenceId;
  }
  get activationId() {
    return this._activationId;
  }
  get notificationUserPreferenceId() {
    return this._notificationUserPreferenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraNotificationUserPreferenceAriStaticOpts.qualifier,
      platformQualifier: jiraNotificationUserPreferenceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraNotificationUserPreferenceAriStaticOpts.resourceOwner,
      resourceType: jiraNotificationUserPreferenceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.notificationUserPreferenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        notificationUserPreferenceId: opts.notificationUserPreferenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationUserPreferenceAriStaticOpts);
    return new _JiraNotificationUserPreferenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraNotificationUserPreferenceAriStaticOpts);
    return new _JiraNotificationUserPreferenceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      notificationUserPreferenceId: this.notificationUserPreferenceId
    };
  }
};

// src/jira/operations-workspace/types.ts
var JiraOperationsWorkspaceAriResourceOwner = "jira", JiraOperationsWorkspaceAriResourceType = "operations-workspace";

// src/jira/operations-workspace/manifest.ts
var jiraOperationsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraOperationsWorkspaceAriResourceOwner,
  resourceType: JiraOperationsWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{operationsWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    operationsWorkspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/operations-workspace/index.ts
var JiraOperationsWorkspaceAri = class _JiraOperationsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get operationsWorkspaceId() {
    return this._operationsWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraOperationsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraOperationsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraOperationsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraOperationsWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        operationsWorkspaceId: opts.operationsWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraOperationsWorkspaceAriStaticOpts);
    return new _JiraOperationsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      operationsWorkspaceId: this.operationsWorkspaceId
    };
  }
};

// src/jira/permission-scheme/types.ts
var JiraPermissionSchemeAriResourceOwner = "jira", JiraPermissionSchemeAriResourceType = "permission-scheme";

// src/jira/permission-scheme/manifest.ts
var jiraPermissionSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPermissionSchemeAriResourceOwner,
  resourceType: JiraPermissionSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{schemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    schemeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/permission-scheme/index.ts
var JiraPermissionSchemeAri = class _JiraPermissionSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._schemeId = opts.resourceIdSegmentValues.schemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get schemeId() {
    return this._schemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPermissionSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraPermissionSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPermissionSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraPermissionSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.schemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        schemeId: opts.schemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPermissionSchemeAriStaticOpts);
    return new _JiraPermissionSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPermissionSchemeAriStaticOpts);
    return new _JiraPermissionSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      schemeId: this.schemeId
    };
  }
};

// src/jira/plan/types.ts
var JiraPlanAriResourceOwner = "jira", JiraPlanAriResourceType = "plan";

// src/jira/plan/manifest.ts
var jiraPlanAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanAriResourceOwner,
  resourceType: JiraPlanAriResourceType,
  resourceIdSlug: "activation/{activationId}/{planId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    planId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan/index.ts
var JiraPlanAri = class _JiraPlanAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get planId() {
    return this._planId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanAriStaticOpts.qualifier,
      platformQualifier: jiraPlanAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanAriStaticOpts.resourceOwner,
      resourceType: jiraPlanAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.planId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        planId: opts.planId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanAriStaticOpts);
    return new _JiraPlanAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanAriStaticOpts);
    return new _JiraPlanAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      planId: this.planId
    };
  }
};

// src/jira/plan-cross-project-scenario-version/types.ts
var JiraPlanCrossProjectScenarioVersionAriResourceOwner = "jira", JiraPlanCrossProjectScenarioVersionAriResourceType = "plan-cross-project-scenario-version";

// src/jira/plan-cross-project-scenario-version/manifest.ts
var jiraPlanCrossProjectScenarioVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanCrossProjectScenarioVersionAriResourceOwner,
  resourceType: JiraPlanCrossProjectScenarioVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{crossProjectScenarioVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    crossProjectScenarioVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-cross-project-scenario-version/index.ts
var JiraPlanCrossProjectScenarioVersionAri = class _JiraPlanCrossProjectScenarioVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectScenarioVersionId = opts.resourceIdSegmentValues.crossProjectScenarioVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get crossProjectScenarioVersionId() {
    return this._crossProjectScenarioVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.crossProjectScenarioVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        crossProjectScenarioVersionId: opts.crossProjectScenarioVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectScenarioVersionAriStaticOpts);
    return new _JiraPlanCrossProjectScenarioVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectScenarioVersionAriStaticOpts);
    return new _JiraPlanCrossProjectScenarioVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      crossProjectScenarioVersionId: this.crossProjectScenarioVersionId
    };
  }
};

// src/jira/plan-cross-project-version/types.ts
var JiraPlanCrossProjectVersionAriResourceOwner = "jira", JiraPlanCrossProjectVersionAriResourceType = "plan-cross-project-version";

// src/jira/plan-cross-project-version/manifest.ts
var jiraPlanCrossProjectVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanCrossProjectVersionAriResourceOwner,
  resourceType: JiraPlanCrossProjectVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{crossProjectVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    crossProjectVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-cross-project-version/index.ts
var JiraPlanCrossProjectVersionAri = class _JiraPlanCrossProjectVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectVersionId = opts.resourceIdSegmentValues.crossProjectVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get crossProjectVersionId() {
    return this._crossProjectVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanCrossProjectVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanCrossProjectVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanCrossProjectVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanCrossProjectVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.crossProjectVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        crossProjectVersionId: opts.crossProjectVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectVersionAriStaticOpts);
    return new _JiraPlanCrossProjectVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectVersionAriStaticOpts);
    return new _JiraPlanCrossProjectVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      crossProjectVersionId: this.crossProjectVersionId
    };
  }
};

// src/jira/plan-scenario/types.ts
var JiraPlanScenarioAriResourceOwner = "jira", JiraPlanScenarioAriResourceType = "plan-scenario";

// src/jira/plan-scenario/manifest.ts
var jiraPlanScenarioAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanScenarioAriResourceOwner,
  resourceType: JiraPlanScenarioAriResourceType,
  resourceIdSlug: "activation/{activationId}/{planId}/scenario/{scenarioId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    planId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    scenarioId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario/index.ts
var JiraPlanScenarioAri = class _JiraPlanScenarioAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId, this._scenarioId = opts.resourceIdSegmentValues.scenarioId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get planId() {
    return this._planId;
  }
  get scenarioId() {
    return this._scenarioId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.planId}/scenario/${opts.scenarioId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        planId: opts.planId,
        scenarioId: opts.scenarioId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioAriStaticOpts);
    return new _JiraPlanScenarioAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      planId: this.planId,
      scenarioId: this.scenarioId
    };
  }
};

// src/jira/plan-scenario-issue/types.ts
var JiraPlanScenarioIssueAriResourceOwner = "jira", JiraPlanScenarioIssueAriResourceType = "plan-scenario-issue";

// src/jira/plan-scenario-issue/manifest.ts
var jiraPlanScenarioIssueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanScenarioIssueAriResourceOwner,
  resourceType: JiraPlanScenarioIssueAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioIssueId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioIssueId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-issue/index.ts
var JiraPlanScenarioIssueAri = class _JiraPlanScenarioIssueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioIssueId() {
    return this._scenarioIssueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioIssueAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioIssueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioIssueAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioIssueAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioIssueId: opts.scenarioIssueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueAriStaticOpts);
    return new _JiraPlanScenarioIssueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueAriStaticOpts);
    return new _JiraPlanScenarioIssueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioIssueId: this.scenarioIssueId
    };
  }
};

// src/jira/plan-scenario-issue-field/types.ts
var JiraPlanScenarioIssueFieldAriResourceOwner = "jira", JiraPlanScenarioIssueFieldAriResourceType = "plan-scenario-issue-field";

// src/jira/plan-scenario-issue-field/manifest.ts
var jiraPlanScenarioIssueFieldAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanScenarioIssueFieldAriResourceOwner,
  resourceType: JiraPlanScenarioIssueFieldAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioIssueId}/{fieldId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioIssueId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    fieldId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-issue-field/index.ts
var JiraPlanScenarioIssueFieldAri = class _JiraPlanScenarioIssueFieldAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioIssueId() {
    return this._scenarioIssueId;
  }
  get fieldId() {
    return this._fieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioIssueFieldAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioIssueFieldAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioIssueFieldAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioIssueFieldAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}/${opts.fieldId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioIssueId: opts.scenarioIssueId,
        fieldId: opts.fieldId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueFieldAriStaticOpts);
    return new _JiraPlanScenarioIssueFieldAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueFieldAriStaticOpts);
    return new _JiraPlanScenarioIssueFieldAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioIssueId: this.scenarioIssueId,
      fieldId: this.fieldId
    };
  }
};

// src/jira/plan-scenario-version/types.ts
var JiraPlanScenarioVersionAriResourceOwner = "jira", JiraPlanScenarioVersionAriResourceType = "plan-scenario-version";

// src/jira/plan-scenario-version/manifest.ts
var jiraPlanScenarioVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlanScenarioVersionAriResourceOwner,
  resourceType: JiraPlanScenarioVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioVersionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioVersionId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/plan-scenario-version/index.ts
var JiraPlanScenarioVersionAri = class _JiraPlanScenarioVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioVersionId = opts.resourceIdSegmentValues.scenarioVersionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioVersionId() {
    return this._scenarioVersionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlanScenarioVersionAriStaticOpts.qualifier,
      platformQualifier: jiraPlanScenarioVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlanScenarioVersionAriStaticOpts.resourceOwner,
      resourceType: jiraPlanScenarioVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioVersionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioVersionId: opts.scenarioVersionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioVersionAriStaticOpts);
    return new _JiraPlanScenarioVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioVersionAriStaticOpts);
    return new _JiraPlanScenarioVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scenarioVersionId: this.scenarioVersionId
    };
  }
};

// src/jira/playbook/types.ts
var JiraPlaybookAriResourceOwner = "jira", JiraPlaybookAriResourceType = "playbook";

// src/jira/playbook/manifest.ts
var jiraPlaybookAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookAriResourceOwner,
  resourceType: JiraPlaybookAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook/index.ts
var JiraPlaybookAri = class _JiraPlaybookAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookId = opts.resourceIdSegmentValues.playbookId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookId() {
    return this._playbookId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookId: opts.playbookId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookAriStaticOpts);
    return new _JiraPlaybookAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookAriStaticOpts);
    return new _JiraPlaybookAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookId: this.playbookId
    };
  }
};

// src/jira/playbook-instance/types.ts
var JiraPlaybookInstanceAriResourceOwner = "jira", JiraPlaybookInstanceAriResourceType = "playbook-instance";

// src/jira/playbook-instance/manifest.ts
var jiraPlaybookInstanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookInstanceAriResourceOwner,
  resourceType: JiraPlaybookInstanceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookId}/{context}/{contextId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    context: /(issue|alert)/,
    // eslint-disable-line no-useless-escape
    contextId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-instance/index.ts
var JiraPlaybookInstanceAri = class _JiraPlaybookInstanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookId = opts.resourceIdSegmentValues.playbookId, this._context = opts.resourceIdSegmentValues.context, this._contextId = opts.resourceIdSegmentValues.contextId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookId() {
    return this._playbookId;
  }
  get context() {
    return this._context;
  }
  get contextId() {
    return this._contextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookInstanceAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookInstanceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookInstanceAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookInstanceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookId}/${opts.context}/${opts.contextId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookId: opts.playbookId,
        context: opts.context,
        contextId: opts.contextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookInstanceAriStaticOpts);
    return new _JiraPlaybookInstanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookInstanceAriStaticOpts);
    return new _JiraPlaybookInstanceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookId: this.playbookId,
      context: this.context,
      contextId: this.contextId
    };
  }
};

// src/jira/playbook-instance-step/types.ts
var JiraPlaybookInstanceStepAriResourceOwner = "jira", JiraPlaybookInstanceStepAriResourceType = "playbook-instance-step";

// src/jira/playbook-instance-step/manifest.ts
var jiraPlaybookInstanceStepAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookInstanceStepAriResourceOwner,
  resourceType: JiraPlaybookInstanceStepAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookId}/{stepId}/{context}/{contextId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    stepId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    context: /(issue|alert)/,
    // eslint-disable-line no-useless-escape
    contextId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-instance-step/index.ts
var JiraPlaybookInstanceStepAri = class _JiraPlaybookInstanceStepAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookId = opts.resourceIdSegmentValues.playbookId, this._stepId = opts.resourceIdSegmentValues.stepId, this._context = opts.resourceIdSegmentValues.context, this._contextId = opts.resourceIdSegmentValues.contextId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookId() {
    return this._playbookId;
  }
  get stepId() {
    return this._stepId;
  }
  get context() {
    return this._context;
  }
  get contextId() {
    return this._contextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookInstanceStepAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookInstanceStepAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookInstanceStepAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookInstanceStepAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookId}/${opts.stepId}/${opts.context}/${opts.contextId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookId: opts.playbookId,
        stepId: opts.stepId,
        context: opts.context,
        contextId: opts.contextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookInstanceStepAriStaticOpts);
    return new _JiraPlaybookInstanceStepAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookInstanceStepAriStaticOpts);
    return new _JiraPlaybookInstanceStepAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookId: this.playbookId,
      stepId: this.stepId,
      context: this.context,
      contextId: this.contextId
    };
  }
};

// src/jira/playbook-label/types.ts
var JiraPlaybookLabelAriResourceOwner = "jira", JiraPlaybookLabelAriResourceType = "playbook-label";

// src/jira/playbook-label/manifest.ts
var jiraPlaybookLabelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookLabelAriResourceOwner,
  resourceType: JiraPlaybookLabelAriResourceType,
  resourceIdSlug: "activation/{activationId}/{labelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    labelId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-label/index.ts
var JiraPlaybookLabelAri = class _JiraPlaybookLabelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._labelId = opts.resourceIdSegmentValues.labelId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get labelId() {
    return this._labelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookLabelAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookLabelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookLabelAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookLabelAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.labelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        labelId: opts.labelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookLabelAriStaticOpts);
    return new _JiraPlaybookLabelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookLabelAriStaticOpts);
    return new _JiraPlaybookLabelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      labelId: this.labelId
    };
  }
};

// src/jira/playbook-step/types.ts
var JiraPlaybookStepAriResourceOwner = "jira", JiraPlaybookStepAriResourceType = "playbook-step";

// src/jira/playbook-step/manifest.ts
var jiraPlaybookStepAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookStepAriResourceOwner,
  resourceType: JiraPlaybookStepAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookId}/{stepId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    stepId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-step/index.ts
var JiraPlaybookStepAri = class _JiraPlaybookStepAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookId = opts.resourceIdSegmentValues.playbookId, this._stepId = opts.resourceIdSegmentValues.stepId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookId() {
    return this._playbookId;
  }
  get stepId() {
    return this._stepId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookStepAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookStepAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookStepAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookStepAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookId}/${opts.stepId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookId: opts.playbookId,
        stepId: opts.stepId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookStepAriStaticOpts);
    return new _JiraPlaybookStepAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookStepAriStaticOpts);
    return new _JiraPlaybookStepAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookId: this.playbookId,
      stepId: this.stepId
    };
  }
};

// src/jira/playbook-step-run/types.ts
var JiraPlaybookStepRunAriResourceOwner = "jira", JiraPlaybookStepRunAriResourceType = "playbook-step-run";

// src/jira/playbook-step-run/manifest.ts
var jiraPlaybookStepRunAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookStepRunAriResourceOwner,
  resourceType: JiraPlaybookStepRunAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookStepRunId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookStepRunId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-step-run/index.ts
var JiraPlaybookStepRunAri = class _JiraPlaybookStepRunAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookStepRunId = opts.resourceIdSegmentValues.playbookStepRunId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookStepRunId() {
    return this._playbookStepRunId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookStepRunAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookStepRunAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookStepRunAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookStepRunAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookStepRunId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookStepRunId: opts.playbookStepRunId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookStepRunAriStaticOpts);
    return new _JiraPlaybookStepRunAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookStepRunAriStaticOpts);
    return new _JiraPlaybookStepRunAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookStepRunId: this.playbookStepRunId
    };
  }
};

// src/jira/post-incident-review/types.ts
var JiraPostIncidentReviewAriResourceOwner = "jira", JiraPostIncidentReviewAriResourceType = "post-incident-review";

// src/jira/post-incident-review/manifest.ts
var jiraPostIncidentReviewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPostIncidentReviewAriResourceOwner,
  resourceType: JiraPostIncidentReviewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review/index.ts
var JiraPostIncidentReviewAri = class _JiraPostIncidentReviewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewAriStaticOpts);
    return new _JiraPostIncidentReviewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewAriStaticOpts);
    return new _JiraPostIncidentReviewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId
    };
  }
};

// src/jira/post-incident-review-history/types.ts
var JiraPostIncidentReviewHistoryAriResourceOwner = "jira", JiraPostIncidentReviewHistoryAriResourceType = "post-incident-review-history";

// src/jira/post-incident-review-history/manifest.ts
var jiraPostIncidentReviewHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPostIncidentReviewHistoryAriResourceOwner,
  resourceType: JiraPostIncidentReviewHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review-history/index.ts
var JiraPostIncidentReviewHistoryAri = class _JiraPostIncidentReviewHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewId() {
    return this._postIncidentReviewId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewId: opts.postIncidentReviewId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewHistoryAriStaticOpts);
    return new _JiraPostIncidentReviewHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewHistoryAriStaticOpts);
    return new _JiraPostIncidentReviewHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewId: this.postIncidentReviewId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/post-incident-review-link/types.ts
var JiraPostIncidentReviewLinkAriResourceOwner = "jira", JiraPostIncidentReviewLinkAriResourceType = "post-incident-review-link";

// src/jira/post-incident-review-link/manifest.ts
var jiraPostIncidentReviewLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPostIncidentReviewLinkAriResourceOwner,
  resourceType: JiraPostIncidentReviewLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{postIncidentReviewLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    postIncidentReviewLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/post-incident-review-link/index.ts
var JiraPostIncidentReviewLinkAri = class _JiraPostIncidentReviewLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewLinkId = opts.resourceIdSegmentValues.postIncidentReviewLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get postIncidentReviewLinkId() {
    return this._postIncidentReviewLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPostIncidentReviewLinkAriStaticOpts.qualifier,
      platformQualifier: jiraPostIncidentReviewLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPostIncidentReviewLinkAriStaticOpts.resourceOwner,
      resourceType: jiraPostIncidentReviewLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        postIncidentReviewLinkId: opts.postIncidentReviewLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewLinkAriStaticOpts);
    return new _JiraPostIncidentReviewLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewLinkAriStaticOpts);
    return new _JiraPostIncidentReviewLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      postIncidentReviewLinkId: this.postIncidentReviewLinkId
    };
  }
};

// src/jira/priority/types.ts
var JiraPriorityAriResourceOwner = "jira", JiraPriorityAriResourceType = "priority";

// src/jira/priority/manifest.ts
var jiraPriorityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPriorityAriResourceOwner,
  resourceType: JiraPriorityAriResourceType,
  resourceIdSlug: "activation/{activationId}/{priorityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    priorityId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/priority/index.ts
var JiraPriorityAri = class _JiraPriorityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._priorityId = opts.resourceIdSegmentValues.priorityId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get priorityId() {
    return this._priorityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPriorityAriStaticOpts.qualifier,
      platformQualifier: jiraPriorityAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPriorityAriStaticOpts.resourceOwner,
      resourceType: jiraPriorityAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.priorityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        priorityId: opts.priorityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPriorityAriStaticOpts);
    return new _JiraPriorityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPriorityAriStaticOpts);
    return new _JiraPriorityAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      priorityId: this.priorityId
    };
  }
};

// src/jira/product/types.ts
var JiraProductAriResourceOwner = "jira", JiraProductAriResourceType = "product";

// src/jira/product/manifest.ts
var jiraProductAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProductAriResourceOwner,
  resourceType: JiraProductAriResourceType,
  resourceIdSlug: "activation/{activationId}/{productId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    productId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/product/index.ts
var JiraProductAri = class _JiraProductAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._productId = opts.resourceIdSegmentValues.productId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get productId() {
    return this._productId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProductAriStaticOpts.qualifier,
      platformQualifier: jiraProductAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProductAriStaticOpts.resourceOwner,
      resourceType: jiraProductAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.productId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        productId: opts.productId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProductAriStaticOpts);
    return new _JiraProductAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProductAriStaticOpts);
    return new _JiraProductAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      productId: this.productId
    };
  }
};

// src/jira/project/types.ts
var JiraProjectAriResourceOwner = "jira", JiraProjectAriResourceType = "project";

// src/jira/project/manifest.ts
var jiraProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectAriResourceOwner,
  resourceType: JiraProjectAriResourceType,
  resourceIdSlug: "{projectId}",
  resourceIdSegmentFormats: {
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project/index.ts
var JiraProjectAri = class _JiraProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectAriStaticOpts.qualifier,
      platformQualifier: jiraProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectAriStaticOpts.resourceOwner,
      resourceType: jiraProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectId}`,
      resourceIdSegmentValues: {
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectAriStaticOpts);
    return new _JiraProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectAriStaticOpts);
    return new _JiraProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectId: this.projectId
    };
  }
};

// src/jira/project-category/types.ts
var JiraProjectCategoryAriResourceOwner = "jira", JiraProjectCategoryAriResourceType = "project-category";

// src/jira/project-category/manifest.ts
var jiraProjectCategoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectCategoryAriResourceOwner,
  resourceType: JiraProjectCategoryAriResourceType,
  resourceIdSlug: "{projectCategoryId}",
  resourceIdSegmentFormats: {
    projectCategoryId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-category/index.ts
var JiraProjectCategoryAri = class _JiraProjectCategoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectCategoryId = opts.resourceIdSegmentValues.projectCategoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectCategoryId() {
    return this._projectCategoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectCategoryAriStaticOpts.qualifier,
      platformQualifier: jiraProjectCategoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectCategoryAriStaticOpts.resourceOwner,
      resourceType: jiraProjectCategoryAriStaticOpts.resourceType,
      resourceId: `${opts.projectCategoryId}`,
      resourceIdSegmentValues: {
        projectCategoryId: opts.projectCategoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectCategoryAriStaticOpts);
    return new _JiraProjectCategoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectCategoryAriStaticOpts);
    return new _JiraProjectCategoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectCategoryId: this.projectCategoryId
    };
  }
};

// src/jira/project-feature/types.ts
var JiraProjectFeatureAriResourceOwner = "jira", JiraProjectFeatureAriResourceType = "project-feature";

// src/jira/project-feature/manifest.ts
var jiraProjectFeatureAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectFeatureAriResourceOwner,
  resourceType: JiraProjectFeatureAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectId}/featureKey/{featureKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    featureKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-feature/index.ts
var JiraProjectFeatureAri = class _JiraProjectFeatureAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._featureKey = opts.resourceIdSegmentValues.featureKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get featureKey() {
    return this._featureKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectFeatureAriStaticOpts.qualifier,
      platformQualifier: jiraProjectFeatureAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectFeatureAriStaticOpts.resourceOwner,
      resourceType: jiraProjectFeatureAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectId}/featureKey/${opts.featureKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        featureKey: opts.featureKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectFeatureAriStaticOpts);
    return new _JiraProjectFeatureAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectFeatureAriStaticOpts);
    return new _JiraProjectFeatureAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      featureKey: this.featureKey
    };
  }
};

// src/jira/project-overview/types.ts
var JiraProjectOverviewAriResourceOwner = "jira", JiraProjectOverviewAriResourceType = "project-overview";

// src/jira/project-overview/manifest.ts
var jiraProjectOverviewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectOverviewAriResourceOwner,
  resourceType: JiraProjectOverviewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{overviewId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    overviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-overview/index.ts
var JiraProjectOverviewAri = class _JiraProjectOverviewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._overviewId = opts.resourceIdSegmentValues.overviewId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get overviewId() {
    return this._overviewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectOverviewAriStaticOpts.qualifier,
      platformQualifier: jiraProjectOverviewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectOverviewAriStaticOpts.resourceOwner,
      resourceType: jiraProjectOverviewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.overviewId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        overviewId: opts.overviewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectOverviewAriStaticOpts);
    return new _JiraProjectOverviewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectOverviewAriStaticOpts);
    return new _JiraProjectOverviewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      overviewId: this.overviewId
    };
  }
};

// src/jira/project-role-actor/types.ts
var JiraProjectRoleActorAriResourceOwner = "jira", JiraProjectRoleActorAriResourceType = "project-role-actor";

// src/jira/project-role-actor/manifest.ts
var jiraProjectRoleActorAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectRoleActorAriResourceOwner,
  resourceType: JiraProjectRoleActorAriResourceType,
  resourceIdSlug: "activation/{activationId}/{projectRoleActorId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectRoleActorId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-role-actor/index.ts
var JiraProjectRoleActorAri = class _JiraProjectRoleActorAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectRoleActorId = opts.resourceIdSegmentValues.projectRoleActorId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectRoleActorId() {
    return this._projectRoleActorId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectRoleActorAriStaticOpts.qualifier,
      platformQualifier: jiraProjectRoleActorAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectRoleActorAriStaticOpts.resourceOwner,
      resourceType: jiraProjectRoleActorAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.projectRoleActorId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectRoleActorId: opts.projectRoleActorId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectRoleActorAriStaticOpts);
    return new _JiraProjectRoleActorAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectRoleActorAriStaticOpts);
    return new _JiraProjectRoleActorAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectRoleActorId: this.projectRoleActorId
    };
  }
};

// src/jira/project-role-by-project/types.ts
var JiraProjectRoleByProjectAriResourceOwner = "jira", JiraProjectRoleByProjectAriResourceType = "project-role-by-project";

// src/jira/project-role-by-project/manifest.ts
var jiraProjectRoleByProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectRoleByProjectAriResourceOwner,
  resourceType: JiraProjectRoleByProjectAriResourceType,
  resourceIdSlug: "activation/{activationId}/project/{projectId}/projectrole/{projectRoleId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    projectRoleId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-role-by-project/index.ts
var JiraProjectRoleByProjectAri = class _JiraProjectRoleByProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._projectRoleId = opts.resourceIdSegmentValues.projectRoleId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get projectRoleId() {
    return this._projectRoleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectRoleByProjectAriStaticOpts.qualifier,
      platformQualifier: jiraProjectRoleByProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectRoleByProjectAriStaticOpts.resourceOwner,
      resourceType: jiraProjectRoleByProjectAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/project/${opts.projectId}/projectrole/${opts.projectRoleId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        projectRoleId: opts.projectRoleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectRoleByProjectAriStaticOpts);
    return new _JiraProjectRoleByProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectRoleByProjectAriStaticOpts);
    return new _JiraProjectRoleByProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      projectRoleId: this.projectRoleId
    };
  }
};

// src/jira/project-shortcut/types.ts
var JiraProjectShortcutAriResourceOwner = "jira", JiraProjectShortcutAriResourceType = "project-shortcut";

// src/jira/project-shortcut/manifest.ts
var jiraProjectShortcutAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectShortcutAriResourceOwner,
  resourceType: JiraProjectShortcutAriResourceType,
  resourceIdSlug: "activation/{activationId}/{shortcutId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    shortcutId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-shortcut/index.ts
var JiraProjectShortcutAri = class _JiraProjectShortcutAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._shortcutId = opts.resourceIdSegmentValues.shortcutId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get shortcutId() {
    return this._shortcutId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectShortcutAriStaticOpts.qualifier,
      platformQualifier: jiraProjectShortcutAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectShortcutAriStaticOpts.resourceOwner,
      resourceType: jiraProjectShortcutAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.shortcutId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        shortcutId: opts.shortcutId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectShortcutAriStaticOpts);
    return new _JiraProjectShortcutAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectShortcutAriStaticOpts);
    return new _JiraProjectShortcutAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      shortcutId: this.shortcutId
    };
  }
};

// src/jira/project-type/types.ts
var JiraProjectTypeAriResourceOwner = "jira", JiraProjectTypeAriResourceType = "project-type";

// src/jira/project-type/manifest.ts
var jiraProjectTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectTypeAriResourceOwner,
  resourceType: JiraProjectTypeAriResourceType,
  resourceIdSlug: "{projectTypeId}",
  resourceIdSegmentFormats: {
    projectTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-type/index.ts
var JiraProjectTypeAri = class _JiraProjectTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectTypeId = opts.resourceIdSegmentValues.projectTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectTypeId() {
    return this._projectTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectTypeAriStaticOpts.qualifier,
      platformQualifier: jiraProjectTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectTypeAriStaticOpts.resourceOwner,
      resourceType: jiraProjectTypeAriStaticOpts.resourceType,
      resourceId: `${opts.projectTypeId}`,
      resourceIdSegmentValues: {
        projectTypeId: opts.projectTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectTypeAriStaticOpts);
    return new _JiraProjectTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectTypeAriStaticOpts);
    return new _JiraProjectTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectTypeId: this.projectTypeId
    };
  }
};

// src/jira/pull-request/types.ts
var JiraPullRequestAriResourceOwner = "jira", JiraPullRequestAriResourceType = "pull-request";

// src/jira/pull-request/manifest.ts
var jiraPullRequestAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPullRequestAriResourceOwner,
  resourceType: JiraPullRequestAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/pull-request/index.ts
var JiraPullRequestAri = class _JiraPullRequestAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPullRequestAriStaticOpts.qualifier,
      platformQualifier: jiraPullRequestAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPullRequestAriStaticOpts.resourceOwner,
      resourceType: jiraPullRequestAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestAriStaticOpts);
    return new _JiraPullRequestAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPullRequestAriStaticOpts);
    return new _JiraPullRequestAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      pullRequestId: this.pullRequestId
    };
  }
};

// src/jira/pull-request-history/types.ts
var JiraPullRequestHistoryAriResourceOwner = "jira", JiraPullRequestHistoryAriResourceType = "pull-request-history";

// src/jira/pull-request-history/manifest.ts
var jiraPullRequestHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPullRequestHistoryAriResourceOwner,
  resourceType: JiraPullRequestHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{pullRequestId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/pull-request-history/index.ts
var JiraPullRequestHistoryAri = class _JiraPullRequestHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get pullRequestId() {
    return this._pullRequestId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPullRequestHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraPullRequestHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPullRequestHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraPullRequestHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        pullRequestId: opts.pullRequestId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestHistoryAriStaticOpts);
    return new _JiraPullRequestHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPullRequestHistoryAriStaticOpts);
    return new _JiraPullRequestHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      pullRequestId: this.pullRequestId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/remote-link/types.ts
var JiraRemoteLinkAriResourceOwner = "jira", JiraRemoteLinkAriResourceType = "remote-link";

// src/jira/remote-link/manifest.ts
var jiraRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraRemoteLinkAriResourceOwner,
  resourceType: JiraRemoteLinkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/remote-link/index.ts
var JiraRemoteLinkAri = class _JiraRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: jiraRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: jiraRemoteLinkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkAriStaticOpts);
    return new _JiraRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkAriStaticOpts);
    return new _JiraRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId
    };
  }
};

// src/jira/remote-link-history/types.ts
var JiraRemoteLinkHistoryAriResourceOwner = "jira", JiraRemoteLinkHistoryAriResourceType = "remote-link-history";

// src/jira/remote-link-history/manifest.ts
var jiraRemoteLinkHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraRemoteLinkHistoryAriResourceOwner,
  resourceType: JiraRemoteLinkHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{remoteLinkId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/remote-link-history/index.ts
var JiraRemoteLinkHistoryAri = class _JiraRemoteLinkHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRemoteLinkHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraRemoteLinkHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRemoteLinkHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraRemoteLinkHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        remoteLinkId: opts.remoteLinkId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkHistoryAriStaticOpts);
    return new _JiraRemoteLinkHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkHistoryAriStaticOpts);
    return new _JiraRemoteLinkHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      remoteLinkId: this.remoteLinkId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/repository/types.ts
var JiraRepositoryAriResourceOwner = "jira", JiraRepositoryAriResourceType = "repository";

// src/jira/repository/manifest.ts
var jiraRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraRepositoryAriResourceOwner,
  resourceType: JiraRepositoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{repositoryId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/repository/index.ts
var JiraRepositoryAri = class _JiraRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRepositoryAriStaticOpts.qualifier,
      platformQualifier: jiraRepositoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraRepositoryAriStaticOpts.resourceOwner,
      resourceType: jiraRepositoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRepositoryAriStaticOpts);
    return new _JiraRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRepositoryAriStaticOpts);
    return new _JiraRepositoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      repositoryId: this.repositoryId
    };
  }
};

// src/jira/resolution/types.ts
var JiraResolutionAriResourceOwner = "jira", JiraResolutionAriResourceType = "resolution";

// src/jira/resolution/manifest.ts
var jiraResolutionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraResolutionAriResourceOwner,
  resourceType: JiraResolutionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{resolutionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    resolutionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resolution/index.ts
var JiraResolutionAri = class _JiraResolutionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._resolutionId = opts.resourceIdSegmentValues.resolutionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get resolutionId() {
    return this._resolutionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResolutionAriStaticOpts.qualifier,
      platformQualifier: jiraResolutionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResolutionAriStaticOpts.resourceOwner,
      resourceType: jiraResolutionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.resolutionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        resolutionId: opts.resolutionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResolutionAriStaticOpts);
    return new _JiraResolutionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResolutionAriStaticOpts);
    return new _JiraResolutionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      resolutionId: this.resolutionId
    };
  }
};

// src/jira/resource-usage-metric/types.ts
var JiraResourceUsageMetricAriResourceOwner = "jira", JiraResourceUsageMetricAriResourceType = "resource-usage-metric";

// src/jira/resource-usage-metric/manifest.ts
var jiraResourceUsageMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraResourceUsageMetricAriResourceOwner,
  resourceType: JiraResourceUsageMetricAriResourceType,
  resourceIdSlug: "activation/{activationId}/{metricKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    metricKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resource-usage-metric/index.ts
var JiraResourceUsageMetricAri = class _JiraResourceUsageMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._metricKey = opts.resourceIdSegmentValues.metricKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get metricKey() {
    return this._metricKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResourceUsageMetricAriStaticOpts.qualifier,
      platformQualifier: jiraResourceUsageMetricAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResourceUsageMetricAriStaticOpts.resourceOwner,
      resourceType: jiraResourceUsageMetricAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.metricKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        metricKey: opts.metricKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageMetricAriStaticOpts);
    return new _JiraResourceUsageMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResourceUsageMetricAriStaticOpts);
    return new _JiraResourceUsageMetricAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      metricKey: this.metricKey
    };
  }
};

// src/jira/resource-usage-recommendation/types.ts
var JiraResourceUsageRecommendationAriResourceOwner = "jira", JiraResourceUsageRecommendationAriResourceType = "resource-usage-recommendation";

// src/jira/resource-usage-recommendation/manifest.ts
var jiraResourceUsageRecommendationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraResourceUsageRecommendationAriResourceOwner,
  resourceType: JiraResourceUsageRecommendationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{recommendationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    recommendationId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/resource-usage-recommendation/index.ts
var JiraResourceUsageRecommendationAri = class _JiraResourceUsageRecommendationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._recommendationId = opts.resourceIdSegmentValues.recommendationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get recommendationId() {
    return this._recommendationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraResourceUsageRecommendationAriStaticOpts.qualifier,
      platformQualifier: jiraResourceUsageRecommendationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraResourceUsageRecommendationAriStaticOpts.resourceOwner,
      resourceType: jiraResourceUsageRecommendationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.recommendationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        recommendationId: opts.recommendationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageRecommendationAriStaticOpts);
    return new _JiraResourceUsageRecommendationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraResourceUsageRecommendationAriStaticOpts);
    return new _JiraResourceUsageRecommendationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      recommendationId: this.recommendationId
    };
  }
};

// src/jira/role/types.ts
var JiraRoleAriResourceOwner = "jira", JiraRoleAriResourceType = "role";

// src/jira/role/manifest.ts
var jiraRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraRoleAriResourceOwner,
  resourceType: JiraRoleAriResourceType,
  resourceIdSlug: "{jiraRoleType}/{jiraRoleTypeId}",
  resourceIdSegmentFormats: {
    jiraRoleType: /(?:scope|product|projectrole-by-project|project-lead|principal-grant|project-role|application-access|jsm-customer-context-helpseeker-project-permission|jsm-customer-context-anonymous-project-permission|role-type-for-perms-pollinator-test)/,
    // eslint-disable-line no-useless-escape
    jiraRoleTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/role/index.ts
var JiraRoleAri = class _JiraRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._jiraRoleType = opts.resourceIdSegmentValues.jiraRoleType, this._jiraRoleTypeId = opts.resourceIdSegmentValues.jiraRoleTypeId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get jiraRoleType() {
    return this._jiraRoleType;
  }
  get jiraRoleTypeId() {
    return this._jiraRoleTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraRoleAriStaticOpts.qualifier,
      platformQualifier: jiraRoleAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: jiraRoleAriStaticOpts.resourceOwner,
      resourceType: jiraRoleAriStaticOpts.resourceType,
      resourceId: `${opts.jiraRoleType}/${opts.jiraRoleTypeId}`,
      resourceIdSegmentValues: {
        jiraRoleType: opts.jiraRoleType,
        jiraRoleTypeId: opts.jiraRoleTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRoleAriStaticOpts);
    return new _JiraRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraRoleAriStaticOpts);
    return new _JiraRoleAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      jiraRoleType: this.jiraRoleType,
      jiraRoleTypeId: this.jiraRoleTypeId
    };
  }
};

// src/jira/screen/types.ts
var JiraScreenAriResourceOwner = "jira", JiraScreenAriResourceType = "screen";

// src/jira/screen/manifest.ts
var jiraScreenAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraScreenAriResourceOwner,
  resourceType: JiraScreenAriResourceType,
  resourceIdSlug: "activation/{activationId}/{screenId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    screenId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/screen/index.ts
var JiraScreenAri = class _JiraScreenAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenId = opts.resourceIdSegmentValues.screenId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get screenId() {
    return this._screenId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraScreenAriStaticOpts.qualifier,
      platformQualifier: jiraScreenAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraScreenAriStaticOpts.resourceOwner,
      resourceType: jiraScreenAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.screenId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        screenId: opts.screenId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenAriStaticOpts);
    return new _JiraScreenAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraScreenAriStaticOpts);
    return new _JiraScreenAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      screenId: this.screenId
    };
  }
};

// src/jira/screen-scheme/types.ts
var JiraScreenSchemeAriResourceOwner = "jira", JiraScreenSchemeAriResourceType = "screen-scheme";

// src/jira/screen-scheme/manifest.ts
var jiraScreenSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraScreenSchemeAriResourceOwner,
  resourceType: JiraScreenSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{screenSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    screenSchemeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/screen-scheme/index.ts
var JiraScreenSchemeAri = class _JiraScreenSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenSchemeId = opts.resourceIdSegmentValues.screenSchemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get screenSchemeId() {
    return this._screenSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraScreenSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraScreenSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraScreenSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraScreenSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.screenSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        screenSchemeId: opts.screenSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenSchemeAriStaticOpts);
    return new _JiraScreenSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraScreenSchemeAriStaticOpts);
    return new _JiraScreenSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      screenSchemeId: this.screenSchemeId
    };
  }
};

// src/jira/screen-tab/types.ts
var JiraScreenTabAriResourceOwner = "jira", JiraScreenTabAriResourceType = "screen-tab";

// src/jira/screen-tab/manifest.ts
var jiraScreenTabAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraScreenTabAriResourceOwner,
  resourceType: JiraScreenTabAriResourceType,
  resourceIdSlug: "activation/{activationId}/{screenId}/{tabId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    screenId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    tabId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/screen-tab/index.ts
var JiraScreenTabAri = class _JiraScreenTabAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenId = opts.resourceIdSegmentValues.screenId, this._tabId = opts.resourceIdSegmentValues.tabId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get screenId() {
    return this._screenId;
  }
  get tabId() {
    return this._tabId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraScreenTabAriStaticOpts.qualifier,
      platformQualifier: jiraScreenTabAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraScreenTabAriStaticOpts.resourceOwner,
      resourceType: jiraScreenTabAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.screenId}/${opts.tabId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        screenId: opts.screenId,
        tabId: opts.tabId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraScreenTabAriStaticOpts);
    return new _JiraScreenTabAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      screenId: this.screenId,
      tabId: this.tabId
    };
  }
};

// src/jira/security-container/types.ts
var JiraSecurityContainerAriResourceOwner = "jira", JiraSecurityContainerAriResourceType = "security-container";

// src/jira/security-container/manifest.ts
var jiraSecurityContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSecurityContainerAriResourceOwner,
  resourceType: JiraSecurityContainerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityContainerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityContainerId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-container/index.ts
var JiraSecurityContainerAri = class _JiraSecurityContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityContainerId() {
    return this._securityContainerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityContainerAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityContainerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityContainerAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityContainerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityContainerId: opts.securityContainerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityContainerAriStaticOpts);
    return new _JiraSecurityContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityContainerAriStaticOpts);
    return new _JiraSecurityContainerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityContainerId: this.securityContainerId
    };
  }
};

// src/jira/security-level/types.ts
var JiraSecurityLevelAriResourceOwner = "jira", JiraSecurityLevelAriResourceType = "security-level";

// src/jira/security-level/manifest.ts
var jiraSecurityLevelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSecurityLevelAriResourceOwner,
  resourceType: JiraSecurityLevelAriResourceType,
  resourceIdSlug: "activation/{activationId}/{securityLevelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    securityLevelId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-level/index.ts
var JiraSecurityLevelAri = class _JiraSecurityLevelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get securityLevelId() {
    return this._securityLevelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityLevelAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityLevelAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityLevelAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityLevelAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.securityLevelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        securityLevelId: opts.securityLevelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityLevelAriStaticOpts);
    return new _JiraSecurityLevelAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      securityLevelId: this.securityLevelId
    };
  }
};

// src/jira/security-workspace/types.ts
var JiraSecurityWorkspaceAriResourceOwner = "jira", JiraSecurityWorkspaceAriResourceType = "security-workspace";

// src/jira/security-workspace/manifest.ts
var jiraSecurityWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSecurityWorkspaceAriResourceOwner,
  resourceType: JiraSecurityWorkspaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{providerAppId}/{securityWorkspaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    providerAppId: /[a-zA-Z0-9-._]+/,
    // eslint-disable-line no-useless-escape
    securityWorkspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/security-workspace/index.ts
var JiraSecurityWorkspaceAri = class _JiraSecurityWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get providerAppId() {
    return this._providerAppId;
  }
  get securityWorkspaceId() {
    return this._securityWorkspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSecurityWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraSecurityWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSecurityWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraSecurityWorkspaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        providerAppId: opts.providerAppId,
        securityWorkspaceId: opts.securityWorkspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityWorkspaceAriStaticOpts);
    return new _JiraSecurityWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSecurityWorkspaceAriStaticOpts);
    return new _JiraSecurityWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      providerAppId: this.providerAppId,
      securityWorkspaceId: this.securityWorkspaceId
    };
  }
};

// src/jira/site/types.ts
var JiraSiteAriResourceOwner = "jira", JiraSiteAriResourceType = "site";

// src/jira/site/manifest.ts
var jiraSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSiteAriResourceOwner,
  resourceType: JiraSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/site/index.ts
var JiraSiteAri = class _JiraSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSiteAriStaticOpts.qualifier,
      platformQualifier: jiraSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraSiteAriStaticOpts.resourceOwner,
      resourceType: jiraSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSiteAriStaticOpts);
    return new _JiraSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSiteAriStaticOpts);
    return new _JiraSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira/sprint/types.ts
var JiraSprintAriResourceOwner = "jira", JiraSprintAriResourceType = "sprint";

// src/jira/sprint/manifest.ts
var jiraSprintAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSprintAriResourceOwner,
  resourceType: JiraSprintAriResourceType,
  resourceIdSlug: "activation/{activationId}/{sprintId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    sprintId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/sprint/index.ts
var JiraSprintAri = class _JiraSprintAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._sprintId = opts.resourceIdSegmentValues.sprintId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get sprintId() {
    return this._sprintId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSprintAriStaticOpts.qualifier,
      platformQualifier: jiraSprintAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSprintAriStaticOpts.resourceOwner,
      resourceType: jiraSprintAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.sprintId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        sprintId: opts.sprintId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSprintAriStaticOpts);
    return new _JiraSprintAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSprintAriStaticOpts);
    return new _JiraSprintAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      sprintId: this.sprintId
    };
  }
};

// src/jira/user-broadcast-message/types.ts
var JiraUserBroadcastMessageAriResourceOwner = "jira", JiraUserBroadcastMessageAriResourceType = "user-broadcast-message";

// src/jira/user-broadcast-message/manifest.ts
var jiraUserBroadcastMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraUserBroadcastMessageAriResourceOwner,
  resourceType: JiraUserBroadcastMessageAriResourceType,
  resourceIdSlug: "activation/{activationId}/{broadcastMessageId}/{userId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    broadcastMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/user-broadcast-message/index.ts
var JiraUserBroadcastMessageAri = class _JiraUserBroadcastMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._broadcastMessageId = opts.resourceIdSegmentValues.broadcastMessageId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get broadcastMessageId() {
    return this._broadcastMessageId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraUserBroadcastMessageAriStaticOpts.qualifier,
      platformQualifier: jiraUserBroadcastMessageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraUserBroadcastMessageAriStaticOpts.resourceOwner,
      resourceType: jiraUserBroadcastMessageAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.broadcastMessageId}/${opts.userId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        broadcastMessageId: opts.broadcastMessageId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraUserBroadcastMessageAriStaticOpts);
    return new _JiraUserBroadcastMessageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      broadcastMessageId: this.broadcastMessageId,
      userId: this.userId
    };
  }
};

// src/jira/version/types.ts
var JiraVersionAriResourceOwner = "jira", JiraVersionAriResourceType = "version";

// src/jira/version/manifest.ts
var jiraVersionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraVersionAriResourceOwner,
  resourceType: JiraVersionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{versionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    versionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/version/index.ts
var JiraVersionAri = class _JiraVersionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get versionId() {
    return this._versionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVersionAriStaticOpts.qualifier,
      platformQualifier: jiraVersionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVersionAriStaticOpts.resourceOwner,
      resourceType: jiraVersionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.versionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        versionId: opts.versionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionAriStaticOpts);
    return new _JiraVersionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVersionAriStaticOpts);
    return new _JiraVersionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      versionId: this.versionId
    };
  }
};

// src/jira/version-approver/types.ts
var JiraVersionApproverAriResourceOwner = "jira", JiraVersionApproverAriResourceType = "version-approver";

// src/jira/version-approver/manifest.ts
var jiraVersionApproverAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraVersionApproverAriResourceOwner,
  resourceType: JiraVersionApproverAriResourceType,
  resourceIdSlug: "activation/{activationId}/{versionId}/{approverId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    versionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    approverId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/version-approver/index.ts
var JiraVersionApproverAri = class _JiraVersionApproverAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId, this._approverId = opts.resourceIdSegmentValues.approverId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get versionId() {
    return this._versionId;
  }
  get approverId() {
    return this._approverId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVersionApproverAriStaticOpts.qualifier,
      platformQualifier: jiraVersionApproverAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVersionApproverAriStaticOpts.resourceOwner,
      resourceType: jiraVersionApproverAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.versionId}/${opts.approverId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        versionId: opts.versionId,
        approverId: opts.approverId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionApproverAriStaticOpts);
    return new _JiraVersionApproverAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVersionApproverAriStaticOpts);
    return new _JiraVersionApproverAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      versionId: this.versionId,
      approverId: this.approverId
    };
  }
};

// src/jira/view/types.ts
var JiraViewAriResourceOwner = "jira", JiraViewAriResourceType = "view";

// src/jira/view/manifest.ts
var jiraViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraViewAriResourceOwner,
  resourceType: JiraViewAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scopeType}/{scopeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scopeType: /(global|project|board)/,
    // eslint-disable-line no-useless-escape
    scopeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/view/index.ts
var JiraViewAri = class _JiraViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._scopeType = opts.resourceIdSegmentValues.scopeType, this._scopeId = opts.resourceIdSegmentValues.scopeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get scopeType() {
    return this._scopeType;
  }
  get scopeId() {
    return this._scopeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraViewAriStaticOpts.qualifier,
      platformQualifier: jiraViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraViewAriStaticOpts.resourceOwner,
      resourceType: jiraViewAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scopeType}/${opts.scopeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scopeType: opts.scopeType,
        scopeId: opts.scopeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraViewAriStaticOpts);
    return new _JiraViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraViewAriStaticOpts);
    return new _JiraViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      scopeType: this.scopeType,
      scopeId: this.scopeId
    };
  }
};

// src/jira/vulnerability/types.ts
var JiraVulnerabilityAriResourceOwner = "jira", JiraVulnerabilityAriResourceType = "vulnerability";

// src/jira/vulnerability/manifest.ts
var jiraVulnerabilityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraVulnerabilityAriResourceOwner,
  resourceType: JiraVulnerabilityAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/vulnerability/index.ts
var JiraVulnerabilityAri = class _JiraVulnerabilityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVulnerabilityAriStaticOpts.qualifier,
      platformQualifier: jiraVulnerabilityAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVulnerabilityAriStaticOpts.resourceOwner,
      resourceType: jiraVulnerabilityAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityAriStaticOpts);
    return new _JiraVulnerabilityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityAriStaticOpts);
    return new _JiraVulnerabilityAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId
    };
  }
};

// src/jira/vulnerability-history/types.ts
var JiraVulnerabilityHistoryAriResourceOwner = "jira", JiraVulnerabilityHistoryAriResourceType = "vulnerability-history";

// src/jira/vulnerability-history/manifest.ts
var jiraVulnerabilityHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraVulnerabilityHistoryAriResourceOwner,
  resourceType: JiraVulnerabilityHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{vulnerabilityId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/vulnerability-history/index.ts
var JiraVulnerabilityHistoryAri = class _JiraVulnerabilityHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get vulnerabilityId() {
    return this._vulnerabilityId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraVulnerabilityHistoryAriStaticOpts.qualifier,
      platformQualifier: jiraVulnerabilityHistoryAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraVulnerabilityHistoryAriStaticOpts.resourceOwner,
      resourceType: jiraVulnerabilityHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        vulnerabilityId: opts.vulnerabilityId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityHistoryAriStaticOpts);
    return new _JiraVulnerabilityHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityHistoryAriStaticOpts);
    return new _JiraVulnerabilityHistoryAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      vulnerabilityId: this.vulnerabilityId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

// src/jira/workflow/types.ts
var JiraWorkflowAriResourceOwner = "jira", JiraWorkflowAriResourceType = "workflow";

// src/jira/workflow/manifest.ts
var jiraWorkflowAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraWorkflowAriResourceOwner,
  resourceType: JiraWorkflowAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workflowId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workflowId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workflow/index.ts
var JiraWorkflowAri = class _JiraWorkflowAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowId = opts.resourceIdSegmentValues.workflowId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get workflowId() {
    return this._workflowId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkflowAriStaticOpts.qualifier,
      platformQualifier: jiraWorkflowAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkflowAriStaticOpts.resourceOwner,
      resourceType: jiraWorkflowAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workflowId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workflowId: opts.workflowId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowAriStaticOpts);
    return new _JiraWorkflowAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkflowAriStaticOpts);
    return new _JiraWorkflowAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      workflowId: this.workflowId
    };
  }
};

// src/jira/workflow-scheme/types.ts
var JiraWorkflowSchemeAriResourceOwner = "jira", JiraWorkflowSchemeAriResourceType = "workflow-scheme";

// src/jira/workflow-scheme/manifest.ts
var jiraWorkflowSchemeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraWorkflowSchemeAriResourceOwner,
  resourceType: JiraWorkflowSchemeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workflowSchemeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workflowSchemeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workflow-scheme/index.ts
var JiraWorkflowSchemeAri = class _JiraWorkflowSchemeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowSchemeId = opts.resourceIdSegmentValues.workflowSchemeId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get workflowSchemeId() {
    return this._workflowSchemeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkflowSchemeAriStaticOpts.qualifier,
      platformQualifier: jiraWorkflowSchemeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkflowSchemeAriStaticOpts.resourceOwner,
      resourceType: jiraWorkflowSchemeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workflowSchemeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workflowSchemeId: opts.workflowSchemeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowSchemeAriStaticOpts);
    return new _JiraWorkflowSchemeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkflowSchemeAriStaticOpts);
    return new _JiraWorkflowSchemeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      workflowSchemeId: this.workflowSchemeId
    };
  }
};

// src/jira/workspace/types.ts
var JiraWorkspaceAriResourceOwner = "jira", JiraWorkspaceAriResourceType = "workspace";

// src/jira/workspace/manifest.ts
var jiraWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraWorkspaceAriResourceOwner,
  resourceType: JiraWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/workspace/index.ts
var JiraWorkspaceAri = class _JiraWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkspaceAriStaticOpts);
    return new _JiraWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraWorkspaceAriStaticOpts);
    return new _JiraWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/jira-ai-crocs/sentence/types.ts
var JiraAiCrocsSentenceAriResourceOwner = "jira-ai-crocs", JiraAiCrocsSentenceAriResourceType = "sentence";

// src/jira-ai-crocs/sentence/manifest.ts
var jiraAiCrocsSentenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAiCrocsSentenceAriResourceOwner,
  resourceType: JiraAiCrocsSentenceAriResourceType,
  resourceIdSlug: "{activationId}/{sentenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    sentenceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-ai-crocs/sentence/index.ts
var JiraAiCrocsSentenceAri = class _JiraAiCrocsSentenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._sentenceId = opts.resourceIdSegmentValues.sentenceId;
  }
  get activationId() {
    return this._activationId;
  }
  get sentenceId() {
    return this._sentenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAiCrocsSentenceAriStaticOpts.qualifier,
      platformQualifier: jiraAiCrocsSentenceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraAiCrocsSentenceAriStaticOpts.resourceOwner,
      resourceType: jiraAiCrocsSentenceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.sentenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        sentenceId: opts.sentenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAiCrocsSentenceAriStaticOpts);
    return new _JiraAiCrocsSentenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAiCrocsSentenceAriStaticOpts);
    return new _JiraAiCrocsSentenceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      sentenceId: this.sentenceId
    };
  }
};

// src/jira-ai-crocs/workspace/types.ts
var JiraAiCrocsWorkspaceAriResourceOwner = "jira-ai-crocs", JiraAiCrocsWorkspaceAriResourceType = "workspace";

// src/jira-ai-crocs/workspace/manifest.ts
var jiraAiCrocsWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAiCrocsWorkspaceAriResourceOwner,
  resourceType: JiraAiCrocsWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-ai-crocs/workspace/index.ts
var JiraAiCrocsWorkspaceAri = class _JiraAiCrocsWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAiCrocsWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraAiCrocsWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraAiCrocsWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraAiCrocsWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAiCrocsWorkspaceAriStaticOpts);
    return new _JiraAiCrocsWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAiCrocsWorkspaceAriStaticOpts);
    return new _JiraAiCrocsWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/jira-align/instance/types.ts
var JiraAlignInstanceAriResourceOwner = "jira-align", JiraAlignInstanceAriResourceType = "instance";

// src/jira-align/instance/manifest.ts
var jiraAlignInstanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAlignInstanceAriResourceOwner,
  resourceType: JiraAlignInstanceAriResourceType,
  resourceIdSlug: "{instanceId}",
  resourceIdSegmentFormats: {
    instanceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-align/instance/index.ts
var JiraAlignInstanceAri = class _JiraAlignInstanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._instanceId = opts.resourceIdSegmentValues.instanceId;
  }
  get instanceId() {
    return this._instanceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAlignInstanceAriStaticOpts.qualifier,
      platformQualifier: jiraAlignInstanceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraAlignInstanceAriStaticOpts.resourceOwner,
      resourceType: jiraAlignInstanceAriStaticOpts.resourceType,
      resourceId: `${opts.instanceId}`,
      resourceIdSegmentValues: {
        instanceId: opts.instanceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignInstanceAriStaticOpts);
    return new _JiraAlignInstanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAlignInstanceAriStaticOpts);
    return new _JiraAlignInstanceAri(opts);
  }
  getVariables() {
    return {
      instanceId: this.instanceId
    };
  }
};

// src/jira-align/project/types.ts
var JiraAlignProjectAriResourceOwner = "jira-align", JiraAlignProjectAriResourceType = "project";

// src/jira-align/project/manifest.ts
var jiraAlignProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAlignProjectAriResourceOwner,
  resourceType: JiraAlignProjectAriResourceType,
  resourceIdSlug: "{projectType}/{projectId}",
  resourceIdSegmentFormats: {
    projectType: /(?:capability|epic|theme)/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-align/project/index.ts
var JiraAlignProjectAri = class _JiraAlignProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._instanceId = opts.cloudId || "", this._projectType = opts.resourceIdSegmentValues.projectType, this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get instanceId() {
    return this._instanceId;
  }
  get projectType() {
    return this._projectType;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAlignProjectAriStaticOpts.qualifier,
      platformQualifier: jiraAlignProjectAriStaticOpts.platformQualifier,
      cloudId: opts.instanceId,
      resourceOwner: jiraAlignProjectAriStaticOpts.resourceOwner,
      resourceType: jiraAlignProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectType}/${opts.projectId}`,
      resourceIdSegmentValues: {
        projectType: opts.projectType,
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignProjectAriStaticOpts);
    return new _JiraAlignProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAlignProjectAriStaticOpts);
    return new _JiraAlignProjectAri(opts);
  }
  getVariables() {
    return {
      instanceId: this.instanceId,
      projectType: this.projectType,
      projectId: this.projectId
    };
  }
};

// src/jira-align/workspace/types.ts
var JiraAlignWorkspaceAriResourceOwner = "jira-align", JiraAlignWorkspaceAriResourceType = "workspace";

// src/jira-align/workspace/manifest.ts
var jiraAlignWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAlignWorkspaceAriResourceOwner,
  resourceType: JiraAlignWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-align/workspace/index.ts
var JiraAlignWorkspaceAri = class _JiraAlignWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAlignWorkspaceAriStaticOpts.qualifier,
      platformQualifier: jiraAlignWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraAlignWorkspaceAriStaticOpts.resourceOwner,
      resourceType: jiraAlignWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignWorkspaceAriStaticOpts);
    return new _JiraAlignWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAlignWorkspaceAriStaticOpts);
    return new _JiraAlignWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/jira-core/role/types.ts
var JiraCoreRoleAriResourceOwner = "jira-core", JiraCoreRoleAriResourceType = "role";

// src/jira-core/role/manifest.ts
var jiraCoreRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCoreRoleAriResourceOwner,
  resourceType: JiraCoreRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-core/role/index.ts
var JiraCoreRoleAri = class _JiraCoreRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCoreRoleAriStaticOpts.qualifier,
      platformQualifier: jiraCoreRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCoreRoleAriStaticOpts.resourceOwner,
      resourceType: jiraCoreRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCoreRoleAriStaticOpts);
    return new _JiraCoreRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCoreRoleAriStaticOpts);
    return new _JiraCoreRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/jira-core/site/types.ts
var JiraCoreSiteAriResourceOwner = "jira-core", JiraCoreSiteAriResourceType = "site";

// src/jira-core/site/manifest.ts
var jiraCoreSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCoreSiteAriResourceOwner,
  resourceType: JiraCoreSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-core/site/index.ts
var JiraCoreSiteAri = class _JiraCoreSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCoreSiteAriStaticOpts.qualifier,
      platformQualifier: jiraCoreSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCoreSiteAriStaticOpts.resourceOwner,
      resourceType: jiraCoreSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCoreSiteAriStaticOpts);
    return new _JiraCoreSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCoreSiteAriStaticOpts);
    return new _JiraCoreSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira-customer-service/role/types.ts
var JiraCustomerServiceRoleAriResourceOwner = "jira-customer-service", JiraCustomerServiceRoleAriResourceType = "role";

// src/jira-customer-service/role/manifest.ts
var jiraCustomerServiceRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCustomerServiceRoleAriResourceOwner,
  resourceType: JiraCustomerServiceRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin|user-admin|customer)/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-customer-service/role/index.ts
var JiraCustomerServiceRoleAri = class _JiraCustomerServiceRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCustomerServiceRoleAriStaticOpts.qualifier,
      platformQualifier: jiraCustomerServiceRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCustomerServiceRoleAriStaticOpts.resourceOwner,
      resourceType: jiraCustomerServiceRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCustomerServiceRoleAriStaticOpts);
    return new _JiraCustomerServiceRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCustomerServiceRoleAriStaticOpts);
    return new _JiraCustomerServiceRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/jira-customer-service/site/types.ts
var JiraCustomerServiceSiteAriResourceOwner = "jira-customer-service", JiraCustomerServiceSiteAriResourceType = "site";

// src/jira-customer-service/site/manifest.ts
var jiraCustomerServiceSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCustomerServiceSiteAriResourceOwner,
  resourceType: JiraCustomerServiceSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-customer-service/site/index.ts
var JiraCustomerServiceSiteAri = class _JiraCustomerServiceSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCustomerServiceSiteAriStaticOpts.qualifier,
      platformQualifier: jiraCustomerServiceSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCustomerServiceSiteAriStaticOpts.resourceOwner,
      resourceType: jiraCustomerServiceSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCustomerServiceSiteAriStaticOpts);
    return new _JiraCustomerServiceSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCustomerServiceSiteAriStaticOpts);
    return new _JiraCustomerServiceSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira-customer-service/template-form/types.ts
var JiraCustomerServiceTemplateFormAriResourceOwner = "jira-customer-service", JiraCustomerServiceTemplateFormAriResourceType = "template-form";

// src/jira-customer-service/template-form/manifest.ts
var jiraCustomerServiceTemplateFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCustomerServiceTemplateFormAriResourceOwner,
  resourceType: JiraCustomerServiceTemplateFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{templateFormId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    templateFormId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-customer-service/template-form/index.ts
var JiraCustomerServiceTemplateFormAri = class _JiraCustomerServiceTemplateFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._templateFormId = opts.resourceIdSegmentValues.templateFormId;
  }
  get activationId() {
    return this._activationId;
  }
  get templateFormId() {
    return this._templateFormId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCustomerServiceTemplateFormAriStaticOpts.qualifier,
      platformQualifier: jiraCustomerServiceTemplateFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCustomerServiceTemplateFormAriStaticOpts.resourceOwner,
      resourceType: jiraCustomerServiceTemplateFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.templateFormId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        templateFormId: opts.templateFormId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCustomerServiceTemplateFormAriStaticOpts);
    return new _JiraCustomerServiceTemplateFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCustomerServiceTemplateFormAriStaticOpts);
    return new _JiraCustomerServiceTemplateFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      templateFormId: this.templateFormId
    };
  }
};

// src/jira-dc-secondary.jira-dc/comment/types.ts
var JiraDcSecondaryJiraDcCommentAriResourceOwner = "jira-dc-secondary.jira-dc", JiraDcSecondaryJiraDcCommentAriResourceType = "comment";

// src/jira-dc-secondary.jira-dc/comment/manifest.ts
var jiraDcSecondaryJiraDcCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcSecondaryJiraDcCommentAriResourceOwner,
  resourceType: JiraDcSecondaryJiraDcCommentAriResourceType,
  resourceIdSlug: "{siteId}/{commentId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-secondary.jira-dc/comment/index.ts
var JiraDcSecondaryJiraDcCommentAri = class _JiraDcSecondaryJiraDcCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcSecondaryJiraDcCommentAriStaticOpts.qualifier,
      platformQualifier: jiraDcSecondaryJiraDcCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcSecondaryJiraDcCommentAriStaticOpts.resourceOwner,
      resourceType: jiraDcSecondaryJiraDcCommentAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcSecondaryJiraDcCommentAriStaticOpts);
    return new _JiraDcSecondaryJiraDcCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcSecondaryJiraDcCommentAriStaticOpts);
    return new _JiraDcSecondaryJiraDcCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/jira-dc-secondary.jira-dc/project/types.ts
var JiraDcSecondaryJiraDcProjectAriResourceOwner = "jira-dc-secondary.jira-dc", JiraDcSecondaryJiraDcProjectAriResourceType = "project";

// src/jira-dc-secondary.jira-dc/project/manifest.ts
var jiraDcSecondaryJiraDcProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcSecondaryJiraDcProjectAriResourceOwner,
  resourceType: JiraDcSecondaryJiraDcProjectAriResourceType,
  resourceIdSlug: "{siteId}/{projectId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-secondary.jira-dc/project/index.ts
var JiraDcSecondaryJiraDcProjectAri = class _JiraDcSecondaryJiraDcProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcSecondaryJiraDcProjectAriStaticOpts.qualifier,
      platformQualifier: jiraDcSecondaryJiraDcProjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcSecondaryJiraDcProjectAriStaticOpts.resourceOwner,
      resourceType: jiraDcSecondaryJiraDcProjectAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.projectId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcSecondaryJiraDcProjectAriStaticOpts);
    return new _JiraDcSecondaryJiraDcProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcSecondaryJiraDcProjectAriStaticOpts);
    return new _JiraDcSecondaryJiraDcProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectId: this.projectId
    };
  }
};

// src/jira-dc-secondary.jira-dc/space/types.ts
var JiraDcSecondaryJiraDcSpaceAriResourceOwner = "jira-dc-secondary.jira-dc", JiraDcSecondaryJiraDcSpaceAriResourceType = "space";

// src/jira-dc-secondary.jira-dc/space/manifest.ts
var jiraDcSecondaryJiraDcSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcSecondaryJiraDcSpaceAriResourceOwner,
  resourceType: JiraDcSecondaryJiraDcSpaceAriResourceType,
  resourceIdSlug: "{siteId}/{spaceId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-secondary.jira-dc/space/index.ts
var JiraDcSecondaryJiraDcSpaceAri = class _JiraDcSecondaryJiraDcSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcSecondaryJiraDcSpaceAriStaticOpts.qualifier,
      platformQualifier: jiraDcSecondaryJiraDcSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcSecondaryJiraDcSpaceAriStaticOpts.resourceOwner,
      resourceType: jiraDcSecondaryJiraDcSpaceAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcSecondaryJiraDcSpaceAriStaticOpts);
    return new _JiraDcSecondaryJiraDcSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcSecondaryJiraDcSpaceAriStaticOpts);
    return new _JiraDcSecondaryJiraDcSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      spaceId: this.spaceId
    };
  }
};

// src/jira-dc-secondary.jira-dc/work-item/types.ts
var JiraDcSecondaryJiraDcWorkItemAriResourceOwner = "jira-dc-secondary.jira-dc", JiraDcSecondaryJiraDcWorkItemAriResourceType = "work-item";

// src/jira-dc-secondary.jira-dc/work-item/manifest.ts
var jiraDcSecondaryJiraDcWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcSecondaryJiraDcWorkItemAriResourceOwner,
  resourceType: JiraDcSecondaryJiraDcWorkItemAriResourceType,
  resourceIdSlug: "{siteId}/{workItemId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-secondary.jira-dc/work-item/index.ts
var JiraDcSecondaryJiraDcWorkItemAri = class _JiraDcSecondaryJiraDcWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._workItemId = opts.resourceIdSegmentValues.workItemId;
  }
  get siteId() {
    return this._siteId;
  }
  get workItemId() {
    return this._workItemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcSecondaryJiraDcWorkItemAriStaticOpts.qualifier,
      platformQualifier: jiraDcSecondaryJiraDcWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcSecondaryJiraDcWorkItemAriStaticOpts.resourceOwner,
      resourceType: jiraDcSecondaryJiraDcWorkItemAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.workItemId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        workItemId: opts.workItemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcSecondaryJiraDcWorkItemAriStaticOpts);
    return new _JiraDcSecondaryJiraDcWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcSecondaryJiraDcWorkItemAriStaticOpts);
    return new _JiraDcSecondaryJiraDcWorkItemAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workItemId: this.workItemId
    };
  }
};

// src/jira-dc-tertiary.jira-dc/comment/types.ts
var JiraDcTertiaryJiraDcCommentAriResourceOwner = "jira-dc-tertiary.jira-dc", JiraDcTertiaryJiraDcCommentAriResourceType = "comment";

// src/jira-dc-tertiary.jira-dc/comment/manifest.ts
var jiraDcTertiaryJiraDcCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcTertiaryJiraDcCommentAriResourceOwner,
  resourceType: JiraDcTertiaryJiraDcCommentAriResourceType,
  resourceIdSlug: "{siteId}/{commentId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-tertiary.jira-dc/comment/index.ts
var JiraDcTertiaryJiraDcCommentAri = class _JiraDcTertiaryJiraDcCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcTertiaryJiraDcCommentAriStaticOpts.qualifier,
      platformQualifier: jiraDcTertiaryJiraDcCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcTertiaryJiraDcCommentAriStaticOpts.resourceOwner,
      resourceType: jiraDcTertiaryJiraDcCommentAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcTertiaryJiraDcCommentAriStaticOpts);
    return new _JiraDcTertiaryJiraDcCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcTertiaryJiraDcCommentAriStaticOpts);
    return new _JiraDcTertiaryJiraDcCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/jira-dc-tertiary.jira-dc/project/types.ts
var JiraDcTertiaryJiraDcProjectAriResourceOwner = "jira-dc-tertiary.jira-dc", JiraDcTertiaryJiraDcProjectAriResourceType = "project";

// src/jira-dc-tertiary.jira-dc/project/manifest.ts
var jiraDcTertiaryJiraDcProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcTertiaryJiraDcProjectAriResourceOwner,
  resourceType: JiraDcTertiaryJiraDcProjectAriResourceType,
  resourceIdSlug: "{siteId}/{projectId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-tertiary.jira-dc/project/index.ts
var JiraDcTertiaryJiraDcProjectAri = class _JiraDcTertiaryJiraDcProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcTertiaryJiraDcProjectAriStaticOpts.qualifier,
      platformQualifier: jiraDcTertiaryJiraDcProjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcTertiaryJiraDcProjectAriStaticOpts.resourceOwner,
      resourceType: jiraDcTertiaryJiraDcProjectAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.projectId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcTertiaryJiraDcProjectAriStaticOpts);
    return new _JiraDcTertiaryJiraDcProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcTertiaryJiraDcProjectAriStaticOpts);
    return new _JiraDcTertiaryJiraDcProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectId: this.projectId
    };
  }
};

// src/jira-dc-tertiary.jira-dc/space/types.ts
var JiraDcTertiaryJiraDcSpaceAriResourceOwner = "jira-dc-tertiary.jira-dc", JiraDcTertiaryJiraDcSpaceAriResourceType = "space";

// src/jira-dc-tertiary.jira-dc/space/manifest.ts
var jiraDcTertiaryJiraDcSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcTertiaryJiraDcSpaceAriResourceOwner,
  resourceType: JiraDcTertiaryJiraDcSpaceAriResourceType,
  resourceIdSlug: "{siteId}/{spaceId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-tertiary.jira-dc/space/index.ts
var JiraDcTertiaryJiraDcSpaceAri = class _JiraDcTertiaryJiraDcSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcTertiaryJiraDcSpaceAriStaticOpts.qualifier,
      platformQualifier: jiraDcTertiaryJiraDcSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcTertiaryJiraDcSpaceAriStaticOpts.resourceOwner,
      resourceType: jiraDcTertiaryJiraDcSpaceAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcTertiaryJiraDcSpaceAriStaticOpts);
    return new _JiraDcTertiaryJiraDcSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcTertiaryJiraDcSpaceAriStaticOpts);
    return new _JiraDcTertiaryJiraDcSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      spaceId: this.spaceId
    };
  }
};

// src/jira-dc-tertiary.jira-dc/work-item/types.ts
var JiraDcTertiaryJiraDcWorkItemAriResourceOwner = "jira-dc-tertiary.jira-dc", JiraDcTertiaryJiraDcWorkItemAriResourceType = "work-item";

// src/jira-dc-tertiary.jira-dc/work-item/manifest.ts
var jiraDcTertiaryJiraDcWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcTertiaryJiraDcWorkItemAriResourceOwner,
  resourceType: JiraDcTertiaryJiraDcWorkItemAriResourceType,
  resourceIdSlug: "{siteId}/{workItemId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc-tertiary.jira-dc/work-item/index.ts
var JiraDcTertiaryJiraDcWorkItemAri = class _JiraDcTertiaryJiraDcWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._workItemId = opts.resourceIdSegmentValues.workItemId;
  }
  get siteId() {
    return this._siteId;
  }
  get workItemId() {
    return this._workItemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcTertiaryJiraDcWorkItemAriStaticOpts.qualifier,
      platformQualifier: jiraDcTertiaryJiraDcWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcTertiaryJiraDcWorkItemAriStaticOpts.resourceOwner,
      resourceType: jiraDcTertiaryJiraDcWorkItemAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.workItemId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        workItemId: opts.workItemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcTertiaryJiraDcWorkItemAriStaticOpts);
    return new _JiraDcTertiaryJiraDcWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcTertiaryJiraDcWorkItemAriStaticOpts);
    return new _JiraDcTertiaryJiraDcWorkItemAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workItemId: this.workItemId
    };
  }
};

// src/jira-dc.jira-dc/comment/types.ts
var JiraDcJiraDcCommentAriResourceOwner = "jira-dc.jira-dc", JiraDcJiraDcCommentAriResourceType = "comment";

// src/jira-dc.jira-dc/comment/manifest.ts
var jiraDcJiraDcCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcJiraDcCommentAriResourceOwner,
  resourceType: JiraDcJiraDcCommentAriResourceType,
  resourceIdSlug: "{siteId}/{commentId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc.jira-dc/comment/index.ts
var JiraDcJiraDcCommentAri = class _JiraDcJiraDcCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcJiraDcCommentAriStaticOpts.qualifier,
      platformQualifier: jiraDcJiraDcCommentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcJiraDcCommentAriStaticOpts.resourceOwner,
      resourceType: jiraDcJiraDcCommentAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcJiraDcCommentAriStaticOpts);
    return new _JiraDcJiraDcCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcJiraDcCommentAriStaticOpts);
    return new _JiraDcJiraDcCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentId: this.commentId
    };
  }
};

// src/jira-dc.jira-dc/project/types.ts
var JiraDcJiraDcProjectAriResourceOwner = "jira-dc.jira-dc", JiraDcJiraDcProjectAriResourceType = "project";

// src/jira-dc.jira-dc/project/manifest.ts
var jiraDcJiraDcProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcJiraDcProjectAriResourceOwner,
  resourceType: JiraDcJiraDcProjectAriResourceType,
  resourceIdSlug: "{siteId}/{projectId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc.jira-dc/project/index.ts
var JiraDcJiraDcProjectAri = class _JiraDcJiraDcProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._projectId = opts.resourceIdSegmentValues.projectId;
  }
  get siteId() {
    return this._siteId;
  }
  get projectId() {
    return this._projectId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcJiraDcProjectAriStaticOpts.qualifier,
      platformQualifier: jiraDcJiraDcProjectAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcJiraDcProjectAriStaticOpts.resourceOwner,
      resourceType: jiraDcJiraDcProjectAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.projectId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        projectId: opts.projectId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcJiraDcProjectAriStaticOpts);
    return new _JiraDcJiraDcProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcJiraDcProjectAriStaticOpts);
    return new _JiraDcJiraDcProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectId: this.projectId
    };
  }
};

// src/jira-dc.jira-dc/space/types.ts
var JiraDcJiraDcSpaceAriResourceOwner = "jira-dc.jira-dc", JiraDcJiraDcSpaceAriResourceType = "space";

// src/jira-dc.jira-dc/space/manifest.ts
var jiraDcJiraDcSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcJiraDcSpaceAriResourceOwner,
  resourceType: JiraDcJiraDcSpaceAriResourceType,
  resourceIdSlug: "{siteId}/{spaceId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc.jira-dc/space/index.ts
var JiraDcJiraDcSpaceAri = class _JiraDcJiraDcSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcJiraDcSpaceAriStaticOpts.qualifier,
      platformQualifier: jiraDcJiraDcSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcJiraDcSpaceAriStaticOpts.resourceOwner,
      resourceType: jiraDcJiraDcSpaceAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcJiraDcSpaceAriStaticOpts);
    return new _JiraDcJiraDcSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcJiraDcSpaceAriStaticOpts);
    return new _JiraDcJiraDcSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      spaceId: this.spaceId
    };
  }
};

// src/jira-dc.jira-dc/work-item/types.ts
var JiraDcJiraDcWorkItemAriResourceOwner = "jira-dc.jira-dc", JiraDcJiraDcWorkItemAriResourceType = "work-item";

// src/jira-dc.jira-dc/work-item/manifest.ts
var jiraDcJiraDcWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraDcJiraDcWorkItemAriResourceOwner,
  resourceType: JiraDcJiraDcWorkItemAriResourceType,
  resourceIdSlug: "{siteId}/{workItemId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-dc.jira-dc/work-item/index.ts
var JiraDcJiraDcWorkItemAri = class _JiraDcJiraDcWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._workItemId = opts.resourceIdSegmentValues.workItemId;
  }
  get siteId() {
    return this._siteId;
  }
  get workItemId() {
    return this._workItemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraDcJiraDcWorkItemAriStaticOpts.qualifier,
      platformQualifier: jiraDcJiraDcWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraDcJiraDcWorkItemAriStaticOpts.resourceOwner,
      resourceType: jiraDcJiraDcWorkItemAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.workItemId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        workItemId: opts.workItemId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDcJiraDcWorkItemAriStaticOpts);
    return new _JiraDcJiraDcWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraDcJiraDcWorkItemAriStaticOpts);
    return new _JiraDcJiraDcWorkItemAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workItemId: this.workItemId
    };
  }
};

// src/jira-servicedesk/approval/types.ts
var JiraServicedeskApprovalAriResourceOwner = "jira-servicedesk", JiraServicedeskApprovalAriResourceType = "approval";

// src/jira-servicedesk/approval/manifest.ts
var jiraServicedeskApprovalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskApprovalAriResourceOwner,
  resourceType: JiraServicedeskApprovalAriResourceType,
  resourceIdSlug: "activation/{activationId}/{approvalId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    approvalId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/approval/index.ts
var JiraServicedeskApprovalAri = class _JiraServicedeskApprovalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._approvalId = opts.resourceIdSegmentValues.approvalId;
  }
  get activationId() {
    return this._activationId;
  }
  get approvalId() {
    return this._approvalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskApprovalAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskApprovalAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskApprovalAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskApprovalAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.approvalId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        approvalId: opts.approvalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskApprovalAriStaticOpts);
    return new _JiraServicedeskApprovalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskApprovalAriStaticOpts);
    return new _JiraServicedeskApprovalAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      approvalId: this.approvalId
    };
  }
};

// src/jira-servicedesk/calendar-event/types.ts
var JiraServicedeskCalendarEventAriResourceOwner = "jira-servicedesk", JiraServicedeskCalendarEventAriResourceType = "calendar-event";

// src/jira-servicedesk/calendar-event/manifest.ts
var jiraServicedeskCalendarEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskCalendarEventAriResourceOwner,
  resourceType: JiraServicedeskCalendarEventAriResourceType,
  resourceIdSlug: "activation/{activationId}/{calendarEventId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    calendarEventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/calendar-event/index.ts
var JiraServicedeskCalendarEventAri = class _JiraServicedeskCalendarEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId;
  }
  get activationId() {
    return this._activationId;
  }
  get calendarEventId() {
    return this._calendarEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskCalendarEventAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskCalendarEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskCalendarEventAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskCalendarEventAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.calendarEventId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        calendarEventId: opts.calendarEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskCalendarEventAriStaticOpts);
    return new _JiraServicedeskCalendarEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskCalendarEventAriStaticOpts);
    return new _JiraServicedeskCalendarEventAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      calendarEventId: this.calendarEventId
    };
  }
};

// src/jira-servicedesk/canned-response/types.ts
var JiraServicedeskCannedResponseAriResourceOwner = "jira-servicedesk", JiraServicedeskCannedResponseAriResourceType = "canned-response";

// src/jira-servicedesk/canned-response/manifest.ts
var jiraServicedeskCannedResponseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskCannedResponseAriResourceOwner,
  resourceType: JiraServicedeskCannedResponseAriResourceType,
  resourceIdSlug: "activation/{activationId}/{cannedResponseId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    cannedResponseId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/canned-response/index.ts
var JiraServicedeskCannedResponseAri = class _JiraServicedeskCannedResponseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._cannedResponseId = opts.resourceIdSegmentValues.cannedResponseId;
  }
  get activationId() {
    return this._activationId;
  }
  get cannedResponseId() {
    return this._cannedResponseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskCannedResponseAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskCannedResponseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskCannedResponseAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskCannedResponseAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.cannedResponseId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        cannedResponseId: opts.cannedResponseId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskCannedResponseAriStaticOpts);
    return new _JiraServicedeskCannedResponseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskCannedResponseAriStaticOpts);
    return new _JiraServicedeskCannedResponseAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      cannedResponseId: this.cannedResponseId
    };
  }
};

// src/jira-servicedesk/organization/types.ts
var JiraServicedeskOrganizationAriResourceOwner = "jira-servicedesk", JiraServicedeskOrganizationAriResourceType = "organization";

// src/jira-servicedesk/organization/manifest.ts
var jiraServicedeskOrganizationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskOrganizationAriResourceOwner,
  resourceType: JiraServicedeskOrganizationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organizationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organizationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/organization/index.ts
var JiraServicedeskOrganizationAri = class _JiraServicedeskOrganizationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organizationId = opts.resourceIdSegmentValues.organizationId;
  }
  get activationId() {
    return this._activationId;
  }
  get organizationId() {
    return this._organizationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskOrganizationAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskOrganizationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskOrganizationAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskOrganizationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organizationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organizationId: opts.organizationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskOrganizationAriStaticOpts);
    return new _JiraServicedeskOrganizationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskOrganizationAriStaticOpts);
    return new _JiraServicedeskOrganizationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organizationId: this.organizationId
    };
  }
};

// src/jira-servicedesk/organization-member/types.ts
var JiraServicedeskOrganizationMemberAriResourceOwner = "jira-servicedesk", JiraServicedeskOrganizationMemberAriResourceType = "organization-member";

// src/jira-servicedesk/organization-member/manifest.ts
var jiraServicedeskOrganizationMemberAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskOrganizationMemberAriResourceOwner,
  resourceType: JiraServicedeskOrganizationMemberAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organizationId}/{userId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organizationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/organization-member/index.ts
var JiraServicedeskOrganizationMemberAri = class _JiraServicedeskOrganizationMemberAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organizationId = opts.resourceIdSegmentValues.organizationId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get activationId() {
    return this._activationId;
  }
  get organizationId() {
    return this._organizationId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskOrganizationMemberAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskOrganizationMemberAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskOrganizationMemberAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskOrganizationMemberAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organizationId}/${opts.userId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organizationId: opts.organizationId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskOrganizationMemberAriStaticOpts);
    return new _JiraServicedeskOrganizationMemberAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskOrganizationMemberAriStaticOpts);
    return new _JiraServicedeskOrganizationMemberAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organizationId: this.organizationId,
      userId: this.userId
    };
  }
};

// src/jira-servicedesk/queue/types.ts
var JiraServicedeskQueueAriResourceOwner = "jira-servicedesk", JiraServicedeskQueueAriResourceType = "queue";

// src/jira-servicedesk/queue/manifest.ts
var jiraServicedeskQueueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskQueueAriResourceOwner,
  resourceType: JiraServicedeskQueueAriResourceType,
  resourceIdSlug: "activation/{activationId}/{queueId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    queueId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/queue/index.ts
var JiraServicedeskQueueAri = class _JiraServicedeskQueueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._queueId = opts.resourceIdSegmentValues.queueId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get queueId() {
    return this._queueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskQueueAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskQueueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraServicedeskQueueAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskQueueAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.queueId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        queueId: opts.queueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskQueueAriStaticOpts);
    return new _JiraServicedeskQueueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskQueueAriStaticOpts);
    return new _JiraServicedeskQueueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      queueId: this.queueId
    };
  }
};

// src/jira-servicedesk/request-type/types.ts
var JiraServicedeskRequestTypeAriResourceOwner = "jira-servicedesk", JiraServicedeskRequestTypeAriResourceType = "request-type";

// src/jira-servicedesk/request-type/manifest.ts
var jiraServicedeskRequestTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskRequestTypeAriResourceOwner,
  resourceType: JiraServicedeskRequestTypeAriResourceType,
  resourceIdSlug: "activation/{activationId}/{requestTypeId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    requestTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/request-type/index.ts
var JiraServicedeskRequestTypeAri = class _JiraServicedeskRequestTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._requestTypeId = opts.resourceIdSegmentValues.requestTypeId;
  }
  get activationId() {
    return this._activationId;
  }
  get requestTypeId() {
    return this._requestTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskRequestTypeAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskRequestTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskRequestTypeAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskRequestTypeAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.requestTypeId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        requestTypeId: opts.requestTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskRequestTypeAriStaticOpts);
    return new _JiraServicedeskRequestTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskRequestTypeAriStaticOpts);
    return new _JiraServicedeskRequestTypeAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      requestTypeId: this.requestTypeId
    };
  }
};

// src/jira-servicedesk/role/types.ts
var JiraServicedeskRoleAriResourceOwner = "jira-servicedesk", JiraServicedeskRoleAriResourceType = "role";

// src/jira-servicedesk/role/manifest.ts
var jiraServicedeskRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskRoleAriResourceOwner,
  resourceType: JiraServicedeskRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/role/index.ts
var JiraServicedeskRoleAri = class _JiraServicedeskRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskRoleAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskRoleAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskRoleAriStaticOpts);
    return new _JiraServicedeskRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskRoleAriStaticOpts);
    return new _JiraServicedeskRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/jira-servicedesk/site/types.ts
var JiraServicedeskSiteAriResourceOwner = "jira-servicedesk", JiraServicedeskSiteAriResourceType = "site";

// src/jira-servicedesk/site/manifest.ts
var jiraServicedeskSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskSiteAriResourceOwner,
  resourceType: JiraServicedeskSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/site/index.ts
var JiraServicedeskSiteAri = class _JiraServicedeskSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskSiteAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskSiteAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskSiteAriStaticOpts);
    return new _JiraServicedeskSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskSiteAriStaticOpts);
    return new _JiraServicedeskSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira-servicedesk/sla/types.ts
var JiraServicedeskSlaAriResourceOwner = "jira-servicedesk", JiraServicedeskSlaAriResourceType = "sla";

// src/jira-servicedesk/sla/manifest.ts
var jiraServicedeskSlaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskSlaAriResourceOwner,
  resourceType: JiraServicedeskSlaAriResourceType,
  resourceIdSlug: "activation/{activationId}/{slaId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    slaId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/sla/index.ts
var JiraServicedeskSlaAri = class _JiraServicedeskSlaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._slaId = opts.resourceIdSegmentValues.slaId;
  }
  get activationId() {
    return this._activationId;
  }
  get slaId() {
    return this._slaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskSlaAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskSlaAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskSlaAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskSlaAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.slaId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        slaId: opts.slaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskSlaAriStaticOpts);
    return new _JiraServicedeskSlaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskSlaAriStaticOpts);
    return new _JiraServicedeskSlaAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      slaId: this.slaId
    };
  }
};

// src/jira-software/board/types.ts
var JiraSoftwareBoardAriResourceOwner = "jira-software", JiraSoftwareBoardAriResourceType = "board";

// src/jira-software/board/manifest.ts
var jiraSoftwareBoardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareBoardAriResourceOwner,
  resourceType: JiraSoftwareBoardAriResourceType,
  resourceIdSlug: "{boardId}",
  resourceIdSegmentFormats: {
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/board/index.ts
var JiraSoftwareBoardAri = class _JiraSoftwareBoardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get siteId() {
    return this._siteId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareBoardAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareBoardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareBoardAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareBoardAriStaticOpts.resourceType,
      resourceId: `${opts.boardId}`,
      resourceIdSegmentValues: {
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardAriStaticOpts);
    return new _JiraSoftwareBoardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardAriStaticOpts);
    return new _JiraSoftwareBoardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      boardId: this.boardId
    };
  }
};

// src/jira-software/board-feature/types.ts
var JiraSoftwareBoardFeatureAriResourceOwner = "jira-software", JiraSoftwareBoardFeatureAriResourceType = "board-feature";

// src/jira-software/board-feature/manifest.ts
var jiraSoftwareBoardFeatureAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareBoardFeatureAriResourceOwner,
  resourceType: JiraSoftwareBoardFeatureAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/featureKey/{featureKey}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    featureKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/board-feature/index.ts
var JiraSoftwareBoardFeatureAri = class _JiraSoftwareBoardFeatureAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._featureKey = opts.resourceIdSegmentValues.featureKey;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get featureKey() {
    return this._featureKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareBoardFeatureAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareBoardFeatureAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareBoardFeatureAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareBoardFeatureAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/featureKey/${opts.featureKey}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        featureKey: opts.featureKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardFeatureAriStaticOpts);
    return new _JiraSoftwareBoardFeatureAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardFeatureAriStaticOpts);
    return new _JiraSoftwareBoardFeatureAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      featureKey: this.featureKey
    };
  }
};

// src/jira-software/board-issue-list/types.ts
var JiraSoftwareBoardIssueListAriResourceOwner = "jira-software", JiraSoftwareBoardIssueListAriResourceType = "board-issue-list";

// src/jira-software/board-issue-list/manifest.ts
var jiraSoftwareBoardIssueListAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareBoardIssueListAriResourceOwner,
  resourceType: JiraSoftwareBoardIssueListAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{issueListId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    issueListId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/board-issue-list/index.ts
var JiraSoftwareBoardIssueListAri = class _JiraSoftwareBoardIssueListAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._issueListId = opts.resourceIdSegmentValues.issueListId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get issueListId() {
    return this._issueListId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareBoardIssueListAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareBoardIssueListAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareBoardIssueListAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareBoardIssueListAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.issueListId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        issueListId: opts.issueListId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardIssueListAriStaticOpts);
    return new _JiraSoftwareBoardIssueListAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardIssueListAriStaticOpts);
    return new _JiraSoftwareBoardIssueListAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      issueListId: this.issueListId
    };
  }
};

// src/jira-software/card/types.ts
var JiraSoftwareCardAriResourceOwner = "jira-software", JiraSoftwareCardAriResourceType = "card";

// src/jira-software/card/manifest.ts
var jiraSoftwareCardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareCardAriResourceOwner,
  resourceType: JiraSoftwareCardAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{cardId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    cardId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/card/index.ts
var JiraSoftwareCardAri = class _JiraSoftwareCardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardId = opts.resourceIdSegmentValues.cardId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get cardId() {
    return this._cardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareCardAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareCardAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareCardAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareCardAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        cardId: opts.cardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardAriStaticOpts);
    return new _JiraSoftwareCardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardAriStaticOpts);
    return new _JiraSoftwareCardAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      cardId: this.cardId
    };
  }
};

// src/jira-software/card-color/types.ts
var JiraSoftwareCardColorAriResourceOwner = "jira-software", JiraSoftwareCardColorAriResourceType = "card-color";

// src/jira-software/card-color/manifest.ts
var jiraSoftwareCardColorAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareCardColorAriResourceOwner,
  resourceType: JiraSoftwareCardColorAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{cardColorId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    cardColorId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/card-color/index.ts
var JiraSoftwareCardColorAri = class _JiraSoftwareCardColorAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardColorId = opts.resourceIdSegmentValues.cardColorId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get cardColorId() {
    return this._cardColorId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareCardColorAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareCardColorAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareCardColorAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareCardColorAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardColorId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        cardColorId: opts.cardColorId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardColorAriStaticOpts);
    return new _JiraSoftwareCardColorAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardColorAriStaticOpts);
    return new _JiraSoftwareCardColorAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      cardColorId: this.cardColorId
    };
  }
};

// src/jira-software/card-layout/types.ts
var JiraSoftwareCardLayoutAriResourceOwner = "jira-software", JiraSoftwareCardLayoutAriResourceType = "card-layout";

// src/jira-software/card-layout/manifest.ts
var jiraSoftwareCardLayoutAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareCardLayoutAriResourceOwner,
  resourceType: JiraSoftwareCardLayoutAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{cardLayoutId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    cardLayoutId: /[a-zA-Z0-9_]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/card-layout/index.ts
var JiraSoftwareCardLayoutAri = class _JiraSoftwareCardLayoutAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardLayoutId = opts.resourceIdSegmentValues.cardLayoutId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get cardLayoutId() {
    return this._cardLayoutId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareCardLayoutAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareCardLayoutAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareCardLayoutAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareCardLayoutAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardLayoutId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        cardLayoutId: opts.cardLayoutId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardLayoutAriStaticOpts);
    return new _JiraSoftwareCardLayoutAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardLayoutAriStaticOpts);
    return new _JiraSoftwareCardLayoutAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      cardLayoutId: this.cardLayoutId
    };
  }
};

// src/jira-software/card-parent/types.ts
var JiraSoftwareCardParentAriResourceOwner = "jira-software", JiraSoftwareCardParentAriResourceType = "card-parent";

// src/jira-software/card-parent/manifest.ts
var jiraSoftwareCardParentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareCardParentAriResourceOwner,
  resourceType: JiraSoftwareCardParentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{cardParentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    cardParentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/card-parent/index.ts
var JiraSoftwareCardParentAri = class _JiraSoftwareCardParentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardParentId = opts.resourceIdSegmentValues.cardParentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get cardParentId() {
    return this._cardParentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareCardParentAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareCardParentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareCardParentAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareCardParentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardParentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        cardParentId: opts.cardParentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardParentAriStaticOpts);
    return new _JiraSoftwareCardParentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardParentAriStaticOpts);
    return new _JiraSoftwareCardParentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      cardParentId: this.cardParentId
    };
  }
};

// src/jira-software/column/types.ts
var JiraSoftwareColumnAriResourceOwner = "jira-software", JiraSoftwareColumnAriResourceType = "column";

// src/jira-software/column/manifest.ts
var jiraSoftwareColumnAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareColumnAriResourceOwner,
  resourceType: JiraSoftwareColumnAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{columnId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    columnId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/column/index.ts
var JiraSoftwareColumnAri = class _JiraSoftwareColumnAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._columnId = opts.resourceIdSegmentValues.columnId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get columnId() {
    return this._columnId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareColumnAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareColumnAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareColumnAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareColumnAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.columnId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        columnId: opts.columnId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareColumnAriStaticOpts);
    return new _JiraSoftwareColumnAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareColumnAriStaticOpts);
    return new _JiraSoftwareColumnAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      columnId: this.columnId
    };
  }
};

// src/jira-software/custom-filter/types.ts
var JiraSoftwareCustomFilterAriResourceOwner = "jira-software", JiraSoftwareCustomFilterAriResourceType = "custom-filter";

// src/jira-software/custom-filter/manifest.ts
var jiraSoftwareCustomFilterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareCustomFilterAriResourceOwner,
  resourceType: JiraSoftwareCustomFilterAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{customFilterId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    customFilterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/custom-filter/index.ts
var JiraSoftwareCustomFilterAri = class _JiraSoftwareCustomFilterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._customFilterId = opts.resourceIdSegmentValues.customFilterId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get customFilterId() {
    return this._customFilterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareCustomFilterAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareCustomFilterAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareCustomFilterAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareCustomFilterAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.customFilterId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        customFilterId: opts.customFilterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCustomFilterAriStaticOpts);
    return new _JiraSoftwareCustomFilterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareCustomFilterAriStaticOpts);
    return new _JiraSoftwareCustomFilterAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      customFilterId: this.customFilterId
    };
  }
};

// src/jira-software/role/types.ts
var JiraSoftwareRoleAriResourceOwner = "jira-software", JiraSoftwareRoleAriResourceType = "role";

// src/jira-software/role/manifest.ts
var jiraSoftwareRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareRoleAriResourceOwner,
  resourceType: JiraSoftwareRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/role/index.ts
var JiraSoftwareRoleAri = class _JiraSoftwareRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareRoleAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraSoftwareRoleAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareRoleAriStaticOpts);
    return new _JiraSoftwareRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareRoleAriStaticOpts);
    return new _JiraSoftwareRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/jira-software/site/types.ts
var JiraSoftwareSiteAriResourceOwner = "jira-software", JiraSoftwareSiteAriResourceType = "site";

// src/jira-software/site/manifest.ts
var jiraSoftwareSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareSiteAriResourceOwner,
  resourceType: JiraSoftwareSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/site/index.ts
var JiraSoftwareSiteAri = class _JiraSoftwareSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareSiteAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraSoftwareSiteAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareSiteAriStaticOpts);
    return new _JiraSoftwareSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareSiteAriStaticOpts);
    return new _JiraSoftwareSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/jira-software/swimlane/types.ts
var JiraSoftwareSwimlaneAriResourceOwner = "jira-software", JiraSoftwareSwimlaneAriResourceType = "swimlane";

// src/jira-software/swimlane/manifest.ts
var jiraSoftwareSwimlaneAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareSwimlaneAriResourceOwner,
  resourceType: JiraSoftwareSwimlaneAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{swimlaneId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    swimlaneId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/swimlane/index.ts
var JiraSoftwareSwimlaneAri = class _JiraSoftwareSwimlaneAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._swimlaneId = opts.resourceIdSegmentValues.swimlaneId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get swimlaneId() {
    return this._swimlaneId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareSwimlaneAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareSwimlaneAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareSwimlaneAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareSwimlaneAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.swimlaneId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        swimlaneId: opts.swimlaneId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareSwimlaneAriStaticOpts);
    return new _JiraSoftwareSwimlaneAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareSwimlaneAriStaticOpts);
    return new _JiraSoftwareSwimlaneAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      swimlaneId: this.swimlaneId
    };
  }
};

// src/jira-software/user-board-config/types.ts
var JiraSoftwareUserBoardConfigAriResourceOwner = "jira-software", JiraSoftwareUserBoardConfigAriResourceType = "user-board-config";

// src/jira-software/user-board-config/manifest.ts
var jiraSoftwareUserBoardConfigAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareUserBoardConfigAriResourceOwner,
  resourceType: JiraSoftwareUserBoardConfigAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/user-board-config/index.ts
var JiraSoftwareUserBoardConfigAri = class _JiraSoftwareUserBoardConfigAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareUserBoardConfigAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareUserBoardConfigAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareUserBoardConfigAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareUserBoardConfigAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareUserBoardConfigAriStaticOpts);
    return new _JiraSoftwareUserBoardConfigAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareUserBoardConfigAriStaticOpts);
    return new _JiraSoftwareUserBoardConfigAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId
    };
  }
};

// src/jira-software/view-config/types.ts
var JiraSoftwareViewConfigAriResourceOwner = "jira-software", JiraSoftwareViewConfigAriResourceType = "view-config";

// src/jira-software/view-config/manifest.ts
var jiraSoftwareViewConfigAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraSoftwareViewConfigAriResourceOwner,
  resourceType: JiraSoftwareViewConfigAriResourceType,
  resourceIdSlug: "activation/{activationId}/{boardId}/{viewType}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    viewType: /(board|backlog|timeline)/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-software/view-config/index.ts
var JiraSoftwareViewConfigAri = class _JiraSoftwareViewConfigAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._viewType = opts.resourceIdSegmentValues.viewType;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get boardId() {
    return this._boardId;
  }
  get viewType() {
    return this._viewType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraSoftwareViewConfigAriStaticOpts.qualifier,
      platformQualifier: jiraSoftwareViewConfigAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraSoftwareViewConfigAriStaticOpts.resourceOwner,
      resourceType: jiraSoftwareViewConfigAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.viewType}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        boardId: opts.boardId,
        viewType: opts.viewType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareViewConfigAriStaticOpts);
    return new _JiraSoftwareViewConfigAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraSoftwareViewConfigAriStaticOpts);
    return new _JiraSoftwareViewConfigAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      boardId: this.boardId,
      viewType: this.viewType
    };
  }
};

// src/jsm-channel-orchestrator/conversation/types.ts
var JsmChannelOrchestratorConversationAriResourceOwner = "jsm-channel-orchestrator", JsmChannelOrchestratorConversationAriResourceType = "conversation";

// src/jsm-channel-orchestrator/conversation/manifest.ts
var jsmChannelOrchestratorConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JsmChannelOrchestratorConversationAriResourceOwner,
  resourceType: JsmChannelOrchestratorConversationAriResourceType,
  resourceIdSlug: "{activationId}/{conversationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    conversationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jsm-channel-orchestrator/conversation/index.ts
var JsmChannelOrchestratorConversationAri = class _JsmChannelOrchestratorConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._conversationId = opts.resourceIdSegmentValues.conversationId;
  }
  get activationId() {
    return this._activationId;
  }
  get conversationId() {
    return this._conversationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jsmChannelOrchestratorConversationAriStaticOpts.qualifier,
      platformQualifier: jsmChannelOrchestratorConversationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jsmChannelOrchestratorConversationAriStaticOpts.resourceOwner,
      resourceType: jsmChannelOrchestratorConversationAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.conversationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        conversationId: opts.conversationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jsmChannelOrchestratorConversationAriStaticOpts);
    return new _JsmChannelOrchestratorConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jsmChannelOrchestratorConversationAriStaticOpts);
    return new _JsmChannelOrchestratorConversationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      conversationId: this.conversationId
    };
  }
};

// src/knowledge-discovery/bookmark/types.ts
var KnowledgeDiscoveryBookmarkAriResourceOwner = "knowledge-discovery", KnowledgeDiscoveryBookmarkAriResourceType = "bookmark";

// src/knowledge-discovery/bookmark/manifest.ts
var knowledgeDiscoveryBookmarkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: KnowledgeDiscoveryBookmarkAriResourceOwner,
  resourceType: KnowledgeDiscoveryBookmarkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{bookmarkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    bookmarkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/knowledge-discovery/bookmark/index.ts
var KnowledgeDiscoveryBookmarkAri = class _KnowledgeDiscoveryBookmarkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._bookmarkId = opts.resourceIdSegmentValues.bookmarkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get bookmarkId() {
    return this._bookmarkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: knowledgeDiscoveryBookmarkAriStaticOpts.qualifier,
      platformQualifier: knowledgeDiscoveryBookmarkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: knowledgeDiscoveryBookmarkAriStaticOpts.resourceOwner,
      resourceType: knowledgeDiscoveryBookmarkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.bookmarkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        bookmarkId: opts.bookmarkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, knowledgeDiscoveryBookmarkAriStaticOpts);
    return new _KnowledgeDiscoveryBookmarkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, knowledgeDiscoveryBookmarkAriStaticOpts);
    return new _KnowledgeDiscoveryBookmarkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      bookmarkId: this.bookmarkId
    };
  }
};

// src/knowledge-serving-and-access/topic/types.ts
var KnowledgeServingAndAccessTopicAriResourceOwner = "knowledge-serving-and-access", KnowledgeServingAndAccessTopicAriResourceType = "topic";

// src/knowledge-serving-and-access/topic/manifest.ts
var knowledgeServingAndAccessTopicAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: KnowledgeServingAndAccessTopicAriResourceOwner,
  resourceType: KnowledgeServingAndAccessTopicAriResourceType,
  resourceIdSlug: "{topicId}",
  resourceIdSegmentFormats: {
    topicId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/knowledge-serving-and-access/topic/index.ts
var KnowledgeServingAndAccessTopicAri = class _KnowledgeServingAndAccessTopicAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._topicId = opts.resourceIdSegmentValues.topicId;
  }
  get siteId() {
    return this._siteId;
  }
  get topicId() {
    return this._topicId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: knowledgeServingAndAccessTopicAriStaticOpts.qualifier,
      platformQualifier: knowledgeServingAndAccessTopicAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: knowledgeServingAndAccessTopicAriStaticOpts.resourceOwner,
      resourceType: knowledgeServingAndAccessTopicAriStaticOpts.resourceType,
      resourceId: `${opts.topicId}`,
      resourceIdSegmentValues: {
        topicId: opts.topicId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, knowledgeServingAndAccessTopicAriStaticOpts);
    return new _KnowledgeServingAndAccessTopicAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, knowledgeServingAndAccessTopicAriStaticOpts);
    return new _KnowledgeServingAndAccessTopicAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      topicId: this.topicId
    };
  }
};

// src/launchdarkly.launchdarkly/remote-link/types.ts
var LaunchdarklyLaunchdarklyRemoteLinkAriResourceOwner = "launchdarkly.launchdarkly", LaunchdarklyLaunchdarklyRemoteLinkAriResourceType = "remote-link";

// src/launchdarkly.launchdarkly/remote-link/manifest.ts
var launchdarklyLaunchdarklyRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LaunchdarklyLaunchdarklyRemoteLinkAriResourceOwner,
  resourceType: LaunchdarklyLaunchdarklyRemoteLinkAriResourceType,
  resourceIdSlug: "feature-flag/{projectId}/{featureFlagKey}",
  resourceIdSegmentFormats: {
    projectId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    featureFlagKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/launchdarkly.launchdarkly/remote-link/index.ts
var LaunchdarklyLaunchdarklyRemoteLinkAri = class _LaunchdarklyLaunchdarklyRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._projectId = opts.resourceIdSegmentValues.projectId, this._featureFlagKey = opts.resourceIdSegmentValues.featureFlagKey;
  }
  get projectId() {
    return this._projectId;
  }
  get featureFlagKey() {
    return this._featureFlagKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: launchdarklyLaunchdarklyRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: launchdarklyLaunchdarklyRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: launchdarklyLaunchdarklyRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: launchdarklyLaunchdarklyRemoteLinkAriStaticOpts.resourceType,
      resourceId: `feature-flag/${opts.projectId}/${opts.featureFlagKey}`,
      resourceIdSegmentValues: {
        projectId: opts.projectId,
        featureFlagKey: opts.featureFlagKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, launchdarklyLaunchdarklyRemoteLinkAriStaticOpts);
    return new _LaunchdarklyLaunchdarklyRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, launchdarklyLaunchdarklyRemoteLinkAriStaticOpts);
    return new _LaunchdarklyLaunchdarklyRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      projectId: this.projectId,
      featureFlagKey: this.featureFlagKey
    };
  }
};

// src/learning-platform/learner/types.ts
var LearningPlatformLearnerAriResourceOwner = "learning-platform", LearningPlatformLearnerAriResourceType = "learner";

// src/learning-platform/learner/manifest.ts
var learningPlatformLearnerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LearningPlatformLearnerAriResourceOwner,
  resourceType: LearningPlatformLearnerAriResourceType,
  resourceIdSlug: "{learnerId}",
  resourceIdSegmentFormats: {
    learnerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/learning-platform/learner/index.ts
var LearningPlatformLearnerAri = class _LearningPlatformLearnerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._learnerId = opts.resourceIdSegmentValues.learnerId;
  }
  get learnerId() {
    return this._learnerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: learningPlatformLearnerAriStaticOpts.qualifier,
      platformQualifier: learningPlatformLearnerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: learningPlatformLearnerAriStaticOpts.resourceOwner,
      resourceType: learningPlatformLearnerAriStaticOpts.resourceType,
      resourceId: `${opts.learnerId}`,
      resourceIdSegmentValues: {
        learnerId: opts.learnerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, learningPlatformLearnerAriStaticOpts);
    return new _LearningPlatformLearnerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, learningPlatformLearnerAriStaticOpts);
    return new _LearningPlatformLearnerAri(opts);
  }
  getVariables() {
    return {
      learnerId: this.learnerId
    };
  }
};

// src/linking-platform/datasource/types.ts
var LinkingPlatformDatasourceAriResourceOwner = "linking-platform", LinkingPlatformDatasourceAriResourceType = "datasource";

// src/linking-platform/datasource/manifest.ts
var linkingPlatformDatasourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LinkingPlatformDatasourceAriResourceOwner,
  resourceType: LinkingPlatformDatasourceAriResourceType,
  resourceIdSlug: "{datasourceId}",
  resourceIdSegmentFormats: {
    datasourceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/linking-platform/datasource/index.ts
var LinkingPlatformDatasourceAri = class _LinkingPlatformDatasourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._datasourceId = opts.resourceIdSegmentValues.datasourceId;
  }
  get datasourceId() {
    return this._datasourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: linkingPlatformDatasourceAriStaticOpts.qualifier,
      platformQualifier: linkingPlatformDatasourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: linkingPlatformDatasourceAriStaticOpts.resourceOwner,
      resourceType: linkingPlatformDatasourceAriStaticOpts.resourceType,
      resourceId: `${opts.datasourceId}`,
      resourceIdSegmentValues: {
        datasourceId: opts.datasourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, linkingPlatformDatasourceAriStaticOpts);
    return new _LinkingPlatformDatasourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, linkingPlatformDatasourceAriStaticOpts);
    return new _LinkingPlatformDatasourceAri(opts);
  }
  getVariables() {
    return {
      datasourceId: this.datasourceId
    };
  }
};

// src/login-alerter/site/types.ts
var LoginAlerterSiteAriResourceOwner = "login-alerter", LoginAlerterSiteAriResourceType = "site";

// src/login-alerter/site/manifest.ts
var loginAlerterSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoginAlerterSiteAriResourceOwner,
  resourceType: LoginAlerterSiteAriResourceType,
  resourceIdSlug: "login-alerter",
  resourceIdSegmentFormats: {}
};

// src/login-alerter/site/index.ts
var LoginAlerterSiteAri = class _LoginAlerterSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loginAlerterSiteAriStaticOpts.qualifier,
      platformQualifier: loginAlerterSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loginAlerterSiteAriStaticOpts.resourceOwner,
      resourceType: loginAlerterSiteAriStaticOpts.resourceType,
      resourceId: "login-alerter",
      resourceIdSegmentValues: {}
    }, ariOpts = AriParser.fromOpts(derivedOpts, loginAlerterSiteAriStaticOpts);
    return new _LoginAlerterSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loginAlerterSiteAriStaticOpts);
    return new _LoginAlerterSiteAri(opts);
  }
  getVariables() {
    return {};
  }
};

// src/loom/comment/types.ts
var LoomCommentAriResourceOwner = "loom", LoomCommentAriResourceType = "comment";

// src/loom/comment/manifest.ts
var loomCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomCommentAriResourceOwner,
  resourceType: LoomCommentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{commentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/comment/index.ts
var LoomCommentAri = class _LoomCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomCommentAriStaticOpts.qualifier,
      platformQualifier: loomCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomCommentAriStaticOpts.resourceOwner,
      resourceType: loomCommentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomCommentAriStaticOpts);
    return new _LoomCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomCommentAriStaticOpts);
    return new _LoomCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      commentId: this.commentId
    };
  }
};

// src/loom/folder/types.ts
var LoomFolderAriResourceOwner = "loom", LoomFolderAriResourceType = "folder";

// src/loom/folder/manifest.ts
var loomFolderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomFolderAriResourceOwner,
  resourceType: LoomFolderAriResourceType,
  resourceIdSlug: "activation/{activationId}/{folderId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    folderId: /[a-f0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/folder/index.ts
var LoomFolderAri = class _LoomFolderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._folderId = opts.resourceIdSegmentValues.folderId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get folderId() {
    return this._folderId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomFolderAriStaticOpts.qualifier,
      platformQualifier: loomFolderAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomFolderAriStaticOpts.resourceOwner,
      resourceType: loomFolderAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.folderId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        folderId: opts.folderId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomFolderAriStaticOpts);
    return new _LoomFolderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomFolderAriStaticOpts);
    return new _LoomFolderAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      folderId: this.folderId
    };
  }
};

// src/loom/meeting/types.ts
var LoomMeetingAriResourceOwner = "loom", LoomMeetingAriResourceType = "meeting";

// src/loom/meeting/manifest.ts
var loomMeetingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomMeetingAriResourceOwner,
  resourceType: LoomMeetingAriResourceType,
  resourceIdSlug: "activation/{activationId}/{meetingId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    meetingId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/meeting/index.ts
var LoomMeetingAri = class _LoomMeetingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._meetingId = opts.resourceIdSegmentValues.meetingId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get meetingId() {
    return this._meetingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomMeetingAriStaticOpts.qualifier,
      platformQualifier: loomMeetingAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomMeetingAriStaticOpts.resourceOwner,
      resourceType: loomMeetingAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.meetingId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        meetingId: opts.meetingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomMeetingAriStaticOpts);
    return new _LoomMeetingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomMeetingAriStaticOpts);
    return new _LoomMeetingAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      meetingId: this.meetingId
    };
  }
};

// src/loom/meeting-recurrence/types.ts
var LoomMeetingRecurrenceAriResourceOwner = "loom", LoomMeetingRecurrenceAriResourceType = "meeting-recurrence";

// src/loom/meeting-recurrence/manifest.ts
var loomMeetingRecurrenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomMeetingRecurrenceAriResourceOwner,
  resourceType: LoomMeetingRecurrenceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{meetingRecurrenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    meetingRecurrenceId: /[0-9]:[\w=-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/meeting-recurrence/index.ts
var LoomMeetingRecurrenceAri = class _LoomMeetingRecurrenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._meetingRecurrenceId = opts.resourceIdSegmentValues.meetingRecurrenceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get meetingRecurrenceId() {
    return this._meetingRecurrenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomMeetingRecurrenceAriStaticOpts.qualifier,
      platformQualifier: loomMeetingRecurrenceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomMeetingRecurrenceAriStaticOpts.resourceOwner,
      resourceType: loomMeetingRecurrenceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.meetingRecurrenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        meetingRecurrenceId: opts.meetingRecurrenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomMeetingRecurrenceAriStaticOpts);
    return new _LoomMeetingRecurrenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomMeetingRecurrenceAriStaticOpts);
    return new _LoomMeetingRecurrenceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      meetingRecurrenceId: this.meetingRecurrenceId
    };
  }
};

// src/loom/site/types.ts
var LoomSiteAriResourceOwner = "loom", LoomSiteAriResourceType = "site";

// src/loom/site/manifest.ts
var loomSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomSiteAriResourceOwner,
  resourceType: LoomSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/site/index.ts
var LoomSiteAri = class _LoomSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomSiteAriStaticOpts.qualifier,
      platformQualifier: loomSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomSiteAriStaticOpts.resourceOwner,
      resourceType: loomSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomSiteAriStaticOpts);
    return new _LoomSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomSiteAriStaticOpts);
    return new _LoomSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/loom/space/types.ts
var LoomSpaceAriResourceOwner = "loom", LoomSpaceAriResourceType = "space";

// src/loom/space/manifest.ts
var loomSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomSpaceAriResourceOwner,
  resourceType: LoomSpaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{spaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/space/index.ts
var LoomSpaceAri = class _LoomSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomSpaceAriStaticOpts.qualifier,
      platformQualifier: loomSpaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomSpaceAriStaticOpts.resourceOwner,
      resourceType: loomSpaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomSpaceAriStaticOpts);
    return new _LoomSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomSpaceAriStaticOpts);
    return new _LoomSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      spaceId: this.spaceId
    };
  }
};

// src/loom/standalone-workspace/types.ts
var LoomStandaloneWorkspaceAriResourceOwner = "loom", LoomStandaloneWorkspaceAriResourceType = "standalone-workspace";

// src/loom/standalone-workspace/manifest.ts
var loomStandaloneWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomStandaloneWorkspaceAriResourceOwner,
  resourceType: LoomStandaloneWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/standalone-workspace/index.ts
var LoomStandaloneWorkspaceAri = class _LoomStandaloneWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomStandaloneWorkspaceAriStaticOpts.qualifier,
      platformQualifier: loomStandaloneWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomStandaloneWorkspaceAriStaticOpts.resourceOwner,
      resourceType: loomStandaloneWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/loom/video/types.ts
var LoomVideoAriResourceOwner = "loom", LoomVideoAriResourceType = "video";

// src/loom/video/manifest.ts
var loomVideoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomVideoAriResourceOwner,
  resourceType: LoomVideoAriResourceType,
  resourceIdSlug: "activation/{activationId}/{videoId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    videoId: /[a-fA-F0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/video/index.ts
var LoomVideoAri = class _LoomVideoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._videoId = opts.resourceIdSegmentValues.videoId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get videoId() {
    return this._videoId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomVideoAriStaticOpts.qualifier,
      platformQualifier: loomVideoAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomVideoAriStaticOpts.resourceOwner,
      resourceType: loomVideoAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.videoId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        videoId: opts.videoId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomVideoAriStaticOpts);
    return new _LoomVideoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomVideoAriStaticOpts);
    return new _LoomVideoAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      videoId: this.videoId
    };
  }
};

// src/loom/workspace/types.ts
var LoomWorkspaceAriResourceOwner = "loom", LoomWorkspaceAriResourceType = "workspace";

// src/loom/workspace/manifest.ts
var loomWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomWorkspaceAriResourceOwner,
  resourceType: LoomWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/workspace/index.ts
var LoomWorkspaceAri = class _LoomWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomWorkspaceAriStaticOpts.qualifier,
      platformQualifier: loomWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomWorkspaceAriStaticOpts.resourceOwner,
      resourceType: loomWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomWorkspaceAriStaticOpts);
    return new _LoomWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomWorkspaceAriStaticOpts);
    return new _LoomWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/loom.loom/video/types.ts
var LoomLoomVideoAriResourceOwner = "loom.loom", LoomLoomVideoAriResourceType = "video";

// src/loom.loom/video/manifest.ts
var loomLoomVideoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomLoomVideoAriResourceOwner,
  resourceType: LoomLoomVideoAriResourceType,
  resourceIdSlug: "{videoId}",
  resourceIdSegmentFormats: {
    videoId: /[a-fA-F0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom.loom/video/index.ts
var LoomLoomVideoAri = class _LoomLoomVideoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._videoId = opts.resourceIdSegmentValues.videoId;
  }
  get videoId() {
    return this._videoId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomLoomVideoAriStaticOpts.qualifier,
      platformQualifier: loomLoomVideoAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomLoomVideoAriStaticOpts.resourceOwner,
      resourceType: loomLoomVideoAriStaticOpts.resourceType,
      resourceId: `${opts.videoId}`,
      resourceIdSegmentValues: {
        videoId: opts.videoId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomLoomVideoAriStaticOpts);
    return new _LoomLoomVideoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomLoomVideoAriStaticOpts);
    return new _LoomLoomVideoAri(opts);
  }
  getVariables() {
    return {
      videoId: this.videoId
    };
  }
};

// src/lucid.lucidchart/design/types.ts
var LucidLucidchartDesignAriResourceOwner = "lucid.lucidchart", LucidLucidchartDesignAriResourceType = "design";

// src/lucid.lucidchart/design/manifest.ts
var lucidLucidchartDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LucidLucidchartDesignAriResourceOwner,
  resourceType: LucidLucidchartDesignAriResourceType,
  resourceIdSlug: "document/{documentId}",
  resourceIdSegmentFormats: {
    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/lucid.lucidchart/design/index.ts
var LucidLucidchartDesignAri = class _LucidLucidchartDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: lucidLucidchartDesignAriStaticOpts.qualifier,
      platformQualifier: lucidLucidchartDesignAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: lucidLucidchartDesignAriStaticOpts.resourceOwner,
      resourceType: lucidLucidchartDesignAriStaticOpts.resourceType,
      resourceId: `document/${opts.documentId}`,
      resourceIdSegmentValues: {
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, lucidLucidchartDesignAriStaticOpts);
    return new _LucidLucidchartDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, lucidLucidchartDesignAriStaticOpts);
    return new _LucidLucidchartDesignAri(opts);
  }
  getVariables() {
    return {
      documentId: this.documentId
    };
  }
};

// src/lucid.lucidchart/remote-link/types.ts
var LucidLucidchartRemoteLinkAriResourceOwner = "lucid.lucidchart", LucidLucidchartRemoteLinkAriResourceType = "remote-link";

// src/lucid.lucidchart/remote-link/manifest.ts
var lucidLucidchartRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LucidLucidchartRemoteLinkAriResourceOwner,
  resourceType: LucidLucidchartRemoteLinkAriResourceType,
  resourceIdSlug: "chart/{chartId}",
  resourceIdSegmentFormats: {
    chartId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/lucid.lucidchart/remote-link/index.ts
var LucidLucidchartRemoteLinkAri = class _LucidLucidchartRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._chartId = opts.resourceIdSegmentValues.chartId;
  }
  get chartId() {
    return this._chartId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: lucidLucidchartRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: lucidLucidchartRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: lucidLucidchartRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: lucidLucidchartRemoteLinkAriStaticOpts.resourceType,
      resourceId: `chart/${opts.chartId}`,
      resourceIdSegmentValues: {
        chartId: opts.chartId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, lucidLucidchartRemoteLinkAriStaticOpts);
    return new _LucidLucidchartRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, lucidLucidchartRemoteLinkAriStaticOpts);
    return new _LucidLucidchartRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      chartId: this.chartId
    };
  }
};

// src/maker-space/group/types.ts
var MakerSpaceGroupAriResourceOwner = "maker-space", MakerSpaceGroupAriResourceType = "group";

// src/maker-space/group/manifest.ts
var makerSpaceGroupAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MakerSpaceGroupAriResourceOwner,
  resourceType: MakerSpaceGroupAriResourceType,
  resourceIdSlug: "{groupId}",
  resourceIdSegmentFormats: {
    groupId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/maker-space/group/index.ts
var MakerSpaceGroupAri = class _MakerSpaceGroupAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._groupId = opts.resourceIdSegmentValues.groupId;
  }
  get groupId() {
    return this._groupId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: makerSpaceGroupAriStaticOpts.qualifier,
      platformQualifier: makerSpaceGroupAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: makerSpaceGroupAriStaticOpts.resourceOwner,
      resourceType: makerSpaceGroupAriStaticOpts.resourceType,
      resourceId: `${opts.groupId}`,
      resourceIdSegmentValues: {
        groupId: opts.groupId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, makerSpaceGroupAriStaticOpts);
    return new _MakerSpaceGroupAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, makerSpaceGroupAriStaticOpts);
    return new _MakerSpaceGroupAri(opts);
  }
  getVariables() {
    return {
      groupId: this.groupId
    };
  }
};

// src/mapi/role/types.ts
var MapiRoleAriResourceOwner = "mapi", MapiRoleAriResourceType = "role";

// src/mapi/role/manifest.ts
var mapiRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MapiRoleAriResourceOwner,
  resourceType: MapiRoleAriResourceType,
  resourceIdSlug: "scope/{roleTypeId}",
  resourceIdSegmentFormats: {
    roleTypeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/mapi/role/index.ts
var MapiRoleAri = class _MapiRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleTypeId = opts.resourceIdSegmentValues.roleTypeId;
  }
  get roleTypeId() {
    return this._roleTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mapiRoleAriStaticOpts.qualifier,
      platformQualifier: mapiRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mapiRoleAriStaticOpts.resourceOwner,
      resourceType: mapiRoleAriStaticOpts.resourceType,
      resourceId: `scope/${opts.roleTypeId}`,
      resourceIdSegmentValues: {
        roleTypeId: opts.roleTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mapiRoleAriStaticOpts);
    return new _MapiRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mapiRoleAriStaticOpts);
    return new _MapiRoleAri(opts);
  }
  getVariables() {
    return {
      roleTypeId: this.roleTypeId
    };
  }
};

// src/marketing/customer-domain/types.ts
var MarketingCustomerDomainAriResourceOwner = "marketing", MarketingCustomerDomainAriResourceType = "customer-domain";

// src/marketing/customer-domain/manifest.ts
var marketingCustomerDomainAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MarketingCustomerDomainAriResourceOwner,
  resourceType: MarketingCustomerDomainAriResourceType,
  resourceIdSlug: "{domainBase64}",
  resourceIdSegmentFormats: {
    domainBase64: /[a-zA-Z0-9=]+={0,1}/
    // eslint-disable-line no-useless-escape
  }
};

// src/marketing/customer-domain/index.ts
var MarketingCustomerDomainAri = class _MarketingCustomerDomainAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domainBase64 = opts.resourceIdSegmentValues.domainBase64;
  }
  get domainBase64() {
    return this._domainBase64;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: marketingCustomerDomainAriStaticOpts.qualifier,
      platformQualifier: marketingCustomerDomainAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: marketingCustomerDomainAriStaticOpts.resourceOwner,
      resourceType: marketingCustomerDomainAriStaticOpts.resourceType,
      resourceId: `${opts.domainBase64}`,
      resourceIdSegmentValues: {
        domainBase64: opts.domainBase64
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, marketingCustomerDomainAriStaticOpts);
    return new _MarketingCustomerDomainAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, marketingCustomerDomainAriStaticOpts);
    return new _MarketingCustomerDomainAri(opts);
  }
  getVariables() {
    return {
      domainBase64: this.domainBase64
    };
  }
};

// src/marketplace/team/types.ts
var MarketplaceTeamAriResourceOwner = "marketplace", MarketplaceTeamAriResourceType = "team";

// src/marketplace/team/manifest.ts
var marketplaceTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MarketplaceTeamAriResourceOwner,
  resourceType: MarketplaceTeamAriResourceType,
  resourceIdSlug: "{teamId}",
  resourceIdSegmentFormats: {
    teamId: /[a-zA-Z0-9.\-_~]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/marketplace/team/index.ts
var MarketplaceTeamAri = class _MarketplaceTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId;
  }
  get teamId() {
    return this._teamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: marketplaceTeamAriStaticOpts.qualifier,
      platformQualifier: marketplaceTeamAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: marketplaceTeamAriStaticOpts.resourceOwner,
      resourceType: marketplaceTeamAriStaticOpts.resourceType,
      resourceId: `${opts.teamId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, marketplaceTeamAriStaticOpts);
    return new _MarketplaceTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, marketplaceTeamAriStaticOpts);
    return new _MarketplaceTeamAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId
    };
  }
};

// src/measurement/email-uuid/types.ts
var MeasurementEmailUuidAriResourceOwner = "measurement", MeasurementEmailUuidAriResourceType = "email-uuid";

// src/measurement/email-uuid/manifest.ts
var measurementEmailUuidAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MeasurementEmailUuidAriResourceOwner,
  resourceType: MeasurementEmailUuidAriResourceType,
  resourceIdSlug: "{emailId}",
  resourceIdSegmentFormats: {
    emailId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/measurement/email-uuid/index.ts
var MeasurementEmailUuidAri = class _MeasurementEmailUuidAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._emailId = opts.resourceIdSegmentValues.emailId;
  }
  get emailId() {
    return this._emailId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: measurementEmailUuidAriStaticOpts.qualifier,
      platformQualifier: measurementEmailUuidAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: measurementEmailUuidAriStaticOpts.resourceOwner,
      resourceType: measurementEmailUuidAriStaticOpts.resourceType,
      resourceId: `${opts.emailId}`,
      resourceIdSegmentValues: {
        emailId: opts.emailId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementEmailUuidAriStaticOpts);
    return new _MeasurementEmailUuidAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, measurementEmailUuidAriStaticOpts);
    return new _MeasurementEmailUuidAri(opts);
  }
  getVariables() {
    return {
      emailId: this.emailId
    };
  }
};

// src/measurement/site-user/types.ts
var MeasurementSiteUserAriResourceOwner = "measurement", MeasurementSiteUserAriResourceType = "site-user";

// src/measurement/site-user/manifest.ts
var measurementSiteUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MeasurementSiteUserAriResourceOwner,
  resourceType: MeasurementSiteUserAriResourceType,
  resourceIdSlug: "{siteId}/{aaId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/,
    // eslint-disable-line no-useless-escape
    aaId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/measurement/site-user/index.ts
var MeasurementSiteUserAri = class _MeasurementSiteUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId, this._aaId = opts.resourceIdSegmentValues.aaId;
  }
  get siteId() {
    return this._siteId;
  }
  get aaId() {
    return this._aaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: measurementSiteUserAriStaticOpts.qualifier,
      platformQualifier: measurementSiteUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: measurementSiteUserAriStaticOpts.resourceOwner,
      resourceType: measurementSiteUserAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}/${opts.aaId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId,
        aaId: opts.aaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementSiteUserAriStaticOpts);
    return new _MeasurementSiteUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, measurementSiteUserAriStaticOpts);
    return new _MeasurementSiteUserAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      aaId: this.aaId
    };
  }
};

// src/measurement/user/types.ts
var MeasurementUserAriResourceOwner = "measurement", MeasurementUserAriResourceType = "user";

// src/measurement/user/manifest.ts
var measurementUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MeasurementUserAriResourceOwner,
  resourceType: MeasurementUserAriResourceType,
  resourceIdSlug: "ff-client-anonymous/{anonUserId}",
  resourceIdSegmentFormats: {
    anonUserId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/measurement/user/index.ts
var MeasurementUserAri = class _MeasurementUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._anonUserId = opts.resourceIdSegmentValues.anonUserId;
  }
  get anonUserId() {
    return this._anonUserId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: measurementUserAriStaticOpts.qualifier,
      platformQualifier: measurementUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: measurementUserAriStaticOpts.resourceOwner,
      resourceType: measurementUserAriStaticOpts.resourceType,
      resourceId: `ff-client-anonymous/${opts.anonUserId}`,
      resourceIdSegmentValues: {
        anonUserId: opts.anonUserId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementUserAriStaticOpts);
    return new _MeasurementUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, measurementUserAriStaticOpts);
    return new _MeasurementUserAri(opts);
  }
  getVariables() {
    return {
      anonUserId: this.anonUserId
    };
  }
};

// src/media/file/types.ts
var MediaFileAriResourceOwner = "media", MediaFileAriResourceType = "file";

// src/media/file/manifest.ts
var mediaFileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MediaFileAriResourceOwner,
  resourceType: MediaFileAriResourceType,
  resourceIdSlug: "{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/media/file/index.ts
var MediaFileAri = class _MediaFileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mediaFileAriStaticOpts.qualifier,
      platformQualifier: mediaFileAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mediaFileAriStaticOpts.resourceOwner,
      resourceType: mediaFileAriStaticOpts.resourceType,
      resourceId: `${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mediaFileAriStaticOpts);
    return new _MediaFileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mediaFileAriStaticOpts);
    return new _MediaFileAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

// src/mercury/change/types.ts
var MercuryChangeAriResourceOwner = "mercury", MercuryChangeAriResourceType = "change";

// src/mercury/change/manifest.ts
var mercuryChangeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeAriResourceOwner,
  resourceType: MercuryChangeAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change/index.ts
var MercuryChangeAri = class _MercuryChangeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeId = opts.resourceIdSegmentValues.changeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeId() {
    return this._changeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeId: opts.changeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeAriStaticOpts);
    return new _MercuryChangeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeAriStaticOpts);
    return new _MercuryChangeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeId: this.changeId
    };
  }
};

// src/mercury/change-proposal/types.ts
var MercuryChangeProposalAriResourceOwner = "mercury", MercuryChangeProposalAriResourceType = "change-proposal";

// src/mercury/change-proposal/manifest.ts
var mercuryChangeProposalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeProposalAriResourceOwner,
  resourceType: MercuryChangeProposalAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeProposalId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeProposalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change-proposal/index.ts
var MercuryChangeProposalAri = class _MercuryChangeProposalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeProposalId = opts.resourceIdSegmentValues.changeProposalId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeProposalId() {
    return this._changeProposalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeProposalAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeProposalAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeProposalAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeProposalAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeProposalId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeProposalId: opts.changeProposalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeProposalAriStaticOpts);
    return new _MercuryChangeProposalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeProposalAriStaticOpts);
    return new _MercuryChangeProposalAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeProposalId: this.changeProposalId
    };
  }
};

// src/mercury/change-proposal-status/types.ts
var MercuryChangeProposalStatusAriResourceOwner = "mercury", MercuryChangeProposalStatusAriResourceType = "change-proposal-status";

// src/mercury/change-proposal-status/manifest.ts
var mercuryChangeProposalStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryChangeProposalStatusAriResourceOwner,
  resourceType: MercuryChangeProposalStatusAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{changeProposalStatusId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    changeProposalStatusId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/change-proposal-status/index.ts
var MercuryChangeProposalStatusAri = class _MercuryChangeProposalStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._changeProposalStatusId = opts.resourceIdSegmentValues.changeProposalStatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get changeProposalStatusId() {
    return this._changeProposalStatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryChangeProposalStatusAriStaticOpts.qualifier,
      platformQualifier: mercuryChangeProposalStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryChangeProposalStatusAriStaticOpts.resourceOwner,
      resourceType: mercuryChangeProposalStatusAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.changeProposalStatusId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        changeProposalStatusId: opts.changeProposalStatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryChangeProposalStatusAriStaticOpts);
    return new _MercuryChangeProposalStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryChangeProposalStatusAriStaticOpts);
    return new _MercuryChangeProposalStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      changeProposalStatusId: this.changeProposalStatusId
    };
  }
};

// src/mercury/comment/types.ts
var MercuryCommentAriResourceOwner = "mercury", MercuryCommentAriResourceType = "comment";

// src/mercury/comment/manifest.ts
var mercuryCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryCommentAriResourceOwner,
  resourceType: MercuryCommentAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{commentUuid}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/comment/index.ts
var MercuryCommentAri = class _MercuryCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._commentUuid = opts.resourceIdSegmentValues.commentUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get commentUuid() {
    return this._commentUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryCommentAriStaticOpts.qualifier,
      platformQualifier: mercuryCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryCommentAriStaticOpts.resourceOwner,
      resourceType: mercuryCommentAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.commentUuid}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        commentUuid: opts.commentUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryCommentAriStaticOpts);
    return new _MercuryCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryCommentAriStaticOpts);
    return new _MercuryCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      commentUuid: this.commentUuid
    };
  }
};

// src/mercury/focus-area/types.ts
var MercuryFocusAreaAriResourceOwner = "mercury", MercuryFocusAreaAriResourceType = "focus-area";

// src/mercury/focus-area/manifest.ts
var mercuryFocusAreaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaAriResourceOwner,
  resourceType: MercuryFocusAreaAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area/index.ts
var MercuryFocusAreaAri = class _MercuryFocusAreaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaId = opts.resourceIdSegmentValues.focusAreaId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaId() {
    return this._focusAreaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaId: opts.focusAreaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaAriStaticOpts);
    return new _MercuryFocusAreaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaAriStaticOpts);
    return new _MercuryFocusAreaAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaId: this.focusAreaId
    };
  }
};

// src/mercury/focus-area-status-update/types.ts
var MercuryFocusAreaStatusUpdateAriResourceOwner = "mercury", MercuryFocusAreaStatusUpdateAriResourceType = "focus-area-status-update";

// src/mercury/focus-area-status-update/manifest.ts
var mercuryFocusAreaStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaStatusUpdateAriResourceOwner,
  resourceType: MercuryFocusAreaStatusUpdateAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-status-update/index.ts
var MercuryFocusAreaStatusUpdateAri = class _MercuryFocusAreaStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaStatusUpdateId = opts.resourceIdSegmentValues.focusAreaStatusUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaStatusUpdateId() {
    return this._focusAreaStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaStatusUpdateId: opts.focusAreaStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaStatusUpdateAriStaticOpts);
    return new _MercuryFocusAreaStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaStatusUpdateId: this.focusAreaStatusUpdateId
    };
  }
};

// src/mercury/focus-area-type/types.ts
var MercuryFocusAreaTypeAriResourceOwner = "mercury", MercuryFocusAreaTypeAriResourceType = "focus-area-type";

// src/mercury/focus-area-type/manifest.ts
var mercuryFocusAreaTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaTypeAriResourceOwner,
  resourceType: MercuryFocusAreaTypeAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaTypeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaTypeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-type/index.ts
var MercuryFocusAreaTypeAri = class _MercuryFocusAreaTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaTypeId = opts.resourceIdSegmentValues.focusAreaTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaTypeId() {
    return this._focusAreaTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaTypeAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaTypeAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaTypeAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaTypeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaTypeId: opts.focusAreaTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaTypeId: this.focusAreaTypeId
    };
  }
};

// src/mercury/role/types.ts
var MercuryRoleAriResourceOwner = "mercury", MercuryRoleAriResourceType = "role";

// src/mercury/role/manifest.ts
var mercuryRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryRoleAriResourceOwner,
  resourceType: MercuryRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/role/index.ts
var MercuryRoleAri = class _MercuryRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryRoleAriStaticOpts.qualifier,
      platformQualifier: mercuryRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mercuryRoleAriStaticOpts.resourceOwner,
      resourceType: mercuryRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryRoleAriStaticOpts);
    return new _MercuryRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryRoleAriStaticOpts);
    return new _MercuryRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/mercury/site/types.ts
var MercurySiteAriResourceOwner = "mercury", MercurySiteAriResourceType = "site";

// src/mercury/site/manifest.ts
var mercurySiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercurySiteAriResourceOwner,
  resourceType: MercurySiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/site/index.ts
var MercurySiteAri = class _MercurySiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercurySiteAriStaticOpts.qualifier,
      platformQualifier: mercurySiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mercurySiteAriStaticOpts.resourceOwner,
      resourceType: mercurySiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercurySiteAriStaticOpts);
    return new _MercurySiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercurySiteAriStaticOpts);
    return new _MercurySiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/mercury/strategic-event/types.ts
var MercuryStrategicEventAriResourceOwner = "mercury", MercuryStrategicEventAriResourceType = "strategic-event";

// src/mercury/strategic-event/manifest.ts
var mercuryStrategicEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventAriResourceOwner,
  resourceType: MercuryStrategicEventAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event/index.ts
var MercuryStrategicEventAri = class _MercuryStrategicEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventId = opts.resourceIdSegmentValues.strategicEventId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventId() {
    return this._strategicEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventId: opts.strategicEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventId: this.strategicEventId
    };
  }
};

// src/mercury/strategic-event-status/types.ts
var MercuryStrategicEventStatusAriResourceOwner = "mercury", MercuryStrategicEventStatusAriResourceType = "strategic-event-status";

// src/mercury/strategic-event-status/manifest.ts
var mercuryStrategicEventStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventStatusAriResourceOwner,
  resourceType: MercuryStrategicEventStatusAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventStatusId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventStatusId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event-status/index.ts
var MercuryStrategicEventStatusAri = class _MercuryStrategicEventStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventStatusId = opts.resourceIdSegmentValues.strategicEventStatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventStatusId() {
    return this._strategicEventStatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventStatusAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventStatusAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventStatusAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventStatusId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventStatusId: opts.strategicEventStatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventStatusId: this.strategicEventStatusId
    };
  }
};

// src/mercury/view/types.ts
var MercuryViewAriResourceOwner = "mercury", MercuryViewAriResourceType = "view";

// src/mercury/view/manifest.ts
var mercuryViewAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryViewAriResourceOwner,
  resourceType: MercuryViewAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{viewId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    viewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/view/index.ts
var MercuryViewAri = class _MercuryViewAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._viewId = opts.resourceIdSegmentValues.viewId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get viewId() {
    return this._viewId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryViewAriStaticOpts.qualifier,
      platformQualifier: mercuryViewAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryViewAriStaticOpts.resourceOwner,
      resourceType: mercuryViewAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.viewId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        viewId: opts.viewId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryViewAriStaticOpts);
    return new _MercuryViewAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryViewAriStaticOpts);
    return new _MercuryViewAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      viewId: this.viewId
    };
  }
};

// src/mercury/workspace/types.ts
var MercuryWorkspaceAriResourceOwner = "mercury", MercuryWorkspaceAriResourceType = "workspace";

// src/mercury/workspace/manifest.ts
var mercuryWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryWorkspaceAriResourceOwner,
  resourceType: MercuryWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/workspace/index.ts
var MercuryWorkspaceAri = class _MercuryWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryWorkspaceAriStaticOpts.qualifier,
      platformQualifier: mercuryWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryWorkspaceAriStaticOpts.resourceOwner,
      resourceType: mercuryWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryWorkspaceAriStaticOpts);
    return new _MercuryWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryWorkspaceAriStaticOpts);
    return new _MercuryWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

// src/microsoft/account/types.ts
var MicrosoftAccountAriResourceOwner = "microsoft", MicrosoftAccountAriResourceType = "account";

// src/microsoft/account/manifest.ts
var microsoftAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftAccountAriResourceOwner,
  resourceType: MicrosoftAccountAriResourceType,
  resourceIdSlug: "{accountId}",
  resourceIdSegmentFormats: {
    accountId: /[a-zA-Z0-9\-_.~@;{}=]{0,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft/account/index.ts
var MicrosoftAccountAri = class _MicrosoftAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._accountId = opts.resourceIdSegmentValues.accountId;
  }
  get accountId() {
    return this._accountId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftAccountAriStaticOpts.qualifier,
      platformQualifier: microsoftAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftAccountAriStaticOpts.resourceOwner,
      resourceType: microsoftAccountAriStaticOpts.resourceType,
      resourceId: `${opts.accountId}`,
      resourceIdSegmentValues: {
        accountId: opts.accountId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftAccountAriStaticOpts);
    return new _MicrosoftAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftAccountAriStaticOpts);
    return new _MicrosoftAccountAri(opts);
  }
  getVariables() {
    return {
      accountId: this.accountId
    };
  }
};

// src/microsoft.onedrive/document/types.ts
var MicrosoftOnedriveDocumentAriResourceOwner = "microsoft.onedrive", MicrosoftOnedriveDocumentAriResourceType = "document";

// src/microsoft.onedrive/document/manifest.ts
var microsoftOnedriveDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftOnedriveDocumentAriResourceOwner,
  resourceType: MicrosoftOnedriveDocumentAriResourceType,
  resourceIdSlug: "driveId/{driveId}/fileId/{fileId}",
  resourceIdSegmentFormats: {
    driveId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.onedrive/document/index.ts
var MicrosoftOnedriveDocumentAri = class _MicrosoftOnedriveDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._driveId = opts.resourceIdSegmentValues.driveId, this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get driveId() {
    return this._driveId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftOnedriveDocumentAriStaticOpts.qualifier,
      platformQualifier: microsoftOnedriveDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftOnedriveDocumentAriStaticOpts.resourceOwner,
      resourceType: microsoftOnedriveDocumentAriStaticOpts.resourceType,
      resourceId: `driveId/${opts.driveId}/fileId/${opts.fileId}`,
      resourceIdSegmentValues: {
        driveId: opts.driveId,
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftOnedriveDocumentAriStaticOpts);
    return new _MicrosoftOnedriveDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftOnedriveDocumentAriStaticOpts);
    return new _MicrosoftOnedriveDocumentAri(opts);
  }
  getVariables() {
    return {
      driveId: this.driveId,
      fileId: this.fileId
    };
  }
};

// src/microsoft.outlook/message/types.ts
var MicrosoftOutlookMessageAriResourceOwner = "microsoft.outlook", MicrosoftOutlookMessageAriResourceType = "message";

// src/microsoft.outlook/message/manifest.ts
var microsoftOutlookMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftOutlookMessageAriResourceOwner,
  resourceType: MicrosoftOutlookMessageAriResourceType,
  resourceIdSlug: "{messageId}",
  resourceIdSegmentFormats: {
    messageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.outlook/message/index.ts
var MicrosoftOutlookMessageAri = class _MicrosoftOutlookMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._messageId = opts.resourceIdSegmentValues.messageId;
  }
  get messageId() {
    return this._messageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftOutlookMessageAriStaticOpts.qualifier,
      platformQualifier: microsoftOutlookMessageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftOutlookMessageAriStaticOpts.resourceOwner,
      resourceType: microsoftOutlookMessageAriStaticOpts.resourceType,
      resourceId: `${opts.messageId}`,
      resourceIdSegmentValues: {
        messageId: opts.messageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftOutlookMessageAriStaticOpts);
    return new _MicrosoftOutlookMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftOutlookMessageAriStaticOpts);
    return new _MicrosoftOutlookMessageAri(opts);
  }
  getVariables() {
    return {
      messageId: this.messageId
    };
  }
};

// src/microsoft.outlook-calendar/calendar-event/types.ts
var MicrosoftOutlookCalendarCalendarEventAriResourceOwner = "microsoft.outlook-calendar", MicrosoftOutlookCalendarCalendarEventAriResourceType = "calendar-event";

// src/microsoft.outlook-calendar/calendar-event/manifest.ts
var microsoftOutlookCalendarCalendarEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftOutlookCalendarCalendarEventAriResourceOwner,
  resourceType: MicrosoftOutlookCalendarCalendarEventAriResourceType,
  resourceIdSlug: "outlook/userId/{userId}/calendarEventId/{calendarEventId}",
  resourceIdSegmentFormats: {
    userId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    calendarEventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.outlook-calendar/calendar-event/index.ts
var MicrosoftOutlookCalendarCalendarEventAri = class _MicrosoftOutlookCalendarCalendarEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId;
  }
  get userId() {
    return this._userId;
  }
  get calendarEventId() {
    return this._calendarEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftOutlookCalendarCalendarEventAriStaticOpts.qualifier,
      platformQualifier: microsoftOutlookCalendarCalendarEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftOutlookCalendarCalendarEventAriStaticOpts.resourceOwner,
      resourceType: microsoftOutlookCalendarCalendarEventAriStaticOpts.resourceType,
      resourceId: `outlook/userId/${opts.userId}/calendarEventId/${opts.calendarEventId}`,
      resourceIdSegmentValues: {
        userId: opts.userId,
        calendarEventId: opts.calendarEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftOutlookCalendarCalendarEventAriStaticOpts);
    return new _MicrosoftOutlookCalendarCalendarEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftOutlookCalendarCalendarEventAriStaticOpts);
    return new _MicrosoftOutlookCalendarCalendarEventAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId,
      calendarEventId: this.calendarEventId
    };
  }
};

// src/microsoft.power-bi/remote-link/types.ts
var MicrosoftPowerBiRemoteLinkAriResourceOwner = "microsoft.power-bi", MicrosoftPowerBiRemoteLinkAriResourceType = "remote-link";

// src/microsoft.power-bi/remote-link/manifest.ts
var microsoftPowerBiRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftPowerBiRemoteLinkAriResourceOwner,
  resourceType: MicrosoftPowerBiRemoteLinkAriResourceType,
  resourceIdSlug: "reportId/{reportId}",
  resourceIdSegmentFormats: {
    reportId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.power-bi/remote-link/index.ts
var MicrosoftPowerBiRemoteLinkAri = class _MicrosoftPowerBiRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._reportId = opts.resourceIdSegmentValues.reportId;
  }
  get reportId() {
    return this._reportId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftPowerBiRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: microsoftPowerBiRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftPowerBiRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: microsoftPowerBiRemoteLinkAriStaticOpts.resourceType,
      resourceId: `reportId/${opts.reportId}`,
      resourceIdSegmentValues: {
        reportId: opts.reportId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftPowerBiRemoteLinkAriStaticOpts);
    return new _MicrosoftPowerBiRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftPowerBiRemoteLinkAriStaticOpts);
    return new _MicrosoftPowerBiRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      reportId: this.reportId
    };
  }
};

// src/microsoft.sharepoint/document/types.ts
var MicrosoftSharepointDocumentAriResourceOwner = "microsoft.sharepoint", MicrosoftSharepointDocumentAriResourceType = "document";

// src/microsoft.sharepoint/document/manifest.ts
var microsoftSharepointDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftSharepointDocumentAriResourceOwner,
  resourceType: MicrosoftSharepointDocumentAriResourceType,
  resourceIdSlug: "driveId/{driveId}/fileId/{fileId}",
  resourceIdSegmentFormats: {
    driveId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.sharepoint/document/index.ts
var MicrosoftSharepointDocumentAri = class _MicrosoftSharepointDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._driveId = opts.resourceIdSegmentValues.driveId, this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get driveId() {
    return this._driveId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftSharepointDocumentAriStaticOpts.qualifier,
      platformQualifier: microsoftSharepointDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftSharepointDocumentAriStaticOpts.resourceOwner,
      resourceType: microsoftSharepointDocumentAriStaticOpts.resourceType,
      resourceId: `driveId/${opts.driveId}/fileId/${opts.fileId}`,
      resourceIdSegmentValues: {
        driveId: opts.driveId,
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftSharepointDocumentAriStaticOpts);
    return new _MicrosoftSharepointDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftSharepointDocumentAriStaticOpts);
    return new _MicrosoftSharepointDocumentAri(opts);
  }
  getVariables() {
    return {
      driveId: this.driveId,
      fileId: this.fileId
    };
  }
};

// src/microsoft.teams/conversation/types.ts
var MicrosoftTeamsConversationAriResourceOwner = "microsoft.teams", MicrosoftTeamsConversationAriResourceType = "conversation";

// src/microsoft.teams/conversation/manifest.ts
var microsoftTeamsConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftTeamsConversationAriResourceOwner,
  resourceType: MicrosoftTeamsConversationAriResourceType,
  resourceIdSlug: "{compositeConversation}",
  resourceIdSegmentFormats: {
    compositeConversation: /(teamId\/[a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}\/channelId\/19:[a-zA-Z0-9_-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+|19:[a-zA-Z0-9_]+(?:-[a-zA-Z0-9_]+)*@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.teams/conversation/index.ts
var MicrosoftTeamsConversationAri = class _MicrosoftTeamsConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._compositeConversation = opts.resourceIdSegmentValues.compositeConversation;
  }
  get compositeConversation() {
    return this._compositeConversation;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftTeamsConversationAriStaticOpts.qualifier,
      platformQualifier: microsoftTeamsConversationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftTeamsConversationAriStaticOpts.resourceOwner,
      resourceType: microsoftTeamsConversationAriStaticOpts.resourceType,
      resourceId: `${opts.compositeConversation}`,
      resourceIdSegmentValues: {
        compositeConversation: opts.compositeConversation
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftTeamsConversationAriStaticOpts);
    return new _MicrosoftTeamsConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftTeamsConversationAriStaticOpts);
    return new _MicrosoftTeamsConversationAri(opts);
  }
  getVariables() {
    return {
      compositeConversation: this.compositeConversation
    };
  }
};

// src/microsoft.teams/message/types.ts
var MicrosoftTeamsMessageAriResourceOwner = "microsoft.teams", MicrosoftTeamsMessageAriResourceType = "message";

// src/microsoft.teams/message/manifest.ts
var microsoftTeamsMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftTeamsMessageAriResourceOwner,
  resourceType: MicrosoftTeamsMessageAriResourceType,
  resourceIdSlug: "{compositeMessage}",
  resourceIdSegmentFormats: {
    compositeMessage: /(teamId\/[a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}\/channelId\/19:[a-zA-Z0-9_-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+\/messageId\/[0-9_-]+|chatId\/19:[a-zA-Z0-9_]+(?:-[a-zA-Z0-9_]+)*@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+\/messageId\/[0-9_-]+)/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.teams/message/index.ts
var MicrosoftTeamsMessageAri = class _MicrosoftTeamsMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._compositeMessage = opts.resourceIdSegmentValues.compositeMessage;
  }
  get compositeMessage() {
    return this._compositeMessage;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftTeamsMessageAriStaticOpts.qualifier,
      platformQualifier: microsoftTeamsMessageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftTeamsMessageAriStaticOpts.resourceOwner,
      resourceType: microsoftTeamsMessageAriStaticOpts.resourceType,
      resourceId: `${opts.compositeMessage}`,
      resourceIdSegmentValues: {
        compositeMessage: opts.compositeMessage
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftTeamsMessageAriStaticOpts);
    return new _MicrosoftTeamsMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftTeamsMessageAriStaticOpts);
    return new _MicrosoftTeamsMessageAri(opts);
  }
  getVariables() {
    return {
      compositeMessage: this.compositeMessage
    };
  }
};

// src/microsoft.teams/remote-link/types.ts
var MicrosoftTeamsRemoteLinkAriResourceOwner = "microsoft.teams", MicrosoftTeamsRemoteLinkAriResourceType = "remote-link";

// src/microsoft.teams/remote-link/manifest.ts
var microsoftTeamsRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftTeamsRemoteLinkAriResourceOwner,
  resourceType: MicrosoftTeamsRemoteLinkAriResourceType,
  resourceIdSlug: "teamId/{teamId}/channelId/{channelId}",
  resourceIdSegmentFormats: {
    teamId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    channelId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.teams/remote-link/index.ts
var MicrosoftTeamsRemoteLinkAri = class _MicrosoftTeamsRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._teamId = opts.resourceIdSegmentValues.teamId, this._channelId = opts.resourceIdSegmentValues.channelId;
  }
  get teamId() {
    return this._teamId;
  }
  get channelId() {
    return this._channelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftTeamsRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: microsoftTeamsRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftTeamsRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: microsoftTeamsRemoteLinkAriStaticOpts.resourceType,
      resourceId: `teamId/${opts.teamId}/channelId/${opts.channelId}`,
      resourceIdSegmentValues: {
        teamId: opts.teamId,
        channelId: opts.channelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftTeamsRemoteLinkAriStaticOpts);
    return new _MicrosoftTeamsRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftTeamsRemoteLinkAriStaticOpts);
    return new _MicrosoftTeamsRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      teamId: this.teamId,
      channelId: this.channelId
    };
  }
};

// src/migration-report-center/report-request-proxy/types.ts
var MigrationReportCenterReportRequestProxyAriResourceOwner = "migration-report-center", MigrationReportCenterReportRequestProxyAriResourceType = "report-request-proxy";

// src/migration-report-center/report-request-proxy/manifest.ts
var migrationReportCenterReportRequestProxyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MigrationReportCenterReportRequestProxyAriResourceOwner,
  resourceType: MigrationReportCenterReportRequestProxyAriResourceType,
  resourceIdSlug: "{reportRequestProxyId}",
  resourceIdSegmentFormats: {
    reportRequestProxyId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/migration-report-center/report-request-proxy/index.ts
var MigrationReportCenterReportRequestProxyAri = class _MigrationReportCenterReportRequestProxyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._reportRequestProxyId = opts.resourceIdSegmentValues.reportRequestProxyId;
  }
  get reportRequestProxyId() {
    return this._reportRequestProxyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: migrationReportCenterReportRequestProxyAriStaticOpts.qualifier,
      platformQualifier: migrationReportCenterReportRequestProxyAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: migrationReportCenterReportRequestProxyAriStaticOpts.resourceOwner,
      resourceType: migrationReportCenterReportRequestProxyAriStaticOpts.resourceType,
      resourceId: `${opts.reportRequestProxyId}`,
      resourceIdSegmentValues: {
        reportRequestProxyId: opts.reportRequestProxyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, migrationReportCenterReportRequestProxyAriStaticOpts);
    return new _MigrationReportCenterReportRequestProxyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, migrationReportCenterReportRequestProxyAriStaticOpts);
    return new _MigrationReportCenterReportRequestProxyAri(opts);
  }
  getVariables() {
    return {
      reportRequestProxyId: this.reportRequestProxyId
    };
  }
};

// src/miro.miro/design/types.ts
var MiroMiroDesignAriResourceOwner = "miro.miro", MiroMiroDesignAriResourceType = "design";

// src/miro.miro/design/manifest.ts
var miroMiroDesignAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MiroMiroDesignAriResourceOwner,
  resourceType: MiroMiroDesignAriResourceType,
  resourceIdSlug: "board/{boardId}",
  resourceIdSegmentFormats: {
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/miro.miro/design/index.ts
var MiroMiroDesignAri = class _MiroMiroDesignAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: miroMiroDesignAriStaticOpts.qualifier,
      platformQualifier: miroMiroDesignAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: miroMiroDesignAriStaticOpts.resourceOwner,
      resourceType: miroMiroDesignAriStaticOpts.resourceType,
      resourceId: `board/${opts.boardId}`,
      resourceIdSegmentValues: {
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, miroMiroDesignAriStaticOpts);
    return new _MiroMiroDesignAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, miroMiroDesignAriStaticOpts);
    return new _MiroMiroDesignAri(opts);
  }
  getVariables() {
    return {
      boardId: this.boardId
    };
  }
};

// src/miro.miro/remote-link/types.ts
var MiroMiroRemoteLinkAriResourceOwner = "miro.miro", MiroMiroRemoteLinkAriResourceType = "remote-link";

// src/miro.miro/remote-link/manifest.ts
var miroMiroRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MiroMiroRemoteLinkAriResourceOwner,
  resourceType: MiroMiroRemoteLinkAriResourceType,
  resourceIdSlug: "board/{boardId}",
  resourceIdSegmentFormats: {
    boardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/miro.miro/remote-link/index.ts
var MiroMiroRemoteLinkAri = class _MiroMiroRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: miroMiroRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: miroMiroRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: miroMiroRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: miroMiroRemoteLinkAriStaticOpts.resourceType,
      resourceId: `board/${opts.boardId}`,
      resourceIdSegmentValues: {
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, miroMiroRemoteLinkAriStaticOpts);
    return new _MiroMiroRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, miroMiroRemoteLinkAriStaticOpts);
    return new _MiroMiroRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      boardId: this.boardId
    };
  }
};

// src/ml-registry/artifact/types.ts
var MlRegistryArtifactAriResourceOwner = "ml-registry", MlRegistryArtifactAriResourceType = "artifact";

// src/ml-registry/artifact/manifest.ts
var mlRegistryArtifactAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MlRegistryArtifactAriResourceOwner,
  resourceType: MlRegistryArtifactAriResourceType,
  resourceIdSlug: "{artifactId}",
  resourceIdSegmentFormats: {
    artifactId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/ml-registry/artifact/index.ts
var MlRegistryArtifactAri = class _MlRegistryArtifactAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._artifactId = opts.resourceIdSegmentValues.artifactId;
  }
  get artifactId() {
    return this._artifactId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mlRegistryArtifactAriStaticOpts.qualifier,
      platformQualifier: mlRegistryArtifactAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mlRegistryArtifactAriStaticOpts.resourceOwner,
      resourceType: mlRegistryArtifactAriStaticOpts.resourceType,
      resourceId: `${opts.artifactId}`,
      resourceIdSegmentValues: {
        artifactId: opts.artifactId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mlRegistryArtifactAriStaticOpts);
    return new _MlRegistryArtifactAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mlRegistryArtifactAriStaticOpts);
    return new _MlRegistryArtifactAri(opts);
  }
  getVariables() {
    return {
      artifactId: this.artifactId
    };
  }
};

// src/monday.monday/document/types.ts
var MondayMondayDocumentAriResourceOwner = "monday.monday", MondayMondayDocumentAriResourceType = "document";

// src/monday.monday/document/manifest.ts
var mondayMondayDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MondayMondayDocumentAriResourceOwner,
  resourceType: MondayMondayDocumentAriResourceType,
  resourceIdSlug: "board/{boardId}",
  resourceIdSegmentFormats: {
    boardId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/monday.monday/document/index.ts
var MondayMondayDocumentAri = class _MondayMondayDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mondayMondayDocumentAriStaticOpts.qualifier,
      platformQualifier: mondayMondayDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: mondayMondayDocumentAriStaticOpts.resourceOwner,
      resourceType: mondayMondayDocumentAriStaticOpts.resourceType,
      resourceId: `board/${opts.boardId}`,
      resourceIdSegmentValues: {
        boardId: opts.boardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mondayMondayDocumentAriStaticOpts);
    return new _MondayMondayDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mondayMondayDocumentAriStaticOpts);
    return new _MondayMondayDocumentAri(opts);
  }
  getVariables() {
    return {
      boardId: this.boardId
    };
  }
};

// src/mural.mural/remote-link/types.ts
var MuralMuralRemoteLinkAriResourceOwner = "mural.mural", MuralMuralRemoteLinkAriResourceType = "remote-link";

// src/mural.mural/remote-link/manifest.ts
var muralMuralRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MuralMuralRemoteLinkAriResourceOwner,
  resourceType: MuralMuralRemoteLinkAriResourceType,
  resourceIdSlug: "design/{designId}",
  resourceIdSegmentFormats: {
    designId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/mural.mural/remote-link/index.ts
var MuralMuralRemoteLinkAri = class _MuralMuralRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._designId = opts.resourceIdSegmentValues.designId;
  }
  get designId() {
    return this._designId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: muralMuralRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: muralMuralRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: muralMuralRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: muralMuralRemoteLinkAriStaticOpts.resourceType,
      resourceId: `design/${opts.designId}`,
      resourceIdSegmentValues: {
        designId: opts.designId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, muralMuralRemoteLinkAriStaticOpts);
    return new _MuralMuralRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, muralMuralRemoteLinkAriStaticOpts);
    return new _MuralMuralRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      designId: this.designId
    };
  }
};

// src/notion.notion/document/types.ts
var NotionNotionDocumentAriResourceOwner = "notion.notion", NotionNotionDocumentAriResourceType = "document";

// src/notion.notion/document/manifest.ts
var notionNotionDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: NotionNotionDocumentAriResourceOwner,
  resourceType: NotionNotionDocumentAriResourceType,
  resourceIdSlug: "page/{pageId}",
  resourceIdSegmentFormats: {
    pageId: /[a-z0-9-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/notion.notion/document/index.ts
var NotionNotionDocumentAri = class _NotionNotionDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pageId = opts.resourceIdSegmentValues.pageId;
  }
  get pageId() {
    return this._pageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: notionNotionDocumentAriStaticOpts.qualifier,
      platformQualifier: notionNotionDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: notionNotionDocumentAriStaticOpts.resourceOwner,
      resourceType: notionNotionDocumentAriStaticOpts.resourceType,
      resourceId: `page/${opts.pageId}`,
      resourceIdSegmentValues: {
        pageId: opts.pageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, notionNotionDocumentAriStaticOpts);
    return new _NotionNotionDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, notionNotionDocumentAriStaticOpts);
    return new _NotionNotionDocumentAri(opts);
  }
  getVariables() {
    return {
      pageId: this.pageId
    };
  }
};

// src/notion.notion/remote-link/types.ts
var NotionNotionRemoteLinkAriResourceOwner = "notion.notion", NotionNotionRemoteLinkAriResourceType = "remote-link";

// src/notion.notion/remote-link/manifest.ts
var notionNotionRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: NotionNotionRemoteLinkAriResourceOwner,
  resourceType: NotionNotionRemoteLinkAriResourceType,
  resourceIdSlug: "page/{pageId}",
  resourceIdSegmentFormats: {
    pageId: /[a-z0-9-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/notion.notion/remote-link/index.ts
var NotionNotionRemoteLinkAri = class _NotionNotionRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pageId = opts.resourceIdSegmentValues.pageId;
  }
  get pageId() {
    return this._pageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: notionNotionRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: notionNotionRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: notionNotionRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: notionNotionRemoteLinkAriStaticOpts.resourceType,
      resourceId: `page/${opts.pageId}`,
      resourceIdSegmentValues: {
        pageId: opts.pageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, notionNotionRemoteLinkAriStaticOpts);
    return new _NotionNotionRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, notionNotionRemoteLinkAriStaticOpts);
    return new _NotionNotionRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      pageId: this.pageId
    };
  }
};

// src/oauth/client/types.ts
var OauthClientAriResourceOwner = "oauth", OauthClientAriResourceType = "client";

// src/oauth/client/manifest.ts
var oauthClientAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OauthClientAriResourceOwner,
  resourceType: OauthClientAriResourceType,
  resourceIdSlug: "{clientId}",
  resourceIdSegmentFormats: {
    clientId: /[0-9a-zA-Z-_]{5,50}/
    // eslint-disable-line no-useless-escape
  }
};

// src/oauth/client/index.ts
var OauthClientAri = class _OauthClientAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._clientId = opts.resourceIdSegmentValues.clientId;
  }
  get clientId() {
    return this._clientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: oauthClientAriStaticOpts.qualifier,
      platformQualifier: oauthClientAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: oauthClientAriStaticOpts.resourceOwner,
      resourceType: oauthClientAriStaticOpts.resourceType,
      resourceId: `${opts.clientId}`,
      resourceIdSegmentValues: {
        clientId: opts.clientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, oauthClientAriStaticOpts);
    return new _OauthClientAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, oauthClientAriStaticOpts);
    return new _OauthClientAri(opts);
  }
  getVariables() {
    return {
      clientId: this.clientId
    };
  }
};

// src/opsgenie/account-login/types.ts
var OpsgenieAccountLoginAriResourceOwner = "opsgenie", OpsgenieAccountLoginAriResourceType = "account-login";

// src/opsgenie/account-login/manifest.ts
var opsgenieAccountLoginAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieAccountLoginAriResourceOwner,
  resourceType: OpsgenieAccountLoginAriResourceType,
  resourceIdSlug: "{workspaceId}/{accountLoginId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    accountLoginId: /[a-zA-Z0-9\-\:]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/account-login/index.ts
var OpsgenieAccountLoginAri = class _OpsgenieAccountLoginAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountLoginId = opts.resourceIdSegmentValues.accountLoginId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get accountLoginId() {
    return this._accountLoginId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAccountLoginAriStaticOpts.qualifier,
      platformQualifier: opsgenieAccountLoginAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAccountLoginAriStaticOpts.resourceOwner,
      resourceType: opsgenieAccountLoginAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.accountLoginId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        accountLoginId: opts.accountLoginId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountLoginAriStaticOpts);
    return new _OpsgenieAccountLoginAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAccountLoginAriStaticOpts);
    return new _OpsgenieAccountLoginAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      accountLoginId: this.accountLoginId
    };
  }
};

// src/opsgenie/account-settings/types.ts
var OpsgenieAccountSettingsAriResourceOwner = "opsgenie", OpsgenieAccountSettingsAriResourceType = "account-settings";

// src/opsgenie/account-settings/manifest.ts
var opsgenieAccountSettingsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieAccountSettingsAriResourceOwner,
  resourceType: OpsgenieAccountSettingsAriResourceType,
  resourceIdSlug: "{workspaceId}/{accountSettingsId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    accountSettingsId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/account-settings/index.ts
var OpsgenieAccountSettingsAri = class _OpsgenieAccountSettingsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountSettingsId = opts.resourceIdSegmentValues.accountSettingsId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get accountSettingsId() {
    return this._accountSettingsId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAccountSettingsAriStaticOpts.qualifier,
      platformQualifier: opsgenieAccountSettingsAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAccountSettingsAriStaticOpts.resourceOwner,
      resourceType: opsgenieAccountSettingsAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.accountSettingsId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        accountSettingsId: opts.accountSettingsId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountSettingsAriStaticOpts);
    return new _OpsgenieAccountSettingsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAccountSettingsAriStaticOpts);
    return new _OpsgenieAccountSettingsAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      accountSettingsId: this.accountSettingsId
    };
  }
};

// src/opsgenie/alert/types.ts
var OpsgenieAlertAriResourceOwner = "opsgenie", OpsgenieAlertAriResourceType = "alert";

// src/opsgenie/alert/manifest.ts
var opsgenieAlertAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieAlertAriResourceOwner,
  resourceType: OpsgenieAlertAriResourceType,
  resourceIdSlug: "{workspaceId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    alertId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/alert/index.ts
var OpsgenieAlertAri = class _OpsgenieAlertAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAlertAriStaticOpts.qualifier,
      platformQualifier: opsgenieAlertAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAlertAriStaticOpts.resourceOwner,
      resourceType: opsgenieAlertAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertAriStaticOpts);
    return new _OpsgenieAlertAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAlertAriStaticOpts);
    return new _OpsgenieAlertAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      alertId: this.alertId
    };
  }
};

// src/opsgenie/alert-recipient-link/types.ts
var OpsgenieAlertRecipientLinkAriResourceOwner = "opsgenie", OpsgenieAlertRecipientLinkAriResourceType = "alert-recipient-link";

// src/opsgenie/alert-recipient-link/manifest.ts
var opsgenieAlertRecipientLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieAlertRecipientLinkAriResourceOwner,
  resourceType: OpsgenieAlertRecipientLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{alertId}/{recipientType}/{recipientId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/,
    // eslint-disable-line no-useless-escape
    recipientType: /(?:user|team)/,
    // eslint-disable-line no-useless-escape
    recipientId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/alert-recipient-link/index.ts
var OpsgenieAlertRecipientLinkAri = class _OpsgenieAlertRecipientLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId, this._recipientType = opts.resourceIdSegmentValues.recipientType, this._recipientId = opts.resourceIdSegmentValues.recipientId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get alertId() {
    return this._alertId;
  }
  get recipientType() {
    return this._recipientType;
  }
  get recipientId() {
    return this._recipientId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieAlertRecipientLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieAlertRecipientLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieAlertRecipientLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieAlertRecipientLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.alertId}/${opts.recipientType}/${opts.recipientId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        alertId: opts.alertId,
        recipientType: opts.recipientType,
        recipientId: opts.recipientId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertRecipientLinkAriStaticOpts);
    return new _OpsgenieAlertRecipientLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieAlertRecipientLinkAriStaticOpts);
    return new _OpsgenieAlertRecipientLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      alertId: this.alertId,
      recipientType: this.recipientType,
      recipientId: this.recipientId
    };
  }
};

// src/opsgenie/api-request-metric/types.ts
var OpsgenieApiRequestMetricAriResourceOwner = "opsgenie", OpsgenieApiRequestMetricAriResourceType = "api-request-metric";

// src/opsgenie/api-request-metric/manifest.ts
var opsgenieApiRequestMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieApiRequestMetricAriResourceOwner,
  resourceType: OpsgenieApiRequestMetricAriResourceType,
  resourceIdSlug: "{workspaceId}/{apiRequestMetricId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    apiRequestMetricId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/api-request-metric/index.ts
var OpsgenieApiRequestMetricAri = class _OpsgenieApiRequestMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._apiRequestMetricId = opts.resourceIdSegmentValues.apiRequestMetricId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get apiRequestMetricId() {
    return this._apiRequestMetricId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieApiRequestMetricAriStaticOpts.qualifier,
      platformQualifier: opsgenieApiRequestMetricAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieApiRequestMetricAriStaticOpts.resourceOwner,
      resourceType: opsgenieApiRequestMetricAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.apiRequestMetricId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        apiRequestMetricId: opts.apiRequestMetricId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieApiRequestMetricAriStaticOpts);
    return new _OpsgenieApiRequestMetricAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      apiRequestMetricId: this.apiRequestMetricId
    };
  }
};

// src/opsgenie/call-routing/types.ts
var OpsgenieCallRoutingAriResourceOwner = "opsgenie", OpsgenieCallRoutingAriResourceType = "call-routing";

// src/opsgenie/call-routing/manifest.ts
var opsgenieCallRoutingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieCallRoutingAriResourceOwner,
  resourceType: OpsgenieCallRoutingAriResourceType,
  resourceIdSlug: "{workspaceId}/{callRoutingId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    callRoutingId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/call-routing/index.ts
var OpsgenieCallRoutingAri = class _OpsgenieCallRoutingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._callRoutingId = opts.resourceIdSegmentValues.callRoutingId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get callRoutingId() {
    return this._callRoutingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieCallRoutingAriStaticOpts.qualifier,
      platformQualifier: opsgenieCallRoutingAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieCallRoutingAriStaticOpts.resourceOwner,
      resourceType: opsgenieCallRoutingAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.callRoutingId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        callRoutingId: opts.callRoutingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCallRoutingAriStaticOpts);
    return new _OpsgenieCallRoutingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieCallRoutingAriStaticOpts);
    return new _OpsgenieCallRoutingAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      callRoutingId: this.callRoutingId
    };
  }
};

// src/opsgenie/custom-role/types.ts
var OpsgenieCustomRoleAriResourceOwner = "opsgenie", OpsgenieCustomRoleAriResourceType = "custom-role";

// src/opsgenie/custom-role/manifest.ts
var opsgenieCustomRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieCustomRoleAriResourceOwner,
  resourceType: OpsgenieCustomRoleAriResourceType,
  resourceIdSlug: "{workspaceId}/{opsgenieRoleType}/{customRoleId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    opsgenieRoleType: /(?:account|team|responder)/,
    // eslint-disable-line no-useless-escape
    customRoleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/custom-role/index.ts
var OpsgenieCustomRoleAri = class _OpsgenieCustomRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._opsgenieRoleType = opts.resourceIdSegmentValues.opsgenieRoleType, this._customRoleId = opts.resourceIdSegmentValues.customRoleId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get opsgenieRoleType() {
    return this._opsgenieRoleType;
  }
  get customRoleId() {
    return this._customRoleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieCustomRoleAriStaticOpts.qualifier,
      platformQualifier: opsgenieCustomRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieCustomRoleAriStaticOpts.resourceOwner,
      resourceType: opsgenieCustomRoleAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.opsgenieRoleType}/${opts.customRoleId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        opsgenieRoleType: opts.opsgenieRoleType,
        customRoleId: opts.customRoleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCustomRoleAriStaticOpts);
    return new _OpsgenieCustomRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieCustomRoleAriStaticOpts);
    return new _OpsgenieCustomRoleAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      opsgenieRoleType: this.opsgenieRoleType,
      customRoleId: this.customRoleId
    };
  }
};

// src/opsgenie/deployment/types.ts
var OpsgenieDeploymentAriResourceOwner = "opsgenie", OpsgenieDeploymentAriResourceType = "deployment";

// src/opsgenie/deployment/manifest.ts
var opsgenieDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieDeploymentAriResourceOwner,
  resourceType: OpsgenieDeploymentAriResourceType,
  resourceIdSlug: "{workspaceId}/{deploymentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/deployment/index.ts
var OpsgenieDeploymentAri = class _OpsgenieDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieDeploymentAriStaticOpts.qualifier,
      platformQualifier: opsgenieDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieDeploymentAriStaticOpts.resourceOwner,
      resourceType: opsgenieDeploymentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.deploymentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        deploymentId: opts.deploymentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentAriStaticOpts);
    return new _OpsgenieDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentAriStaticOpts);
    return new _OpsgenieDeploymentAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      deploymentId: this.deploymentId
    };
  }
};

// src/opsgenie/deployment-service-link/types.ts
var OpsgenieDeploymentServiceLinkAriResourceOwner = "opsgenie", OpsgenieDeploymentServiceLinkAriResourceType = "deployment-service-link";

// src/opsgenie/deployment-service-link/manifest.ts
var opsgenieDeploymentServiceLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieDeploymentServiceLinkAriResourceOwner,
  resourceType: OpsgenieDeploymentServiceLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{deploymentId}/{serviceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    deploymentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    serviceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/deployment-service-link/index.ts
var OpsgenieDeploymentServiceLinkAri = class _OpsgenieDeploymentServiceLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._serviceId = opts.resourceIdSegmentValues.serviceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get deploymentId() {
    return this._deploymentId;
  }
  get serviceId() {
    return this._serviceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieDeploymentServiceLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieDeploymentServiceLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieDeploymentServiceLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieDeploymentServiceLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.deploymentId}/${opts.serviceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        deploymentId: opts.deploymentId,
        serviceId: opts.serviceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentServiceLinkAriStaticOpts);
    return new _OpsgenieDeploymentServiceLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentServiceLinkAriStaticOpts);
    return new _OpsgenieDeploymentServiceLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      deploymentId: this.deploymentId,
      serviceId: this.serviceId
    };
  }
};

// src/opsgenie/escalation/types.ts
var OpsgenieEscalationAriResourceOwner = "opsgenie", OpsgenieEscalationAriResourceType = "escalation";

// src/opsgenie/escalation/manifest.ts
var opsgenieEscalationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieEscalationAriResourceOwner,
  resourceType: OpsgenieEscalationAriResourceType,
  resourceIdSlug: "{workspaceId}/{escalationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    escalationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/escalation/index.ts
var OpsgenieEscalationAri = class _OpsgenieEscalationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._escalationId = opts.resourceIdSegmentValues.escalationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get escalationId() {
    return this._escalationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieEscalationAriStaticOpts.qualifier,
      platformQualifier: opsgenieEscalationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieEscalationAriStaticOpts.resourceOwner,
      resourceType: opsgenieEscalationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.escalationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        escalationId: opts.escalationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEscalationAriStaticOpts);
    return new _OpsgenieEscalationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieEscalationAriStaticOpts);
    return new _OpsgenieEscalationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      escalationId: this.escalationId
    };
  }
};

// src/opsgenie/event/types.ts
var OpsgenieEventAriResourceOwner = "opsgenie", OpsgenieEventAriResourceType = "event";

// src/opsgenie/event/manifest.ts
var opsgenieEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieEventAriResourceOwner,
  resourceType: OpsgenieEventAriResourceType,
  resourceIdSlug: "{eventType}/workspace/{workspaceId}/event/{eventId}",
  resourceIdSegmentFormats: {
    eventType: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/event/index.ts
var OpsgenieEventAri = class _OpsgenieEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventType = opts.resourceIdSegmentValues.eventType, this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventType() {
    return this._eventType;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieEventAriStaticOpts.qualifier,
      platformQualifier: opsgenieEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieEventAriStaticOpts.resourceOwner,
      resourceType: opsgenieEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventType}/workspace/${opts.workspaceId}/event/${opts.eventId}`,
      resourceIdSegmentValues: {
        eventType: opts.eventType,
        workspaceId: opts.workspaceId,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieEventAriStaticOpts);
    return new _OpsgenieEventAri(opts);
  }
  getVariables() {
    return {
      eventType: this.eventType,
      workspaceId: this.workspaceId,
      eventId: this.eventId
    };
  }
};

// src/opsgenie/incident/types.ts
var OpsgenieIncidentAriResourceOwner = "opsgenie", OpsgenieIncidentAriResourceType = "incident";

// src/opsgenie/incident/manifest.ts
var opsgenieIncidentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieIncidentAriResourceOwner,
  resourceType: OpsgenieIncidentAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident/index.ts
var OpsgenieIncidentAri = class _OpsgenieIncidentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAriStaticOpts);
    return new _OpsgenieIncidentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAriStaticOpts);
    return new _OpsgenieIncidentAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentId: this.incidentId
    };
  }
};

// src/opsgenie/incident-alert-link/types.ts
var OpsgenieIncidentAlertLinkAriResourceOwner = "opsgenie", OpsgenieIncidentAlertLinkAriResourceType = "incident-alert-link";

// src/opsgenie/incident-alert-link/manifest.ts
var opsgenieIncidentAlertLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieIncidentAlertLinkAriResourceOwner,
  resourceType: OpsgenieIncidentAlertLinkAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentId}/{alertId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident-alert-link/index.ts
var OpsgenieIncidentAlertLinkAri = class _OpsgenieIncidentAlertLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._alertId = opts.resourceIdSegmentValues.alertId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentId() {
    return this._incidentId;
  }
  get alertId() {
    return this._alertId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentAlertLinkAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentAlertLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentAlertLinkAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentAlertLinkAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentId}/${opts.alertId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentId: opts.incidentId,
        alertId: opts.alertId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAlertLinkAriStaticOpts);
    return new _OpsgenieIncidentAlertLinkAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentId: this.incidentId,
      alertId: this.alertId
    };
  }
};

// src/opsgenie/incident-status-update/types.ts
var OpsgenieIncidentStatusUpdateAriResourceOwner = "opsgenie", OpsgenieIncidentStatusUpdateAriResourceType = "incident-status-update";

// src/opsgenie/incident-status-update/manifest.ts
var opsgenieIncidentStatusUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieIncidentStatusUpdateAriResourceOwner,
  resourceType: OpsgenieIncidentStatusUpdateAriResourceType,
  resourceIdSlug: "{workspaceId}/{incidentStatusUpdateId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incidentStatusUpdateId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incident-status-update/index.ts
var OpsgenieIncidentStatusUpdateAri = class _OpsgenieIncidentStatusUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentStatusUpdateId = opts.resourceIdSegmentValues.incidentStatusUpdateId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incidentStatusUpdateId() {
    return this._incidentStatusUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncidentStatusUpdateAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncidentStatusUpdateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncidentStatusUpdateAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncidentStatusUpdateAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incidentStatusUpdateId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incidentStatusUpdateId: opts.incidentStatusUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentStatusUpdateAriStaticOpts);
    return new _OpsgenieIncidentStatusUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncidentStatusUpdateAriStaticOpts);
    return new _OpsgenieIncidentStatusUpdateAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incidentStatusUpdateId: this.incidentStatusUpdateId
    };
  }
};

// src/opsgenie/incoming-call-history/types.ts
var OpsgenieIncomingCallHistoryAriResourceOwner = "opsgenie", OpsgenieIncomingCallHistoryAriResourceType = "incoming-call-history";

// src/opsgenie/incoming-call-history/manifest.ts
var opsgenieIncomingCallHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieIncomingCallHistoryAriResourceOwner,
  resourceType: OpsgenieIncomingCallHistoryAriResourceType,
  resourceIdSlug: "{workspaceId}/{incomingCallEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    incomingCallEventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/incoming-call-history/index.ts
var OpsgenieIncomingCallHistoryAri = class _OpsgenieIncomingCallHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingCallEventId = opts.resourceIdSegmentValues.incomingCallEventId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get incomingCallEventId() {
    return this._incomingCallEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIncomingCallHistoryAriStaticOpts.qualifier,
      platformQualifier: opsgenieIncomingCallHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIncomingCallHistoryAriStaticOpts.resourceOwner,
      resourceType: opsgenieIncomingCallHistoryAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.incomingCallEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        incomingCallEventId: opts.incomingCallEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIncomingCallHistoryAriStaticOpts);
    return new _OpsgenieIncomingCallHistoryAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      incomingCallEventId: this.incomingCallEventId
    };
  }
};

// src/opsgenie/integration/types.ts
var OpsgenieIntegrationAriResourceOwner = "opsgenie", OpsgenieIntegrationAriResourceType = "integration";

// src/opsgenie/integration/manifest.ts
var opsgenieIntegrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieIntegrationAriResourceOwner,
  resourceType: OpsgenieIntegrationAriResourceType,
  resourceIdSlug: "{workspaceId}/{integrationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    integrationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/integration/index.ts
var OpsgenieIntegrationAri = class _OpsgenieIntegrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._integrationId = opts.resourceIdSegmentValues.integrationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get integrationId() {
    return this._integrationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieIntegrationAriStaticOpts.qualifier,
      platformQualifier: opsgenieIntegrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieIntegrationAriStaticOpts.resourceOwner,
      resourceType: opsgenieIntegrationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.integrationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        integrationId: opts.integrationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieIntegrationAriStaticOpts);
    return new _OpsgenieIntegrationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      integrationId: this.integrationId
    };
  }
};

// src/opsgenie/notification/types.ts
var OpsgenieNotificationAriResourceOwner = "opsgenie", OpsgenieNotificationAriResourceType = "notification";

// src/opsgenie/notification/manifest.ts
var opsgenieNotificationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieNotificationAriResourceOwner,
  resourceType: OpsgenieNotificationAriResourceType,
  resourceIdSlug: "{workspaceId}/{notificationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    notificationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/notification/index.ts
var OpsgenieNotificationAri = class _OpsgenieNotificationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._notificationId = opts.resourceIdSegmentValues.notificationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get notificationId() {
    return this._notificationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieNotificationAriStaticOpts.qualifier,
      platformQualifier: opsgenieNotificationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieNotificationAriStaticOpts.resourceOwner,
      resourceType: opsgenieNotificationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.notificationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        notificationId: opts.notificationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieNotificationAriStaticOpts);
    return new _OpsgenieNotificationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieNotificationAriStaticOpts);
    return new _OpsgenieNotificationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      notificationId: this.notificationId
    };
  }
};

// src/opsgenie/role/types.ts
var OpsgenieRoleAriResourceOwner = "opsgenie", OpsgenieRoleAriResourceType = "role";

// src/opsgenie/role/manifest.ts
var opsgenieRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieRoleAriResourceOwner,
  resourceType: OpsgenieRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/role/index.ts
var OpsgenieRoleAri = class _OpsgenieRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieRoleAriStaticOpts.qualifier,
      platformQualifier: opsgenieRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieRoleAriStaticOpts.resourceOwner,
      resourceType: opsgenieRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieRoleAriStaticOpts);
    return new _OpsgenieRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieRoleAriStaticOpts);
    return new _OpsgenieRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/opsgenie/saved-search/types.ts
var OpsgenieSavedSearchAriResourceOwner = "opsgenie", OpsgenieSavedSearchAriResourceType = "saved-search";

// src/opsgenie/saved-search/manifest.ts
var opsgenieSavedSearchAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieSavedSearchAriResourceOwner,
  resourceType: OpsgenieSavedSearchAriResourceType,
  resourceIdSlug: "{workspaceId}/{savedSearchId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    savedSearchId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/saved-search/index.ts
var OpsgenieSavedSearchAri = class _OpsgenieSavedSearchAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._savedSearchId = opts.resourceIdSegmentValues.savedSearchId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get savedSearchId() {
    return this._savedSearchId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieSavedSearchAriStaticOpts.qualifier,
      platformQualifier: opsgenieSavedSearchAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieSavedSearchAriStaticOpts.resourceOwner,
      resourceType: opsgenieSavedSearchAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.savedSearchId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        savedSearchId: opts.savedSearchId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieSavedSearchAriStaticOpts);
    return new _OpsgenieSavedSearchAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieSavedSearchAriStaticOpts);
    return new _OpsgenieSavedSearchAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      savedSearchId: this.savedSearchId
    };
  }
};

// src/opsgenie/schedule/types.ts
var OpsgenieScheduleAriResourceOwner = "opsgenie", OpsgenieScheduleAriResourceType = "schedule";

// src/opsgenie/schedule/manifest.ts
var opsgenieScheduleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieScheduleAriResourceOwner,
  resourceType: OpsgenieScheduleAriResourceType,
  resourceIdSlug: "{workspaceId}/{scheduleId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scheduleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/schedule/index.ts
var OpsgenieScheduleAri = class _OpsgenieScheduleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleId = opts.resourceIdSegmentValues.scheduleId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scheduleId() {
    return this._scheduleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieScheduleAriStaticOpts.qualifier,
      platformQualifier: opsgenieScheduleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieScheduleAriStaticOpts.resourceOwner,
      resourceType: opsgenieScheduleAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scheduleId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scheduleId: opts.scheduleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleAriStaticOpts);
    return new _OpsgenieScheduleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieScheduleAriStaticOpts);
    return new _OpsgenieScheduleAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      scheduleId: this.scheduleId
    };
  }
};

// src/opsgenie/schedule-rotation/types.ts
var OpsgenieScheduleRotationAriResourceOwner = "opsgenie", OpsgenieScheduleRotationAriResourceType = "schedule-rotation";

// src/opsgenie/schedule-rotation/manifest.ts
var opsgenieScheduleRotationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieScheduleRotationAriResourceOwner,
  resourceType: OpsgenieScheduleRotationAriResourceType,
  resourceIdSlug: "{workspaceId}/{scheduleRotationId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scheduleRotationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/schedule-rotation/index.ts
var OpsgenieScheduleRotationAri = class _OpsgenieScheduleRotationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleRotationId = opts.resourceIdSegmentValues.scheduleRotationId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get scheduleRotationId() {
    return this._scheduleRotationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieScheduleRotationAriStaticOpts.qualifier,
      platformQualifier: opsgenieScheduleRotationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieScheduleRotationAriStaticOpts.resourceOwner,
      resourceType: opsgenieScheduleRotationAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.scheduleRotationId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        scheduleRotationId: opts.scheduleRotationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieScheduleRotationAriStaticOpts);
    return new _OpsgenieScheduleRotationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      scheduleRotationId: this.scheduleRotationId
    };
  }
};

// src/opsgenie/site/types.ts
var OpsgenieSiteAriResourceOwner = "opsgenie", OpsgenieSiteAriResourceType = "site";

// src/opsgenie/site/manifest.ts
var opsgenieSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieSiteAriResourceOwner,
  resourceType: OpsgenieSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/site/index.ts
var OpsgenieSiteAri = class _OpsgenieSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieSiteAriStaticOpts.qualifier,
      platformQualifier: opsgenieSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieSiteAriStaticOpts.resourceOwner,
      resourceType: opsgenieSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieSiteAriStaticOpts);
    return new _OpsgenieSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieSiteAriStaticOpts);
    return new _OpsgenieSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/opsgenie/team/types.ts
var OpsgenieTeamAriResourceOwner = "opsgenie", OpsgenieTeamAriResourceType = "team";

// src/opsgenie/team/manifest.ts
var opsgenieTeamAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieTeamAriResourceOwner,
  resourceType: OpsgenieTeamAriResourceType,
  resourceIdSlug: "{opsgenieTeamId}",
  resourceIdSegmentFormats: {
    opsgenieTeamId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/team/index.ts
var OpsgenieTeamAri = class _OpsgenieTeamAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._opsgenieTeamId = opts.resourceIdSegmentValues.opsgenieTeamId;
  }
  get siteId() {
    return this._siteId;
  }
  get opsgenieTeamId() {
    return this._opsgenieTeamId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieTeamAriStaticOpts.qualifier,
      platformQualifier: opsgenieTeamAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: opsgenieTeamAriStaticOpts.resourceOwner,
      resourceType: opsgenieTeamAriStaticOpts.resourceType,
      resourceId: `${opts.opsgenieTeamId}`,
      resourceIdSegmentValues: {
        opsgenieTeamId: opts.opsgenieTeamId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTeamAriStaticOpts);
    return new _OpsgenieTeamAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieTeamAriStaticOpts);
    return new _OpsgenieTeamAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      opsgenieTeamId: this.opsgenieTeamId
    };
  }
};

// src/opsgenie/team-member/types.ts
var OpsgenieTeamMemberAriResourceOwner = "opsgenie", OpsgenieTeamMemberAriResourceType = "team-member";

// src/opsgenie/team-member/manifest.ts
var opsgenieTeamMemberAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieTeamMemberAriResourceOwner,
  resourceType: OpsgenieTeamMemberAriResourceType,
  resourceIdSlug: "{workspaceId}/{teamId}/{accountId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    teamId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    accountId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/team-member/index.ts
var OpsgenieTeamMemberAri = class _OpsgenieTeamMemberAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._teamId = opts.resourceIdSegmentValues.teamId, this._accountId = opts.resourceIdSegmentValues.accountId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get teamId() {
    return this._teamId;
  }
  get accountId() {
    return this._accountId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieTeamMemberAriStaticOpts.qualifier,
      platformQualifier: opsgenieTeamMemberAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieTeamMemberAriStaticOpts.resourceOwner,
      resourceType: opsgenieTeamMemberAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.teamId}/${opts.accountId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        teamId: opts.teamId,
        accountId: opts.accountId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTeamMemberAriStaticOpts);
    return new _OpsgenieTeamMemberAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieTeamMemberAriStaticOpts);
    return new _OpsgenieTeamMemberAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      teamId: this.teamId,
      accountId: this.accountId
    };
  }
};

// src/opsgenie/timeline/types.ts
var OpsgenieTimelineAriResourceOwner = "opsgenie", OpsgenieTimelineAriResourceType = "timeline";

// src/opsgenie/timeline/manifest.ts
var opsgenieTimelineAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieTimelineAriResourceOwner,
  resourceType: OpsgenieTimelineAriResourceType,
  resourceIdSlug: "{workspaceId}/{timelineEntryId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    timelineEntryId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/timeline/index.ts
var OpsgenieTimelineAri = class _OpsgenieTimelineAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._timelineEntryId = opts.resourceIdSegmentValues.timelineEntryId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get timelineEntryId() {
    return this._timelineEntryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieTimelineAriStaticOpts.qualifier,
      platformQualifier: opsgenieTimelineAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieTimelineAriStaticOpts.resourceOwner,
      resourceType: opsgenieTimelineAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.timelineEntryId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        timelineEntryId: opts.timelineEntryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTimelineAriStaticOpts);
    return new _OpsgenieTimelineAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieTimelineAriStaticOpts);
    return new _OpsgenieTimelineAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      timelineEntryId: this.timelineEntryId
    };
  }
};

// src/opsgenie/workspace/types.ts
var OpsgenieWorkspaceAriResourceOwner = "opsgenie", OpsgenieWorkspaceAriResourceType = "workspace";

// src/opsgenie/workspace/manifest.ts
var opsgenieWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OpsgenieWorkspaceAriResourceOwner,
  resourceType: OpsgenieWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/opsgenie/workspace/index.ts
var OpsgenieWorkspaceAri = class _OpsgenieWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: opsgenieWorkspaceAriStaticOpts.qualifier,
      platformQualifier: opsgenieWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: opsgenieWorkspaceAriStaticOpts.resourceOwner,
      resourceType: opsgenieWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieWorkspaceAriStaticOpts);
    return new _OpsgenieWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, opsgenieWorkspaceAriStaticOpts);
    return new _OpsgenieWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/org-policy/policy/types.ts
var OrgPolicyPolicyAriResourceOwner = "org-policy", OrgPolicyPolicyAriResourceType = "policy";

// src/org-policy/policy/manifest.ts
var orgPolicyPolicyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: OrgPolicyPolicyAriResourceOwner,
  resourceType: OrgPolicyPolicyAriResourceType,
  resourceIdSlug: "{policyId}",
  resourceIdSegmentFormats: {
    policyId: /(?:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}|org\/[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}\/policy\/[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/
    // eslint-disable-line no-useless-escape
  }
};

// src/org-policy/policy/index.ts
var OrgPolicyPolicyAri = class _OrgPolicyPolicyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._policyId = opts.resourceIdSegmentValues.policyId;
  }
  get policyId() {
    return this._policyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: orgPolicyPolicyAriStaticOpts.qualifier,
      platformQualifier: orgPolicyPolicyAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: orgPolicyPolicyAriStaticOpts.resourceOwner,
      resourceType: orgPolicyPolicyAriStaticOpts.resourceType,
      resourceId: `${opts.policyId}`,
      resourceIdSegmentValues: {
        policyId: opts.policyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, orgPolicyPolicyAriStaticOpts);
    return new _OrgPolicyPolicyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, orgPolicyPolicyAriStaticOpts);
    return new _OrgPolicyPolicyAri(opts);
  }
  getVariables() {
    return {
      policyId: this.policyId
    };
  }
};

// src/pagerduty.pagerduty/remote-link/types.ts
var PagerdutyPagerdutyRemoteLinkAriResourceOwner = "pagerduty.pagerduty", PagerdutyPagerdutyRemoteLinkAriResourceType = "remote-link";

// src/pagerduty.pagerduty/remote-link/manifest.ts
var pagerdutyPagerdutyRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PagerdutyPagerdutyRemoteLinkAriResourceOwner,
  resourceType: PagerdutyPagerdutyRemoteLinkAriResourceType,
  resourceIdSlug: "incident/{incidentId}",
  resourceIdSegmentFormats: {
    incidentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/pagerduty.pagerduty/remote-link/index.ts
var PagerdutyPagerdutyRemoteLinkAri = class _PagerdutyPagerdutyRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._incidentId = opts.resourceIdSegmentValues.incidentId;
  }
  get incidentId() {
    return this._incidentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pagerdutyPagerdutyRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: pagerdutyPagerdutyRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pagerdutyPagerdutyRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: pagerdutyPagerdutyRemoteLinkAriStaticOpts.resourceType,
      resourceId: `incident/${opts.incidentId}`,
      resourceIdSegmentValues: {
        incidentId: opts.incidentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pagerdutyPagerdutyRemoteLinkAriStaticOpts);
    return new _PagerdutyPagerdutyRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pagerdutyPagerdutyRemoteLinkAriStaticOpts);
    return new _PagerdutyPagerdutyRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      incidentId: this.incidentId
    };
  }
};

// src/papi/api/types.ts
var PapiApiAriResourceOwner = "papi", PapiApiAriResourceType = "api";

// src/papi/api/manifest.ts
var papiApiAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PapiApiAriResourceOwner,
  resourceType: PapiApiAriResourceType,
  resourceIdSlug: "catalog/{uuid}",
  resourceIdSegmentFormats: {
    uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/papi/api/index.ts
var PapiApiAri = class _PapiApiAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._uuid = opts.resourceIdSegmentValues.uuid;
  }
  get uuid() {
    return this._uuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: papiApiAriStaticOpts.qualifier,
      platformQualifier: papiApiAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: papiApiAriStaticOpts.resourceOwner,
      resourceType: papiApiAriStaticOpts.resourceType,
      resourceId: `catalog/${opts.uuid}`,
      resourceIdSegmentValues: {
        uuid: opts.uuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, papiApiAriStaticOpts);
    return new _PapiApiAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, papiApiAriStaticOpts);
    return new _PapiApiAri(opts);
  }
  getVariables() {
    return {
      uuid: this.uuid
    };
  }
};

// src/papi/role/types.ts
var PapiRoleAriResourceOwner = "papi", PapiRoleAriResourceType = "role";

// src/papi/role/manifest.ts
var papiRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PapiRoleAriResourceOwner,
  resourceType: PapiRoleAriResourceType,
  resourceIdSlug: "partner",
  resourceIdSegmentFormats: {}
};

// src/papi/role/index.ts
var PapiRoleAri = class _PapiRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: papiRoleAriStaticOpts.qualifier,
      platformQualifier: papiRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: papiRoleAriStaticOpts.resourceOwner,
      resourceType: papiRoleAriStaticOpts.resourceType,
      resourceId: "partner",
      resourceIdSegmentValues: {}
    }, ariOpts = AriParser.fromOpts(derivedOpts, papiRoleAriStaticOpts);
    return new _PapiRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, papiRoleAriStaticOpts);
    return new _PapiRoleAri(opts);
  }
  getVariables() {
    return {};
  }
};

// src/passionfruit/ask/types.ts
var PassionfruitAskAriResourceOwner = "passionfruit", PassionfruitAskAriResourceType = "ask";

// src/passionfruit/ask/manifest.ts
var passionfruitAskAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitAskAriResourceOwner,
  resourceType: PassionfruitAskAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{askId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    askId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/ask/index.ts
var PassionfruitAskAri = class _PassionfruitAskAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._askId = opts.resourceIdSegmentValues.askId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get askId() {
    return this._askId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitAskAriStaticOpts.qualifier,
      platformQualifier: passionfruitAskAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitAskAriStaticOpts.resourceOwner,
      resourceType: passionfruitAskAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.askId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        askId: opts.askId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitAskAriStaticOpts);
    return new _PassionfruitAskAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitAskAriStaticOpts);
    return new _PassionfruitAskAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      askId: this.askId
    };
  }
};

// src/passionfruit/ask-activity/types.ts
var PassionfruitAskActivityAriResourceOwner = "passionfruit", PassionfruitAskActivityAriResourceType = "ask-activity";

// src/passionfruit/ask-activity/manifest.ts
var passionfruitAskActivityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitAskActivityAriResourceOwner,
  resourceType: PassionfruitAskActivityAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{askId}/{askActivityId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    askId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    askActivityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/ask-activity/index.ts
var PassionfruitAskActivityAri = class _PassionfruitAskActivityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._askId = opts.resourceIdSegmentValues.askId, this._askActivityId = opts.resourceIdSegmentValues.askActivityId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get askId() {
    return this._askId;
  }
  get askActivityId() {
    return this._askActivityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitAskActivityAriStaticOpts.qualifier,
      platformQualifier: passionfruitAskActivityAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitAskActivityAriStaticOpts.resourceOwner,
      resourceType: passionfruitAskActivityAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.askId}/${opts.askActivityId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        askId: opts.askId,
        askActivityId: opts.askActivityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitAskActivityAriStaticOpts);
    return new _PassionfruitAskActivityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitAskActivityAriStaticOpts);
    return new _PassionfruitAskActivityAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      askId: this.askId,
      askActivityId: this.askActivityId
    };
  }
};

// src/passionfruit/ask-comment/types.ts
var PassionfruitAskCommentAriResourceOwner = "passionfruit", PassionfruitAskCommentAriResourceType = "ask-comment";

// src/passionfruit/ask-comment/manifest.ts
var passionfruitAskCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitAskCommentAriResourceOwner,
  resourceType: PassionfruitAskCommentAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{askId}/{commentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    askId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/ask-comment/index.ts
var PassionfruitAskCommentAri = class _PassionfruitAskCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._askId = opts.resourceIdSegmentValues.askId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get askId() {
    return this._askId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitAskCommentAriStaticOpts.qualifier,
      platformQualifier: passionfruitAskCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitAskCommentAriStaticOpts.resourceOwner,
      resourceType: passionfruitAskCommentAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.askId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        askId: opts.askId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitAskCommentAriStaticOpts);
    return new _PassionfruitAskCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitAskCommentAriStaticOpts);
    return new _PassionfruitAskCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      askId: this.askId,
      commentId: this.commentId
    };
  }
};

// src/passionfruit/ask-link/types.ts
var PassionfruitAskLinkAriResourceOwner = "passionfruit", PassionfruitAskLinkAriResourceType = "ask-link";

// src/passionfruit/ask-link/manifest.ts
var passionfruitAskLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitAskLinkAriResourceOwner,
  resourceType: PassionfruitAskLinkAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{askId}/{linkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    askId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    linkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/ask-link/index.ts
var PassionfruitAskLinkAri = class _PassionfruitAskLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._askId = opts.resourceIdSegmentValues.askId, this._linkId = opts.resourceIdSegmentValues.linkId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get askId() {
    return this._askId;
  }
  get linkId() {
    return this._linkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitAskLinkAriStaticOpts.qualifier,
      platformQualifier: passionfruitAskLinkAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitAskLinkAriStaticOpts.resourceOwner,
      resourceType: passionfruitAskLinkAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.askId}/${opts.linkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        askId: opts.askId,
        linkId: opts.linkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitAskLinkAriStaticOpts);
    return new _PassionfruitAskLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitAskLinkAriStaticOpts);
    return new _PassionfruitAskLinkAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      askId: this.askId,
      linkId: this.linkId
    };
  }
};

// src/passionfruit/ask-update/types.ts
var PassionfruitAskUpdateAriResourceOwner = "passionfruit", PassionfruitAskUpdateAriResourceType = "ask-update";

// src/passionfruit/ask-update/manifest.ts
var passionfruitAskUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitAskUpdateAriResourceOwner,
  resourceType: PassionfruitAskUpdateAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{askId}/{askUpdateId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    askId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    askUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/ask-update/index.ts
var PassionfruitAskUpdateAri = class _PassionfruitAskUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._askId = opts.resourceIdSegmentValues.askId, this._askUpdateId = opts.resourceIdSegmentValues.askUpdateId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get askId() {
    return this._askId;
  }
  get askUpdateId() {
    return this._askUpdateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitAskUpdateAriStaticOpts.qualifier,
      platformQualifier: passionfruitAskUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitAskUpdateAriStaticOpts.resourceOwner,
      resourceType: passionfruitAskUpdateAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.askId}/${opts.askUpdateId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        askId: opts.askId,
        askUpdateId: opts.askUpdateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitAskUpdateAriStaticOpts);
    return new _PassionfruitAskUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitAskUpdateAriStaticOpts);
    return new _PassionfruitAskUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      askId: this.askId,
      askUpdateId: this.askUpdateId
    };
  }
};

// src/passionfruit/dependency/types.ts
var PassionfruitDependencyAriResourceOwner = "passionfruit", PassionfruitDependencyAriResourceType = "dependency";

// src/passionfruit/dependency/manifest.ts
var passionfruitDependencyAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitDependencyAriResourceOwner,
  resourceType: PassionfruitDependencyAriResourceType,
  resourceIdSlug: "workspace/{activationId}/{dependencyId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dependencyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/dependency/index.ts
var PassionfruitDependencyAri = class _PassionfruitDependencyAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dependencyId = opts.resourceIdSegmentValues.dependencyId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dependencyId() {
    return this._dependencyId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitDependencyAriStaticOpts.qualifier,
      platformQualifier: passionfruitDependencyAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitDependencyAriStaticOpts.resourceOwner,
      resourceType: passionfruitDependencyAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.activationId}/${opts.dependencyId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dependencyId: opts.dependencyId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitDependencyAriStaticOpts);
    return new _PassionfruitDependencyAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitDependencyAriStaticOpts);
    return new _PassionfruitDependencyAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dependencyId: this.dependencyId
    };
  }
};

// src/passionfruit/role/types.ts
var PassionfruitRoleAriResourceOwner = "passionfruit", PassionfruitRoleAriResourceType = "role";

// src/passionfruit/role/manifest.ts
var passionfruitRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitRoleAriResourceOwner,
  resourceType: PassionfruitRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:admin|member|user-admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/role/index.ts
var PassionfruitRoleAri = class _PassionfruitRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitRoleAriStaticOpts.qualifier,
      platformQualifier: passionfruitRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: passionfruitRoleAriStaticOpts.resourceOwner,
      resourceType: passionfruitRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitRoleAriStaticOpts);
    return new _PassionfruitRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitRoleAriStaticOpts);
    return new _PassionfruitRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/passionfruit/site/types.ts
var PassionfruitSiteAriResourceOwner = "passionfruit", PassionfruitSiteAriResourceType = "site";

// src/passionfruit/site/manifest.ts
var passionfruitSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitSiteAriResourceOwner,
  resourceType: PassionfruitSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/site/index.ts
var PassionfruitSiteAri = class _PassionfruitSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitSiteAriStaticOpts.qualifier,
      platformQualifier: passionfruitSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: passionfruitSiteAriStaticOpts.resourceOwner,
      resourceType: passionfruitSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitSiteAriStaticOpts);
    return new _PassionfruitSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitSiteAriStaticOpts);
    return new _PassionfruitSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/passionfruit/workspace/types.ts
var PassionfruitWorkspaceAriResourceOwner = "passionfruit", PassionfruitWorkspaceAriResourceType = "workspace";

// src/passionfruit/workspace/manifest.ts
var passionfruitWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PassionfruitWorkspaceAriResourceOwner,
  resourceType: PassionfruitWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/passionfruit/workspace/index.ts
var PassionfruitWorkspaceAri = class _PassionfruitWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: passionfruitWorkspaceAriStaticOpts.qualifier,
      platformQualifier: passionfruitWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: passionfruitWorkspaceAriStaticOpts.resourceOwner,
      resourceType: passionfruitWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitWorkspaceAriStaticOpts);
    return new _PassionfruitWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, passionfruitWorkspaceAriStaticOpts);
    return new _PassionfruitWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/people-data/cost-center/types.ts
var PeopleDataCostCenterAriResourceOwner = "people-data", PeopleDataCostCenterAriResourceType = "cost-center";

// src/people-data/cost-center/manifest.ts
var peopleDataCostCenterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeopleDataCostCenterAriResourceOwner,
  resourceType: PeopleDataCostCenterAriResourceType,
  resourceIdSlug: "{costCenterId}",
  resourceIdSegmentFormats: {
    costCenterId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/cost-center/index.ts
var PeopleDataCostCenterAri = class _PeopleDataCostCenterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._costCenterId = opts.resourceIdSegmentValues.costCenterId;
  }
  get costCenterId() {
    return this._costCenterId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataCostCenterAriStaticOpts.qualifier,
      platformQualifier: peopleDataCostCenterAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataCostCenterAriStaticOpts.resourceOwner,
      resourceType: peopleDataCostCenterAriStaticOpts.resourceType,
      resourceId: `${opts.costCenterId}`,
      resourceIdSegmentValues: {
        costCenterId: opts.costCenterId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataCostCenterAriStaticOpts);
    return new _PeopleDataCostCenterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataCostCenterAriStaticOpts);
    return new _PeopleDataCostCenterAri(opts);
  }
  getVariables() {
    return {
      costCenterId: this.costCenterId
    };
  }
};

// src/people-data/job-profile/types.ts
var PeopleDataJobProfileAriResourceOwner = "people-data", PeopleDataJobProfileAriResourceType = "job-profile";

// src/people-data/job-profile/manifest.ts
var peopleDataJobProfileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeopleDataJobProfileAriResourceOwner,
  resourceType: PeopleDataJobProfileAriResourceType,
  resourceIdSlug: "{jobProfileId}",
  resourceIdSegmentFormats: {
    jobProfileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/job-profile/index.ts
var PeopleDataJobProfileAri = class _PeopleDataJobProfileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._jobProfileId = opts.resourceIdSegmentValues.jobProfileId;
  }
  get jobProfileId() {
    return this._jobProfileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataJobProfileAriStaticOpts.qualifier,
      platformQualifier: peopleDataJobProfileAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataJobProfileAriStaticOpts.resourceOwner,
      resourceType: peopleDataJobProfileAriStaticOpts.resourceType,
      resourceId: `${opts.jobProfileId}`,
      resourceIdSegmentValues: {
        jobProfileId: opts.jobProfileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataJobProfileAriStaticOpts);
    return new _PeopleDataJobProfileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataJobProfileAriStaticOpts);
    return new _PeopleDataJobProfileAri(opts);
  }
  getVariables() {
    return {
      jobProfileId: this.jobProfileId
    };
  }
};

// src/people-data/position/types.ts
var PeopleDataPositionAriResourceOwner = "people-data", PeopleDataPositionAriResourceType = "position";

// src/people-data/position/manifest.ts
var peopleDataPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeopleDataPositionAriResourceOwner,
  resourceType: PeopleDataPositionAriResourceType,
  resourceIdSlug: "{positionId}",
  resourceIdSegmentFormats: {
    positionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/position/index.ts
var PeopleDataPositionAri = class _PeopleDataPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._positionId = opts.resourceIdSegmentValues.positionId;
  }
  get positionId() {
    return this._positionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataPositionAriStaticOpts.qualifier,
      platformQualifier: peopleDataPositionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataPositionAriStaticOpts.resourceOwner,
      resourceType: peopleDataPositionAriStaticOpts.resourceType,
      resourceId: `${opts.positionId}`,
      resourceIdSegmentValues: {
        positionId: opts.positionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataPositionAriStaticOpts);
    return new _PeopleDataPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataPositionAriStaticOpts);
    return new _PeopleDataPositionAri(opts);
  }
  getVariables() {
    return {
      positionId: this.positionId
    };
  }
};

// src/people-data/supervisory-org/types.ts
var PeopleDataSupervisoryOrgAriResourceOwner = "people-data", PeopleDataSupervisoryOrgAriResourceType = "supervisory-org";

// src/people-data/supervisory-org/manifest.ts
var peopleDataSupervisoryOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeopleDataSupervisoryOrgAriResourceOwner,
  resourceType: PeopleDataSupervisoryOrgAriResourceType,
  resourceIdSlug: "{supervisoryOrgId}",
  resourceIdSegmentFormats: {
    supervisoryOrgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/supervisory-org/index.ts
var PeopleDataSupervisoryOrgAri = class _PeopleDataSupervisoryOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._supervisoryOrgId = opts.resourceIdSegmentValues.supervisoryOrgId;
  }
  get supervisoryOrgId() {
    return this._supervisoryOrgId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataSupervisoryOrgAriStaticOpts.qualifier,
      platformQualifier: peopleDataSupervisoryOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataSupervisoryOrgAriStaticOpts.resourceOwner,
      resourceType: peopleDataSupervisoryOrgAriStaticOpts.resourceType,
      resourceId: `${opts.supervisoryOrgId}`,
      resourceIdSegmentValues: {
        supervisoryOrgId: opts.supervisoryOrgId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataSupervisoryOrgAriStaticOpts);
    return new _PeopleDataSupervisoryOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataSupervisoryOrgAriStaticOpts);
    return new _PeopleDataSupervisoryOrgAri(opts);
  }
  getVariables() {
    return {
      supervisoryOrgId: this.supervisoryOrgId
    };
  }
};

// src/people-data/worker/types.ts
var PeopleDataWorkerAriResourceOwner = "people-data", PeopleDataWorkerAriResourceType = "worker";

// src/people-data/worker/manifest.ts
var peopleDataWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeopleDataWorkerAriResourceOwner,
  resourceType: PeopleDataWorkerAriResourceType,
  resourceIdSlug: "{workerId}",
  resourceIdSegmentFormats: {
    workerId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-data/worker/index.ts
var PeopleDataWorkerAri = class _PeopleDataWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workerId = opts.resourceIdSegmentValues.workerId;
  }
  get workerId() {
    return this._workerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peopleDataWorkerAriStaticOpts.qualifier,
      platformQualifier: peopleDataWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peopleDataWorkerAriStaticOpts.resourceOwner,
      resourceType: peopleDataWorkerAriStaticOpts.resourceType,
      resourceId: `${opts.workerId}`,
      resourceIdSegmentValues: {
        workerId: opts.workerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataWorkerAriStaticOpts);
    return new _PeopleDataWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peopleDataWorkerAriStaticOpts);
    return new _PeopleDataWorkerAri(opts);
  }
  getVariables() {
    return {
      workerId: this.workerId
    };
  }
};

// src/people-perftool/calibration/types.ts
var PeoplePerftoolCalibrationAriResourceOwner = "people-perftool", PeoplePerftoolCalibrationAriResourceType = "calibration";

// src/people-perftool/calibration/manifest.ts
var peoplePerftoolCalibrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeoplePerftoolCalibrationAriResourceOwner,
  resourceType: PeoplePerftoolCalibrationAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-perftool/calibration/index.ts
var PeoplePerftoolCalibrationAri = class _PeoplePerftoolCalibrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peoplePerftoolCalibrationAriStaticOpts.qualifier,
      platformQualifier: peoplePerftoolCalibrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peoplePerftoolCalibrationAriStaticOpts.resourceOwner,
      resourceType: peoplePerftoolCalibrationAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolCalibrationAriStaticOpts);
    return new _PeoplePerftoolCalibrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peoplePerftoolCalibrationAriStaticOpts);
    return new _PeoplePerftoolCalibrationAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

// src/people-perftool/feedback/types.ts
var PeoplePerftoolFeedbackAriResourceOwner = "people-perftool", PeoplePerftoolFeedbackAriResourceType = "feedback";

// src/people-perftool/feedback/manifest.ts
var peoplePerftoolFeedbackAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeoplePerftoolFeedbackAriResourceOwner,
  resourceType: PeoplePerftoolFeedbackAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-perftool/feedback/index.ts
var PeoplePerftoolFeedbackAri = class _PeoplePerftoolFeedbackAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peoplePerftoolFeedbackAriStaticOpts.qualifier,
      platformQualifier: peoplePerftoolFeedbackAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peoplePerftoolFeedbackAriStaticOpts.resourceOwner,
      resourceType: peoplePerftoolFeedbackAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolFeedbackAriStaticOpts);
    return new _PeoplePerftoolFeedbackAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peoplePerftoolFeedbackAriStaticOpts);
    return new _PeoplePerftoolFeedbackAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

// src/people-perftool/performance/types.ts
var PeoplePerftoolPerformanceAriResourceOwner = "people-perftool", PeoplePerftoolPerformanceAriResourceType = "performance";

// src/people-perftool/performance/manifest.ts
var peoplePerftoolPerformanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeoplePerftoolPerformanceAriResourceOwner,
  resourceType: PeoplePerftoolPerformanceAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-perftool/performance/index.ts
var PeoplePerftoolPerformanceAri = class _PeoplePerftoolPerformanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peoplePerftoolPerformanceAriStaticOpts.qualifier,
      platformQualifier: peoplePerftoolPerformanceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peoplePerftoolPerformanceAriStaticOpts.resourceOwner,
      resourceType: peoplePerftoolPerformanceAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolPerformanceAriStaticOpts);
    return new _PeoplePerftoolPerformanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peoplePerftoolPerformanceAriStaticOpts);
    return new _PeoplePerftoolPerformanceAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

// src/pipedrive.pipedrive/remote-link/types.ts
var PipedrivePipedriveRemoteLinkAriResourceOwner = "pipedrive.pipedrive", PipedrivePipedriveRemoteLinkAriResourceType = "remote-link";

// src/pipedrive.pipedrive/remote-link/manifest.ts
var pipedrivePipedriveRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PipedrivePipedriveRemoteLinkAriResourceOwner,
  resourceType: PipedrivePipedriveRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/deal/{dealId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    dealId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/pipedrive.pipedrive/remote-link/index.ts
var PipedrivePipedriveRemoteLinkAri = class _PipedrivePipedriveRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._dealId = opts.resourceIdSegmentValues.dealId;
  }
  get orgId() {
    return this._orgId;
  }
  get dealId() {
    return this._dealId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pipedrivePipedriveRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: pipedrivePipedriveRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pipedrivePipedriveRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: pipedrivePipedriveRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/deal/${opts.dealId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        dealId: opts.dealId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pipedrivePipedriveRemoteLinkAriStaticOpts);
    return new _PipedrivePipedriveRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pipedrivePipedriveRemoteLinkAriStaticOpts);
    return new _PipedrivePipedriveRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      dealId: this.dealId
    };
  }
};

// src/platform/classification-tag/types.ts
var PlatformClassificationTagAriResourceOwner = "platform", PlatformClassificationTagAriResourceType = "classification-tag";

// src/platform/classification-tag/manifest.ts
var platformClassificationTagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformClassificationTagAriResourceOwner,
  resourceType: PlatformClassificationTagAriResourceType,
  resourceIdSlug: "{tagId}",
  resourceIdSegmentFormats: {
    tagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/classification-tag/index.ts
var PlatformClassificationTagAri = class _PlatformClassificationTagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._tagId = opts.resourceIdSegmentValues.tagId;
  }
  get tagId() {
    return this._tagId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformClassificationTagAriStaticOpts.qualifier,
      platformQualifier: platformClassificationTagAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformClassificationTagAriStaticOpts.resourceOwner,
      resourceType: platformClassificationTagAriStaticOpts.resourceType,
      resourceId: `${opts.tagId}`,
      resourceIdSegmentValues: {
        tagId: opts.tagId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformClassificationTagAriStaticOpts);
    return new _PlatformClassificationTagAri(opts);
  }
  getVariables() {
    return {
      tagId: this.tagId
    };
  }
};

// src/platform/collaboration-context/types.ts
var PlatformCollaborationContextAriResourceOwner = "platform", PlatformCollaborationContextAriResourceType = "collaboration-context";

// src/platform/collaboration-context/manifest.ts
var platformCollaborationContextAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformCollaborationContextAriResourceOwner,
  resourceType: PlatformCollaborationContextAriResourceType,
  resourceIdSlug: "{collaborationContextId}",
  resourceIdSegmentFormats: {
    collaborationContextId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/collaboration-context/index.ts
var PlatformCollaborationContextAri = class _PlatformCollaborationContextAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._collaborationContextId = opts.resourceIdSegmentValues.collaborationContextId;
  }
  get collaborationContextId() {
    return this._collaborationContextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformCollaborationContextAriStaticOpts.qualifier,
      platformQualifier: platformCollaborationContextAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformCollaborationContextAriStaticOpts.resourceOwner,
      resourceType: platformCollaborationContextAriStaticOpts.resourceType,
      resourceId: `${opts.collaborationContextId}`,
      resourceIdSegmentValues: {
        collaborationContextId: opts.collaborationContextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformCollaborationContextAriStaticOpts);
    return new _PlatformCollaborationContextAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformCollaborationContextAriStaticOpts);
    return new _PlatformCollaborationContextAri(opts);
  }
  getVariables() {
    return {
      collaborationContextId: this.collaborationContextId
    };
  }
};

// src/platform/integration/types.ts
var PlatformIntegrationAriResourceOwner = "platform", PlatformIntegrationAriResourceType = "integration";

// src/platform/integration/manifest.ts
var platformIntegrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformIntegrationAriResourceOwner,
  resourceType: PlatformIntegrationAriResourceType,
  resourceIdSlug: "{integrationKey}",
  resourceIdSegmentFormats: {
    integrationKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/integration/index.ts
var PlatformIntegrationAri = class _PlatformIntegrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._integrationKey = opts.resourceIdSegmentValues.integrationKey;
  }
  get integrationKey() {
    return this._integrationKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformIntegrationAriStaticOpts.qualifier,
      platformQualifier: platformIntegrationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformIntegrationAriStaticOpts.resourceOwner,
      resourceType: platformIntegrationAriStaticOpts.resourceType,
      resourceId: `${opts.integrationKey}`,
      resourceIdSegmentValues: {
        integrationKey: opts.integrationKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformIntegrationAriStaticOpts);
    return new _PlatformIntegrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformIntegrationAriStaticOpts);
    return new _PlatformIntegrationAri(opts);
  }
  getVariables() {
    return {
      integrationKey: this.integrationKey
    };
  }
};

// src/platform/lifecycle-resource/types.ts
var PlatformLifecycleResourceAriResourceOwner = "platform", PlatformLifecycleResourceAriResourceType = "lifecycle-resource";

// src/platform/lifecycle-resource/manifest.ts
var platformLifecycleResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformLifecycleResourceAriResourceOwner,
  resourceType: PlatformLifecycleResourceAriResourceType,
  resourceIdSlug: "{lifecycleResourceId}",
  resourceIdSegmentFormats: {
    lifecycleResourceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource/index.ts
var PlatformLifecycleResourceAri = class _PlatformLifecycleResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lifecycleResourceId = opts.resourceIdSegmentValues.lifecycleResourceId;
  }
  get lifecycleResourceId() {
    return this._lifecycleResourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourceAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourceAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourceAriStaticOpts.resourceType,
      resourceId: `${opts.lifecycleResourceId}`,
      resourceIdSegmentValues: {
        lifecycleResourceId: opts.lifecycleResourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourceAriStaticOpts);
    return new _PlatformLifecycleResourceAri(opts);
  }
  getVariables() {
    return {
      lifecycleResourceId: this.lifecycleResourceId
    };
  }
};

// src/platform/lifecycle-resource-package/types.ts
var PlatformLifecycleResourcePackageAriResourceOwner = "platform", PlatformLifecycleResourcePackageAriResourceType = "lifecycle-resource-package";

// src/platform/lifecycle-resource-package/manifest.ts
var platformLifecycleResourcePackageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformLifecycleResourcePackageAriResourceOwner,
  resourceType: PlatformLifecycleResourcePackageAriResourceType,
  resourceIdSlug: "{lifecycleResourcePackageId}",
  resourceIdSegmentFormats: {
    lifecycleResourcePackageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource-package/index.ts
var PlatformLifecycleResourcePackageAri = class _PlatformLifecycleResourcePackageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._lifecycleResourcePackageId = opts.resourceIdSegmentValues.lifecycleResourcePackageId;
  }
  get lifecycleResourcePackageId() {
    return this._lifecycleResourcePackageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourcePackageAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourcePackageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourcePackageAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourcePackageAriStaticOpts.resourceType,
      resourceId: `${opts.lifecycleResourcePackageId}`,
      resourceIdSegmentValues: {
        lifecycleResourcePackageId: opts.lifecycleResourcePackageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageAriStaticOpts);
    return new _PlatformLifecycleResourcePackageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageAriStaticOpts);
    return new _PlatformLifecycleResourcePackageAri(opts);
  }
  getVariables() {
    return {
      lifecycleResourcePackageId: this.lifecycleResourcePackageId
    };
  }
};

// src/platform/lifecycle-resource-package-type/types.ts
var PlatformLifecycleResourcePackageTypeAriResourceOwner = "platform", PlatformLifecycleResourcePackageTypeAriResourceType = "lifecycle-resource-package-type";

// src/platform/lifecycle-resource-package-type/manifest.ts
var platformLifecycleResourcePackageTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformLifecycleResourcePackageTypeAriResourceOwner,
  resourceType: PlatformLifecycleResourcePackageTypeAriResourceType,
  resourceIdSlug: "{resourcePackageTypeId}",
  resourceIdSegmentFormats: {
    resourcePackageTypeId: /[a-zA-Z.\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/lifecycle-resource-package-type/index.ts
var PlatformLifecycleResourcePackageTypeAri = class _PlatformLifecycleResourcePackageTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourcePackageTypeId = opts.resourceIdSegmentValues.resourcePackageTypeId;
  }
  get resourcePackageTypeId() {
    return this._resourcePackageTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformLifecycleResourcePackageTypeAriStaticOpts.qualifier,
      platformQualifier: platformLifecycleResourcePackageTypeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformLifecycleResourcePackageTypeAriStaticOpts.resourceOwner,
      resourceType: platformLifecycleResourcePackageTypeAriStaticOpts.resourceType,
      resourceId: `${opts.resourcePackageTypeId}`,
      resourceIdSegmentValues: {
        resourcePackageTypeId: opts.resourcePackageTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageTypeAriStaticOpts);
    return new _PlatformLifecycleResourcePackageTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageTypeAriStaticOpts);
    return new _PlatformLifecycleResourcePackageTypeAri(opts);
  }
  getVariables() {
    return {
      resourcePackageTypeId: this.resourcePackageTypeId
    };
  }
};

// src/platform/org/types.ts
var PlatformOrgAriResourceOwner = "platform", PlatformOrgAriResourceType = "org";

// src/platform/org/manifest.ts
var platformOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformOrgAriResourceOwner,
  resourceType: PlatformOrgAriResourceType,
  resourceIdSlug: "{orgId}",
  resourceIdSegmentFormats: {
    orgId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/org/index.ts
var PlatformOrgAri = class _PlatformOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId;
  }
  get orgId() {
    return this._orgId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformOrgAriStaticOpts.qualifier,
      platformQualifier: platformOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformOrgAriStaticOpts.resourceOwner,
      resourceType: platformOrgAriStaticOpts.resourceType,
      resourceId: `${opts.orgId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgAriStaticOpts);
    return new _PlatformOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformOrgAriStaticOpts);
    return new _PlatformOrgAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId
    };
  }
};

// src/platform/org-user/types.ts
var PlatformOrgUserAriResourceOwner = "platform", PlatformOrgUserAriResourceType = "org-user";

// src/platform/org-user/manifest.ts
var platformOrgUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformOrgUserAriResourceOwner,
  resourceType: PlatformOrgUserAriResourceType,
  resourceIdSlug: "{orgId}/{userId}",
  resourceIdSegmentFormats: {
    orgId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/org-user/index.ts
var PlatformOrgUserAri = class _PlatformOrgUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get orgId() {
    return this._orgId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformOrgUserAriStaticOpts.qualifier,
      platformQualifier: platformOrgUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformOrgUserAriStaticOpts.resourceOwner,
      resourceType: platformOrgUserAriStaticOpts.resourceType,
      resourceId: `${opts.orgId}/${opts.userId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformOrgUserAriStaticOpts);
    return new _PlatformOrgUserAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      userId: this.userId
    };
  }
};

// src/platform/product/types.ts
var PlatformProductAriResourceOwner = "platform", PlatformProductAriResourceType = "product";

// src/platform/product/manifest.ts
var platformProductAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformProductAriResourceOwner,
  resourceType: PlatformProductAriResourceType,
  resourceIdSlug: "{integrationKey}/{productKey}",
  resourceIdSegmentFormats: {
    integrationKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    productKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/product/index.ts
var PlatformProductAri = class _PlatformProductAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._integrationKey = opts.resourceIdSegmentValues.integrationKey, this._productKey = opts.resourceIdSegmentValues.productKey;
  }
  get integrationKey() {
    return this._integrationKey;
  }
  get productKey() {
    return this._productKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformProductAriStaticOpts.qualifier,
      platformQualifier: platformProductAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformProductAriStaticOpts.resourceOwner,
      resourceType: platformProductAriStaticOpts.resourceType,
      resourceId: `${opts.integrationKey}/${opts.productKey}`,
      resourceIdSegmentValues: {
        integrationKey: opts.integrationKey,
        productKey: opts.productKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformProductAriStaticOpts);
    return new _PlatformProductAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformProductAriStaticOpts);
    return new _PlatformProductAri(opts);
  }
  getVariables() {
    return {
      integrationKey: this.integrationKey,
      productKey: this.productKey
    };
  }
};

// src/platform/secure-tunnel/types.ts
var PlatformSecureTunnelAriResourceOwner = "platform", PlatformSecureTunnelAriResourceType = "secure-tunnel";

// src/platform/secure-tunnel/manifest.ts
var platformSecureTunnelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformSecureTunnelAriResourceOwner,
  resourceType: PlatformSecureTunnelAriResourceType,
  resourceIdSlug: "{secureTunnelId}",
  resourceIdSegmentFormats: {
    secureTunnelId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/secure-tunnel/index.ts
var PlatformSecureTunnelAri = class _PlatformSecureTunnelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._secureTunnelId = opts.resourceIdSegmentValues.secureTunnelId;
  }
  get secureTunnelId() {
    return this._secureTunnelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformSecureTunnelAriStaticOpts.qualifier,
      platformQualifier: platformSecureTunnelAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformSecureTunnelAriStaticOpts.resourceOwner,
      resourceType: platformSecureTunnelAriStaticOpts.resourceType,
      resourceId: `${opts.secureTunnelId}`,
      resourceIdSegmentValues: {
        secureTunnelId: opts.secureTunnelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSecureTunnelAriStaticOpts);
    return new _PlatformSecureTunnelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformSecureTunnelAriStaticOpts);
    return new _PlatformSecureTunnelAri(opts);
  }
  getVariables() {
    return {
      secureTunnelId: this.secureTunnelId
    };
  }
};

// src/platform/site/types.ts
var PlatformSiteAriResourceOwner = "platform", PlatformSiteAriResourceType = "site";

// src/platform/site/manifest.ts
var platformSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformSiteAriResourceOwner,
  resourceType: PlatformSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/site/index.ts
var PlatformSiteAri = class _PlatformSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformSiteAriStaticOpts.qualifier,
      platformQualifier: platformSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformSiteAriStaticOpts.resourceOwner,
      resourceType: platformSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSiteAriStaticOpts);
    return new _PlatformSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformSiteAriStaticOpts);
    return new _PlatformSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/platform/test-provisioning-entity/types.ts
var PlatformTestProvisioningEntityAriResourceOwner = "platform", PlatformTestProvisioningEntityAriResourceType = "test-provisioning-entity";

// src/platform/test-provisioning-entity/manifest.ts
var platformTestProvisioningEntityAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformTestProvisioningEntityAriResourceOwner,
  resourceType: PlatformTestProvisioningEntityAriResourceType,
  resourceIdSlug: "{testEntityId}",
  resourceIdSegmentFormats: {
    testEntityId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/test-provisioning-entity/index.ts
var PlatformTestProvisioningEntityAri = class _PlatformTestProvisioningEntityAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._testEntityId = opts.resourceIdSegmentValues.testEntityId;
  }
  get testEntityId() {
    return this._testEntityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformTestProvisioningEntityAriStaticOpts.qualifier,
      platformQualifier: platformTestProvisioningEntityAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformTestProvisioningEntityAriStaticOpts.resourceOwner,
      resourceType: platformTestProvisioningEntityAriStaticOpts.resourceType,
      resourceId: `${opts.testEntityId}`,
      resourceIdSegmentValues: {
        testEntityId: opts.testEntityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformTestProvisioningEntityAriStaticOpts);
    return new _PlatformTestProvisioningEntityAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformTestProvisioningEntityAriStaticOpts);
    return new _PlatformTestProvisioningEntityAri(opts);
  }
  getVariables() {
    return {
      testEntityId: this.testEntityId
    };
  }
};

// src/platform-services/streamhub-schema/types.ts
var PlatformServicesStreamhubSchemaAriResourceOwner = "platform-services", PlatformServicesStreamhubSchemaAriResourceType = "streamhub-schema";

// src/platform-services/streamhub-schema/manifest.ts
var platformServicesStreamhubSchemaAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformServicesStreamhubSchemaAriResourceOwner,
  resourceType: PlatformServicesStreamhubSchemaAriResourceType,
  resourceIdSlug: "{streamhubSchemaId}",
  resourceIdSegmentFormats: {
    streamhubSchemaId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform-services/streamhub-schema/index.ts
var PlatformServicesStreamhubSchemaAri = class _PlatformServicesStreamhubSchemaAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._streamhubSchemaId = opts.resourceIdSegmentValues.streamhubSchemaId;
  }
  get streamhubSchemaId() {
    return this._streamhubSchemaId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformServicesStreamhubSchemaAriStaticOpts.qualifier,
      platformQualifier: platformServicesStreamhubSchemaAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformServicesStreamhubSchemaAriStaticOpts.resourceOwner,
      resourceType: platformServicesStreamhubSchemaAriStaticOpts.resourceType,
      resourceId: `${opts.streamhubSchemaId}`,
      resourceIdSegmentValues: {
        streamhubSchemaId: opts.streamhubSchemaId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformServicesStreamhubSchemaAriStaticOpts);
    return new _PlatformServicesStreamhubSchemaAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformServicesStreamhubSchemaAriStaticOpts);
    return new _PlatformServicesStreamhubSchemaAri(opts);
  }
  getVariables() {
    return {
      streamhubSchemaId: this.streamhubSchemaId
    };
  }
};

// src/pollinator/check/types.ts
var PollinatorCheckAriResourceOwner = "pollinator", PollinatorCheckAriResourceType = "check";

// src/pollinator/check/manifest.ts
var pollinatorCheckAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PollinatorCheckAriResourceOwner,
  resourceType: PollinatorCheckAriResourceType,
  resourceIdSlug: "{checkId}",
  resourceIdSegmentFormats: {
    checkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/pollinator/check/index.ts
var PollinatorCheckAri = class _PollinatorCheckAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._checkId = opts.resourceIdSegmentValues.checkId;
  }
  get checkId() {
    return this._checkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pollinatorCheckAriStaticOpts.qualifier,
      platformQualifier: pollinatorCheckAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pollinatorCheckAriStaticOpts.resourceOwner,
      resourceType: pollinatorCheckAriStaticOpts.resourceType,
      resourceId: `${opts.checkId}`,
      resourceIdSegmentValues: {
        checkId: opts.checkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pollinatorCheckAriStaticOpts);
    return new _PollinatorCheckAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pollinatorCheckAriStaticOpts);
    return new _PollinatorCheckAri(opts);
  }
  getVariables() {
    return {
      checkId: this.checkId
    };
  }
};

// src/post-office/message-instance/types.ts
var PostOfficeMessageInstanceAriResourceOwner = "post-office", PostOfficeMessageInstanceAriResourceType = "message-instance";

// src/post-office/message-instance/manifest.ts
var postOfficeMessageInstanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PostOfficeMessageInstanceAriResourceOwner,
  resourceType: PostOfficeMessageInstanceAriResourceType,
  resourceIdSlug: "{messageTemplateId}/{messageInstanceId}",
  resourceIdSegmentFormats: {
    messageTemplateId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    messageInstanceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/post-office/message-instance/index.ts
var PostOfficeMessageInstanceAri = class _PostOfficeMessageInstanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._messageTemplateId = opts.resourceIdSegmentValues.messageTemplateId, this._messageInstanceId = opts.resourceIdSegmentValues.messageInstanceId;
  }
  get messageTemplateId() {
    return this._messageTemplateId;
  }
  get messageInstanceId() {
    return this._messageInstanceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: postOfficeMessageInstanceAriStaticOpts.qualifier,
      platformQualifier: postOfficeMessageInstanceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: postOfficeMessageInstanceAriStaticOpts.resourceOwner,
      resourceType: postOfficeMessageInstanceAriStaticOpts.resourceType,
      resourceId: `${opts.messageTemplateId}/${opts.messageInstanceId}`,
      resourceIdSegmentValues: {
        messageTemplateId: opts.messageTemplateId,
        messageInstanceId: opts.messageInstanceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, postOfficeMessageInstanceAriStaticOpts);
    return new _PostOfficeMessageInstanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, postOfficeMessageInstanceAriStaticOpts);
    return new _PostOfficeMessageInstanceAri(opts);
  }
  getVariables() {
    return {
      messageTemplateId: this.messageTemplateId,
      messageInstanceId: this.messageInstanceId
    };
  }
};

// src/post-office/message-template/types.ts
var PostOfficeMessageTemplateAriResourceOwner = "post-office", PostOfficeMessageTemplateAriResourceType = "message-template";

// src/post-office/message-template/manifest.ts
var postOfficeMessageTemplateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PostOfficeMessageTemplateAriResourceOwner,
  resourceType: PostOfficeMessageTemplateAriResourceType,
  resourceIdSlug: "{messageTemplateId}",
  resourceIdSegmentFormats: {
    messageTemplateId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/post-office/message-template/index.ts
var PostOfficeMessageTemplateAri = class _PostOfficeMessageTemplateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._messageTemplateId = opts.resourceIdSegmentValues.messageTemplateId;
  }
  get messageTemplateId() {
    return this._messageTemplateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: postOfficeMessageTemplateAriStaticOpts.qualifier,
      platformQualifier: postOfficeMessageTemplateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: postOfficeMessageTemplateAriStaticOpts.resourceOwner,
      resourceType: postOfficeMessageTemplateAriStaticOpts.resourceType,
      resourceId: `${opts.messageTemplateId}`,
      resourceIdSegmentValues: {
        messageTemplateId: opts.messageTemplateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, postOfficeMessageTemplateAriStaticOpts);
    return new _PostOfficeMessageTemplateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, postOfficeMessageTemplateAriStaticOpts);
    return new _PostOfficeMessageTemplateAri(opts);
  }
  getVariables() {
    return {
      messageTemplateId: this.messageTemplateId
    };
  }
};

// src/post-office/trigger/types.ts
var PostOfficeTriggerAriResourceOwner = "post-office", PostOfficeTriggerAriResourceType = "trigger";

// src/post-office/trigger/manifest.ts
var postOfficeTriggerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PostOfficeTriggerAriResourceOwner,
  resourceType: PostOfficeTriggerAriResourceType,
  resourceIdSlug: "{messageTemplateId}/{messageIdempotencyKey}",
  resourceIdSegmentFormats: {
    messageTemplateId: /[a-z0-9-]{2,61}/,
    // eslint-disable-line no-useless-escape
    messageIdempotencyKey: /[a-zA-Z0-9_-]{8,64}/
    // eslint-disable-line no-useless-escape
  }
};

// src/post-office/trigger/index.ts
var PostOfficeTriggerAri = class _PostOfficeTriggerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._messageTemplateId = opts.resourceIdSegmentValues.messageTemplateId, this._messageIdempotencyKey = opts.resourceIdSegmentValues.messageIdempotencyKey;
  }
  get messageTemplateId() {
    return this._messageTemplateId;
  }
  get messageIdempotencyKey() {
    return this._messageIdempotencyKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: postOfficeTriggerAriStaticOpts.qualifier,
      platformQualifier: postOfficeTriggerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: postOfficeTriggerAriStaticOpts.resourceOwner,
      resourceType: postOfficeTriggerAriStaticOpts.resourceType,
      resourceId: `${opts.messageTemplateId}/${opts.messageIdempotencyKey}`,
      resourceIdSegmentValues: {
        messageTemplateId: opts.messageTemplateId,
        messageIdempotencyKey: opts.messageIdempotencyKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, postOfficeTriggerAriStaticOpts);
    return new _PostOfficeTriggerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, postOfficeTriggerAriStaticOpts);
    return new _PostOfficeTriggerAri(opts);
  }
  getVariables() {
    return {
      messageTemplateId: this.messageTemplateId,
      messageIdempotencyKey: this.messageIdempotencyKey
    };
  }
};

// src/proforma/helpcenter-form/types.ts
var ProformaHelpcenterFormAriResourceOwner = "proforma", ProformaHelpcenterFormAriResourceType = "helpcenter-form";

// src/proforma/helpcenter-form/manifest.ts
var proformaHelpcenterFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProformaHelpcenterFormAriResourceOwner,
  resourceType: ProformaHelpcenterFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{formId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    formId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/proforma/helpcenter-form/index.ts
var ProformaHelpcenterFormAri = class _ProformaHelpcenterFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._formId = opts.resourceIdSegmentValues.formId;
  }
  get activationId() {
    return this._activationId;
  }
  get formId() {
    return this._formId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: proformaHelpcenterFormAriStaticOpts.qualifier,
      platformQualifier: proformaHelpcenterFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: proformaHelpcenterFormAriStaticOpts.resourceOwner,
      resourceType: proformaHelpcenterFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.formId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        formId: opts.formId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, proformaHelpcenterFormAriStaticOpts);
    return new _ProformaHelpcenterFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, proformaHelpcenterFormAriStaticOpts);
    return new _ProformaHelpcenterFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      formId: this.formId
    };
  }
};

// src/proforma/issue-form/types.ts
var ProformaIssueFormAriResourceOwner = "proforma", ProformaIssueFormAriResourceType = "issue-form";

// src/proforma/issue-form/manifest.ts
var proformaIssueFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProformaIssueFormAriResourceOwner,
  resourceType: ProformaIssueFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{formId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    formId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/proforma/issue-form/index.ts
var ProformaIssueFormAri = class _ProformaIssueFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._formId = opts.resourceIdSegmentValues.formId;
  }
  get activationId() {
    return this._activationId;
  }
  get formId() {
    return this._formId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: proformaIssueFormAriStaticOpts.qualifier,
      platformQualifier: proformaIssueFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: proformaIssueFormAriStaticOpts.resourceOwner,
      resourceType: proformaIssueFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.formId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        formId: opts.formId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, proformaIssueFormAriStaticOpts);
    return new _ProformaIssueFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, proformaIssueFormAriStaticOpts);
    return new _ProformaIssueFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      formId: this.formId
    };
  }
};

// src/proforma/project-form/types.ts
var ProformaProjectFormAriResourceOwner = "proforma", ProformaProjectFormAriResourceType = "project-form";

// src/proforma/project-form/manifest.ts
var proformaProjectFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProformaProjectFormAriResourceOwner,
  resourceType: ProformaProjectFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{formId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    formId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/proforma/project-form/index.ts
var ProformaProjectFormAri = class _ProformaProjectFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._formId = opts.resourceIdSegmentValues.formId;
  }
  get activationId() {
    return this._activationId;
  }
  get formId() {
    return this._formId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: proformaProjectFormAriStaticOpts.qualifier,
      platformQualifier: proformaProjectFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: proformaProjectFormAriStaticOpts.resourceOwner,
      resourceType: proformaProjectFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.formId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        formId: opts.formId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, proformaProjectFormAriStaticOpts);
    return new _ProformaProjectFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, proformaProjectFormAriStaticOpts);
    return new _ProformaProjectFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      formId: this.formId
    };
  }
};

// src/proforma/role/types.ts
var ProformaRoleAriResourceOwner = "proforma", ProformaRoleAriResourceType = "role";

// src/proforma/role/manifest.ts
var proformaRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProformaRoleAriResourceOwner,
  resourceType: ProformaRoleAriResourceType,
  resourceIdSlug: "form/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:responder|viewer)/
    // eslint-disable-line no-useless-escape
  }
};

// src/proforma/role/index.ts
var ProformaRoleAri = class _ProformaRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: proformaRoleAriStaticOpts.qualifier,
      platformQualifier: proformaRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: proformaRoleAriStaticOpts.resourceOwner,
      resourceType: proformaRoleAriStaticOpts.resourceType,
      resourceId: `form/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, proformaRoleAriStaticOpts);
    return new _ProformaRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, proformaRoleAriStaticOpts);
    return new _ProformaRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/project/site/types.ts
var ProjectSiteAriResourceOwner = "project", ProjectSiteAriResourceType = "site";

// src/project/site/manifest.ts
var projectSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProjectSiteAriResourceOwner,
  resourceType: ProjectSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/project/site/index.ts
var ProjectSiteAri = class _ProjectSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: projectSiteAriStaticOpts.qualifier,
      platformQualifier: projectSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: projectSiteAriStaticOpts.resourceOwner,
      resourceType: projectSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, projectSiteAriStaticOpts);
    return new _ProjectSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, projectSiteAriStaticOpts);
    return new _ProjectSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/project/workspace/types.ts
var ProjectWorkspaceAriResourceOwner = "project", ProjectWorkspaceAriResourceType = "workspace";

// src/project/workspace/manifest.ts
var projectWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ProjectWorkspaceAriResourceOwner,
  resourceType: ProjectWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/project/workspace/index.ts
var ProjectWorkspaceAri = class _ProjectWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: projectWorkspaceAriStaticOpts.qualifier,
      platformQualifier: projectWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: projectWorkspaceAriStaticOpts.resourceOwner,
      resourceType: projectWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, projectWorkspaceAriStaticOpts);
    return new _ProjectWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, projectWorkspaceAriStaticOpts);
    return new _ProjectWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/pure/permission/types.ts
var PurePermissionAriResourceOwner = "pure", PurePermissionAriResourceType = "permission";

// src/pure/permission/manifest.ts
var purePermissionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PurePermissionAriResourceOwner,
  resourceType: PurePermissionAriResourceType,
  resourceIdSlug: "{resourceIdParam}/{permissionId}",
  resourceIdSegmentFormats: {
    resourceIdParam: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    permissionId: /(?:read|write)/
    // eslint-disable-line no-useless-escape
  }
};

// src/pure/permission/index.ts
var PurePermissionAri = class _PurePermissionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceIdParam = opts.resourceIdSegmentValues.resourceIdParam, this._permissionId = opts.resourceIdSegmentValues.permissionId;
  }
  get resourceIdParam() {
    return this._resourceIdParam;
  }
  get permissionId() {
    return this._permissionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: purePermissionAriStaticOpts.qualifier,
      platformQualifier: purePermissionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: purePermissionAriStaticOpts.resourceOwner,
      resourceType: purePermissionAriStaticOpts.resourceType,
      resourceId: `${opts.resourceIdParam}/${opts.permissionId}`,
      resourceIdSegmentValues: {
        resourceIdParam: opts.resourceIdParam,
        permissionId: opts.permissionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, purePermissionAriStaticOpts);
    return new _PurePermissionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, purePermissionAriStaticOpts);
    return new _PurePermissionAri(opts);
  }
  getVariables() {
    return {
      resourceIdParam: this.resourceIdParam,
      permissionId: this.permissionId
    };
  }
};

// src/pure/resource/types.ts
var PureResourceAriResourceOwner = "pure", PureResourceAriResourceType = "resource";

// src/pure/resource/manifest.ts
var pureResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PureResourceAriResourceOwner,
  resourceType: PureResourceAriResourceType,
  resourceIdSlug: "{resourceIdParam}/{childResourceId}",
  resourceIdSegmentFormats: {
    resourceIdParam: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    childResourceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/pure/resource/index.ts
var PureResourceAri = class _PureResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceIdParam = opts.resourceIdSegmentValues.resourceIdParam, this._childResourceId = opts.resourceIdSegmentValues.childResourceId;
  }
  get resourceIdParam() {
    return this._resourceIdParam;
  }
  get childResourceId() {
    return this._childResourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pureResourceAriStaticOpts.qualifier,
      platformQualifier: pureResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pureResourceAriStaticOpts.resourceOwner,
      resourceType: pureResourceAriStaticOpts.resourceType,
      resourceId: `${opts.resourceIdParam}/${opts.childResourceId}`,
      resourceIdSegmentValues: {
        resourceIdParam: opts.resourceIdParam,
        childResourceId: opts.childResourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pureResourceAriStaticOpts);
    return new _PureResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pureResourceAriStaticOpts);
    return new _PureResourceAri(opts);
  }
  getVariables() {
    return {
      resourceIdParam: this.resourceIdParam,
      childResourceId: this.childResourceId
    };
  }
};

// src/pure/role/types.ts
var PureRoleAriResourceOwner = "pure", PureRoleAriResourceType = "role";

// src/pure/role/manifest.ts
var pureRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PureRoleAriResourceOwner,
  resourceType: PureRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /(?:partner-admin|partner-sales|partner-sales-rep|marketing|marketing-admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/pure/role/index.ts
var PureRoleAri = class _PureRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pureRoleAriStaticOpts.qualifier,
      platformQualifier: pureRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pureRoleAriStaticOpts.resourceOwner,
      resourceType: pureRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pureRoleAriStaticOpts);
    return new _PureRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pureRoleAriStaticOpts);
    return new _PureRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/radar/position/types.ts
var RadarPositionAriResourceOwner = "radar", RadarPositionAriResourceType = "position";

// src/radar/position/manifest.ts
var radarPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RadarPositionAriResourceOwner,
  resourceType: RadarPositionAriResourceType,
  resourceIdSlug: "{workspaceId}/{positionId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    positionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/radar/position/index.ts
var RadarPositionAri = class _RadarPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._positionId = opts.resourceIdSegmentValues.positionId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get positionId() {
    return this._positionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: radarPositionAriStaticOpts.qualifier,
      platformQualifier: radarPositionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: radarPositionAriStaticOpts.resourceOwner,
      resourceType: radarPositionAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.positionId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        positionId: opts.positionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, radarPositionAriStaticOpts);
    return new _RadarPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, radarPositionAriStaticOpts);
    return new _RadarPositionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      positionId: this.positionId
    };
  }
};

// src/radar/site/types.ts
var RadarSiteAriResourceOwner = "radar", RadarSiteAriResourceType = "site";

// src/radar/site/manifest.ts
var radarSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RadarSiteAriResourceOwner,
  resourceType: RadarSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/radar/site/index.ts
var RadarSiteAri = class _RadarSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: radarSiteAriStaticOpts.qualifier,
      platformQualifier: radarSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: radarSiteAriStaticOpts.resourceOwner,
      resourceType: radarSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, radarSiteAriStaticOpts);
    return new _RadarSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, radarSiteAriStaticOpts);
    return new _RadarSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/radar/worker/types.ts
var RadarWorkerAriResourceOwner = "radar", RadarWorkerAriResourceType = "worker";

// src/radar/worker/manifest.ts
var radarWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RadarWorkerAriResourceOwner,
  resourceType: RadarWorkerAriResourceType,
  resourceIdSlug: "{workspaceId}/{workerId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/radar/worker/index.ts
var RadarWorkerAri = class _RadarWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._workerId = opts.resourceIdSegmentValues.workerId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get workerId() {
    return this._workerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: radarWorkerAriStaticOpts.qualifier,
      platformQualifier: radarWorkerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: radarWorkerAriStaticOpts.resourceOwner,
      resourceType: radarWorkerAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.workerId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        workerId: opts.workerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, radarWorkerAriStaticOpts);
    return new _RadarWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, radarWorkerAriStaticOpts);
    return new _RadarWorkerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      workerId: this.workerId
    };
  }
};

// src/radar/workspace/types.ts
var RadarWorkspaceAriResourceOwner = "radar", RadarWorkspaceAriResourceType = "workspace";

// src/radar/workspace/manifest.ts
var radarWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RadarWorkspaceAriResourceOwner,
  resourceType: RadarWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/radar/workspace/index.ts
var RadarWorkspaceAri = class _RadarWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: radarWorkspaceAriStaticOpts.qualifier,
      platformQualifier: radarWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: radarWorkspaceAriStaticOpts.resourceOwner,
      resourceType: radarWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, radarWorkspaceAriStaticOpts);
    return new _RadarWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, radarWorkspaceAriStaticOpts);
    return new _RadarWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/rovo/agent/types.ts
var RovoAgentAriResourceOwner = "rovo", RovoAgentAriResourceType = "agent";

// src/rovo/agent/manifest.ts
var rovoAgentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoAgentAriResourceOwner,
  resourceType: RovoAgentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{agentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    agentId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/agent/index.ts
var RovoAgentAri = class _RovoAgentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._agentId = opts.resourceIdSegmentValues.agentId;
  }
  get activationId() {
    return this._activationId;
  }
  get agentId() {
    return this._agentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoAgentAriStaticOpts.qualifier,
      platformQualifier: rovoAgentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: rovoAgentAriStaticOpts.resourceOwner,
      resourceType: rovoAgentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.agentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        agentId: opts.agentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoAgentAriStaticOpts);
    return new _RovoAgentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoAgentAriStaticOpts);
    return new _RovoAgentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      agentId: this.agentId
    };
  }
};

// src/rovo/custom-action/types.ts
var RovoCustomActionAriResourceOwner = "rovo", RovoCustomActionAriResourceType = "custom-action";

// src/rovo/custom-action/manifest.ts
var rovoCustomActionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoCustomActionAriResourceOwner,
  resourceType: RovoCustomActionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{customActionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    customActionId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/custom-action/index.ts
var RovoCustomActionAri = class _RovoCustomActionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._customActionId = opts.resourceIdSegmentValues.customActionId;
  }
  get activationId() {
    return this._activationId;
  }
  get customActionId() {
    return this._customActionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoCustomActionAriStaticOpts.qualifier,
      platformQualifier: rovoCustomActionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: rovoCustomActionAriStaticOpts.resourceOwner,
      resourceType: rovoCustomActionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.customActionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        customActionId: opts.customActionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoCustomActionAriStaticOpts);
    return new _RovoCustomActionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoCustomActionAriStaticOpts);
    return new _RovoCustomActionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      customActionId: this.customActionId
    };
  }
};

// src/rovo/file/types.ts
var RovoFileAriResourceOwner = "rovo", RovoFileAriResourceType = "file";

// src/rovo/file/manifest.ts
var rovoFileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoFileAriResourceOwner,
  resourceType: RovoFileAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fileUploadId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fileUploadId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/file/index.ts
var RovoFileAri = class _RovoFileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fileUploadId = opts.resourceIdSegmentValues.fileUploadId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fileUploadId() {
    return this._fileUploadId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoFileAriStaticOpts.qualifier,
      platformQualifier: rovoFileAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: rovoFileAriStaticOpts.resourceOwner,
      resourceType: rovoFileAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fileUploadId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fileUploadId: opts.fileUploadId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoFileAriStaticOpts);
    return new _RovoFileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoFileAriStaticOpts);
    return new _RovoFileAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fileUploadId: this.fileUploadId
    };
  }
};

// src/rovo/message/types.ts
var RovoMessageAriResourceOwner = "rovo", RovoMessageAriResourceType = "message";

// src/rovo/message/manifest.ts
var rovoMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoMessageAriResourceOwner,
  resourceType: RovoMessageAriResourceType,
  resourceIdSlug: "activation/{activationId}/{uuid}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/message/index.ts
var RovoMessageAri = class _RovoMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._uuid = opts.resourceIdSegmentValues.uuid;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get uuid() {
    return this._uuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoMessageAriStaticOpts.qualifier,
      platformQualifier: rovoMessageAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: rovoMessageAriStaticOpts.resourceOwner,
      resourceType: rovoMessageAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.uuid}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        uuid: opts.uuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoMessageAriStaticOpts);
    return new _RovoMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoMessageAriStaticOpts);
    return new _RovoMessageAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      uuid: this.uuid
    };
  }
};

// src/rovo/scenario/types.ts
var RovoScenarioAriResourceOwner = "rovo", RovoScenarioAriResourceType = "scenario";

// src/rovo/scenario/manifest.ts
var rovoScenarioAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoScenarioAriResourceOwner,
  resourceType: RovoScenarioAriResourceType,
  resourceIdSlug: "activation/{activationId}/{scenarioId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    scenarioId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/scenario/index.ts
var RovoScenarioAri = class _RovoScenarioAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioId = opts.resourceIdSegmentValues.scenarioId;
  }
  get activationId() {
    return this._activationId;
  }
  get scenarioId() {
    return this._scenarioId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoScenarioAriStaticOpts.qualifier,
      platformQualifier: rovoScenarioAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: rovoScenarioAriStaticOpts.resourceOwner,
      resourceType: rovoScenarioAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.scenarioId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        scenarioId: opts.scenarioId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoScenarioAriStaticOpts);
    return new _RovoScenarioAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoScenarioAriStaticOpts);
    return new _RovoScenarioAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      scenarioId: this.scenarioId
    };
  }
};

// src/rovo/site/types.ts
var RovoSiteAriResourceOwner = "rovo", RovoSiteAriResourceType = "site";

// src/rovo/site/manifest.ts
var rovoSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoSiteAriResourceOwner,
  resourceType: RovoSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/site/index.ts
var RovoSiteAri = class _RovoSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoSiteAriStaticOpts.qualifier,
      platformQualifier: rovoSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: rovoSiteAriStaticOpts.resourceOwner,
      resourceType: rovoSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoSiteAriStaticOpts);
    return new _RovoSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoSiteAriStaticOpts);
    return new _RovoSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/rovo/workspace/types.ts
var RovoWorkspaceAriResourceOwner = "rovo", RovoWorkspaceAriResourceType = "workspace";

// src/rovo/workspace/manifest.ts
var rovoWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RovoWorkspaceAriResourceOwner,
  resourceType: RovoWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/rovo/workspace/index.ts
var RovoWorkspaceAri = class _RovoWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: rovoWorkspaceAriStaticOpts.qualifier,
      platformQualifier: rovoWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: rovoWorkspaceAriStaticOpts.resourceOwner,
      resourceType: rovoWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoWorkspaceAriStaticOpts);
    return new _RovoWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, rovoWorkspaceAriStaticOpts);
    return new _RovoWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/runtime-auth-client/role/types.ts
var RuntimeAuthClientRoleAriResourceOwner = "runtime-auth-client", RuntimeAuthClientRoleAriResourceType = "role";

// src/runtime-auth-client/role/manifest.ts
var runtimeAuthClientRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: RuntimeAuthClientRoleAriResourceOwner,
  resourceType: RuntimeAuthClientRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/runtime-auth-client/role/index.ts
var RuntimeAuthClientRoleAri = class _RuntimeAuthClientRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: runtimeAuthClientRoleAriStaticOpts.qualifier,
      platformQualifier: runtimeAuthClientRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: runtimeAuthClientRoleAriStaticOpts.resourceOwner,
      resourceType: runtimeAuthClientRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, runtimeAuthClientRoleAriStaticOpts);
    return new _RuntimeAuthClientRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, runtimeAuthClientRoleAriStaticOpts);
    return new _RuntimeAuthClientRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/salesforce.salesforce/customer-org/types.ts
var SalesforceSalesforceCustomerOrgAriResourceOwner = "salesforce.salesforce", SalesforceSalesforceCustomerOrgAriResourceType = "customer-org";

// src/salesforce.salesforce/customer-org/manifest.ts
var salesforceSalesforceCustomerOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SalesforceSalesforceCustomerOrgAriResourceOwner,
  resourceType: SalesforceSalesforceCustomerOrgAriResourceType,
  resourceIdSlug: "org/{instanceDomain}/account/{id}",
  resourceIdSegmentFormats: {
    instanceDomain: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/salesforce.salesforce/customer-org/index.ts
var SalesforceSalesforceCustomerOrgAri = class _SalesforceSalesforceCustomerOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._instanceDomain = opts.resourceIdSegmentValues.instanceDomain, this._id = opts.resourceIdSegmentValues.id;
  }
  get instanceDomain() {
    return this._instanceDomain;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: salesforceSalesforceCustomerOrgAriStaticOpts.qualifier,
      platformQualifier: salesforceSalesforceCustomerOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: salesforceSalesforceCustomerOrgAriStaticOpts.resourceOwner,
      resourceType: salesforceSalesforceCustomerOrgAriStaticOpts.resourceType,
      resourceId: `org/${opts.instanceDomain}/account/${opts.id}`,
      resourceIdSegmentValues: {
        instanceDomain: opts.instanceDomain,
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, salesforceSalesforceCustomerOrgAriStaticOpts);
    return new _SalesforceSalesforceCustomerOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, salesforceSalesforceCustomerOrgAriStaticOpts);
    return new _SalesforceSalesforceCustomerOrgAri(opts);
  }
  getVariables() {
    return {
      instanceDomain: this.instanceDomain,
      id: this.id
    };
  }
};

// src/salesforce.salesforce/deal/types.ts
var SalesforceSalesforceDealAriResourceOwner = "salesforce.salesforce", SalesforceSalesforceDealAriResourceType = "deal";

// src/salesforce.salesforce/deal/manifest.ts
var salesforceSalesforceDealAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SalesforceSalesforceDealAriResourceOwner,
  resourceType: SalesforceSalesforceDealAriResourceType,
  resourceIdSlug: "org/{instanceDomain}/opportunity/{id}",
  resourceIdSegmentFormats: {
    instanceDomain: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/salesforce.salesforce/deal/index.ts
var SalesforceSalesforceDealAri = class _SalesforceSalesforceDealAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._instanceDomain = opts.resourceIdSegmentValues.instanceDomain, this._id = opts.resourceIdSegmentValues.id;
  }
  get instanceDomain() {
    return this._instanceDomain;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: salesforceSalesforceDealAriStaticOpts.qualifier,
      platformQualifier: salesforceSalesforceDealAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: salesforceSalesforceDealAriStaticOpts.resourceOwner,
      resourceType: salesforceSalesforceDealAriStaticOpts.resourceType,
      resourceId: `org/${opts.instanceDomain}/opportunity/${opts.id}`,
      resourceIdSegmentValues: {
        instanceDomain: opts.instanceDomain,
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, salesforceSalesforceDealAriStaticOpts);
    return new _SalesforceSalesforceDealAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, salesforceSalesforceDealAriStaticOpts);
    return new _SalesforceSalesforceDealAri(opts);
  }
  getVariables() {
    return {
      instanceDomain: this.instanceDomain,
      id: this.id
    };
  }
};

// src/salesforce.salesforce/remote-link/types.ts
var SalesforceSalesforceRemoteLinkAriResourceOwner = "salesforce.salesforce", SalesforceSalesforceRemoteLinkAriResourceType = "remote-link";

// src/salesforce.salesforce/remote-link/manifest.ts
var salesforceSalesforceRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SalesforceSalesforceRemoteLinkAriResourceOwner,
  resourceType: SalesforceSalesforceRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/opportunity/{opportunityId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    opportunityId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/salesforce.salesforce/remote-link/index.ts
var SalesforceSalesforceRemoteLinkAri = class _SalesforceSalesforceRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._opportunityId = opts.resourceIdSegmentValues.opportunityId;
  }
  get orgId() {
    return this._orgId;
  }
  get opportunityId() {
    return this._opportunityId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: salesforceSalesforceRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: salesforceSalesforceRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: salesforceSalesforceRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: salesforceSalesforceRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/opportunity/${opts.opportunityId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        opportunityId: opts.opportunityId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, salesforceSalesforceRemoteLinkAriStaticOpts);
    return new _SalesforceSalesforceRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, salesforceSalesforceRemoteLinkAriStaticOpts);
    return new _SalesforceSalesforceRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      opportunityId: this.opportunityId
    };
  }
};

// src/sandbox-service/site/types.ts
var SandboxServiceSiteAriResourceOwner = "sandbox-service", SandboxServiceSiteAriResourceType = "site";

// src/sandbox-service/site/manifest.ts
var sandboxServiceSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SandboxServiceSiteAriResourceOwner,
  resourceType: SandboxServiceSiteAriResourceType,
  resourceIdSlug: "{cloudIdParam}",
  resourceIdSegmentFormats: {
    cloudIdParam: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/sandbox-service/site/index.ts
var SandboxServiceSiteAri = class _SandboxServiceSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._cloudIdParam = opts.resourceIdSegmentValues.cloudIdParam;
  }
  get cloudIdParam() {
    return this._cloudIdParam;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: sandboxServiceSiteAriStaticOpts.qualifier,
      platformQualifier: sandboxServiceSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: sandboxServiceSiteAriStaticOpts.resourceOwner,
      resourceType: sandboxServiceSiteAriStaticOpts.resourceType,
      resourceId: `${opts.cloudIdParam}`,
      resourceIdSegmentValues: {
        cloudIdParam: opts.cloudIdParam
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, sandboxServiceSiteAriStaticOpts);
    return new _SandboxServiceSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, sandboxServiceSiteAriStaticOpts);
    return new _SandboxServiceSiteAri(opts);
  }
  getVariables() {
    return {
      cloudIdParam: this.cloudIdParam
    };
  }
};

// src/search/event/types.ts
var SearchEventAriResourceOwner = "search", SearchEventAriResourceType = "event";

// src/search/event/manifest.ts
var searchEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SearchEventAriResourceOwner,
  resourceType: SearchEventAriResourceType,
  resourceIdSlug: "{eventType}/{eventId}",
  resourceIdSegmentFormats: {
    eventType: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    eventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/search/event/index.ts
var SearchEventAri = class _SearchEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventType = opts.resourceIdSegmentValues.eventType, this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventType() {
    return this._eventType;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: searchEventAriStaticOpts.qualifier,
      platformQualifier: searchEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: searchEventAriStaticOpts.resourceOwner,
      resourceType: searchEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventType}/${opts.eventId}`,
      resourceIdSegmentValues: {
        eventType: opts.eventType,
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, searchEventAriStaticOpts);
    return new _SearchEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, searchEventAriStaticOpts);
    return new _SearchEventAri(opts);
  }
  getVariables() {
    return {
      eventType: this.eventType,
      eventId: this.eventId
    };
  }
};

// src/search/forward-document/types.ts
var SearchForwardDocumentAriResourceOwner = "search", SearchForwardDocumentAriResourceType = "forward-document";

// src/search/forward-document/manifest.ts
var searchForwardDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SearchForwardDocumentAriResourceOwner,
  resourceType: SearchForwardDocumentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{documentType}/{documentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    documentType: /[a-zA-Z0-9\-_]+/,
    // eslint-disable-line no-useless-escape
    documentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/search/forward-document/index.ts
var SearchForwardDocumentAri = class _SearchForwardDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentType = opts.resourceIdSegmentValues.documentType, this._documentId = opts.resourceIdSegmentValues.documentId;
  }
  get activationId() {
    return this._activationId;
  }
  get documentType() {
    return this._documentType;
  }
  get documentId() {
    return this._documentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: searchForwardDocumentAriStaticOpts.qualifier,
      platformQualifier: searchForwardDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: searchForwardDocumentAriStaticOpts.resourceOwner,
      resourceType: searchForwardDocumentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.documentType}/${opts.documentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        documentType: opts.documentType,
        documentId: opts.documentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, searchForwardDocumentAriStaticOpts);
    return new _SearchForwardDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, searchForwardDocumentAriStaticOpts);
    return new _SearchForwardDocumentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      documentType: this.documentType,
      documentId: this.documentId
    };
  }
};

// src/search/forward-document-subscription/types.ts
var SearchForwardDocumentSubscriptionAriResourceOwner = "search", SearchForwardDocumentSubscriptionAriResourceType = "forward-document-subscription";

// src/search/forward-document-subscription/manifest.ts
var searchForwardDocumentSubscriptionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SearchForwardDocumentSubscriptionAriResourceOwner,
  resourceType: SearchForwardDocumentSubscriptionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{subscriptionType}/{subscriptionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    subscriptionType: /[a-zA-Z0-9\-_]+/,
    // eslint-disable-line no-useless-escape
    subscriptionId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/search/forward-document-subscription/index.ts
var SearchForwardDocumentSubscriptionAri = class _SearchForwardDocumentSubscriptionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._subscriptionType = opts.resourceIdSegmentValues.subscriptionType, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;
  }
  get activationId() {
    return this._activationId;
  }
  get subscriptionType() {
    return this._subscriptionType;
  }
  get subscriptionId() {
    return this._subscriptionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: searchForwardDocumentSubscriptionAriStaticOpts.qualifier,
      platformQualifier: searchForwardDocumentSubscriptionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: searchForwardDocumentSubscriptionAriStaticOpts.resourceOwner,
      resourceType: searchForwardDocumentSubscriptionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.subscriptionType}/${opts.subscriptionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        subscriptionType: opts.subscriptionType,
        subscriptionId: opts.subscriptionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, searchForwardDocumentSubscriptionAriStaticOpts);
    return new _SearchForwardDocumentSubscriptionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, searchForwardDocumentSubscriptionAriStaticOpts);
    return new _SearchForwardDocumentSubscriptionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      subscriptionType: this.subscriptionType,
      subscriptionId: this.subscriptionId
    };
  }
};

// src/search/permission-container/types.ts
var SearchPermissionContainerAriResourceOwner = "search", SearchPermissionContainerAriResourceType = "permission-container";

// src/search/permission-container/manifest.ts
var searchPermissionContainerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SearchPermissionContainerAriResourceOwner,
  resourceType: SearchPermissionContainerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{containerId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    containerId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/search/permission-container/index.ts
var SearchPermissionContainerAri = class _SearchPermissionContainerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._containerId = opts.resourceIdSegmentValues.containerId;
  }
  get activationId() {
    return this._activationId;
  }
  get containerId() {
    return this._containerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: searchPermissionContainerAriStaticOpts.qualifier,
      platformQualifier: searchPermissionContainerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: searchPermissionContainerAriStaticOpts.resourceOwner,
      resourceType: searchPermissionContainerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.containerId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        containerId: opts.containerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, searchPermissionContainerAriStaticOpts);
    return new _SearchPermissionContainerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, searchPermissionContainerAriStaticOpts);
    return new _SearchPermissionContainerAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      containerId: this.containerId
    };
  }
};

// src/sentry.sentry/remote-link/types.ts
var SentrySentryRemoteLinkAriResourceOwner = "sentry.sentry", SentrySentryRemoteLinkAriResourceType = "remote-link";

// src/sentry.sentry/remote-link/manifest.ts
var sentrySentryRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SentrySentryRemoteLinkAriResourceOwner,
  resourceType: SentrySentryRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/issue/{issueId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    issueId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/sentry.sentry/remote-link/index.ts
var SentrySentryRemoteLinkAri = class _SentrySentryRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._issueId = opts.resourceIdSegmentValues.issueId;
  }
  get orgId() {
    return this._orgId;
  }
  get issueId() {
    return this._issueId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: sentrySentryRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: sentrySentryRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: sentrySentryRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: sentrySentryRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/issue/${opts.issueId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        issueId: opts.issueId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, sentrySentryRemoteLinkAriStaticOpts);
    return new _SentrySentryRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, sentrySentryRemoteLinkAriStaticOpts);
    return new _SentrySentryRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      issueId: this.issueId
    };
  }
};

// src/servicenow.servicenow/work-item/types.ts
var ServicenowServicenowWorkItemAriResourceOwner = "servicenow.servicenow", ServicenowServicenowWorkItemAriResourceType = "work-item";

// src/servicenow.servicenow/work-item/manifest.ts
var servicenowServicenowWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ServicenowServicenowWorkItemAriResourceOwner,
  resourceType: ServicenowServicenowWorkItemAriResourceType,
  resourceIdSlug: "domain/{domain}/{type}/{id}",
  resourceIdSegmentFormats: {
    domain: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    type: /(?:incident|catalogrequest)/,
    // eslint-disable-line no-useless-escape
    id: /[0-9a-fA-F]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/servicenow.servicenow/work-item/index.ts
var ServicenowServicenowWorkItemAri = class _ServicenowServicenowWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domain = opts.resourceIdSegmentValues.domain, this._type = opts.resourceIdSegmentValues.type, this._id = opts.resourceIdSegmentValues.id;
  }
  get domain() {
    return this._domain;
  }
  get type() {
    return this._type;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: servicenowServicenowWorkItemAriStaticOpts.qualifier,
      platformQualifier: servicenowServicenowWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: servicenowServicenowWorkItemAriStaticOpts.resourceOwner,
      resourceType: servicenowServicenowWorkItemAriStaticOpts.resourceType,
      resourceId: `domain/${opts.domain}/${opts.type}/${opts.id}`,
      resourceIdSegmentValues: {
        domain: opts.domain || "",
        type: opts.type,
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, servicenowServicenowWorkItemAriStaticOpts);
    return new _ServicenowServicenowWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, servicenowServicenowWorkItemAriStaticOpts);
    return new _ServicenowServicenowWorkItemAri(opts);
  }
  getVariables() {
    return {
      domain: this.domain,
      type: this.type,
      id: this.id
    };
  }
};

// src/settings-service/settings/types.ts
var SettingsServiceSettingsAriResourceOwner = "settings-service", SettingsServiceSettingsAriResourceType = "settings";

// src/settings-service/settings/manifest.ts
var settingsServiceSettingsAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SettingsServiceSettingsAriResourceOwner,
  resourceType: SettingsServiceSettingsAriResourceType,
  resourceIdSlug: "{settingsId}",
  resourceIdSegmentFormats: {
    settingsId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/settings-service/settings/index.ts
var SettingsServiceSettingsAri = class _SettingsServiceSettingsAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._settingsId = opts.resourceIdSegmentValues.settingsId;
  }
  get settingsId() {
    return this._settingsId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: settingsServiceSettingsAriStaticOpts.qualifier,
      platformQualifier: settingsServiceSettingsAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: settingsServiceSettingsAriStaticOpts.resourceOwner,
      resourceType: settingsServiceSettingsAriStaticOpts.resourceType,
      resourceId: `${opts.settingsId}`,
      resourceIdSegmentValues: {
        settingsId: opts.settingsId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, settingsServiceSettingsAriStaticOpts);
    return new _SettingsServiceSettingsAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, settingsServiceSettingsAriStaticOpts);
    return new _SettingsServiceSettingsAri(opts);
  }
  getVariables() {
    return {
      settingsId: this.settingsId
    };
  }
};

// src/slack.slack/conversation/types.ts
var SlackSlackConversationAriResourceOwner = "slack.slack", SlackSlackConversationAriResourceType = "conversation";

// src/slack.slack/conversation/manifest.ts
var slackSlackConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SlackSlackConversationAriResourceOwner,
  resourceType: SlackSlackConversationAriResourceType,
  resourceIdSlug: "workspaceId/{workspaceId}/channelId/{channelId}",
  resourceIdSegmentFormats: {
    workspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    channelId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/slack.slack/conversation/index.ts
var SlackSlackConversationAri = class _SlackSlackConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._channelId = opts.resourceIdSegmentValues.channelId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get channelId() {
    return this._channelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: slackSlackConversationAriStaticOpts.qualifier,
      platformQualifier: slackSlackConversationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: slackSlackConversationAriStaticOpts.resourceOwner,
      resourceType: slackSlackConversationAriStaticOpts.resourceType,
      resourceId: `workspaceId/${opts.workspaceId}/channelId/${opts.channelId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        channelId: opts.channelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, slackSlackConversationAriStaticOpts);
    return new _SlackSlackConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, slackSlackConversationAriStaticOpts);
    return new _SlackSlackConversationAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      channelId: this.channelId
    };
  }
};

// src/slack.slack/message/types.ts
var SlackSlackMessageAriResourceOwner = "slack.slack", SlackSlackMessageAriResourceType = "message";

// src/slack.slack/message/manifest.ts
var slackSlackMessageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SlackSlackMessageAriResourceOwner,
  resourceType: SlackSlackMessageAriResourceType,
  resourceIdSlug: "workspaceId/{workspaceId}/channelId/{channelId}/messageId/{messageId}",
  resourceIdSegmentFormats: {
    workspaceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    channelId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    messageId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/slack.slack/message/index.ts
var SlackSlackMessageAri = class _SlackSlackMessageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._channelId = opts.resourceIdSegmentValues.channelId, this._messageId = opts.resourceIdSegmentValues.messageId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get channelId() {
    return this._channelId;
  }
  get messageId() {
    return this._messageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: slackSlackMessageAriStaticOpts.qualifier,
      platformQualifier: slackSlackMessageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: slackSlackMessageAriStaticOpts.resourceOwner,
      resourceType: slackSlackMessageAriStaticOpts.resourceType,
      resourceId: `workspaceId/${opts.workspaceId}/channelId/${opts.channelId}/messageId/${opts.messageId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        channelId: opts.channelId,
        messageId: opts.messageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, slackSlackMessageAriStaticOpts);
    return new _SlackSlackMessageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, slackSlackMessageAriStaticOpts);
    return new _SlackSlackMessageAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      channelId: this.channelId,
      messageId: this.messageId
    };
  }
};

// src/smartsheet.smartsheet/document/types.ts
var SmartsheetSmartsheetDocumentAriResourceOwner = "smartsheet.smartsheet", SmartsheetSmartsheetDocumentAriResourceType = "document";

// src/smartsheet.smartsheet/document/manifest.ts
var smartsheetSmartsheetDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SmartsheetSmartsheetDocumentAriResourceOwner,
  resourceType: SmartsheetSmartsheetDocumentAriResourceType,
  resourceIdSlug: "sheet/{sheetId}",
  resourceIdSegmentFormats: {
    sheetId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/smartsheet.smartsheet/document/index.ts
var SmartsheetSmartsheetDocumentAri = class _SmartsheetSmartsheetDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._sheetId = opts.resourceIdSegmentValues.sheetId;
  }
  get sheetId() {
    return this._sheetId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: smartsheetSmartsheetDocumentAriStaticOpts.qualifier,
      platformQualifier: smartsheetSmartsheetDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: smartsheetSmartsheetDocumentAriStaticOpts.resourceOwner,
      resourceType: smartsheetSmartsheetDocumentAriStaticOpts.resourceType,
      resourceId: `sheet/${opts.sheetId}`,
      resourceIdSegmentValues: {
        sheetId: opts.sheetId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, smartsheetSmartsheetDocumentAriStaticOpts);
    return new _SmartsheetSmartsheetDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, smartsheetSmartsheetDocumentAriStaticOpts);
    return new _SmartsheetSmartsheetDocumentAri(opts);
  }
  getVariables() {
    return {
      sheetId: this.sheetId
    };
  }
};

// src/smartsheet.smartsheet/remote-link/types.ts
var SmartsheetSmartsheetRemoteLinkAriResourceOwner = "smartsheet.smartsheet", SmartsheetSmartsheetRemoteLinkAriResourceType = "remote-link";

// src/smartsheet.smartsheet/remote-link/manifest.ts
var smartsheetSmartsheetRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SmartsheetSmartsheetRemoteLinkAriResourceOwner,
  resourceType: SmartsheetSmartsheetRemoteLinkAriResourceType,
  resourceIdSlug: "sheet/{sheetId}",
  resourceIdSegmentFormats: {
    sheetId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/smartsheet.smartsheet/remote-link/index.ts
var SmartsheetSmartsheetRemoteLinkAri = class _SmartsheetSmartsheetRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._sheetId = opts.resourceIdSegmentValues.sheetId;
  }
  get sheetId() {
    return this._sheetId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: smartsheetSmartsheetRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: smartsheetSmartsheetRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: smartsheetSmartsheetRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: smartsheetSmartsheetRemoteLinkAriStaticOpts.resourceType,
      resourceId: `sheet/${opts.sheetId}`,
      resourceIdSegmentValues: {
        sheetId: opts.sheetId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, smartsheetSmartsheetRemoteLinkAriStaticOpts);
    return new _SmartsheetSmartsheetRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, smartsheetSmartsheetRemoteLinkAriStaticOpts);
    return new _SmartsheetSmartsheetRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      sheetId: this.sheetId
    };
  }
};

// src/spinnaker.spinnaker/deployment/types.ts
var SpinnakerSpinnakerDeploymentAriResourceOwner = "spinnaker.spinnaker", SpinnakerSpinnakerDeploymentAriResourceType = "deployment";

// src/spinnaker.spinnaker/deployment/manifest.ts
var spinnakerSpinnakerDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SpinnakerSpinnakerDeploymentAriResourceOwner,
  resourceType: SpinnakerSpinnakerDeploymentAriResourceType,
  resourceIdSlug: "pipelineId/{pipelineId}/environmentId/{environmentId}/deploymentSequenceNumber/{deploymentSequenceNumber}",
  resourceIdSegmentFormats: {
    pipelineId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    environmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    deploymentSequenceNumber: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/spinnaker.spinnaker/deployment/index.ts
var SpinnakerSpinnakerDeploymentAri = class _SpinnakerSpinnakerDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pipelineId = opts.resourceIdSegmentValues.pipelineId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._deploymentSequenceNumber = opts.resourceIdSegmentValues.deploymentSequenceNumber;
  }
  get pipelineId() {
    return this._pipelineId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get deploymentSequenceNumber() {
    return this._deploymentSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: spinnakerSpinnakerDeploymentAriStaticOpts.qualifier,
      platformQualifier: spinnakerSpinnakerDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: spinnakerSpinnakerDeploymentAriStaticOpts.resourceOwner,
      resourceType: spinnakerSpinnakerDeploymentAriStaticOpts.resourceType,
      resourceId: `pipelineId/${opts.pipelineId}/environmentId/${opts.environmentId}/deploymentSequenceNumber/${opts.deploymentSequenceNumber}`,
      resourceIdSegmentValues: {
        pipelineId: opts.pipelineId,
        environmentId: opts.environmentId,
        deploymentSequenceNumber: opts.deploymentSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, spinnakerSpinnakerDeploymentAriStaticOpts);
    return new _SpinnakerSpinnakerDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, spinnakerSpinnakerDeploymentAriStaticOpts);
    return new _SpinnakerSpinnakerDeploymentAri(opts);
  }
  getVariables() {
    return {
      pipelineId: this.pipelineId,
      environmentId: this.environmentId,
      deploymentSequenceNumber: this.deploymentSequenceNumber
    };
  }
};

// src/statuspage/role/types.ts
var StatuspageRoleAriResourceOwner = "statuspage", StatuspageRoleAriResourceType = "role";

// src/statuspage/role/manifest.ts
var statuspageRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: StatuspageRoleAriResourceOwner,
  resourceType: StatuspageRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/statuspage/role/index.ts
var StatuspageRoleAri = class _StatuspageRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: statuspageRoleAriStaticOpts.qualifier,
      platformQualifier: statuspageRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: statuspageRoleAriStaticOpts.resourceOwner,
      resourceType: statuspageRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, statuspageRoleAriStaticOpts);
    return new _StatuspageRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, statuspageRoleAriStaticOpts);
    return new _StatuspageRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

// src/statuspage/site/types.ts
var StatuspageSiteAriResourceOwner = "statuspage", StatuspageSiteAriResourceType = "site";

// src/statuspage/site/manifest.ts
var statuspageSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: StatuspageSiteAriResourceOwner,
  resourceType: StatuspageSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/statuspage/site/index.ts
var StatuspageSiteAri = class _StatuspageSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: statuspageSiteAriStaticOpts.qualifier,
      platformQualifier: statuspageSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: statuspageSiteAriStaticOpts.resourceOwner,
      resourceType: statuspageSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, statuspageSiteAriStaticOpts);
    return new _StatuspageSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, statuspageSiteAriStaticOpts);
    return new _StatuspageSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/stripe.stripe/remote-link/types.ts
var StripeStripeRemoteLinkAriResourceOwner = "stripe.stripe", StripeStripeRemoteLinkAriResourceType = "remote-link";

// src/stripe.stripe/remote-link/manifest.ts
var stripeStripeRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: StripeStripeRemoteLinkAriResourceOwner,
  resourceType: StripeStripeRemoteLinkAriResourceType,
  resourceIdSlug: "invoice/{invoiceId}",
  resourceIdSegmentFormats: {
    invoiceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/stripe.stripe/remote-link/index.ts
var StripeStripeRemoteLinkAri = class _StripeStripeRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._invoiceId = opts.resourceIdSegmentValues.invoiceId;
  }
  get invoiceId() {
    return this._invoiceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: stripeStripeRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: stripeStripeRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: stripeStripeRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: stripeStripeRemoteLinkAriStaticOpts.resourceType,
      resourceId: `invoice/${opts.invoiceId}`,
      resourceIdSegmentValues: {
        invoiceId: opts.invoiceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, stripeStripeRemoteLinkAriStaticOpts);
    return new _StripeStripeRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, stripeStripeRemoteLinkAriStaticOpts);
    return new _StripeStripeRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      invoiceId: this.invoiceId
    };
  }
};

// src/support/customer/types.ts
var SupportCustomerAriResourceOwner = "support", SupportCustomerAriResourceType = "customer";

// src/support/customer/manifest.ts
var supportCustomerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SupportCustomerAriResourceOwner,
  resourceType: SupportCustomerAriResourceType,
  resourceIdSlug: "{resourceName}",
  resourceIdSegmentFormats: {
    resourceName: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/support/customer/index.ts
var SupportCustomerAri = class _SupportCustomerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceName = opts.resourceIdSegmentValues.resourceName;
  }
  get resourceName() {
    return this._resourceName;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: supportCustomerAriStaticOpts.qualifier,
      platformQualifier: supportCustomerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: supportCustomerAriStaticOpts.resourceOwner,
      resourceType: supportCustomerAriStaticOpts.resourceType,
      resourceId: `${opts.resourceName}`,
      resourceIdSegmentValues: {
        resourceName: opts.resourceName || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, supportCustomerAriStaticOpts);
    return new _SupportCustomerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, supportCustomerAriStaticOpts);
    return new _SupportCustomerAri(opts);
  }
  getVariables() {
    return {
      resourceName: this.resourceName
    };
  }
};

// src/support/customer-support/types.ts
var SupportCustomerSupportAriResourceOwner = "support", SupportCustomerSupportAriResourceType = "customer-support";

// src/support/customer-support/manifest.ts
var supportCustomerSupportAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SupportCustomerSupportAriResourceOwner,
  resourceType: SupportCustomerSupportAriResourceType,
  resourceIdSlug: "{resourceName}",
  resourceIdSegmentFormats: {
    resourceName: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/support/customer-support/index.ts
var SupportCustomerSupportAri = class _SupportCustomerSupportAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceName = opts.resourceIdSegmentValues.resourceName;
  }
  get resourceName() {
    return this._resourceName;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: supportCustomerSupportAriStaticOpts.qualifier,
      platformQualifier: supportCustomerSupportAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: supportCustomerSupportAriStaticOpts.resourceOwner,
      resourceType: supportCustomerSupportAriStaticOpts.resourceType,
      resourceId: `${opts.resourceName}`,
      resourceIdSegmentValues: {
        resourceName: opts.resourceName || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, supportCustomerSupportAriStaticOpts);
    return new _SupportCustomerSupportAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, supportCustomerSupportAriStaticOpts);
    return new _SupportCustomerSupportAri(opts);
  }
  getVariables() {
    return {
      resourceName: this.resourceName
    };
  }
};

// src/todoist.todoist/remote-link/types.ts
var TodoistTodoistRemoteLinkAriResourceOwner = "todoist.todoist", TodoistTodoistRemoteLinkAriResourceType = "remote-link";

// src/todoist.todoist/remote-link/manifest.ts
var todoistTodoistRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TodoistTodoistRemoteLinkAriResourceOwner,
  resourceType: TodoistTodoistRemoteLinkAriResourceType,
  resourceIdSlug: "task/{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/todoist.todoist/remote-link/index.ts
var TodoistTodoistRemoteLinkAri = class _TodoistTodoistRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: todoistTodoistRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: todoistTodoistRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: todoistTodoistRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: todoistTodoistRemoteLinkAriStaticOpts.resourceType,
      resourceId: `task/${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, todoistTodoistRemoteLinkAriStaticOpts);
    return new _TodoistTodoistRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, todoistTodoistRemoteLinkAriStaticOpts);
    return new _TodoistTodoistRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      taskId: this.taskId
    };
  }
};

// src/townsquare/comment/types.ts
var TownsquareCommentAriResourceOwner = "townsquare", TownsquareCommentAriResourceType = "comment";

// src/townsquare/comment/manifest.ts
var townsquareCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareCommentAriResourceOwner,
  resourceType: TownsquareCommentAriResourceType,
  resourceIdSlug: "{commentUuid}",
  resourceIdSegmentFormats: {
    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/comment/index.ts
var TownsquareCommentAri = class _TownsquareCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._commentUuid = opts.resourceIdSegmentValues.commentUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get commentUuid() {
    return this._commentUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareCommentAriStaticOpts.qualifier,
      platformQualifier: townsquareCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareCommentAriStaticOpts.resourceOwner,
      resourceType: townsquareCommentAriStaticOpts.resourceType,
      resourceId: `${opts.commentUuid}`,
      resourceIdSegmentValues: {
        commentUuid: opts.commentUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareCommentAriStaticOpts);
    return new _TownsquareCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareCommentAriStaticOpts);
    return new _TownsquareCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      commentUuid: this.commentUuid
    };
  }
};

// src/townsquare/goal/types.ts
var TownsquareGoalAriResourceOwner = "townsquare", TownsquareGoalAriResourceType = "goal";

// src/townsquare/goal/manifest.ts
var townsquareGoalAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareGoalAriResourceOwner,
  resourceType: TownsquareGoalAriResourceType,
  resourceIdSlug: "{goalUuid}",
  resourceIdSegmentFormats: {
    goalUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/goal/index.ts
var TownsquareGoalAri = class _TownsquareGoalAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._goalUuid = opts.resourceIdSegmentValues.goalUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get goalUuid() {
    return this._goalUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareGoalAriStaticOpts.qualifier,
      platformQualifier: townsquareGoalAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareGoalAriStaticOpts.resourceOwner,
      resourceType: townsquareGoalAriStaticOpts.resourceType,
      resourceId: `${opts.goalUuid}`,
      resourceIdSegmentValues: {
        goalUuid: opts.goalUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareGoalAriStaticOpts);
    return new _TownsquareGoalAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareGoalAriStaticOpts);
    return new _TownsquareGoalAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      goalUuid: this.goalUuid
    };
  }
};

// src/townsquare/goal-update/types.ts
var TownsquareGoalUpdateAriResourceOwner = "townsquare", TownsquareGoalUpdateAriResourceType = "goal-update";

// src/townsquare/goal-update/manifest.ts
var townsquareGoalUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareGoalUpdateAriResourceOwner,
  resourceType: TownsquareGoalUpdateAriResourceType,
  resourceIdSlug: "{goalUpdateUuid}",
  resourceIdSegmentFormats: {
    goalUpdateUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/goal-update/index.ts
var TownsquareGoalUpdateAri = class _TownsquareGoalUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._goalUpdateUuid = opts.resourceIdSegmentValues.goalUpdateUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get goalUpdateUuid() {
    return this._goalUpdateUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareGoalUpdateAriStaticOpts.qualifier,
      platformQualifier: townsquareGoalUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareGoalUpdateAriStaticOpts.resourceOwner,
      resourceType: townsquareGoalUpdateAriStaticOpts.resourceType,
      resourceId: `${opts.goalUpdateUuid}`,
      resourceIdSegmentValues: {
        goalUpdateUuid: opts.goalUpdateUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareGoalUpdateAriStaticOpts);
    return new _TownsquareGoalUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareGoalUpdateAriStaticOpts);
    return new _TownsquareGoalUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      goalUpdateUuid: this.goalUpdateUuid
    };
  }
};

// src/townsquare/help-pointer/types.ts
var TownsquareHelpPointerAriResourceOwner = "townsquare", TownsquareHelpPointerAriResourceType = "help-pointer";

// src/townsquare/help-pointer/manifest.ts
var townsquareHelpPointerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareHelpPointerAriResourceOwner,
  resourceType: TownsquareHelpPointerAriResourceType,
  resourceIdSlug: "{helpPointerUuid}",
  resourceIdSegmentFormats: {
    helpPointerUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/help-pointer/index.ts
var TownsquareHelpPointerAri = class _TownsquareHelpPointerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._helpPointerUuid = opts.resourceIdSegmentValues.helpPointerUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get helpPointerUuid() {
    return this._helpPointerUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareHelpPointerAriStaticOpts.qualifier,
      platformQualifier: townsquareHelpPointerAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareHelpPointerAriStaticOpts.resourceOwner,
      resourceType: townsquareHelpPointerAriStaticOpts.resourceType,
      resourceId: `${opts.helpPointerUuid}`,
      resourceIdSegmentValues: {
        helpPointerUuid: opts.helpPointerUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareHelpPointerAriStaticOpts);
    return new _TownsquareHelpPointerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareHelpPointerAriStaticOpts);
    return new _TownsquareHelpPointerAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      helpPointerUuid: this.helpPointerUuid
    };
  }
};

// src/townsquare/learning/types.ts
var TownsquareLearningAriResourceOwner = "townsquare", TownsquareLearningAriResourceType = "learning";

// src/townsquare/learning/manifest.ts
var townsquareLearningAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareLearningAriResourceOwner,
  resourceType: TownsquareLearningAriResourceType,
  resourceIdSlug: "{learningUuid}",
  resourceIdSegmentFormats: {
    learningUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/learning/index.ts
var TownsquareLearningAri = class _TownsquareLearningAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._learningUuid = opts.resourceIdSegmentValues.learningUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get learningUuid() {
    return this._learningUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareLearningAriStaticOpts.qualifier,
      platformQualifier: townsquareLearningAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareLearningAriStaticOpts.resourceOwner,
      resourceType: townsquareLearningAriStaticOpts.resourceType,
      resourceId: `${opts.learningUuid}`,
      resourceIdSegmentValues: {
        learningUuid: opts.learningUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareLearningAriStaticOpts);
    return new _TownsquareLearningAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareLearningAriStaticOpts);
    return new _TownsquareLearningAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      learningUuid: this.learningUuid
    };
  }
};

// src/townsquare/metric/types.ts
var TownsquareMetricAriResourceOwner = "townsquare", TownsquareMetricAriResourceType = "metric";

// src/townsquare/metric/manifest.ts
var townsquareMetricAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareMetricAriResourceOwner,
  resourceType: TownsquareMetricAriResourceType,
  resourceIdSlug: "{metricUuid}",
  resourceIdSegmentFormats: {
    metricUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/metric/index.ts
var TownsquareMetricAri = class _TownsquareMetricAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._metricUuid = opts.resourceIdSegmentValues.metricUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get metricUuid() {
    return this._metricUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareMetricAriStaticOpts.qualifier,
      platformQualifier: townsquareMetricAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareMetricAriStaticOpts.resourceOwner,
      resourceType: townsquareMetricAriStaticOpts.resourceType,
      resourceId: `${opts.metricUuid}`,
      resourceIdSegmentValues: {
        metricUuid: opts.metricUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareMetricAriStaticOpts);
    return new _TownsquareMetricAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareMetricAriStaticOpts);
    return new _TownsquareMetricAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      metricUuid: this.metricUuid
    };
  }
};

// src/townsquare/metric-target/types.ts
var TownsquareMetricTargetAriResourceOwner = "townsquare", TownsquareMetricTargetAriResourceType = "metric-target";

// src/townsquare/metric-target/manifest.ts
var townsquareMetricTargetAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareMetricTargetAriResourceOwner,
  resourceType: TownsquareMetricTargetAriResourceType,
  resourceIdSlug: "{metricTargetUuid}",
  resourceIdSegmentFormats: {
    metricTargetUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/metric-target/index.ts
var TownsquareMetricTargetAri = class _TownsquareMetricTargetAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._metricTargetUuid = opts.resourceIdSegmentValues.metricTargetUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get metricTargetUuid() {
    return this._metricTargetUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareMetricTargetAriStaticOpts.qualifier,
      platformQualifier: townsquareMetricTargetAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareMetricTargetAriStaticOpts.resourceOwner,
      resourceType: townsquareMetricTargetAriStaticOpts.resourceType,
      resourceId: `${opts.metricTargetUuid}`,
      resourceIdSegmentValues: {
        metricTargetUuid: opts.metricTargetUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareMetricTargetAriStaticOpts);
    return new _TownsquareMetricTargetAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareMetricTargetAriStaticOpts);
    return new _TownsquareMetricTargetAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      metricTargetUuid: this.metricTargetUuid
    };
  }
};

// src/townsquare/metric-value/types.ts
var TownsquareMetricValueAriResourceOwner = "townsquare", TownsquareMetricValueAriResourceType = "metric-value";

// src/townsquare/metric-value/manifest.ts
var townsquareMetricValueAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareMetricValueAriResourceOwner,
  resourceType: TownsquareMetricValueAriResourceType,
  resourceIdSlug: "{metricValueUuid}",
  resourceIdSegmentFormats: {
    metricValueUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/metric-value/index.ts
var TownsquareMetricValueAri = class _TownsquareMetricValueAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._metricValueUuid = opts.resourceIdSegmentValues.metricValueUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get metricValueUuid() {
    return this._metricValueUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareMetricValueAriStaticOpts.qualifier,
      platformQualifier: townsquareMetricValueAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareMetricValueAriStaticOpts.resourceOwner,
      resourceType: townsquareMetricValueAriStaticOpts.resourceType,
      resourceId: `${opts.metricValueUuid}`,
      resourceIdSegmentValues: {
        metricValueUuid: opts.metricValueUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareMetricValueAriStaticOpts);
    return new _TownsquareMetricValueAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareMetricValueAriStaticOpts);
    return new _TownsquareMetricValueAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      metricValueUuid: this.metricValueUuid
    };
  }
};

// src/townsquare/milestone/types.ts
var TownsquareMilestoneAriResourceOwner = "townsquare", TownsquareMilestoneAriResourceType = "milestone";

// src/townsquare/milestone/manifest.ts
var townsquareMilestoneAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareMilestoneAriResourceOwner,
  resourceType: TownsquareMilestoneAriResourceType,
  resourceIdSlug: "{milestoneUuid}",
  resourceIdSegmentFormats: {
    milestoneUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/milestone/index.ts
var TownsquareMilestoneAri = class _TownsquareMilestoneAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._milestoneUuid = opts.resourceIdSegmentValues.milestoneUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get milestoneUuid() {
    return this._milestoneUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareMilestoneAriStaticOpts.qualifier,
      platformQualifier: townsquareMilestoneAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareMilestoneAriStaticOpts.resourceOwner,
      resourceType: townsquareMilestoneAriStaticOpts.resourceType,
      resourceId: `${opts.milestoneUuid}`,
      resourceIdSegmentValues: {
        milestoneUuid: opts.milestoneUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareMilestoneAriStaticOpts);
    return new _TownsquareMilestoneAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareMilestoneAriStaticOpts);
    return new _TownsquareMilestoneAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      milestoneUuid: this.milestoneUuid
    };
  }
};

// src/townsquare/project/types.ts
var TownsquareProjectAriResourceOwner = "townsquare", TownsquareProjectAriResourceType = "project";

// src/townsquare/project/manifest.ts
var townsquareProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareProjectAriResourceOwner,
  resourceType: TownsquareProjectAriResourceType,
  resourceIdSlug: "{projectUuid}",
  resourceIdSegmentFormats: {
    projectUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/project/index.ts
var TownsquareProjectAri = class _TownsquareProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectUuid = opts.resourceIdSegmentValues.projectUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get projectUuid() {
    return this._projectUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareProjectAriStaticOpts.qualifier,
      platformQualifier: townsquareProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareProjectAriStaticOpts.resourceOwner,
      resourceType: townsquareProjectAriStaticOpts.resourceType,
      resourceId: `${opts.projectUuid}`,
      resourceIdSegmentValues: {
        projectUuid: opts.projectUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareProjectAriStaticOpts);
    return new _TownsquareProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareProjectAriStaticOpts);
    return new _TownsquareProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectUuid: this.projectUuid
    };
  }
};

// src/townsquare/project-update/types.ts
var TownsquareProjectUpdateAriResourceOwner = "townsquare", TownsquareProjectUpdateAriResourceType = "project-update";

// src/townsquare/project-update/manifest.ts
var townsquareProjectUpdateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareProjectUpdateAriResourceOwner,
  resourceType: TownsquareProjectUpdateAriResourceType,
  resourceIdSlug: "{projectUpdateUuid}",
  resourceIdSegmentFormats: {
    projectUpdateUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/project-update/index.ts
var TownsquareProjectUpdateAri = class _TownsquareProjectUpdateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._projectUpdateUuid = opts.resourceIdSegmentValues.projectUpdateUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get projectUpdateUuid() {
    return this._projectUpdateUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareProjectUpdateAriStaticOpts.qualifier,
      platformQualifier: townsquareProjectUpdateAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareProjectUpdateAriStaticOpts.resourceOwner,
      resourceType: townsquareProjectUpdateAriStaticOpts.resourceType,
      resourceId: `${opts.projectUpdateUuid}`,
      resourceIdSegmentValues: {
        projectUpdateUuid: opts.projectUpdateUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareProjectUpdateAriStaticOpts);
    return new _TownsquareProjectUpdateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareProjectUpdateAriStaticOpts);
    return new _TownsquareProjectUpdateAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      projectUpdateUuid: this.projectUpdateUuid
    };
  }
};

// src/townsquare/question/types.ts
var TownsquareQuestionAriResourceOwner = "townsquare", TownsquareQuestionAriResourceType = "question";

// src/townsquare/question/manifest.ts
var townsquareQuestionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareQuestionAriResourceOwner,
  resourceType: TownsquareQuestionAriResourceType,
  resourceIdSlug: "{questionUuid}",
  resourceIdSegmentFormats: {
    questionUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/question/index.ts
var TownsquareQuestionAri = class _TownsquareQuestionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._questionUuid = opts.resourceIdSegmentValues.questionUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get questionUuid() {
    return this._questionUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareQuestionAriStaticOpts.qualifier,
      platformQualifier: townsquareQuestionAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareQuestionAriStaticOpts.resourceOwner,
      resourceType: townsquareQuestionAriStaticOpts.resourceType,
      resourceId: `${opts.questionUuid}`,
      resourceIdSegmentValues: {
        questionUuid: opts.questionUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareQuestionAriStaticOpts);
    return new _TownsquareQuestionAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      questionUuid: this.questionUuid
    };
  }
};

// src/townsquare/role/types.ts
var TownsquareRoleAriResourceOwner = "townsquare", TownsquareRoleAriResourceType = "role";

// src/townsquare/role/manifest.ts
var townsquareRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareRoleAriResourceOwner,
  resourceType: TownsquareRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/role/index.ts
var TownsquareRoleAri = class _TownsquareRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareRoleAriStaticOpts.qualifier,
      platformQualifier: townsquareRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: townsquareRoleAriStaticOpts.resourceOwner,
      resourceType: townsquareRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareRoleAriStaticOpts);
    return new _TownsquareRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareRoleAriStaticOpts);
    return new _TownsquareRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/townsquare/site/types.ts
var TownsquareSiteAriResourceOwner = "townsquare", TownsquareSiteAriResourceType = "site";

// src/townsquare/site/manifest.ts
var townsquareSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareSiteAriResourceOwner,
  resourceType: TownsquareSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/site/index.ts
var TownsquareSiteAri = class _TownsquareSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareSiteAriStaticOpts.qualifier,
      platformQualifier: townsquareSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: townsquareSiteAriStaticOpts.resourceOwner,
      resourceType: townsquareSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareSiteAriStaticOpts);
    return new _TownsquareSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareSiteAriStaticOpts);
    return new _TownsquareSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/townsquare/tag/types.ts
var TownsquareTagAriResourceOwner = "townsquare", TownsquareTagAriResourceType = "tag";

// src/townsquare/tag/manifest.ts
var townsquareTagAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareTagAriResourceOwner,
  resourceType: TownsquareTagAriResourceType,
  resourceIdSlug: "{tagUuid}",
  resourceIdSegmentFormats: {
    tagUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/tag/index.ts
var TownsquareTagAri = class _TownsquareTagAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._tagUuid = opts.resourceIdSegmentValues.tagUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get tagUuid() {
    return this._tagUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareTagAriStaticOpts.qualifier,
      platformQualifier: townsquareTagAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareTagAriStaticOpts.resourceOwner,
      resourceType: townsquareTagAriStaticOpts.resourceType,
      resourceId: `${opts.tagUuid}`,
      resourceIdSegmentValues: {
        tagUuid: opts.tagUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareTagAriStaticOpts);
    return new _TownsquareTagAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareTagAriStaticOpts);
    return new _TownsquareTagAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      tagUuid: this.tagUuid
    };
  }
};

// src/townsquare/update-note/types.ts
var TownsquareUpdateNoteAriResourceOwner = "townsquare", TownsquareUpdateNoteAriResourceType = "update-note";

// src/townsquare/update-note/manifest.ts
var townsquareUpdateNoteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareUpdateNoteAriResourceOwner,
  resourceType: TownsquareUpdateNoteAriResourceType,
  resourceIdSlug: "{updateNoteUuid}",
  resourceIdSegmentFormats: {
    updateNoteUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/update-note/index.ts
var TownsquareUpdateNoteAri = class _TownsquareUpdateNoteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._updateNoteUuid = opts.resourceIdSegmentValues.updateNoteUuid;
  }
  get siteId() {
    return this._siteId;
  }
  get updateNoteUuid() {
    return this._updateNoteUuid;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareUpdateNoteAriStaticOpts.qualifier,
      platformQualifier: townsquareUpdateNoteAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareUpdateNoteAriStaticOpts.resourceOwner,
      resourceType: townsquareUpdateNoteAriStaticOpts.resourceType,
      resourceId: `${opts.updateNoteUuid}`,
      resourceIdSegmentValues: {
        updateNoteUuid: opts.updateNoteUuid
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareUpdateNoteAriStaticOpts);
    return new _TownsquareUpdateNoteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareUpdateNoteAriStaticOpts);
    return new _TownsquareUpdateNoteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      updateNoteUuid: this.updateNoteUuid
    };
  }
};

// src/townsquare/workspace/types.ts
var TownsquareWorkspaceAriResourceOwner = "townsquare", TownsquareWorkspaceAriResourceType = "workspace";

// src/townsquare/workspace/manifest.ts
var townsquareWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TownsquareWorkspaceAriResourceOwner,
  resourceType: TownsquareWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/townsquare/workspace/index.ts
var TownsquareWorkspaceAri = class _TownsquareWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: townsquareWorkspaceAriStaticOpts.qualifier,
      platformQualifier: townsquareWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: townsquareWorkspaceAriStaticOpts.resourceOwner,
      resourceType: townsquareWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareWorkspaceAriStaticOpts);
    return new _TownsquareWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, townsquareWorkspaceAriStaticOpts);
    return new _TownsquareWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};

// src/trello/attachment/types.ts
var TrelloAttachmentAriResourceOwner = "trello", TrelloAttachmentAriResourceType = "attachment";

// src/trello/attachment/manifest.ts
var trelloAttachmentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloAttachmentAriResourceOwner,
  resourceType: TrelloAttachmentAriResourceType,
  resourceIdSlug: "card/workspace/{workspaceId}/{cardId}/{attachmentId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    cardId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    attachmentId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/attachment/index.ts
var TrelloAttachmentAri = class _TrelloAttachmentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._cardId = opts.resourceIdSegmentValues.cardId, this._attachmentId = opts.resourceIdSegmentValues.attachmentId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get cardId() {
    return this._cardId;
  }
  get attachmentId() {
    return this._attachmentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloAttachmentAriStaticOpts.qualifier,
      platformQualifier: trelloAttachmentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloAttachmentAriStaticOpts.resourceOwner,
      resourceType: trelloAttachmentAriStaticOpts.resourceType,
      resourceId: `card/workspace/${opts.workspaceId}/${opts.cardId}/${opts.attachmentId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        cardId: opts.cardId || "",
        attachmentId: opts.attachmentId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloAttachmentAriStaticOpts);
    return new _TrelloAttachmentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloAttachmentAriStaticOpts);
    return new _TrelloAttachmentAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      cardId: this.cardId,
      attachmentId: this.attachmentId
    };
  }
};

// src/trello/avatar/types.ts
var TrelloAvatarAriResourceOwner = "trello", TrelloAvatarAriResourceType = "avatar";

// src/trello/avatar/manifest.ts
var trelloAvatarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloAvatarAriResourceOwner,
  resourceType: TrelloAvatarAriResourceType,
  resourceIdSlug: "member/{memberId}/{avatarHash}",
  resourceIdSegmentFormats: {
    memberId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    avatarHash: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/avatar/index.ts
var TrelloAvatarAri = class _TrelloAvatarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._memberId = opts.resourceIdSegmentValues.memberId, this._avatarHash = opts.resourceIdSegmentValues.avatarHash;
  }
  get memberId() {
    return this._memberId;
  }
  get avatarHash() {
    return this._avatarHash;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloAvatarAriStaticOpts.qualifier,
      platformQualifier: trelloAvatarAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloAvatarAriStaticOpts.resourceOwner,
      resourceType: trelloAvatarAriStaticOpts.resourceType,
      resourceId: `member/${opts.memberId}/${opts.avatarHash}`,
      resourceIdSegmentValues: {
        memberId: opts.memberId || "",
        avatarHash: opts.avatarHash || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloAvatarAriStaticOpts);
    return new _TrelloAvatarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloAvatarAriStaticOpts);
    return new _TrelloAvatarAri(opts);
  }
  getVariables() {
    return {
      memberId: this.memberId,
      avatarHash: this.avatarHash
    };
  }
};

// src/trello/background/types.ts
var TrelloBackgroundAriResourceOwner = "trello", TrelloBackgroundAriResourceType = "background";

// src/trello/background/manifest.ts
var trelloBackgroundAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloBackgroundAriResourceOwner,
  resourceType: TrelloBackgroundAriResourceType,
  resourceIdSlug: "type-id/background-type/{backgroundType}/{typeId}/{backgroundId}",
  resourceIdSegmentFormats: {
    backgroundType: /(?:member|board|shared)/,
    // eslint-disable-line no-useless-escape
    typeId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    backgroundId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/background/index.ts
var TrelloBackgroundAri = class _TrelloBackgroundAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._backgroundType = opts.resourceIdSegmentValues.backgroundType, this._typeId = opts.resourceIdSegmentValues.typeId, this._backgroundId = opts.resourceIdSegmentValues.backgroundId;
  }
  get backgroundType() {
    return this._backgroundType;
  }
  get typeId() {
    return this._typeId;
  }
  get backgroundId() {
    return this._backgroundId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloBackgroundAriStaticOpts.qualifier,
      platformQualifier: trelloBackgroundAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloBackgroundAriStaticOpts.resourceOwner,
      resourceType: trelloBackgroundAriStaticOpts.resourceType,
      resourceId: `type-id/background-type/${opts.backgroundType}/${opts.typeId}/${opts.backgroundId}`,
      resourceIdSegmentValues: {
        backgroundType: opts.backgroundType,
        typeId: opts.typeId || "",
        backgroundId: opts.backgroundId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloBackgroundAriStaticOpts);
    return new _TrelloBackgroundAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloBackgroundAriStaticOpts);
    return new _TrelloBackgroundAri(opts);
  }
  getVariables() {
    return {
      backgroundType: this.backgroundType,
      typeId: this.typeId,
      backgroundId: this.backgroundId
    };
  }
};

// src/trello/board/types.ts
var TrelloBoardAriResourceOwner = "trello", TrelloBoardAriResourceType = "board";

// src/trello/board/manifest.ts
var trelloBoardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloBoardAriResourceOwner,
  resourceType: TrelloBoardAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{boardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    boardId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/board/index.ts
var TrelloBoardAri = class _TrelloBoardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._boardId = opts.resourceIdSegmentValues.boardId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get boardId() {
    return this._boardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloBoardAriStaticOpts.qualifier,
      platformQualifier: trelloBoardAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloBoardAriStaticOpts.resourceOwner,
      resourceType: trelloBoardAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.boardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        boardId: opts.boardId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloBoardAriStaticOpts);
    return new _TrelloBoardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloBoardAriStaticOpts);
    return new _TrelloBoardAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      boardId: this.boardId
    };
  }
};

// src/trello/card/types.ts
var TrelloCardAriResourceOwner = "trello", TrelloCardAriResourceType = "card";

// src/trello/card/manifest.ts
var trelloCardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloCardAriResourceOwner,
  resourceType: TrelloCardAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{cardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    cardId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/card/index.ts
var TrelloCardAri = class _TrelloCardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._cardId = opts.resourceIdSegmentValues.cardId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get cardId() {
    return this._cardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloCardAriStaticOpts.qualifier,
      platformQualifier: trelloCardAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloCardAriStaticOpts.resourceOwner,
      resourceType: trelloCardAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.cardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        cardId: opts.cardId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloCardAriStaticOpts);
    return new _TrelloCardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloCardAriStaticOpts);
    return new _TrelloCardAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      cardId: this.cardId
    };
  }
};

// src/trello/check-item/types.ts
var TrelloCheckItemAriResourceOwner = "trello", TrelloCheckItemAriResourceType = "check-item";

// src/trello/check-item/manifest.ts
var trelloCheckItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloCheckItemAriResourceOwner,
  resourceType: TrelloCheckItemAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{checkItemId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    checkItemId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/check-item/index.ts
var TrelloCheckItemAri = class _TrelloCheckItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._checkItemId = opts.resourceIdSegmentValues.checkItemId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get checkItemId() {
    return this._checkItemId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloCheckItemAriStaticOpts.qualifier,
      platformQualifier: trelloCheckItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloCheckItemAriStaticOpts.resourceOwner,
      resourceType: trelloCheckItemAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.checkItemId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        checkItemId: opts.checkItemId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloCheckItemAriStaticOpts);
    return new _TrelloCheckItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloCheckItemAriStaticOpts);
    return new _TrelloCheckItemAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      checkItemId: this.checkItemId
    };
  }
};

// src/trello/checklist/types.ts
var TrelloChecklistAriResourceOwner = "trello", TrelloChecklistAriResourceType = "checklist";

// src/trello/checklist/manifest.ts
var trelloChecklistAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloChecklistAriResourceOwner,
  resourceType: TrelloChecklistAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{checklistId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    checklistId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/checklist/index.ts
var TrelloChecklistAri = class _TrelloChecklistAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._checklistId = opts.resourceIdSegmentValues.checklistId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get checklistId() {
    return this._checklistId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloChecklistAriStaticOpts.qualifier,
      platformQualifier: trelloChecklistAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloChecklistAriStaticOpts.resourceOwner,
      resourceType: trelloChecklistAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.checklistId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        checklistId: opts.checklistId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloChecklistAriStaticOpts);
    return new _TrelloChecklistAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloChecklistAriStaticOpts);
    return new _TrelloChecklistAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      checklistId: this.checklistId
    };
  }
};

// src/trello/custom-field/types.ts
var TrelloCustomFieldAriResourceOwner = "trello", TrelloCustomFieldAriResourceType = "custom-field";

// src/trello/custom-field/manifest.ts
var trelloCustomFieldAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloCustomFieldAriResourceOwner,
  resourceType: TrelloCustomFieldAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{customFieldId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    customFieldId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/custom-field/index.ts
var TrelloCustomFieldAri = class _TrelloCustomFieldAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._customFieldId = opts.resourceIdSegmentValues.customFieldId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get customFieldId() {
    return this._customFieldId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloCustomFieldAriStaticOpts.qualifier,
      platformQualifier: trelloCustomFieldAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloCustomFieldAriStaticOpts.resourceOwner,
      resourceType: trelloCustomFieldAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.customFieldId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        customFieldId: opts.customFieldId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloCustomFieldAriStaticOpts);
    return new _TrelloCustomFieldAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloCustomFieldAriStaticOpts);
    return new _TrelloCustomFieldAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      customFieldId: this.customFieldId
    };
  }
};

// src/trello/emoji/types.ts
var TrelloEmojiAriResourceOwner = "trello", TrelloEmojiAriResourceType = "emoji";

// src/trello/emoji/manifest.ts
var trelloEmojiAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloEmojiAriResourceOwner,
  resourceType: TrelloEmojiAriResourceType,
  resourceIdSlug: "{customEmojiId}",
  resourceIdSegmentFormats: {
    customEmojiId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/emoji/index.ts
var TrelloEmojiAri = class _TrelloEmojiAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customEmojiId = opts.resourceIdSegmentValues.customEmojiId;
  }
  get customEmojiId() {
    return this._customEmojiId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloEmojiAriStaticOpts.qualifier,
      platformQualifier: trelloEmojiAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloEmojiAriStaticOpts.resourceOwner,
      resourceType: trelloEmojiAriStaticOpts.resourceType,
      resourceId: `${opts.customEmojiId}`,
      resourceIdSegmentValues: {
        customEmojiId: opts.customEmojiId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloEmojiAriStaticOpts);
    return new _TrelloEmojiAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloEmojiAriStaticOpts);
    return new _TrelloEmojiAri(opts);
  }
  getVariables() {
    return {
      customEmojiId: this.customEmojiId
    };
  }
};

// src/trello/enterprise/types.ts
var TrelloEnterpriseAriResourceOwner = "trello", TrelloEnterpriseAriResourceType = "enterprise";

// src/trello/enterprise/manifest.ts
var trelloEnterpriseAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloEnterpriseAriResourceOwner,
  resourceType: TrelloEnterpriseAriResourceType,
  resourceIdSlug: "{enterpriseId}",
  resourceIdSegmentFormats: {
    enterpriseId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/enterprise/index.ts
var TrelloEnterpriseAri = class _TrelloEnterpriseAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._enterpriseId = opts.resourceIdSegmentValues.enterpriseId;
  }
  get enterpriseId() {
    return this._enterpriseId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloEnterpriseAriStaticOpts.qualifier,
      platformQualifier: trelloEnterpriseAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloEnterpriseAriStaticOpts.resourceOwner,
      resourceType: trelloEnterpriseAriStaticOpts.resourceType,
      resourceId: `${opts.enterpriseId}`,
      resourceIdSegmentValues: {
        enterpriseId: opts.enterpriseId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloEnterpriseAriStaticOpts);
    return new _TrelloEnterpriseAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloEnterpriseAriStaticOpts);
    return new _TrelloEnterpriseAri(opts);
  }
  getVariables() {
    return {
      enterpriseId: this.enterpriseId
    };
  }
};

// src/trello/label/types.ts
var TrelloLabelAriResourceOwner = "trello", TrelloLabelAriResourceType = "label";

// src/trello/label/manifest.ts
var trelloLabelAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloLabelAriResourceOwner,
  resourceType: TrelloLabelAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{labelId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    labelId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/label/index.ts
var TrelloLabelAri = class _TrelloLabelAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._labelId = opts.resourceIdSegmentValues.labelId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get labelId() {
    return this._labelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloLabelAriStaticOpts.qualifier,
      platformQualifier: trelloLabelAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloLabelAriStaticOpts.resourceOwner,
      resourceType: trelloLabelAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.labelId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        labelId: opts.labelId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloLabelAriStaticOpts);
    return new _TrelloLabelAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloLabelAriStaticOpts);
    return new _TrelloLabelAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      labelId: this.labelId
    };
  }
};

// src/trello/list/types.ts
var TrelloListAriResourceOwner = "trello", TrelloListAriResourceType = "list";

// src/trello/list/manifest.ts
var trelloListAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloListAriResourceOwner,
  resourceType: TrelloListAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{listId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    listId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/list/index.ts
var TrelloListAri = class _TrelloListAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._listId = opts.resourceIdSegmentValues.listId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get listId() {
    return this._listId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloListAriStaticOpts.qualifier,
      platformQualifier: trelloListAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloListAriStaticOpts.resourceOwner,
      resourceType: trelloListAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.listId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        listId: opts.listId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloListAriStaticOpts);
    return new _TrelloListAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloListAriStaticOpts);
    return new _TrelloListAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      listId: this.listId
    };
  }
};

// src/trello/logo/types.ts
var TrelloLogoAriResourceOwner = "trello", TrelloLogoAriResourceType = "logo";

// src/trello/logo/manifest.ts
var trelloLogoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloLogoAriResourceOwner,
  resourceType: TrelloLogoAriResourceType,
  resourceIdSlug: "type-id/logo-type/{logoType}/{typeId}/{logoHash}",
  resourceIdSegmentFormats: {
    logoType: /(?:organization|enterprise)/,
    // eslint-disable-line no-useless-escape
    typeId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    logoHash: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/logo/index.ts
var TrelloLogoAri = class _TrelloLogoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._logoType = opts.resourceIdSegmentValues.logoType, this._typeId = opts.resourceIdSegmentValues.typeId, this._logoHash = opts.resourceIdSegmentValues.logoHash;
  }
  get logoType() {
    return this._logoType;
  }
  get typeId() {
    return this._typeId;
  }
  get logoHash() {
    return this._logoHash;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloLogoAriStaticOpts.qualifier,
      platformQualifier: trelloLogoAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloLogoAriStaticOpts.resourceOwner,
      resourceType: trelloLogoAriStaticOpts.resourceType,
      resourceId: `type-id/logo-type/${opts.logoType}/${opts.typeId}/${opts.logoHash}`,
      resourceIdSegmentValues: {
        logoType: opts.logoType,
        typeId: opts.typeId || "",
        logoHash: opts.logoHash || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloLogoAriStaticOpts);
    return new _TrelloLogoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloLogoAriStaticOpts);
    return new _TrelloLogoAri(opts);
  }
  getVariables() {
    return {
      logoType: this.logoType,
      typeId: this.typeId,
      logoHash: this.logoHash
    };
  }
};

// src/trello/planner/types.ts
var TrelloPlannerAriResourceOwner = "trello", TrelloPlannerAriResourceType = "planner";

// src/trello/planner/manifest.ts
var trelloPlannerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloPlannerAriResourceOwner,
  resourceType: TrelloPlannerAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{plannerId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    plannerId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/planner/index.ts
var TrelloPlannerAri = class _TrelloPlannerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._plannerId = opts.resourceIdSegmentValues.plannerId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get plannerId() {
    return this._plannerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloPlannerAriStaticOpts.qualifier,
      platformQualifier: trelloPlannerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloPlannerAriStaticOpts.resourceOwner,
      resourceType: trelloPlannerAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.plannerId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        plannerId: opts.plannerId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloPlannerAriStaticOpts);
    return new _TrelloPlannerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloPlannerAriStaticOpts);
    return new _TrelloPlannerAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      plannerId: this.plannerId
    };
  }
};

// src/trello/planner-calendar/types.ts
var TrelloPlannerCalendarAriResourceOwner = "trello", TrelloPlannerCalendarAriResourceType = "planner-calendar";

// src/trello/planner-calendar/manifest.ts
var trelloPlannerCalendarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloPlannerCalendarAriResourceOwner,
  resourceType: TrelloPlannerCalendarAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{plannerCalendarId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    plannerCalendarId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/planner-calendar/index.ts
var TrelloPlannerCalendarAri = class _TrelloPlannerCalendarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._plannerCalendarId = opts.resourceIdSegmentValues.plannerCalendarId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get plannerCalendarId() {
    return this._plannerCalendarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloPlannerCalendarAriStaticOpts.qualifier,
      platformQualifier: trelloPlannerCalendarAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloPlannerCalendarAriStaticOpts.resourceOwner,
      resourceType: trelloPlannerCalendarAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.plannerCalendarId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        plannerCalendarId: opts.plannerCalendarId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloPlannerCalendarAriStaticOpts);
    return new _TrelloPlannerCalendarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloPlannerCalendarAriStaticOpts);
    return new _TrelloPlannerCalendarAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      plannerCalendarId: this.plannerCalendarId
    };
  }
};

// src/trello/planner-event-card/types.ts
var TrelloPlannerEventCardAriResourceOwner = "trello", TrelloPlannerEventCardAriResourceType = "planner-event-card";

// src/trello/planner-event-card/manifest.ts
var trelloPlannerEventCardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloPlannerEventCardAriResourceOwner,
  resourceType: TrelloPlannerEventCardAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{plannerEventCardId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    plannerEventCardId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/planner-event-card/index.ts
var TrelloPlannerEventCardAri = class _TrelloPlannerEventCardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._plannerEventCardId = opts.resourceIdSegmentValues.plannerEventCardId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get plannerEventCardId() {
    return this._plannerEventCardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloPlannerEventCardAriStaticOpts.qualifier,
      platformQualifier: trelloPlannerEventCardAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloPlannerEventCardAriStaticOpts.resourceOwner,
      resourceType: trelloPlannerEventCardAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.plannerEventCardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        plannerEventCardId: opts.plannerEventCardId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloPlannerEventCardAriStaticOpts);
    return new _TrelloPlannerEventCardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloPlannerEventCardAriStaticOpts);
    return new _TrelloPlannerEventCardAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      plannerEventCardId: this.plannerEventCardId
    };
  }
};

// src/trello/role/types.ts
var TrelloRoleAriResourceOwner = "trello", TrelloRoleAriResourceType = "role";

// src/trello/role/manifest.ts
var trelloRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloRoleAriResourceOwner,
  resourceType: TrelloRoleAriResourceType,
  resourceIdSlug: "{roleGroup}/{roleType}",
  resourceIdSegmentFormats: {
    roleGroup: /(?:workspace|enterprise|product)/,
    // eslint-disable-line no-useless-escape
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/role/index.ts
var TrelloRoleAri = class _TrelloRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleGroup = opts.resourceIdSegmentValues.roleGroup, this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleGroup() {
    return this._roleGroup;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloRoleAriStaticOpts.qualifier,
      platformQualifier: trelloRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloRoleAriStaticOpts.resourceOwner,
      resourceType: trelloRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleGroup}/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleGroup: opts.roleGroup,
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloRoleAriStaticOpts);
    return new _TrelloRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloRoleAriStaticOpts);
    return new _TrelloRoleAri(opts);
  }
  getVariables() {
    return {
      roleGroup: this.roleGroup,
      roleType: this.roleType
    };
  }
};

// src/trello/site/types.ts
var TrelloSiteAriResourceOwner = "trello", TrelloSiteAriResourceType = "site";

// src/trello/site/manifest.ts
var trelloSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloSiteAriResourceOwner,
  resourceType: TrelloSiteAriResourceType,
  resourceIdSlug: "trello",
  resourceIdSegmentFormats: {}
};

// src/trello/site/index.ts
var TrelloSiteAri = class _TrelloSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloSiteAriStaticOpts.qualifier,
      platformQualifier: trelloSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloSiteAriStaticOpts.resourceOwner,
      resourceType: trelloSiteAriStaticOpts.resourceType,
      resourceId: "trello",
      resourceIdSegmentValues: {}
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloSiteAriStaticOpts);
    return new _TrelloSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloSiteAriStaticOpts);
    return new _TrelloSiteAri(opts);
  }
  getVariables() {
    return {};
  }
};

// src/trello/sticker/types.ts
var TrelloStickerAriResourceOwner = "trello", TrelloStickerAriResourceType = "sticker";

// src/trello/sticker/manifest.ts
var trelloStickerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloStickerAriResourceOwner,
  resourceType: TrelloStickerAriResourceType,
  resourceIdSlug: "{customStickerId}",
  resourceIdSegmentFormats: {
    customStickerId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/sticker/index.ts
var TrelloStickerAri = class _TrelloStickerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customStickerId = opts.resourceIdSegmentValues.customStickerId;
  }
  get customStickerId() {
    return this._customStickerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloStickerAriStaticOpts.qualifier,
      platformQualifier: trelloStickerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloStickerAriStaticOpts.resourceOwner,
      resourceType: trelloStickerAriStaticOpts.resourceType,
      resourceId: `${opts.customStickerId}`,
      resourceIdSegmentValues: {
        customStickerId: opts.customStickerId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloStickerAriStaticOpts);
    return new _TrelloStickerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloStickerAriStaticOpts);
    return new _TrelloStickerAri(opts);
  }
  getVariables() {
    return {
      customStickerId: this.customStickerId
    };
  }
};

// src/trello/user/types.ts
var TrelloUserAriResourceOwner = "trello", TrelloUserAriResourceType = "user";

// src/trello/user/manifest.ts
var trelloUserAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloUserAriResourceOwner,
  resourceType: TrelloUserAriResourceType,
  resourceIdSlug: "{userId}",
  resourceIdSegmentFormats: {
    userId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/user/index.ts
var TrelloUserAri = class _TrelloUserAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloUserAriStaticOpts.qualifier,
      platformQualifier: trelloUserAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloUserAriStaticOpts.resourceOwner,
      resourceType: trelloUserAriStaticOpts.resourceType,
      resourceId: `${opts.userId}`,
      resourceIdSegmentValues: {
        userId: opts.userId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloUserAriStaticOpts);
    return new _TrelloUserAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloUserAriStaticOpts);
    return new _TrelloUserAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId
    };
  }
};

// src/trello/workspace/types.ts
var TrelloWorkspaceAriResourceOwner = "trello", TrelloWorkspaceAriResourceType = "workspace";

// src/trello/workspace/manifest.ts
var trelloWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloWorkspaceAriResourceOwner,
  resourceType: TrelloWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/workspace/index.ts
var TrelloWorkspaceAri = class _TrelloWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloWorkspaceAriStaticOpts.qualifier,
      platformQualifier: trelloWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloWorkspaceAriStaticOpts.resourceOwner,
      resourceType: trelloWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloWorkspaceAriStaticOpts);
    return new _TrelloWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloWorkspaceAriStaticOpts);
    return new _TrelloWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/trust-eng/email/types.ts
var TrustEngEmailAriResourceOwner = "trust-eng", TrustEngEmailAriResourceType = "email";

// src/trust-eng/email/manifest.ts
var trustEngEmailAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrustEngEmailAriResourceOwner,
  resourceType: TrustEngEmailAriResourceType,
  resourceIdSlug: "{emailID}",
  resourceIdSegmentFormats: {
    emailID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/trust-eng/email/index.ts
var TrustEngEmailAri = class _TrustEngEmailAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._emailID = opts.resourceIdSegmentValues.emailID;
  }
  get emailID() {
    return this._emailID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trustEngEmailAriStaticOpts.qualifier,
      platformQualifier: trustEngEmailAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trustEngEmailAriStaticOpts.resourceOwner,
      resourceType: trustEngEmailAriStaticOpts.resourceType,
      resourceId: `${opts.emailID}`,
      resourceIdSegmentValues: {
        emailID: opts.emailID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trustEngEmailAriStaticOpts);
    return new _TrustEngEmailAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trustEngEmailAriStaticOpts);
    return new _TrustEngEmailAri(opts);
  }
  getVariables() {
    return {
      emailID: this.emailID
    };
  }
};

// src/unified-help/role/types.ts
var UnifiedHelpRoleAriResourceOwner = "unified-help", UnifiedHelpRoleAriResourceType = "role";

// src/unified-help/role/manifest.ts
var unifiedHelpRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedHelpRoleAriResourceOwner,
  resourceType: UnifiedHelpRoleAriResourceType,
  resourceIdSlug: "product/{roleType}",
  resourceIdSegmentFormats: {
    roleType: /(?:member|admin)/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-help/role/index.ts
var UnifiedHelpRoleAri = class _UnifiedHelpRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleType = opts.resourceIdSegmentValues.roleType;
  }
  get roleType() {
    return this._roleType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedHelpRoleAriStaticOpts.qualifier,
      platformQualifier: unifiedHelpRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedHelpRoleAriStaticOpts.resourceOwner,
      resourceType: unifiedHelpRoleAriStaticOpts.resourceType,
      resourceId: `product/${opts.roleType}`,
      resourceIdSegmentValues: {
        roleType: opts.roleType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpRoleAriStaticOpts);
    return new _UnifiedHelpRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedHelpRoleAriStaticOpts);
    return new _UnifiedHelpRoleAri(opts);
  }
  getVariables() {
    return {
      roleType: this.roleType
    };
  }
};

// src/unified-help/site/types.ts
var UnifiedHelpSiteAriResourceOwner = "unified-help", UnifiedHelpSiteAriResourceType = "site";

// src/unified-help/site/manifest.ts
var unifiedHelpSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedHelpSiteAriResourceOwner,
  resourceType: UnifiedHelpSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-help/site/index.ts
var UnifiedHelpSiteAri = class _UnifiedHelpSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedHelpSiteAriStaticOpts.qualifier,
      platformQualifier: unifiedHelpSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedHelpSiteAriStaticOpts.resourceOwner,
      resourceType: unifiedHelpSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpSiteAriStaticOpts);
    return new _UnifiedHelpSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedHelpSiteAriStaticOpts);
    return new _UnifiedHelpSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/unified-help/workspace/types.ts
var UnifiedHelpWorkspaceAriResourceOwner = "unified-help", UnifiedHelpWorkspaceAriResourceType = "workspace";

// src/unified-help/workspace/manifest.ts
var unifiedHelpWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedHelpWorkspaceAriResourceOwner,
  resourceType: UnifiedHelpWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-help/workspace/index.ts
var UnifiedHelpWorkspaceAri = class _UnifiedHelpWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedHelpWorkspaceAriStaticOpts.qualifier,
      platformQualifier: unifiedHelpWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedHelpWorkspaceAriStaticOpts.resourceOwner,
      resourceType: unifiedHelpWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpWorkspaceAriStaticOpts);
    return new _UnifiedHelpWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedHelpWorkspaceAriStaticOpts);
    return new _UnifiedHelpWorkspaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId
    };
  }
};

// src/unified-portable-profile/linked-account/types.ts
var UnifiedPortableProfileLinkedAccountAriResourceOwner = "unified-portable-profile", UnifiedPortableProfileLinkedAccountAriResourceType = "linked-account";

// src/unified-portable-profile/linked-account/manifest.ts
var unifiedPortableProfileLinkedAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedPortableProfileLinkedAccountAriResourceOwner,
  resourceType: UnifiedPortableProfileLinkedAccountAriResourceType,
  resourceIdSlug: "{linkedAccountInternalId}",
  resourceIdSegmentFormats: {
    linkedAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-portable-profile/linked-account/index.ts
var UnifiedPortableProfileLinkedAccountAri = class _UnifiedPortableProfileLinkedAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._linkedAccountInternalId = opts.resourceIdSegmentValues.linkedAccountInternalId;
  }
  get linkedAccountInternalId() {
    return this._linkedAccountInternalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedPortableProfileLinkedAccountAriStaticOpts.qualifier,
      platformQualifier: unifiedPortableProfileLinkedAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedPortableProfileLinkedAccountAriStaticOpts.resourceOwner,
      resourceType: unifiedPortableProfileLinkedAccountAriStaticOpts.resourceType,
      resourceId: `${opts.linkedAccountInternalId}`,
      resourceIdSegmentValues: {
        linkedAccountInternalId: opts.linkedAccountInternalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileLinkedAccountAriStaticOpts);
    return new _UnifiedPortableProfileLinkedAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileLinkedAccountAriStaticOpts);
    return new _UnifiedPortableProfileLinkedAccountAri(opts);
  }
  getVariables() {
    return {
      linkedAccountInternalId: this.linkedAccountInternalId
    };
  }
};

// src/unified-portable-profile/parent-account/types.ts
var UnifiedPortableProfileParentAccountAriResourceOwner = "unified-portable-profile", UnifiedPortableProfileParentAccountAriResourceType = "parent-account";

// src/unified-portable-profile/parent-account/manifest.ts
var unifiedPortableProfileParentAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedPortableProfileParentAccountAriResourceOwner,
  resourceType: UnifiedPortableProfileParentAccountAriResourceType,
  resourceIdSlug: "{parentAccountInternalId}",
  resourceIdSegmentFormats: {
    parentAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-portable-profile/parent-account/index.ts
var UnifiedPortableProfileParentAccountAri = class _UnifiedPortableProfileParentAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._parentAccountInternalId = opts.resourceIdSegmentValues.parentAccountInternalId;
  }
  get parentAccountInternalId() {
    return this._parentAccountInternalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedPortableProfileParentAccountAriStaticOpts.qualifier,
      platformQualifier: unifiedPortableProfileParentAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedPortableProfileParentAccountAriStaticOpts.resourceOwner,
      resourceType: unifiedPortableProfileParentAccountAriStaticOpts.resourceType,
      resourceId: `${opts.parentAccountInternalId}`,
      resourceIdSegmentValues: {
        parentAccountInternalId: opts.parentAccountInternalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileParentAccountAriStaticOpts);
    return new _UnifiedPortableProfileParentAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileParentAccountAriStaticOpts);
    return new _UnifiedPortableProfileParentAccountAri(opts);
  }
  getVariables() {
    return {
      parentAccountInternalId: this.parentAccountInternalId
    };
  }
};

// src/unified-portable-profile/unified-account/types.ts
var UnifiedPortableProfileUnifiedAccountAriResourceOwner = "unified-portable-profile", UnifiedPortableProfileUnifiedAccountAriResourceType = "unified-account";

// src/unified-portable-profile/unified-account/manifest.ts
var unifiedPortableProfileUnifiedAccountAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedPortableProfileUnifiedAccountAriResourceOwner,
  resourceType: UnifiedPortableProfileUnifiedAccountAriResourceType,
  resourceIdSlug: "{linkedAccountInternalId}",
  resourceIdSegmentFormats: {
    linkedAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-portable-profile/unified-account/index.ts
var UnifiedPortableProfileUnifiedAccountAri = class _UnifiedPortableProfileUnifiedAccountAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._linkedAccountInternalId = opts.resourceIdSegmentValues.linkedAccountInternalId;
  }
  get linkedAccountInternalId() {
    return this._linkedAccountInternalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedPortableProfileUnifiedAccountAriStaticOpts.qualifier,
      platformQualifier: unifiedPortableProfileUnifiedAccountAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedPortableProfileUnifiedAccountAriStaticOpts.resourceOwner,
      resourceType: unifiedPortableProfileUnifiedAccountAriStaticOpts.resourceType,
      resourceId: `${opts.linkedAccountInternalId}`,
      resourceIdSegmentValues: {
        linkedAccountInternalId: opts.linkedAccountInternalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileUnifiedAccountAriStaticOpts);
    return new _UnifiedPortableProfileUnifiedAccountAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileUnifiedAccountAriStaticOpts);
    return new _UnifiedPortableProfileUnifiedAccountAri(opts);
  }
  getVariables() {
    return {
      linkedAccountInternalId: this.linkedAccountInternalId
    };
  }
};

// src/unified-portable-profile/unified-profile/types.ts
var UnifiedPortableProfileUnifiedProfileAriResourceOwner = "unified-portable-profile", UnifiedPortableProfileUnifiedProfileAriResourceType = "unified-profile";

// src/unified-portable-profile/unified-profile/manifest.ts
var unifiedPortableProfileUnifiedProfileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UnifiedPortableProfileUnifiedProfileAriResourceOwner,
  resourceType: UnifiedPortableProfileUnifiedProfileAriResourceType,
  resourceIdSlug: "{unifiedProfileInternalId}",
  resourceIdSegmentFormats: {
    unifiedProfileInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/unified-portable-profile/unified-profile/index.ts
var UnifiedPortableProfileUnifiedProfileAri = class _UnifiedPortableProfileUnifiedProfileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._unifiedProfileInternalId = opts.resourceIdSegmentValues.unifiedProfileInternalId;
  }
  get unifiedProfileInternalId() {
    return this._unifiedProfileInternalId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: unifiedPortableProfileUnifiedProfileAriStaticOpts.qualifier,
      platformQualifier: unifiedPortableProfileUnifiedProfileAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: unifiedPortableProfileUnifiedProfileAriStaticOpts.resourceOwner,
      resourceType: unifiedPortableProfileUnifiedProfileAriStaticOpts.resourceType,
      resourceId: `${opts.unifiedProfileInternalId}`,
      resourceIdSegmentValues: {
        unifiedProfileInternalId: opts.unifiedProfileInternalId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileUnifiedProfileAriStaticOpts);
    return new _UnifiedPortableProfileUnifiedProfileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileUnifiedProfileAriStaticOpts);
    return new _UnifiedPortableProfileUnifiedProfileAri(opts);
  }
  getVariables() {
    return {
      unifiedProfileInternalId: this.unifiedProfileInternalId
    };
  }
};

// src/usage-tracking/usage/types.ts
var UsageTrackingUsageAriResourceOwner = "usage-tracking", UsageTrackingUsageAriResourceType = "usage";

// src/usage-tracking/usage/manifest.ts
var usageTrackingUsageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UsageTrackingUsageAriResourceOwner,
  resourceType: UsageTrackingUsageAriResourceType,
  resourceIdSlug: "{uniqueUsageId}",
  resourceIdSegmentFormats: {
    uniqueUsageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/usage-tracking/usage/index.ts
var UsageTrackingUsageAri = class _UsageTrackingUsageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._uniqueUsageId = opts.resourceIdSegmentValues.uniqueUsageId;
  }
  get uniqueUsageId() {
    return this._uniqueUsageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: usageTrackingUsageAriStaticOpts.qualifier,
      platformQualifier: usageTrackingUsageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: usageTrackingUsageAriStaticOpts.resourceOwner,
      resourceType: usageTrackingUsageAriStaticOpts.resourceType,
      resourceId: `${opts.uniqueUsageId}`,
      resourceIdSegmentValues: {
        uniqueUsageId: opts.uniqueUsageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, usageTrackingUsageAriStaticOpts);
    return new _UsageTrackingUsageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, usageTrackingUsageAriStaticOpts);
    return new _UsageTrackingUsageAri(opts);
  }
  getVariables() {
    return {
      uniqueUsageId: this.uniqueUsageId
    };
  }
};

// src/virtual-agent/configuration/types.ts
var VirtualAgentConfigurationAriResourceOwner = "virtual-agent", VirtualAgentConfigurationAriResourceType = "configuration";

// src/virtual-agent/configuration/manifest.ts
var virtualAgentConfigurationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentConfigurationAriResourceOwner,
  resourceType: VirtualAgentConfigurationAriResourceType,
  resourceIdSlug: "{activationId}/{configurationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/configuration/index.ts
var VirtualAgentConfigurationAri = class _VirtualAgentConfigurationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId;
  }
  get activationId() {
    return this._activationId;
  }
  get configurationId() {
    return this._configurationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentConfigurationAriStaticOpts.qualifier,
      platformQualifier: virtualAgentConfigurationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentConfigurationAriStaticOpts.resourceOwner,
      resourceType: virtualAgentConfigurationAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.configurationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        configurationId: opts.configurationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentConfigurationAriStaticOpts);
    return new _VirtualAgentConfigurationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentConfigurationAriStaticOpts);
    return new _VirtualAgentConfigurationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      configurationId: this.configurationId
    };
  }
};

// src/virtual-agent/conversation/types.ts
var VirtualAgentConversationAriResourceOwner = "virtual-agent", VirtualAgentConversationAriResourceType = "conversation";

// src/virtual-agent/conversation/manifest.ts
var virtualAgentConversationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentConversationAriResourceOwner,
  resourceType: VirtualAgentConversationAriResourceType,
  resourceIdSlug: "{activationId}/{configurationId}/{conversationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    conversationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/conversation/index.ts
var VirtualAgentConversationAri = class _VirtualAgentConversationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._conversationId = opts.resourceIdSegmentValues.conversationId;
  }
  get activationId() {
    return this._activationId;
  }
  get configurationId() {
    return this._configurationId;
  }
  get conversationId() {
    return this._conversationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentConversationAriStaticOpts.qualifier,
      platformQualifier: virtualAgentConversationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentConversationAriStaticOpts.resourceOwner,
      resourceType: virtualAgentConversationAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.conversationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        configurationId: opts.configurationId,
        conversationId: opts.conversationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentConversationAriStaticOpts);
    return new _VirtualAgentConversationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentConversationAriStaticOpts);
    return new _VirtualAgentConversationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      configurationId: this.configurationId,
      conversationId: this.conversationId
    };
  }
};

// src/virtual-agent/flow-editor/types.ts
var VirtualAgentFlowEditorAriResourceOwner = "virtual-agent", VirtualAgentFlowEditorAriResourceType = "flow-editor";

// src/virtual-agent/flow-editor/manifest.ts
var virtualAgentFlowEditorAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentFlowEditorAriResourceOwner,
  resourceType: VirtualAgentFlowEditorAriResourceType,
  resourceIdSlug: "{activationId}/{configurationId}/{flowEditorId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    flowEditorId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/flow-editor/index.ts
var VirtualAgentFlowEditorAri = class _VirtualAgentFlowEditorAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._flowEditorId = opts.resourceIdSegmentValues.flowEditorId;
  }
  get activationId() {
    return this._activationId;
  }
  get configurationId() {
    return this._configurationId;
  }
  get flowEditorId() {
    return this._flowEditorId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentFlowEditorAriStaticOpts.qualifier,
      platformQualifier: virtualAgentFlowEditorAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentFlowEditorAriStaticOpts.resourceOwner,
      resourceType: virtualAgentFlowEditorAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.flowEditorId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        configurationId: opts.configurationId,
        flowEditorId: opts.flowEditorId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentFlowEditorAriStaticOpts);
    return new _VirtualAgentFlowEditorAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentFlowEditorAriStaticOpts);
    return new _VirtualAgentFlowEditorAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      configurationId: this.configurationId,
      flowEditorId: this.flowEditorId
    };
  }
};

// src/virtual-agent/intent/types.ts
var VirtualAgentIntentAriResourceOwner = "virtual-agent", VirtualAgentIntentAriResourceType = "intent";

// src/virtual-agent/intent/manifest.ts
var virtualAgentIntentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentIntentAriResourceOwner,
  resourceType: VirtualAgentIntentAriResourceType,
  resourceIdSlug: "{activationId}/{intentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    intentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/intent/index.ts
var VirtualAgentIntentAri = class _VirtualAgentIntentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._intentId = opts.resourceIdSegmentValues.intentId;
  }
  get activationId() {
    return this._activationId;
  }
  get intentId() {
    return this._intentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentIntentAriStaticOpts.qualifier,
      platformQualifier: virtualAgentIntentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentIntentAriStaticOpts.resourceOwner,
      resourceType: virtualAgentIntentAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.intentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        intentId: opts.intentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentAriStaticOpts);
    return new _VirtualAgentIntentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentIntentAriStaticOpts);
    return new _VirtualAgentIntentAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      intentId: this.intentId
    };
  }
};

// src/virtual-agent/intent-question/types.ts
var VirtualAgentIntentQuestionAriResourceOwner = "virtual-agent", VirtualAgentIntentQuestionAriResourceType = "intent-question";

// src/virtual-agent/intent-question/manifest.ts
var virtualAgentIntentQuestionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentIntentQuestionAriResourceOwner,
  resourceType: VirtualAgentIntentQuestionAriResourceType,
  resourceIdSlug: "{activationId}/{intentQuestionId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    intentQuestionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/intent-question/index.ts
var VirtualAgentIntentQuestionAri = class _VirtualAgentIntentQuestionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._intentQuestionId = opts.resourceIdSegmentValues.intentQuestionId;
  }
  get activationId() {
    return this._activationId;
  }
  get intentQuestionId() {
    return this._intentQuestionId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentIntentQuestionAriStaticOpts.qualifier,
      platformQualifier: virtualAgentIntentQuestionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentIntentQuestionAriStaticOpts.resourceOwner,
      resourceType: virtualAgentIntentQuestionAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.intentQuestionId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        intentQuestionId: opts.intentQuestionId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentQuestionAriStaticOpts);
    return new _VirtualAgentIntentQuestionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentIntentQuestionAriStaticOpts);
    return new _VirtualAgentIntentQuestionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      intentQuestionId: this.intentQuestionId
    };
  }
};

// src/virtual-agent/intent-template/types.ts
var VirtualAgentIntentTemplateAriResourceOwner = "virtual-agent", VirtualAgentIntentTemplateAriResourceType = "intent-template";

// src/virtual-agent/intent-template/manifest.ts
var virtualAgentIntentTemplateAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: VirtualAgentIntentTemplateAriResourceOwner,
  resourceType: VirtualAgentIntentTemplateAriResourceType,
  resourceIdSlug: "{activationId}/{intentTemplateId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    intentTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/virtual-agent/intent-template/index.ts
var VirtualAgentIntentTemplateAri = class _VirtualAgentIntentTemplateAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._intentTemplateId = opts.resourceIdSegmentValues.intentTemplateId;
  }
  get activationId() {
    return this._activationId;
  }
  get intentTemplateId() {
    return this._intentTemplateId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: virtualAgentIntentTemplateAriStaticOpts.qualifier,
      platformQualifier: virtualAgentIntentTemplateAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: virtualAgentIntentTemplateAriStaticOpts.resourceOwner,
      resourceType: virtualAgentIntentTemplateAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.intentTemplateId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        intentTemplateId: opts.intentTemplateId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentTemplateAriStaticOpts);
    return new _VirtualAgentIntentTemplateAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, virtualAgentIntentTemplateAriStaticOpts);
    return new _VirtualAgentIntentTemplateAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      intentTemplateId: this.intentTemplateId
    };
  }
};

// src/workato/job/types.ts
var WorkatoJobAriResourceOwner = "workato", WorkatoJobAriResourceType = "job";

// src/workato/job/manifest.ts
var workatoJobAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkatoJobAriResourceOwner,
  resourceType: WorkatoJobAriResourceType,
  resourceIdSlug: "{workatoTenantKey}/{jobId}",
  resourceIdSegmentFormats: {
    workatoTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    jobId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workato/job/index.ts
var WorkatoJobAri = class _WorkatoJobAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._jobId = opts.resourceIdSegmentValues.jobId;
  }
  get workatoTenantKey() {
    return this._workatoTenantKey;
  }
  get jobId() {
    return this._jobId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workatoJobAriStaticOpts.qualifier,
      platformQualifier: workatoJobAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workatoJobAriStaticOpts.resourceOwner,
      resourceType: workatoJobAriStaticOpts.resourceType,
      resourceId: `${opts.workatoTenantKey}/${opts.jobId}`,
      resourceIdSegmentValues: {
        workatoTenantKey: opts.workatoTenantKey,
        jobId: opts.jobId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoJobAriStaticOpts);
    return new _WorkatoJobAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workatoJobAriStaticOpts);
    return new _WorkatoJobAri(opts);
  }
  getVariables() {
    return {
      workatoTenantKey: this.workatoTenantKey,
      jobId: this.jobId
    };
  }
};

// src/workato/recipe/types.ts
var WorkatoRecipeAriResourceOwner = "workato", WorkatoRecipeAriResourceType = "recipe";

// src/workato/recipe/manifest.ts
var workatoRecipeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkatoRecipeAriResourceOwner,
  resourceType: WorkatoRecipeAriResourceType,
  resourceIdSlug: "{workatoTenantKey}/{recipeId}",
  resourceIdSegmentFormats: {
    workatoTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    recipeId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workato/recipe/index.ts
var WorkatoRecipeAri = class _WorkatoRecipeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._recipeId = opts.resourceIdSegmentValues.recipeId;
  }
  get workatoTenantKey() {
    return this._workatoTenantKey;
  }
  get recipeId() {
    return this._recipeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workatoRecipeAriStaticOpts.qualifier,
      platformQualifier: workatoRecipeAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workatoRecipeAriStaticOpts.resourceOwner,
      resourceType: workatoRecipeAriStaticOpts.resourceType,
      resourceId: `${opts.workatoTenantKey}/${opts.recipeId}`,
      resourceIdSegmentValues: {
        workatoTenantKey: opts.workatoTenantKey,
        recipeId: opts.recipeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoRecipeAriStaticOpts);
    return new _WorkatoRecipeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workatoRecipeAriStaticOpts);
    return new _WorkatoRecipeAri(opts);
  }
  getVariables() {
    return {
      workatoTenantKey: this.workatoTenantKey,
      recipeId: this.recipeId
    };
  }
};

// src/workday/cost-center/types.ts
var WorkdayCostCenterAriResourceOwner = "workday", WorkdayCostCenterAriResourceType = "cost-center";

// src/workday/cost-center/manifest.ts
var workdayCostCenterAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayCostCenterAriResourceOwner,
  resourceType: WorkdayCostCenterAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{costCenterWorkdayId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    costCenterWorkdayId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/cost-center/index.ts
var WorkdayCostCenterAri = class _WorkdayCostCenterAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._costCenterWorkdayId = opts.resourceIdSegmentValues.costCenterWorkdayId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get costCenterWorkdayId() {
    return this._costCenterWorkdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayCostCenterAriStaticOpts.qualifier,
      platformQualifier: workdayCostCenterAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayCostCenterAriStaticOpts.resourceOwner,
      resourceType: workdayCostCenterAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.costCenterWorkdayId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        costCenterWorkdayId: opts.costCenterWorkdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayCostCenterAriStaticOpts);
    return new _WorkdayCostCenterAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayCostCenterAriStaticOpts);
    return new _WorkdayCostCenterAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      costCenterWorkdayId: this.costCenterWorkdayId
    };
  }
};

// src/workday/job-profile/types.ts
var WorkdayJobProfileAriResourceOwner = "workday", WorkdayJobProfileAriResourceType = "job-profile";

// src/workday/job-profile/manifest.ts
var workdayJobProfileAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayJobProfileAriResourceOwner,
  resourceType: WorkdayJobProfileAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{jobProfileWorkdayId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    jobProfileWorkdayId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/job-profile/index.ts
var WorkdayJobProfileAri = class _WorkdayJobProfileAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._jobProfileWorkdayId = opts.resourceIdSegmentValues.jobProfileWorkdayId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get jobProfileWorkdayId() {
    return this._jobProfileWorkdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayJobProfileAriStaticOpts.qualifier,
      platformQualifier: workdayJobProfileAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayJobProfileAriStaticOpts.resourceOwner,
      resourceType: workdayJobProfileAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.jobProfileWorkdayId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        jobProfileWorkdayId: opts.jobProfileWorkdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayJobProfileAriStaticOpts);
    return new _WorkdayJobProfileAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayJobProfileAriStaticOpts);
    return new _WorkdayJobProfileAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      jobProfileWorkdayId: this.jobProfileWorkdayId
    };
  }
};

// src/workday/position/types.ts
var WorkdayPositionAriResourceOwner = "workday", WorkdayPositionAriResourceType = "position";

// src/workday/position/manifest.ts
var workdayPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayPositionAriResourceOwner,
  resourceType: WorkdayPositionAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{positionWorkdayId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    positionWorkdayId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/position/index.ts
var WorkdayPositionAri = class _WorkdayPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._positionWorkdayId = opts.resourceIdSegmentValues.positionWorkdayId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get positionWorkdayId() {
    return this._positionWorkdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayPositionAriStaticOpts.qualifier,
      platformQualifier: workdayPositionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayPositionAriStaticOpts.resourceOwner,
      resourceType: workdayPositionAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.positionWorkdayId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        positionWorkdayId: opts.positionWorkdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayPositionAriStaticOpts);
    return new _WorkdayPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayPositionAriStaticOpts);
    return new _WorkdayPositionAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      positionWorkdayId: this.positionWorkdayId
    };
  }
};

// src/workday/staff/types.ts
var WorkdayStaffAriResourceOwner = "workday", WorkdayStaffAriResourceType = "staff";

// src/workday/staff/manifest.ts
var workdayStaffAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayStaffAriResourceOwner,
  resourceType: WorkdayStaffAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{staffId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    staffId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/staff/index.ts
var WorkdayStaffAri = class _WorkdayStaffAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._staffId = opts.resourceIdSegmentValues.staffId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get staffId() {
    return this._staffId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayStaffAriStaticOpts.qualifier,
      platformQualifier: workdayStaffAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayStaffAriStaticOpts.resourceOwner,
      resourceType: workdayStaffAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.staffId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        staffId: opts.staffId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayStaffAriStaticOpts);
    return new _WorkdayStaffAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayStaffAriStaticOpts);
    return new _WorkdayStaffAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      staffId: this.staffId
    };
  }
};

// src/workday/supervisory-org/types.ts
var WorkdaySupervisoryOrgAriResourceOwner = "workday", WorkdaySupervisoryOrgAriResourceType = "supervisory-org";

// src/workday/supervisory-org/manifest.ts
var workdaySupervisoryOrgAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdaySupervisoryOrgAriResourceOwner,
  resourceType: WorkdaySupervisoryOrgAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{supervisoryOrgWorkdayId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    supervisoryOrgWorkdayId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/supervisory-org/index.ts
var WorkdaySupervisoryOrgAri = class _WorkdaySupervisoryOrgAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._supervisoryOrgWorkdayId = opts.resourceIdSegmentValues.supervisoryOrgWorkdayId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get supervisoryOrgWorkdayId() {
    return this._supervisoryOrgWorkdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdaySupervisoryOrgAriStaticOpts.qualifier,
      platformQualifier: workdaySupervisoryOrgAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdaySupervisoryOrgAriStaticOpts.resourceOwner,
      resourceType: workdaySupervisoryOrgAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.supervisoryOrgWorkdayId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        supervisoryOrgWorkdayId: opts.supervisoryOrgWorkdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdaySupervisoryOrgAriStaticOpts);
    return new _WorkdaySupervisoryOrgAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdaySupervisoryOrgAriStaticOpts);
    return new _WorkdaySupervisoryOrgAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      supervisoryOrgWorkdayId: this.supervisoryOrgWorkdayId
    };
  }
};

// src/workday/worker/types.ts
var WorkdayWorkerAriResourceOwner = "workday", WorkdayWorkerAriResourceType = "worker";

// src/workday/worker/manifest.ts
var workdayWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayWorkerAriResourceOwner,
  resourceType: WorkdayWorkerAriResourceType,
  resourceIdSlug: "{workdayTenantKey}/{workerWorkdayId}",
  resourceIdSegmentFormats: {
    workdayTenantKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    workerWorkdayId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday/worker/index.ts
var WorkdayWorkerAri = class _WorkdayWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._workerWorkdayId = opts.resourceIdSegmentValues.workerWorkdayId;
  }
  get workdayTenantKey() {
    return this._workdayTenantKey;
  }
  get workerWorkdayId() {
    return this._workerWorkdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayWorkerAriStaticOpts.qualifier,
      platformQualifier: workdayWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayWorkerAriStaticOpts.resourceOwner,
      resourceType: workdayWorkerAriStaticOpts.resourceType,
      resourceId: `${opts.workdayTenantKey}/${opts.workerWorkdayId}`,
      resourceIdSegmentValues: {
        workdayTenantKey: opts.workdayTenantKey,
        workerWorkdayId: opts.workerWorkdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayWorkerAriStaticOpts);
    return new _WorkdayWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayWorkerAriStaticOpts);
    return new _WorkdayWorkerAri(opts);
  }
  getVariables() {
    return {
      workdayTenantKey: this.workdayTenantKey,
      workerWorkdayId: this.workerWorkdayId
    };
  }
};

// src/workday.workday/organisation/types.ts
var WorkdayWorkdayOrganisationAriResourceOwner = "workday.workday", WorkdayWorkdayOrganisationAriResourceType = "organisation";

// src/workday.workday/organisation/manifest.ts
var workdayWorkdayOrganisationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayWorkdayOrganisationAriResourceOwner,
  resourceType: WorkdayWorkdayOrganisationAriResourceType,
  resourceIdSlug: "{workdayId}",
  resourceIdSegmentFormats: {
    workdayId: /[a-zA-Z0-9_-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday.workday/organisation/index.ts
var WorkdayWorkdayOrganisationAri = class _WorkdayWorkdayOrganisationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayId = opts.resourceIdSegmentValues.workdayId;
  }
  get workdayId() {
    return this._workdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayWorkdayOrganisationAriStaticOpts.qualifier,
      platformQualifier: workdayWorkdayOrganisationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayWorkdayOrganisationAriStaticOpts.resourceOwner,
      resourceType: workdayWorkdayOrganisationAriStaticOpts.resourceType,
      resourceId: `${opts.workdayId}`,
      resourceIdSegmentValues: {
        workdayId: opts.workdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayWorkdayOrganisationAriStaticOpts);
    return new _WorkdayWorkdayOrganisationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayWorkdayOrganisationAriStaticOpts);
    return new _WorkdayWorkdayOrganisationAri(opts);
  }
  getVariables() {
    return {
      workdayId: this.workdayId
    };
  }
};

// src/workday.workday/position/types.ts
var WorkdayWorkdayPositionAriResourceOwner = "workday.workday", WorkdayWorkdayPositionAriResourceType = "position";

// src/workday.workday/position/manifest.ts
var workdayWorkdayPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayWorkdayPositionAriResourceOwner,
  resourceType: WorkdayWorkdayPositionAriResourceType,
  resourceIdSlug: "{workdayId}",
  resourceIdSegmentFormats: {
    workdayId: /[a-zA-Z0-9_-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday.workday/position/index.ts
var WorkdayWorkdayPositionAri = class _WorkdayWorkdayPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayId = opts.resourceIdSegmentValues.workdayId;
  }
  get workdayId() {
    return this._workdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayWorkdayPositionAriStaticOpts.qualifier,
      platformQualifier: workdayWorkdayPositionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayWorkdayPositionAriStaticOpts.resourceOwner,
      resourceType: workdayWorkdayPositionAriStaticOpts.resourceType,
      resourceId: `${opts.workdayId}`,
      resourceIdSegmentValues: {
        workdayId: opts.workdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayWorkdayPositionAriStaticOpts);
    return new _WorkdayWorkdayPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayWorkdayPositionAriStaticOpts);
    return new _WorkdayWorkdayPositionAri(opts);
  }
  getVariables() {
    return {
      workdayId: this.workdayId
    };
  }
};

// src/workday.workday/worker/types.ts
var WorkdayWorkdayWorkerAriResourceOwner = "workday.workday", WorkdayWorkdayWorkerAriResourceType = "worker";

// src/workday.workday/worker/manifest.ts
var workdayWorkdayWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: WorkdayWorkdayWorkerAriResourceOwner,
  resourceType: WorkdayWorkdayWorkerAriResourceType,
  resourceIdSlug: "{workdayId}",
  resourceIdSegmentFormats: {
    workdayId: /[a-zA-Z0-9_-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/workday.workday/worker/index.ts
var WorkdayWorkdayWorkerAri = class _WorkdayWorkdayWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workdayId = opts.resourceIdSegmentValues.workdayId;
  }
  get workdayId() {
    return this._workdayId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: workdayWorkdayWorkerAriStaticOpts.qualifier,
      platformQualifier: workdayWorkdayWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: workdayWorkdayWorkerAriStaticOpts.resourceOwner,
      resourceType: workdayWorkdayWorkerAriStaticOpts.resourceType,
      resourceId: `${opts.workdayId}`,
      resourceIdSegmentValues: {
        workdayId: opts.workdayId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayWorkdayWorkerAriStaticOpts);
    return new _WorkdayWorkdayWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, workdayWorkdayWorkerAriStaticOpts);
    return new _WorkdayWorkdayWorkerAri(opts);
  }
  getVariables() {
    return {
      workdayId: this.workdayId
    };
  }
};

// src/zendesk.zendesk/document/types.ts
var ZendeskZendeskDocumentAriResourceOwner = "zendesk.zendesk", ZendeskZendeskDocumentAriResourceType = "document";

// src/zendesk.zendesk/document/manifest.ts
var zendeskZendeskDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ZendeskZendeskDocumentAriResourceOwner,
  resourceType: ZendeskZendeskDocumentAriResourceType,
  resourceIdSlug: "domain/{domain}/article/{id}",
  resourceIdSegmentFormats: {
    domain: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    id: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/zendesk.zendesk/document/index.ts
var ZendeskZendeskDocumentAri = class _ZendeskZendeskDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domain = opts.resourceIdSegmentValues.domain, this._id = opts.resourceIdSegmentValues.id;
  }
  get domain() {
    return this._domain;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: zendeskZendeskDocumentAriStaticOpts.qualifier,
      platformQualifier: zendeskZendeskDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: zendeskZendeskDocumentAriStaticOpts.resourceOwner,
      resourceType: zendeskZendeskDocumentAriStaticOpts.resourceType,
      resourceId: `domain/${opts.domain}/article/${opts.id}`,
      resourceIdSegmentValues: {
        domain: opts.domain || "",
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, zendeskZendeskDocumentAriStaticOpts);
    return new _ZendeskZendeskDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, zendeskZendeskDocumentAriStaticOpts);
    return new _ZendeskZendeskDocumentAri(opts);
  }
  getVariables() {
    return {
      domain: this.domain,
      id: this.id
    };
  }
};

// src/zendesk.zendesk/work-item/types.ts
var ZendeskZendeskWorkItemAriResourceOwner = "zendesk.zendesk", ZendeskZendeskWorkItemAriResourceType = "work-item";

// src/zendesk.zendesk/work-item/manifest.ts
var zendeskZendeskWorkItemAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ZendeskZendeskWorkItemAriResourceOwner,
  resourceType: ZendeskZendeskWorkItemAriResourceType,
  resourceIdSlug: "domain/{domain}/ticket/{id}",
  resourceIdSegmentFormats: {
    domain: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    id: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/zendesk.zendesk/work-item/index.ts
var ZendeskZendeskWorkItemAri = class _ZendeskZendeskWorkItemAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._domain = opts.resourceIdSegmentValues.domain, this._id = opts.resourceIdSegmentValues.id;
  }
  get domain() {
    return this._domain;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: zendeskZendeskWorkItemAriStaticOpts.qualifier,
      platformQualifier: zendeskZendeskWorkItemAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: zendeskZendeskWorkItemAriStaticOpts.resourceOwner,
      resourceType: zendeskZendeskWorkItemAriStaticOpts.resourceType,
      resourceId: `domain/${opts.domain}/ticket/${opts.id}`,
      resourceIdSegmentValues: {
        domain: opts.domain || "",
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, zendeskZendeskWorkItemAriStaticOpts);
    return new _ZendeskZendeskWorkItemAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, zendeskZendeskWorkItemAriStaticOpts);
    return new _ZendeskZendeskWorkItemAri(opts);
  }
  getVariables() {
    return {
      domain: this.domain,
      id: this.id
    };
  }
};

// src/zeplin.zeplin/remote-link/types.ts
var ZeplinZeplinRemoteLinkAriResourceOwner = "zeplin.zeplin", ZeplinZeplinRemoteLinkAriResourceType = "remote-link";

// src/zeplin.zeplin/remote-link/manifest.ts
var zeplinZeplinRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ZeplinZeplinRemoteLinkAriResourceOwner,
  resourceType: ZeplinZeplinRemoteLinkAriResourceType,
  resourceIdSlug: "{remoteLinkId}",
  resourceIdSegmentFormats: {
    remoteLinkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/zeplin.zeplin/remote-link/index.ts
var ZeplinZeplinRemoteLinkAri = class _ZeplinZeplinRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;
  }
  get remoteLinkId() {
    return this._remoteLinkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: zeplinZeplinRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: zeplinZeplinRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: zeplinZeplinRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: zeplinZeplinRemoteLinkAriStaticOpts.resourceType,
      resourceId: `${opts.remoteLinkId}`,
      resourceIdSegmentValues: {
        remoteLinkId: opts.remoteLinkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, zeplinZeplinRemoteLinkAriStaticOpts);
    return new _ZeplinZeplinRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, zeplinZeplinRemoteLinkAriStaticOpts);
    return new _ZeplinZeplinRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      remoteLinkId: this.remoteLinkId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AdobeAdobexdRemoteLinkAri,
  AdobeSignDocumentAri,
  AhaAhaWorkItemAri,
  AirtableAirtableDocumentAri,
  AirtableAirtableRemoteLinkAri,
  AmplitudeAmplitudeRemoteLinkAri,
  AnalyticsUserAri,
  AnyAri,
  AppMigrationAppDataAri,
  ApprovalDeskDecisionTableAri,
  ApprovalDeskRoleAri,
  ApprovalDeskWorkflowAri,
  ApprovalDeskWorkspaceAri,
  Ari,
  Arm,
  AsanaAsanaRemoteLinkAri,
  AsanaAsanaWorkItemAri,
  Ati,
  AtlashubIdAri,
  AtlashubSiteAri,
  AtlassianWebCrawlerAtlassianWebCrawlerDocumentAri,
  AuditLogAttributeAri,
  AuditLogContainerAri,
  AuditLogContextAri,
  AuditLogEventAri,
  AuditLogWorkspaceAri,
  AutomationAutomationRuleAri,
  AutomationRoleAri,
  AvpControlAri,
  AvpDashboardAri,
  AvpDashboardChartAri,
  AvpDataShareAri,
  AvpDatasourceAri,
  AvpPipelineQueryAri,
  AvpRoleAri,
  AvpSiteAri,
  AvpSubscriptionAri,
  AvpWorkspaceAri,
  AzureDevopsAzureDevopsRemoteLinkAri,
  AzureDevopsAzureDevopsRepositoryAri,
  BeaconAlertAri,
  BeaconCustomDetectionAri,
  BeaconDetectionAri,
  BeaconDetectionSettingAri,
  BeaconRoleAri,
  BeaconSiteAri,
  BeaconSubscriptionAri,
  BeaconWorkspaceAri,
  BitbucketAppAri,
  BitbucketOauthConsumerAri,
  BitbucketProjectAri,
  BitbucketPullrequestAri,
  BitbucketRepositoryAri,
  BitbucketRepositoryTransferAri,
  BitbucketSiteAri,
  BitbucketTeamAri,
  BitbucketWorkspaceAri,
  BoxBoxDocumentAri,
  BoxBoxRemoteLinkAri,
  BrieRoleAri,
  BrieSiteAri,
  CanvaCanvaRemoteLinkAri,
  CanvasBoardAri,
  CanvasDatabaseAri,
  CanvasSiteAri,
  CanvasWorkspaceAri,
  CiaCprsEmailAri,
  CiscoWebexRemoteLinkAri,
  ClickupClickupRemoteLinkAri,
  CmdbAttributeAri,
  CmdbImportConfigurationAri,
  CmdbObjectAri,
  CmdbRoleAri,
  CmdbSchemaAri,
  CmdbTypeAri,
  CmdbWorkspaceAri,
  CommerceCatalogAccountAri,
  CommerceChangeAri,
  CommerceEntitlementAri,
  CommerceEntitlementTemplateAri,
  CommerceInitiativeAri,
  CommerceInvoiceGroupAri,
  CommerceOfferingAri,
  CommerceOfferingRelationshipTemplateAri,
  CommerceOrderAri,
  CommercePaymentMethodAri,
  CommercePricingPlanAri,
  CommerceProductAri,
  CommercePromotionAri,
  CommerceQuoteAri,
  CommerceRoleAri,
  CommerceShipToPartyAri,
  CommerceTransactionAccountAri,
  CommerceWorkbenchResourceAri,
  CompassApiEndpointAri,
  CompassAssistantAnswerAri,
  CompassCampaignAri,
  CompassComponentAri,
  CompassComponentLabelAri,
  CompassComponentLinkAri,
  CompassComponentTypeAri,
  CompassCustomFieldDefinitionAri,
  CompassDocumentAri,
  CompassDocumentationCategoryAri,
  CompassEventSourceAri,
  CompassIncomingWebhookAri,
  CompassLibraryScorecardAri,
  CompassMetricDefinitionAri,
  CompassMetricSourceAri,
  CompassPackageAri,
  CompassRoleAri,
  CompassScorecardAri,
  CompassSiteAri,
  CompassUserDefinedParameterAri,
  CompassWebhookAri,
  CompassWorkspaceAri,
  ConfluenceAdminAnnouncementBannerAri,
  ConfluenceAttachmentAri,
  ConfluenceBlogpostAri,
  ConfluenceCommentAri,
  ConfluenceContentAri,
  ConfluenceCustomContentAri,
  ConfluenceDatabaseAri,
  ConfluenceDcConfluenceDcCommentAri,
  ConfluenceDcConfluenceDcDocumentAri,
  ConfluenceDcConfluenceDcSpaceAri,
  ConfluenceEmbedAri,
  ConfluenceEventAri,
  ConfluenceFolderAri,
  ConfluenceLabelAri,
  ConfluenceLongRunningTaskAri,
  ConfluenceNoteAri,
  ConfluencePageAri,
  ConfluencePublicLinkAri,
  ConfluenceRoleAri,
  ConfluenceSiteAri,
  ConfluenceSpaceAri,
  ConfluenceTaskAri,
  ConfluenceTeamCalendarAri,
  ConfluenceUserPropertyAri,
  ConfluenceWhiteboardAri,
  ConfluenceWorkflowAri,
  ConfluenceWorkspaceAri,
  ConnectionRegistryLinkAri,
  ConversationalHelpConversationAri,
  ConversationalHelpConversationMessageAri,
  ConvoAiWorkspaceAri,
  CssXpRoleAri,
  DataLakeLakeConnectionAri,
  DevaiAutodevJobAri,
  DevaiWorkspaceAri,
  DevopsContainerAri,
  DevopsNamespaceAri,
  DevopsProviderAri,
  DevopsRelationshipAri,
  DevopsToolAri,
  DocusignDocusignDocumentAri,
  DocusignDocusignRemoteLinkAri,
  DovetailDovetailRemoteLinkAri,
  DropboxDocumentAri,
  DropboxDropboxDocumentAri,
  DropboxDropboxRemoteLinkAri,
  DropboxRemoteLinkAri,
  EcosystemAppAri,
  EcosystemAppEnvironmentVersionAri,
  EcosystemConnectAppAri,
  EcosystemConnectModuleAri,
  EcosystemEnvironmentAri,
  EcosystemExtensionAri,
  EcosystemExtensionGroupAri,
  EcosystemInstallationAri,
  EcosystemInstallationLinkAri,
  ElementsCustomEmojiMetadataAri,
  ElementsWorkspaceAri,
  ElevatePrecalibrationAri,
  ElevatePrecalibrationPillarAri,
  ElevateSelfAssessmentAri,
  ElevateSelfAssessmentPillarAri,
  ExusExternalUserAri,
  FigmaFigmaDesignAri,
  FigmaFigmaRemoteLinkAri,
  GithubGithubBranchAri,
  GithubGithubBuildAri,
  GithubGithubCommentAri,
  GithubGithubCommitAri,
  GithubGithubDeploymentAri,
  GithubGithubPullRequestAri,
  GithubGithubRemoteLinkAri,
  GithubGithubRepositoryAri,
  GithubGithubVulnerabilityAri,
  GitlabGitlabRemoteLinkAri,
  GitlabGitlabRepositoryAri,
  GoalGoalTypeAri,
  GoalMetricUpdateAri,
  GoalSiteAri,
  GoalWorkspaceAri,
  GoogleAccountAri,
  GoogleGmailMessageAri,
  GoogleGoogleCalendarCalendarEventAri,
  GoogleGoogleDriveDocumentAri,
  GoogleGoogleDriveRemoteLinkAri,
  GoogleGoogleDriveRslDocumentAri,
  GraphBranchAri,
  GraphBranchHistoryAri,
  GraphBuildAri,
  GraphBuildHistoryAri,
  GraphCalendarEventAri,
  GraphCalendarEventHistoryAri,
  GraphCommentAri,
  GraphCommentHistoryAri,
  GraphCommitAri,
  GraphContentAri,
  GraphConversationAri,
  GraphConversationChunkAri,
  GraphConversationHistoryAri,
  GraphCustomerOrgAri,
  GraphCustomerOrgHistoryAri,
  GraphDealAri,
  GraphDealHistoryAri,
  GraphDeploymentAri,
  GraphDeploymentHistoryAri,
  GraphDesignAri,
  GraphDesignHistoryAri,
  GraphDevopsComponentAri,
  GraphDocumentAri,
  GraphDocumentHistoryAri,
  GraphEmployeeAri,
  GraphEmployeeHistoryAri,
  GraphFeatureFlagAri,
  GraphFeatureFlagHistoryAri,
  GraphIncidentAri,
  GraphIncidentHistoryAri,
  GraphIntegrationContextAri,
  GraphJiraProjectAndDevopsToolRelationshipAri,
  GraphJiraProjectAndDocumentationSpaceRelationshipAri,
  GraphJiraProjectAndOperationsTeamRelationshipAri,
  GraphJiraProjectAndVcsRepositoryRelationshipAri,
  GraphMessageAri,
  GraphOperationsWorkspaceAri,
  GraphOrganisationAri,
  GraphOrganisationHistoryAri,
  GraphPositionAri,
  GraphPositionHistoryAri,
  GraphPostIncidentReviewAri,
  GraphPostIncidentReviewHistoryAri,
  GraphProjectAri,
  GraphProjectHistoryAri,
  GraphPullRequestAri,
  GraphPullRequestHistoryAri,
  GraphRelationshipTypeAri,
  GraphRemoteLinkAri,
  GraphRemoteLinkHistoryAri,
  GraphRepositoryAri,
  GraphRoleAri,
  GraphSecurityContainerAri,
  GraphSecurityWorkspaceAri,
  GraphServiceAndJiraProjectRelationshipAri,
  GraphServiceAndOperationsTeamRelationshipAri,
  GraphServiceAndVcsRepositoryRelationshipAri,
  GraphServiceAri,
  GraphServiceRelationshipAri,
  GraphSpaceAri,
  GraphSpaceHistoryAri,
  GraphThreadChunkAri,
  GraphVideoAri,
  GraphVideoHistoryAri,
  GraphVulnerabilityAri,
  GraphVulnerabilityHistoryAri,
  GraphWorkItemAri,
  GraphWorkItemHistoryAri,
  GraphWorkerAri,
  GraphWorkerHistoryAri,
  GraphWorkspaceAri,
  HelpArticleAri,
  HelpChannelAri,
  HelpHelpCenterAri,
  HelpHelpDeskAri,
  HelpLayoutAri,
  HelpPageAri,
  HelpPortalAri,
  HelpRequestFormAri,
  HelpRoleAri,
  HomeWorkspaceAri,
  HubspotHubspotCustomerOrgAri,
  HubspotHubspotDealAri,
  HubspotHubspotRemoteLinkAri,
  IdentityAppAri,
  IdentityAppGrantAri,
  IdentityAuthPolicyAri,
  IdentityCustomerDirectoryAri,
  IdentityCustomerOrganizationAri,
  IdentityDirectoryAri,
  IdentityDomainAri,
  IdentityForgeInstallationAri,
  IdentityGroupAri,
  IdentityRoleAri,
  IdentityScopedGroupAri,
  IdentityTeamAri,
  IdentityTeamMemberAri,
  IdentityThirdPartyDirectoryAri,
  IdentityThirdPartyGroupAri,
  IdentityThirdPartyUserAri,
  IdentityUserAri,
  IdentityUserGrantAri,
  IdentityUserbaseAri,
  JiraAiCrocsSentenceAri,
  JiraAiCrocsWorkspaceAri,
  JiraAlignInstanceAri,
  JiraAlignProjectAri,
  JiraAlignWorkspaceAri,
  JiraAnnouncementBannerAri,
  JiraAvailableFieldsAri,
  JiraBranchAri,
  JiraBranchHistoryAri,
  JiraBuildAri,
  JiraBuildHistoryAri,
  JiraBulkOperationTaskAri,
  JiraCommitAri,
  JiraComponentAri,
  JiraConnectAppAri,
  JiraCoreRoleAri,
  JiraCoreSiteAri,
  JiraCustomerServiceRoleAri,
  JiraCustomerServiceSiteAri,
  JiraCustomerServiceTemplateFormAri,
  JiraDashboardAri,
  JiraDcJiraDcCommentAri,
  JiraDcJiraDcProjectAri,
  JiraDcJiraDcSpaceAri,
  JiraDcJiraDcWorkItemAri,
  JiraDcSecondaryJiraDcCommentAri,
  JiraDcSecondaryJiraDcProjectAri,
  JiraDcSecondaryJiraDcSpaceAri,
  JiraDcSecondaryJiraDcWorkItemAri,
  JiraDcTertiaryJiraDcCommentAri,
  JiraDcTertiaryJiraDcProjectAri,
  JiraDcTertiaryJiraDcSpaceAri,
  JiraDcTertiaryJiraDcWorkItemAri,
  JiraDeploymentAri,
  JiraDeploymentHistoryAri,
  JiraDesignAri,
  JiraDesignHistoryAri,
  JiraDevopsComponentAri,
  JiraDocumentAri,
  JiraDocumentHistoryAri,
  JiraEntitlementAri,
  JiraEntityPropertyAri,
  JiraFavouriteAri,
  JiraFeatureFlagAri,
  JiraFeatureFlagHistoryAri,
  JiraFieldConfigurationAri,
  JiraFieldConfigurationContextAri,
  JiraFieldSetViewAri,
  JiraFilterAri,
  JiraFilterEmailSubscriptionAri,
  JiraFormAri,
  JiraIncidentAri,
  JiraIncidentHistoryAri,
  JiraIssueAri,
  JiraIssueAttachmentAri,
  JiraIssueCommentAri,
  JiraIssueFieldMetadataAri,
  JiraIssueFieldOptionAri,
  JiraIssueHistoryAri,
  JiraIssueLinkAri,
  JiraIssueLinkTypeAri,
  JiraIssueRemoteLinkAri,
  JiraIssueSearchViewAri,
  JiraIssueSearchViewTypeAri,
  JiraIssueSecurityLevelPermissionAri,
  JiraIssueStatusAri,
  JiraIssueTypeAri,
  JiraIssueTypeSchemeAri,
  JiraIssueTypeSchemeMappingAri,
  JiraIssueWorklogAri,
  JiraIssuefieldvalueAri,
  JiraNavigationConfigAri,
  JiraNavigationItemAri,
  JiraNavigationMenuAri,
  JiraNavigationSettingsAri,
  JiraNotificationTypeAri,
  JiraNotificationTypeSchemeAri,
  JiraNotificationUserPreferenceAri,
  JiraOperationsWorkspaceAri,
  JiraPermissionSchemeAri,
  JiraPlanAri,
  JiraPlanCrossProjectScenarioVersionAri,
  JiraPlanCrossProjectVersionAri,
  JiraPlanScenarioAri,
  JiraPlanScenarioIssueAri,
  JiraPlanScenarioIssueFieldAri,
  JiraPlanScenarioVersionAri,
  JiraPlaybookAri,
  JiraPlaybookInstanceAri,
  JiraPlaybookInstanceStepAri,
  JiraPlaybookLabelAri,
  JiraPlaybookStepAri,
  JiraPlaybookStepRunAri,
  JiraPostIncidentReviewAri,
  JiraPostIncidentReviewHistoryAri,
  JiraPostIncidentReviewLinkAri,
  JiraPriorityAri,
  JiraProductAri,
  JiraProjectAri,
  JiraProjectCategoryAri,
  JiraProjectFeatureAri,
  JiraProjectOverviewAri,
  JiraProjectRoleActorAri,
  JiraProjectRoleByProjectAri,
  JiraProjectShortcutAri,
  JiraProjectTypeAri,
  JiraPullRequestAri,
  JiraPullRequestHistoryAri,
  JiraRemoteLinkAri,
  JiraRemoteLinkHistoryAri,
  JiraRepositoryAri,
  JiraResolutionAri,
  JiraResourceUsageMetricAri,
  JiraResourceUsageRecommendationAri,
  JiraRoleAri,
  JiraScreenAri,
  JiraScreenSchemeAri,
  JiraScreenTabAri,
  JiraSecurityContainerAri,
  JiraSecurityLevelAri,
  JiraSecurityWorkspaceAri,
  JiraServicedeskApprovalAri,
  JiraServicedeskCalendarEventAri,
  JiraServicedeskCannedResponseAri,
  JiraServicedeskOrganizationAri,
  JiraServicedeskOrganizationMemberAri,
  JiraServicedeskQueueAri,
  JiraServicedeskRequestTypeAri,
  JiraServicedeskRoleAri,
  JiraServicedeskSiteAri,
  JiraServicedeskSlaAri,
  JiraSiteAri,
  JiraSoftwareBoardAri,
  JiraSoftwareBoardFeatureAri,
  JiraSoftwareBoardIssueListAri,
  JiraSoftwareCardAri,
  JiraSoftwareCardColorAri,
  JiraSoftwareCardLayoutAri,
  JiraSoftwareCardParentAri,
  JiraSoftwareColumnAri,
  JiraSoftwareCustomFilterAri,
  JiraSoftwareRoleAri,
  JiraSoftwareSiteAri,
  JiraSoftwareSwimlaneAri,
  JiraSoftwareUserBoardConfigAri,
  JiraSoftwareViewConfigAri,
  JiraSprintAri,
  JiraUserBroadcastMessageAri,
  JiraVersionApproverAri,
  JiraVersionAri,
  JiraViewAri,
  JiraVulnerabilityAri,
  JiraVulnerabilityHistoryAri,
  JiraWorkflowAri,
  JiraWorkflowSchemeAri,
  JiraWorkspaceAri,
  JsmChannelOrchestratorConversationAri,
  KnowledgeDiscoveryBookmarkAri,
  KnowledgeServingAndAccessTopicAri,
  LaunchdarklyLaunchdarklyRemoteLinkAri,
  LearningPlatformLearnerAri,
  LinkingPlatformDatasourceAri,
  LoginAlerterSiteAri,
  LoomCommentAri,
  LoomFolderAri,
  LoomLoomVideoAri,
  LoomMeetingAri,
  LoomMeetingRecurrenceAri,
  LoomSiteAri,
  LoomSpaceAri,
  LoomStandaloneWorkspaceAri,
  LoomVideoAri,
  LoomWorkspaceAri,
  LucidLucidchartDesignAri,
  LucidLucidchartRemoteLinkAri,
  MakerSpaceGroupAri,
  MapiRoleAri,
  MarketingCustomerDomainAri,
  MarketplaceTeamAri,
  MeasurementEmailUuidAri,
  MeasurementSiteUserAri,
  MeasurementUserAri,
  MediaFileAri,
  MercuryChangeAri,
  MercuryChangeProposalAri,
  MercuryChangeProposalStatusAri,
  MercuryCommentAri,
  MercuryFocusAreaAri,
  MercuryFocusAreaStatusUpdateAri,
  MercuryFocusAreaTypeAri,
  MercuryRoleAri,
  MercurySiteAri,
  MercuryStrategicEventAri,
  MercuryStrategicEventStatusAri,
  MercuryViewAri,
  MercuryWorkspaceAri,
  MicrosoftAccountAri,
  MicrosoftOnedriveDocumentAri,
  MicrosoftOutlookCalendarCalendarEventAri,
  MicrosoftOutlookMessageAri,
  MicrosoftPowerBiRemoteLinkAri,
  MicrosoftSharepointDocumentAri,
  MicrosoftTeamsConversationAri,
  MicrosoftTeamsMessageAri,
  MicrosoftTeamsRemoteLinkAri,
  MigrationReportCenterReportRequestProxyAri,
  MiroMiroDesignAri,
  MiroMiroRemoteLinkAri,
  MlRegistryArtifactAri,
  MondayMondayDocumentAri,
  MuralMuralRemoteLinkAri,
  NotionNotionDocumentAri,
  NotionNotionRemoteLinkAri,
  OauthClientAri,
  OpsgenieAccountLoginAri,
  OpsgenieAccountSettingsAri,
  OpsgenieAlertAri,
  OpsgenieAlertRecipientLinkAri,
  OpsgenieApiRequestMetricAri,
  OpsgenieCallRoutingAri,
  OpsgenieCustomRoleAri,
  OpsgenieDeploymentAri,
  OpsgenieDeploymentServiceLinkAri,
  OpsgenieEscalationAri,
  OpsgenieEventAri,
  OpsgenieIncidentAlertLinkAri,
  OpsgenieIncidentAri,
  OpsgenieIncidentStatusUpdateAri,
  OpsgenieIncomingCallHistoryAri,
  OpsgenieIntegrationAri,
  OpsgenieNotificationAri,
  OpsgenieRoleAri,
  OpsgenieSavedSearchAri,
  OpsgenieScheduleAri,
  OpsgenieScheduleRotationAri,
  OpsgenieSiteAri,
  OpsgenieTeamAri,
  OpsgenieTeamMemberAri,
  OpsgenieTimelineAri,
  OpsgenieWorkspaceAri,
  OrgPolicyPolicyAri,
  PagerdutyPagerdutyRemoteLinkAri,
  PapiApiAri,
  PapiRoleAri,
  PassionfruitAskActivityAri,
  PassionfruitAskAri,
  PassionfruitAskCommentAri,
  PassionfruitAskLinkAri,
  PassionfruitAskUpdateAri,
  PassionfruitDependencyAri,
  PassionfruitRoleAri,
  PassionfruitSiteAri,
  PassionfruitWorkspaceAri,
  PeopleDataCostCenterAri,
  PeopleDataJobProfileAri,
  PeopleDataPositionAri,
  PeopleDataSupervisoryOrgAri,
  PeopleDataWorkerAri,
  PeoplePerftoolCalibrationAri,
  PeoplePerftoolFeedbackAri,
  PeoplePerftoolPerformanceAri,
  PipedrivePipedriveRemoteLinkAri,
  PlatformClassificationTagAri,
  PlatformCollaborationContextAri,
  PlatformIntegrationAri,
  PlatformLifecycleResourceAri,
  PlatformLifecycleResourcePackageAri,
  PlatformLifecycleResourcePackageTypeAri,
  PlatformOrgAri,
  PlatformOrgUserAri,
  PlatformProductAri,
  PlatformSecureTunnelAri,
  PlatformServicesStreamhubSchemaAri,
  PlatformSiteAri,
  PlatformTestProvisioningEntityAri,
  PollinatorCheckAri,
  PostOfficeMessageInstanceAri,
  PostOfficeMessageTemplateAri,
  PostOfficeTriggerAri,
  ProformaHelpcenterFormAri,
  ProformaIssueFormAri,
  ProformaProjectFormAri,
  ProformaRoleAri,
  ProjectSiteAri,
  ProjectWorkspaceAri,
  PurePermissionAri,
  PureResourceAri,
  PureRoleAri,
  RadarPositionAri,
  RadarSiteAri,
  RadarWorkerAri,
  RadarWorkspaceAri,
  ResourceOwner,
  ResourceType,
  RovoAgentAri,
  RovoCustomActionAri,
  RovoFileAri,
  RovoMessageAri,
  RovoScenarioAri,
  RovoSiteAri,
  RovoWorkspaceAri,
  RuntimeAuthClientRoleAri,
  SalesforceSalesforceCustomerOrgAri,
  SalesforceSalesforceDealAri,
  SalesforceSalesforceRemoteLinkAri,
  SandboxServiceSiteAri,
  SearchEventAri,
  SearchForwardDocumentAri,
  SearchForwardDocumentSubscriptionAri,
  SearchPermissionContainerAri,
  SentrySentryRemoteLinkAri,
  ServicenowServicenowWorkItemAri,
  SettingsServiceSettingsAri,
  SlackSlackConversationAri,
  SlackSlackMessageAri,
  SmartsheetSmartsheetDocumentAri,
  SmartsheetSmartsheetRemoteLinkAri,
  SpinnakerSpinnakerDeploymentAri,
  StatuspageRoleAri,
  StatuspageSiteAri,
  StripeStripeRemoteLinkAri,
  SupportCustomerAri,
  SupportCustomerSupportAri,
  TodoistTodoistRemoteLinkAri,
  TownsquareCommentAri,
  TownsquareGoalAri,
  TownsquareGoalUpdateAri,
  TownsquareHelpPointerAri,
  TownsquareLearningAri,
  TownsquareMetricAri,
  TownsquareMetricTargetAri,
  TownsquareMetricValueAri,
  TownsquareMilestoneAri,
  TownsquareProjectAri,
  TownsquareProjectUpdateAri,
  TownsquareQuestionAri,
  TownsquareRoleAri,
  TownsquareSiteAri,
  TownsquareTagAri,
  TownsquareUpdateNoteAri,
  TownsquareWorkspaceAri,
  TrelloAttachmentAri,
  TrelloAvatarAri,
  TrelloBackgroundAri,
  TrelloBoardAri,
  TrelloCardAri,
  TrelloCheckItemAri,
  TrelloChecklistAri,
  TrelloCustomFieldAri,
  TrelloEmojiAri,
  TrelloEnterpriseAri,
  TrelloLabelAri,
  TrelloListAri,
  TrelloLogoAri,
  TrelloPlannerAri,
  TrelloPlannerCalendarAri,
  TrelloPlannerEventCardAri,
  TrelloRoleAri,
  TrelloSiteAri,
  TrelloStickerAri,
  TrelloUserAri,
  TrelloWorkspaceAri,
  TrustEngEmailAri,
  UnifiedHelpRoleAri,
  UnifiedHelpSiteAri,
  UnifiedHelpWorkspaceAri,
  UnifiedPortableProfileLinkedAccountAri,
  UnifiedPortableProfileParentAccountAri,
  UnifiedPortableProfileUnifiedAccountAri,
  UnifiedPortableProfileUnifiedProfileAri,
  UsageTrackingUsageAri,
  ValidationError,
  VirtualAgentConfigurationAri,
  VirtualAgentConversationAri,
  VirtualAgentFlowEditorAri,
  VirtualAgentIntentAri,
  VirtualAgentIntentQuestionAri,
  VirtualAgentIntentTemplateAri,
  WorkatoJobAri,
  WorkatoRecipeAri,
  WorkdayCostCenterAri,
  WorkdayJobProfileAri,
  WorkdayPositionAri,
  WorkdayStaffAri,
  WorkdaySupervisoryOrgAri,
  WorkdayWorkdayOrganisationAri,
  WorkdayWorkdayPositionAri,
  WorkdayWorkdayWorkerAri,
  WorkdayWorkerAri,
  ZendeskZendeskDocumentAri,
  ZendeskZendeskWorkItemAri,
  ZeplinZeplinRemoteLinkAri
});
