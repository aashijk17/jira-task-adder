/// <reference types="node" resolution-mode="require"/>
import { URL } from 'url';
import { BaseError, Logger } from '@forge/cli-shared';
export declare type CloudflareTunnelConfig = {
    token: string | null | undefined;
    id: string | null | undefined;
    tunnelUrl: string | null | undefined;
};
export declare type TunnelConfig = {
    port: number;
} & CloudflareTunnelConfig;
export interface CreateTunnelService {
    establishTunnel({ port, token, id, tunnelUrl }: TunnelConfig): Promise<URL>;
    closeTunnel(): Promise<void>;
}
export declare class CloudflareError extends BaseError {
}
export declare class CloudflareCreateTunnelService implements CreateTunnelService {
    private readonly logger;
    private stopFunction;
    constructor(logger: Logger);
    private handleTunnelEstablishError;
    private handleChildProcessData;
    establishTunnel({ port, id, token, tunnelUrl }: TunnelConfig): Promise<URL>;
    closeTunnel(): Promise<void>;
}
//# sourceMappingURL=create-tunnel-service.d.ts.map