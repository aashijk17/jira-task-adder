import {
  SpinnakerSpinnakerDeploymentAriResourceOwner,
  SpinnakerSpinnakerDeploymentAriResourceType
} from "./chunk-EZ6KUXWG.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/spinnaker.spinnaker/deployment/manifest.ts
var spinnakerSpinnakerDeploymentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SpinnakerSpinnakerDeploymentAriResourceOwner,
  resourceType: SpinnakerSpinnakerDeploymentAriResourceType,
  resourceIdSlug: "pipelineId/{pipelineId}/environmentId/{environmentId}/deploymentSequenceNumber/{deploymentSequenceNumber}",
  resourceIdSegmentFormats: {
    pipelineId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    environmentId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    deploymentSequenceNumber: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/spinnaker.spinnaker/deployment/index.ts
var SpinnakerSpinnakerDeploymentAri = class _SpinnakerSpinnakerDeploymentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._pipelineId = opts.resourceIdSegmentValues.pipelineId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._deploymentSequenceNumber = opts.resourceIdSegmentValues.deploymentSequenceNumber;
  }
  get pipelineId() {
    return this._pipelineId;
  }
  get environmentId() {
    return this._environmentId;
  }
  get deploymentSequenceNumber() {
    return this._deploymentSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: spinnakerSpinnakerDeploymentAriStaticOpts.qualifier,
      platformQualifier: spinnakerSpinnakerDeploymentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: spinnakerSpinnakerDeploymentAriStaticOpts.resourceOwner,
      resourceType: spinnakerSpinnakerDeploymentAriStaticOpts.resourceType,
      resourceId: `pipelineId/${opts.pipelineId}/environmentId/${opts.environmentId}/deploymentSequenceNumber/${opts.deploymentSequenceNumber}`,
      resourceIdSegmentValues: {
        pipelineId: opts.pipelineId,
        environmentId: opts.environmentId,
        deploymentSequenceNumber: opts.deploymentSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, spinnakerSpinnakerDeploymentAriStaticOpts);
    return new _SpinnakerSpinnakerDeploymentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, spinnakerSpinnakerDeploymentAriStaticOpts);
    return new _SpinnakerSpinnakerDeploymentAri(opts);
  }
  getVariables() {
    return {
      pipelineId: this.pipelineId,
      environmentId: this.environmentId,
      deploymentSequenceNumber: this.deploymentSequenceNumber
    };
  }
};

export {
  SpinnakerSpinnakerDeploymentAri
};
