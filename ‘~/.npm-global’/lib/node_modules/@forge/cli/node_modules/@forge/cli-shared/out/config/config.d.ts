import { ManifestSchema, Resources } from '@forge/manifest';
export declare const manifestFileName = "manifest.yml";
export declare const dependencyFileNames: string[];
export declare const ModuleEntryPoints: readonly ["view", "edit", "create", "contextConfig", "config", "target"];
export declare type ModuleEntryPoint = (typeof ModuleEntryPoints)[number];
export declare type BaseModule = {
    key: string;
} & {
    [entryPoint in ModuleEntryPoint]?: BaseModule;
};
export declare type HostedResourcesModule = BaseModule & {
    resource: string;
    render?: 'default' | 'native';
} & {
    [entryPoint in ModuleEntryPoint]?: HostedResourcesModule;
};
export interface ConfigReader {
    readConfig(): Promise<ManifestSchema>;
}
export interface ConfigWriter {
    writeToConfigFile<K extends string, V extends object>(configKey: K, config: V): Promise<void>;
    prependAppNameToModules(name: string): Promise<void>;
}
export declare const validateResource: (resource: any) => resource is Resources;
export declare const isHostedResourceModule: (module: any) => module is HostedResourcesModule;
//# sourceMappingURL=config.d.ts.map