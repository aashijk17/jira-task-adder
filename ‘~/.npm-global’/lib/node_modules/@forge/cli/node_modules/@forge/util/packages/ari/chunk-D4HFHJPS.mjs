import {
  CompassLibraryScorecardAriResourceOwner,
  CompassLibraryScorecardAriResourceType
} from "./chunk-TOMPOKNQ.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/compass/library-scorecard/manifest.ts
var compassLibraryScorecardAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassLibraryScorecardAriResourceOwner,
  resourceType: CompassLibraryScorecardAriResourceType,
  resourceIdSlug: "{workspaceId}/{libraryScorecardId}",
  resourceIdSegmentFormats: {
    workspaceId: /(?:builtin|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/,
    // eslint-disable-line no-useless-escape
    libraryScorecardId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/library-scorecard/index.ts
var CompassLibraryScorecardAri = class _CompassLibraryScorecardAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._optionalSiteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._libraryScorecardId = opts.resourceIdSegmentValues.libraryScorecardId;
  }
  get optionalSiteId() {
    return this._optionalSiteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get libraryScorecardId() {
    return this._libraryScorecardId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassLibraryScorecardAriStaticOpts.qualifier,
      platformQualifier: compassLibraryScorecardAriStaticOpts.platformQualifier,
      cloudId: opts.optionalSiteId,
      resourceOwner: compassLibraryScorecardAriStaticOpts.resourceOwner,
      resourceType: compassLibraryScorecardAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.libraryScorecardId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        libraryScorecardId: opts.libraryScorecardId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassLibraryScorecardAriStaticOpts);
    return new _CompassLibraryScorecardAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassLibraryScorecardAriStaticOpts);
    return new _CompassLibraryScorecardAri(opts);
  }
  getVariables() {
    return {
      optionalSiteId: this.optionalSiteId,
      workspaceId: this.workspaceId,
      libraryScorecardId: this.libraryScorecardId
    };
  }
};

export {
  CompassLibraryScorecardAri
};
