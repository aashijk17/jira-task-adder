import {
  PureResourceAriResourceOwner,
  PureResourceAriResourceType
} from "./chunk-RSU34ULO.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/pure/resource/manifest.ts
var pureResourceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PureResourceAriResourceOwner,
  resourceType: PureResourceAriResourceType,
  resourceIdSlug: "{resourceIdParam}/{childResourceId}",
  resourceIdSegmentFormats: {
    resourceIdParam: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    childResourceId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/pure/resource/index.ts
var PureResourceAri = class _PureResourceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._resourceIdParam = opts.resourceIdSegmentValues.resourceIdParam, this._childResourceId = opts.resourceIdSegmentValues.childResourceId;
  }
  get resourceIdParam() {
    return this._resourceIdParam;
  }
  get childResourceId() {
    return this._childResourceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pureResourceAriStaticOpts.qualifier,
      platformQualifier: pureResourceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pureResourceAriStaticOpts.resourceOwner,
      resourceType: pureResourceAriStaticOpts.resourceType,
      resourceId: `${opts.resourceIdParam}/${opts.childResourceId}`,
      resourceIdSegmentValues: {
        resourceIdParam: opts.resourceIdParam,
        childResourceId: opts.childResourceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pureResourceAriStaticOpts);
    return new _PureResourceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pureResourceAriStaticOpts);
    return new _PureResourceAri(opts);
  }
  getVariables() {
    return {
      resourceIdParam: this.resourceIdParam,
      childResourceId: this.childResourceId
    };
  }
};

export {
  PureResourceAri
};
