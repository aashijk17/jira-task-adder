import {
  TrelloEmojiAriResourceOwner,
  TrelloEmojiAriResourceType
} from "./chunk-UD76ND34.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/trello/emoji/manifest.ts
var trelloEmojiAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloEmojiAriResourceOwner,
  resourceType: TrelloEmojiAriResourceType,
  resourceIdSlug: "{customEmojiId}",
  resourceIdSegmentFormats: {
    customEmojiId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/emoji/index.ts
var TrelloEmojiAri = class _TrelloEmojiAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._customEmojiId = opts.resourceIdSegmentValues.customEmojiId;
  }
  get customEmojiId() {
    return this._customEmojiId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloEmojiAriStaticOpts.qualifier,
      platformQualifier: trelloEmojiAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloEmojiAriStaticOpts.resourceOwner,
      resourceType: trelloEmojiAriStaticOpts.resourceType,
      resourceId: `${opts.customEmojiId}`,
      resourceIdSegmentValues: {
        customEmojiId: opts.customEmojiId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloEmojiAriStaticOpts);
    return new _TrelloEmojiAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloEmojiAriStaticOpts);
    return new _TrelloEmojiAri(opts);
  }
  getVariables() {
    return {
      customEmojiId: this.customEmojiId
    };
  }
};

export {
  TrelloEmojiAri
};
