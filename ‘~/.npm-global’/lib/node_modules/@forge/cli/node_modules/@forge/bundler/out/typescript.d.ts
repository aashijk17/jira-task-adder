/// <reference types="node" />
/// <reference types="node" />
import { ChildProcessByStdio } from 'child_process';
import { Readable } from 'stream';
import { Logger } from '@forge/cli-shared';
import { Bundler, BundlerOutput, BundlerArgs, BundlerWatch, BundlerWatchArgs, BundlerWatchOutput } from './types';
declare type OutputProcess = ChildProcessByStdio<null, Readable, null>;
export declare abstract class TypeScriptBundler implements Bundler {
    protected readonly logger: Logger;
    constructor(logger: Logger);
    protected runTypeScript(args: BundlerArgs, outputDir: string): OutputProcess;
    protected isListedFile(line: string): string | null;
    protected getResult(args: BundlerArgs, outputDir: string, output?: string): Promise<BundlerOutput>;
    bundle(args: BundlerArgs): Promise<BundlerOutput>;
    watch(args: BundlerWatchArgs, watch: BundlerWatch): Promise<BundlerWatchOutput>;
}
export {};
//# sourceMappingURL=typescript.d.ts.map