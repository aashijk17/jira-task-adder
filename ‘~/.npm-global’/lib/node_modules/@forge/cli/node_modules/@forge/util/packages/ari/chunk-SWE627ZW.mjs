import {
  UsageTrackingUsageAriResourceOwner,
  UsageTrackingUsageAriResourceType
} from "./chunk-63SGYTKK.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/usage-tracking/usage/manifest.ts
var usageTrackingUsageAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: UsageTrackingUsageAriResourceOwner,
  resourceType: UsageTrackingUsageAriResourceType,
  resourceIdSlug: "{uniqueUsageId}",
  resourceIdSegmentFormats: {
    uniqueUsageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/usage-tracking/usage/index.ts
var UsageTrackingUsageAri = class _UsageTrackingUsageAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._uniqueUsageId = opts.resourceIdSegmentValues.uniqueUsageId;
  }
  get uniqueUsageId() {
    return this._uniqueUsageId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: usageTrackingUsageAriStaticOpts.qualifier,
      platformQualifier: usageTrackingUsageAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: usageTrackingUsageAriStaticOpts.resourceOwner,
      resourceType: usageTrackingUsageAriStaticOpts.resourceType,
      resourceId: `${opts.uniqueUsageId}`,
      resourceIdSegmentValues: {
        uniqueUsageId: opts.uniqueUsageId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, usageTrackingUsageAriStaticOpts);
    return new _UsageTrackingUsageAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, usageTrackingUsageAriStaticOpts);
    return new _UsageTrackingUsageAri(opts);
  }
  getVariables() {
    return {
      uniqueUsageId: this.uniqueUsageId
    };
  }
};

export {
  UsageTrackingUsageAri
};
