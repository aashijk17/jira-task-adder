import {
  AdobeSignDocumentAriResourceOwner,
  AdobeSignDocumentAriResourceType
} from "./chunk-WP7ILJ3M.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/adobe.sign/document/manifest.ts
var adobeSignDocumentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AdobeSignDocumentAriResourceOwner,
  resourceType: AdobeSignDocumentAriResourceType,
  resourceIdSlug: "shard/{shard}/agreement/{agreementId}",
  resourceIdSegmentFormats: {
    shard: /[a-zA-Z]{2}[0-9]{1}/,
    // eslint-disable-line no-useless-escape
    agreementId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/adobe.sign/document/index.ts
var AdobeSignDocumentAri = class _AdobeSignDocumentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._shard = opts.resourceIdSegmentValues.shard, this._agreementId = opts.resourceIdSegmentValues.agreementId;
  }
  get shard() {
    return this._shard;
  }
  get agreementId() {
    return this._agreementId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: adobeSignDocumentAriStaticOpts.qualifier,
      platformQualifier: adobeSignDocumentAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: adobeSignDocumentAriStaticOpts.resourceOwner,
      resourceType: adobeSignDocumentAriStaticOpts.resourceType,
      resourceId: `shard/${opts.shard}/agreement/${opts.agreementId}`,
      resourceIdSegmentValues: {
        shard: opts.shard,
        agreementId: opts.agreementId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, adobeSignDocumentAriStaticOpts);
    return new _AdobeSignDocumentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, adobeSignDocumentAriStaticOpts);
    return new _AdobeSignDocumentAri(opts);
  }
  getVariables() {
    return {
      shard: this.shard,
      agreementId: this.agreementId
    };
  }
};

export {
  AdobeSignDocumentAri
};
