import {
  TrelloAvatarAriResourceOwner,
  TrelloAvatarAriResourceType
} from "./chunk-S5DHPCLJ.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/trello/avatar/manifest.ts
var trelloAvatarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloAvatarAriResourceOwner,
  resourceType: TrelloAvatarAriResourceType,
  resourceIdSlug: "member/{memberId}/{avatarHash}",
  resourceIdSegmentFormats: {
    memberId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    avatarHash: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/avatar/index.ts
var TrelloAvatarAri = class _TrelloAvatarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._memberId = opts.resourceIdSegmentValues.memberId, this._avatarHash = opts.resourceIdSegmentValues.avatarHash;
  }
  get memberId() {
    return this._memberId;
  }
  get avatarHash() {
    return this._avatarHash;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloAvatarAriStaticOpts.qualifier,
      platformQualifier: trelloAvatarAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloAvatarAriStaticOpts.resourceOwner,
      resourceType: trelloAvatarAriStaticOpts.resourceType,
      resourceId: `member/${opts.memberId}/${opts.avatarHash}`,
      resourceIdSegmentValues: {
        memberId: opts.memberId || "",
        avatarHash: opts.avatarHash || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloAvatarAriStaticOpts);
    return new _TrelloAvatarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloAvatarAriStaticOpts);
    return new _TrelloAvatarAri(opts);
  }
  getVariables() {
    return {
      memberId: this.memberId,
      avatarHash: this.avatarHash
    };
  }
};

export {
  TrelloAvatarAri
};
