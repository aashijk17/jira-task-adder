import {
  ElevatePrecalibrationAriResourceOwner,
  ElevatePrecalibrationAriResourceType
} from "./chunk-M55RGK4K.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/elevate/precalibration/manifest.ts
var elevatePrecalibrationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ElevatePrecalibrationAriResourceOwner,
  resourceType: ElevatePrecalibrationAriResourceType,
  resourceIdSlug: "{precalibrationId}",
  resourceIdSegmentFormats: {
    precalibrationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/elevate/precalibration/index.ts
var ElevatePrecalibrationAri = class _ElevatePrecalibrationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._precalibrationId = opts.resourceIdSegmentValues.precalibrationId;
  }
  get siteId() {
    return this._siteId;
  }
  get precalibrationId() {
    return this._precalibrationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: elevatePrecalibrationAriStaticOpts.qualifier,
      platformQualifier: elevatePrecalibrationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: elevatePrecalibrationAriStaticOpts.resourceOwner,
      resourceType: elevatePrecalibrationAriStaticOpts.resourceType,
      resourceId: `${opts.precalibrationId}`,
      resourceIdSegmentValues: {
        precalibrationId: opts.precalibrationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, elevatePrecalibrationAriStaticOpts);
    return new _ElevatePrecalibrationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, elevatePrecalibrationAriStaticOpts);
    return new _ElevatePrecalibrationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      precalibrationId: this.precalibrationId
    };
  }
};

export {
  ElevatePrecalibrationAri
};
