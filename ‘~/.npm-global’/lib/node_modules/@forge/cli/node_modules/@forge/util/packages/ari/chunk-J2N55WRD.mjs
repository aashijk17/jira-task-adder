import {
  LearningPlatformLearnerAriResourceOwner,
  LearningPlatformLearnerAriResourceType
} from "./chunk-73GNYBI5.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/learning-platform/learner/manifest.ts
var learningPlatformLearnerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LearningPlatformLearnerAriResourceOwner,
  resourceType: LearningPlatformLearnerAriResourceType,
  resourceIdSlug: "{learnerId}",
  resourceIdSegmentFormats: {
    learnerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/learning-platform/learner/index.ts
var LearningPlatformLearnerAri = class _LearningPlatformLearnerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._learnerId = opts.resourceIdSegmentValues.learnerId;
  }
  get learnerId() {
    return this._learnerId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: learningPlatformLearnerAriStaticOpts.qualifier,
      platformQualifier: learningPlatformLearnerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: learningPlatformLearnerAriStaticOpts.resourceOwner,
      resourceType: learningPlatformLearnerAriStaticOpts.resourceType,
      resourceId: `${opts.learnerId}`,
      resourceIdSegmentValues: {
        learnerId: opts.learnerId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, learningPlatformLearnerAriStaticOpts);
    return new _LearningPlatformLearnerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, learningPlatformLearnerAriStaticOpts);
    return new _LearningPlatformLearnerAri(opts);
  }
  getVariables() {
    return {
      learnerId: this.learnerId
    };
  }
};

export {
  LearningPlatformLearnerAri
};
