import {
  GraphOrganisationAriResourceOwner,
  GraphOrganisationAriResourceType
} from "./chunk-XNVBEJRP.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/organisation/manifest.ts
var graphOrganisationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphOrganisationAriResourceOwner,
  resourceType: GraphOrganisationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organisationUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organisationUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/organisation/index.ts
var GraphOrganisationAri = class _GraphOrganisationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organisationUUID = opts.resourceIdSegmentValues.organisationUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get organisationUUID() {
    return this._organisationUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphOrganisationAriStaticOpts.qualifier,
      platformQualifier: graphOrganisationAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphOrganisationAriStaticOpts.resourceOwner,
      resourceType: graphOrganisationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organisationUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organisationUUID: opts.organisationUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphOrganisationAriStaticOpts);
    return new _GraphOrganisationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphOrganisationAriStaticOpts);
    return new _GraphOrganisationAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organisationUUID: this.organisationUUID
    };
  }
};

export {
  GraphOrganisationAri
};
