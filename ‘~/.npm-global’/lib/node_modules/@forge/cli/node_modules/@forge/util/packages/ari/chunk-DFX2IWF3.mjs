import {
  PlatformProductAriResourceOwner,
  PlatformProductAriResourceType
} from "./chunk-EAIJCZUC.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/platform/product/manifest.ts
var platformProductAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PlatformProductAriResourceOwner,
  resourceType: PlatformProductAriResourceType,
  resourceIdSlug: "{integrationKey}/{productKey}",
  resourceIdSegmentFormats: {
    integrationKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    productKey: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/platform/product/index.ts
var PlatformProductAri = class _PlatformProductAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._integrationKey = opts.resourceIdSegmentValues.integrationKey, this._productKey = opts.resourceIdSegmentValues.productKey;
  }
  get integrationKey() {
    return this._integrationKey;
  }
  get productKey() {
    return this._productKey;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: platformProductAriStaticOpts.qualifier,
      platformQualifier: platformProductAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: platformProductAriStaticOpts.resourceOwner,
      resourceType: platformProductAriStaticOpts.resourceType,
      resourceId: `${opts.integrationKey}/${opts.productKey}`,
      resourceIdSegmentValues: {
        integrationKey: opts.integrationKey,
        productKey: opts.productKey
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, platformProductAriStaticOpts);
    return new _PlatformProductAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, platformProductAriStaticOpts);
    return new _PlatformProductAri(opts);
  }
  getVariables() {
    return {
      integrationKey: this.integrationKey,
      productKey: this.productKey
    };
  }
};

export {
  PlatformProductAri
};
