import {
  GraphWorkItemHistoryAriResourceOwner,
  GraphWorkItemHistoryAriResourceType
} from "./chunk-BGX5LTB4.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/work-item-history/manifest.ts
var graphWorkItemHistoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkItemHistoryAriResourceOwner,
  resourceType: GraphWorkItemHistoryAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workItemId}/{updateSequenceNumber}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workItemId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    updateSequenceNumber: /\d+/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/work-item-history/index.ts
var GraphWorkItemHistoryAri = class _GraphWorkItemHistoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workItemId = opts.resourceIdSegmentValues.workItemId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;
  }
  get activationId() {
    return this._activationId;
  }
  get workItemId() {
    return this._workItemId;
  }
  get updateSequenceNumber() {
    return this._updateSequenceNumber;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkItemHistoryAriStaticOpts.qualifier,
      platformQualifier: graphWorkItemHistoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkItemHistoryAriStaticOpts.resourceOwner,
      resourceType: graphWorkItemHistoryAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workItemId}/${opts.updateSequenceNumber}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workItemId: opts.workItemId,
        updateSequenceNumber: opts.updateSequenceNumber
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkItemHistoryAriStaticOpts);
    return new _GraphWorkItemHistoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkItemHistoryAriStaticOpts);
    return new _GraphWorkItemHistoryAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workItemId: this.workItemId,
      updateSequenceNumber: this.updateSequenceNumber
    };
  }
};

export {
  GraphWorkItemHistoryAri
};
