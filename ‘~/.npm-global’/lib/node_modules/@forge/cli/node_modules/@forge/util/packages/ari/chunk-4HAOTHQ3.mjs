import {
  JiraCustomerServiceTemplateFormAriResourceOwner,
  JiraCustomerServiceTemplateFormAriResourceType
} from "./chunk-WCOH2IPR.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira-customer-service/template-form/manifest.ts
var jiraCustomerServiceTemplateFormAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraCustomerServiceTemplateFormAriResourceOwner,
  resourceType: JiraCustomerServiceTemplateFormAriResourceType,
  resourceIdSlug: "activation/{activationId}/{templateFormId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    templateFormId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-customer-service/template-form/index.ts
var JiraCustomerServiceTemplateFormAri = class _JiraCustomerServiceTemplateFormAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._templateFormId = opts.resourceIdSegmentValues.templateFormId;
  }
  get activationId() {
    return this._activationId;
  }
  get templateFormId() {
    return this._templateFormId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraCustomerServiceTemplateFormAriStaticOpts.qualifier,
      platformQualifier: jiraCustomerServiceTemplateFormAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraCustomerServiceTemplateFormAriStaticOpts.resourceOwner,
      resourceType: jiraCustomerServiceTemplateFormAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.templateFormId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        templateFormId: opts.templateFormId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCustomerServiceTemplateFormAriStaticOpts);
    return new _JiraCustomerServiceTemplateFormAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraCustomerServiceTemplateFormAriStaticOpts);
    return new _JiraCustomerServiceTemplateFormAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      templateFormId: this.templateFormId
    };
  }
};

export {
  JiraCustomerServiceTemplateFormAri
};
