"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateBackendModuleEndpoints = void 0;
const text_1 = require("../../../text");
const types_1 = require("../../../types");
const utils_1 = require("../../../utils");
const validateBackendModuleEndpoints = (modules, yamlContentByLine) => {
    const endpoints = modules.endpoint ?? [];
    const validationErrors = [];
    const backendModulesWithEndpoint = modules[types_1.AllModuleTypes.BitbucketMergeCheck]?.filter((module) => module.endpoint != null) || [];
    backendModulesWithEndpoint.forEach((module) => {
        const endpointModule = endpoints?.find((remoteEndpoint) => remoteEndpoint.key === module.endpoint);
        if (endpointModule) {
            if (endpointModule.auth?.appUserToken?.enabled) {
                validationErrors.push({
                    message: text_1.errors.modules.bitbucket.endpointOnlySupportSystemToken(module.key, endpointModule.key),
                    reference: text_1.References.Modules,
                    level: 'error',
                    ...(0, utils_1.findPosition)(endpointModule.key, yamlContentByLine)
                });
            }
            if (!endpointModule.route) {
                validationErrors.push({
                    message: text_1.errors.modules.bitbucket.endpointNeedsRoute(module.key, endpointModule.key),
                    reference: text_1.References.Modules,
                    level: 'error',
                    ...(0, utils_1.findPosition)(endpointModule.key, yamlContentByLine)
                });
            }
        }
    });
    return validationErrors;
};
exports.validateBackendModuleEndpoints = validateBackendModuleEndpoints;
