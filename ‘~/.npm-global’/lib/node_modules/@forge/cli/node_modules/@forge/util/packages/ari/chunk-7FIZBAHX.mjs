import {
  ClickupClickupRemoteLinkAriResourceOwner,
  ClickupClickupRemoteLinkAriResourceType
} from "./chunk-TZ6DZWZ5.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/clickup.clickup/remote-link/manifest.ts
var clickupClickupRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: ClickupClickupRemoteLinkAriResourceOwner,
  resourceType: ClickupClickupRemoteLinkAriResourceType,
  resourceIdSlug: "task/{taskId}",
  resourceIdSegmentFormats: {
    taskId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/clickup.clickup/remote-link/index.ts
var ClickupClickupRemoteLinkAri = class _ClickupClickupRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._taskId = opts.resourceIdSegmentValues.taskId;
  }
  get taskId() {
    return this._taskId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: clickupClickupRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: clickupClickupRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: clickupClickupRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: clickupClickupRemoteLinkAriStaticOpts.resourceType,
      resourceId: `task/${opts.taskId}`,
      resourceIdSegmentValues: {
        taskId: opts.taskId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, clickupClickupRemoteLinkAriStaticOpts);
    return new _ClickupClickupRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, clickupClickupRemoteLinkAriStaticOpts);
    return new _ClickupClickupRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      taskId: this.taskId
    };
  }
};

export {
  ClickupClickupRemoteLinkAri
};
