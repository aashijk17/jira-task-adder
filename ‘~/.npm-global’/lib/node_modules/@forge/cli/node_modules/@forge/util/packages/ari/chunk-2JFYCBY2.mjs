import {
  DropboxDropboxRemoteLinkAriResourceOwner,
  DropboxDropboxRemoteLinkAriResourceType
} from "./chunk-MMP7HB35.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/dropbox.dropbox/remote-link/manifest.ts
var dropboxDropboxRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DropboxDropboxRemoteLinkAriResourceOwner,
  resourceType: DropboxDropboxRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/dropbox.dropbox/remote-link/index.ts
var DropboxDropboxRemoteLinkAri = class _DropboxDropboxRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: dropboxDropboxRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: dropboxDropboxRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: dropboxDropboxRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: dropboxDropboxRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, dropboxDropboxRemoteLinkAriStaticOpts);
    return new _DropboxDropboxRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, dropboxDropboxRemoteLinkAriStaticOpts);
    return new _DropboxDropboxRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

export {
  DropboxDropboxRemoteLinkAri
};
