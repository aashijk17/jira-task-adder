import { ManifestSchema as Manifest } from '@forge/manifest';
import BaseLinter from '../../base-linter';
import { LintFixState, LintLogger, LintResultRule } from '../../linter-interface';
import { ApiCall, SqlCall } from './api-call-interface';
interface StorageModuleLintCriteriaMatches {
    [key: string]: ApiCall[];
    sql: SqlCall[];
}
export declare const fixMissingModules: (errors: LintResultRule[], warnings: LintResultRule[], state: LintFixState) => Promise<LintFixState>;
export declare class StorageModulesLinter extends BaseLinter<ApiCall, StorageModuleLintCriteriaMatches, ApiCall[]> {
    private manifest;
    constructor(environment: string, manifest: Manifest, logger: LintLogger);
    bootstrap(): Promise<void>;
    protected setupMatchesMap(filepath: string): void;
    protected getFixer(): ((errors: LintResultRule[], warnings: LintResultRule[], state: LintFixState) => Promise<LintFixState>) | undefined;
    protected addLintCriteriaMatch(apiCall: ApiCall, filepath: string): void;
}
export {};
//# sourceMappingURL=storage-module-linter.d.ts.map