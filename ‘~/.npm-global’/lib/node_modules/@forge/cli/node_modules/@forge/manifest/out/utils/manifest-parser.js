"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManifestParser = exports.ManifestParserError = void 0;
const yaml_1 = require("yaml");
const manifest_interpolator_1 = require("../interpolator/manifest-interpolator");
const yamlConfigOptions = { indent: 2, skipInvalid: true };
class ManifestParserError extends Error {
    constructor(message) {
        super(message);
    }
    getAttributes() {
        return {
            isUserError: true
        };
    }
}
exports.ManifestParserError = ManifestParserError;
class ManifestParser {
    manifestInterpolator;
    constructor(manifestInterpolator) {
        this.manifestInterpolator = manifestInterpolator;
    }
    parseManifest(input) {
        try {
            return this.manifestInterpolator.interpolate(input);
        }
        catch (error) {
            if (error instanceof manifest_interpolator_1.ManifestInterpolatorError) {
                throw new ManifestParserError(error.message);
            }
            throw error;
        }
    }
    parseManifestAsString(input) {
        return (0, yaml_1.stringify)(this.parseManifest(input), yamlConfigOptions);
    }
}
exports.ManifestParser = ManifestParser;
