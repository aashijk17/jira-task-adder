import {
  MercuryStrategicEventStatusAriResourceOwner,
  MercuryStrategicEventStatusAriResourceType
} from "./chunk-UKGLFGAS.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/mercury/strategic-event-status/manifest.ts
var mercuryStrategicEventStatusAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventStatusAriResourceOwner,
  resourceType: MercuryStrategicEventStatusAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventStatusId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventStatusId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event-status/index.ts
var MercuryStrategicEventStatusAri = class _MercuryStrategicEventStatusAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventStatusId = opts.resourceIdSegmentValues.strategicEventStatusId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventStatusId() {
    return this._strategicEventStatusId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventStatusAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventStatusAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventStatusAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventStatusAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventStatusId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventStatusId: opts.strategicEventStatusId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventStatusAriStaticOpts);
    return new _MercuryStrategicEventStatusAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventStatusId: this.strategicEventStatusId
    };
  }
};

export {
  MercuryStrategicEventStatusAri
};
