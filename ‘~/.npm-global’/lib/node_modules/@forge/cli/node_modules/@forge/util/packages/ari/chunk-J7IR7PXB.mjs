import {
  JiraProjectRoleByProjectAriResourceOwner,
  JiraProjectRoleByProjectAriResourceType
} from "./chunk-PTWREV4M.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira/project-role-by-project/manifest.ts
var jiraProjectRoleByProjectAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraProjectRoleByProjectAriResourceOwner,
  resourceType: JiraProjectRoleByProjectAriResourceType,
  resourceIdSlug: "activation/{activationId}/project/{projectId}/projectrole/{projectRoleId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    projectRoleId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/project-role-by-project/index.ts
var JiraProjectRoleByProjectAri = class _JiraProjectRoleByProjectAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._projectRoleId = opts.resourceIdSegmentValues.projectRoleId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get projectRoleId() {
    return this._projectRoleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraProjectRoleByProjectAriStaticOpts.qualifier,
      platformQualifier: jiraProjectRoleByProjectAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraProjectRoleByProjectAriStaticOpts.resourceOwner,
      resourceType: jiraProjectRoleByProjectAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/project/${opts.projectId}/projectrole/${opts.projectRoleId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        projectRoleId: opts.projectRoleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectRoleByProjectAriStaticOpts);
    return new _JiraProjectRoleByProjectAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraProjectRoleByProjectAriStaticOpts);
    return new _JiraProjectRoleByProjectAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      projectId: this.projectId,
      projectRoleId: this.projectRoleId
    };
  }
};

export {
  JiraProjectRoleByProjectAri
};
