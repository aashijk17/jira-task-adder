import {
  LoomStandaloneWorkspaceAriResourceOwner,
  LoomStandaloneWorkspaceAriResourceType
} from "./chunk-3ZOKMD7Z.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/loom/standalone-workspace/manifest.ts
var loomStandaloneWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomStandaloneWorkspaceAriResourceOwner,
  resourceType: LoomStandaloneWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/standalone-workspace/index.ts
var LoomStandaloneWorkspaceAri = class _LoomStandaloneWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomStandaloneWorkspaceAriStaticOpts.qualifier,
      platformQualifier: loomStandaloneWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomStandaloneWorkspaceAriStaticOpts.resourceOwner,
      resourceType: loomStandaloneWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

export {
  LoomStandaloneWorkspaceAri
};
