import {
  HelpRoleAriResourceOwner,
  HelpRoleAriResourceType
} from "./chunk-TEJV4KBV.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/help/role/manifest.ts
var helpRoleAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: HelpRoleAriResourceOwner,
  resourceType: HelpRoleAriResourceType,
  resourceIdSlug: "{roleId}",
  resourceIdSegmentFormats: {
    roleId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/help/role/index.ts
var HelpRoleAri = class _HelpRoleAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._roleId = opts.resourceIdSegmentValues.roleId;
  }
  get roleId() {
    return this._roleId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: helpRoleAriStaticOpts.qualifier,
      platformQualifier: helpRoleAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: helpRoleAriStaticOpts.resourceOwner,
      resourceType: helpRoleAriStaticOpts.resourceType,
      resourceId: `${opts.roleId}`,
      resourceIdSegmentValues: {
        roleId: opts.roleId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, helpRoleAriStaticOpts);
    return new _HelpRoleAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, helpRoleAriStaticOpts);
    return new _HelpRoleAri(opts);
  }
  getVariables() {
    return {
      roleId: this.roleId
    };
  }
};

export {
  HelpRoleAri
};
