import {
  GoogleGoogleDriveRemoteLinkAriResourceOwner,
  GoogleGoogleDriveRemoteLinkAriResourceType
} from "./chunk-ZI2F7BAC.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/google.google-drive/remote-link/manifest.ts
var googleGoogleDriveRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GoogleGoogleDriveRemoteLinkAriResourceOwner,
  resourceType: GoogleGoogleDriveRemoteLinkAriResourceType,
  resourceIdSlug: "file/{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/google.google-drive/remote-link/index.ts
var GoogleGoogleDriveRemoteLinkAri = class _GoogleGoogleDriveRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: googleGoogleDriveRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: googleGoogleDriveRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: googleGoogleDriveRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: googleGoogleDriveRemoteLinkAriStaticOpts.resourceType,
      resourceId: `file/${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, googleGoogleDriveRemoteLinkAriStaticOpts);
    return new _GoogleGoogleDriveRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, googleGoogleDriveRemoteLinkAriStaticOpts);
    return new _GoogleGoogleDriveRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

export {
  GoogleGoogleDriveRemoteLinkAri
};
