import {
  AuditLogEventAriResourceOwner,
  AuditLogEventAriResourceType
} from "./chunk-S2JTDYO4.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/audit-log/event/manifest.ts
var auditLogEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AuditLogEventAriResourceOwner,
  resourceType: AuditLogEventAriResourceType,
  resourceIdSlug: "{eventId}",
  resourceIdSegmentFormats: {
    eventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/audit-log/event/index.ts
var AuditLogEventAri = class _AuditLogEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._eventId = opts.resourceIdSegmentValues.eventId;
  }
  get eventId() {
    return this._eventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: auditLogEventAriStaticOpts.qualifier,
      platformQualifier: auditLogEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: auditLogEventAriStaticOpts.resourceOwner,
      resourceType: auditLogEventAriStaticOpts.resourceType,
      resourceId: `${opts.eventId}`,
      resourceIdSegmentValues: {
        eventId: opts.eventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, auditLogEventAriStaticOpts);
    return new _AuditLogEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, auditLogEventAriStaticOpts);
    return new _AuditLogEventAri(opts);
  }
  getVariables() {
    return {
      eventId: this.eventId
    };
  }
};

export {
  AuditLogEventAri
};
