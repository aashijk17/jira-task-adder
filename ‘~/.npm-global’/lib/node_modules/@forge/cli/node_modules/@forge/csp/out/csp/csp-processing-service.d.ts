import type { Logger } from '@forge/cli-shared';
import type { Permissions } from '@forge/manifest';
import type { CheerioAPI, CheerioOptions } from 'cheerio/slim';
import { ContentPermissions, CSPDetails, DocumentBody } from '../types';
declare type CheerioLoader = (document: DocumentBody, options?: CheerioOptions) => CheerioAPI;
export declare class InvalidConnectSrc extends Error {
    constructor();
}
export declare class CSPProcessingService {
    private readonly logger;
    private readonly cheerioLoader;
    private STYLE_SRC_ALLOWLIST;
    private QUOTED_SCRIPT_SRC_ALLOWLIST;
    private UNQUOTED_SCRIPT_SRC_ALLOWLIST;
    private SCRIPT_SRC_ALLOWLIST;
    private BASE_64_HASH_PATTERNS;
    constructor(logger: Pick<Logger, 'info'>, cheerioLoader: CheerioLoader);
    getCspDetails(body: DocumentBody, permissions: Permissions): CSPDetails;
    getInvalidCspPermissions(contentPermissions: ContentPermissions): string[];
    private assertValidFetchClient;
    private egressesToStringMap;
    private mapExternalPermissionsToCsp;
    private getStyleSrc;
    private getScriptSrc;
    private extractUniqueHashes;
    private getInlineScriptHashes;
    private hashScript;
    private formatScriptSrc;
    private isValidUserScriptSrc;
    private isValidUserStyleSrc;
    private isSafeCsp;
    private isValidHash;
    private getDeprecatedUserCsp;
}
export {};
//# sourceMappingURL=csp-processing-service.d.ts.map