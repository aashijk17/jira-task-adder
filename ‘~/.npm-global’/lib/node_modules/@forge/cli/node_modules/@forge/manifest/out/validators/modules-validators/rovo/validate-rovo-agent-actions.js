"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateRovoAgentActions = void 0;
const types_1 = require("../../../types");
const text_1 = require("../../../text");
const utils_1 = require("../../../utils");
const validateRovoAgentActions = (allModules, yamlContentByLine) => {
    const validationErrors = [];
    const rovoAgents = allModules[types_1.AllModuleTypes.RovoAgent];
    const actionKey = (0, utils_1.cleanKey)(types_1.AllModuleTypes.CoreAction);
    const actions = allModules[actionKey]?.map((action) => action.key) ?? [];
    rovoAgents?.forEach((agent) => {
        agent.actions?.forEach((action) => {
            if (!actions.includes(action)) {
                validationErrors.push(getValidationError(agent.key, action, yamlContentByLine));
            }
        });
    });
    return validationErrors;
};
exports.validateRovoAgentActions = validateRovoAgentActions;
function getValidationError(agent, action, yamlContentByLine) {
    return {
        message: text_1.errors.modules.rovo.incorrectAgentActionReference(agent, action),
        reference: text_1.References.Modules,
        level: 'error',
        ...(0, utils_1.findPosition)(agent, yamlContentByLine)
    };
}
