import {
  CompassComponentTypeAriResourceOwner,
  CompassComponentTypeAriResourceType
} from "./chunk-A55S5SEK.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/compass/component-type/manifest.ts
var compassComponentTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CompassComponentTypeAriResourceOwner,
  resourceType: CompassComponentTypeAriResourceType,
  resourceIdSlug: "{workspaceId}/{typeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    typeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/compass/component-type/index.ts
var CompassComponentTypeAri = class _CompassComponentTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._typeId = opts.resourceIdSegmentValues.typeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get typeId() {
    return this._typeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: compassComponentTypeAriStaticOpts.qualifier,
      platformQualifier: compassComponentTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: compassComponentTypeAriStaticOpts.resourceOwner,
      resourceType: compassComponentTypeAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}/${opts.typeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        typeId: opts.typeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentTypeAriStaticOpts);
    return new _CompassComponentTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, compassComponentTypeAriStaticOpts);
    return new _CompassComponentTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      typeId: this.typeId
    };
  }
};

export {
  CompassComponentTypeAri
};
