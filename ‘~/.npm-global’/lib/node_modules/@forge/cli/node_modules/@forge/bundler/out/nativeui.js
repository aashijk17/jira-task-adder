"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NativeUIBundler = void 0;
const nativeui_1 = require("./config/nativeui");
const types_1 = require("./types");
const webpack_1 = require("./webpack");
class NativeUIBundler extends webpack_1.WebpackBundler {
    async getConfig({ entryPoints, i18nConfig }) {
        return (0, nativeui_1.getNativeUiBuildConfig)(entryPoints, i18nConfig);
    }
    async bundleResources(resources, i18nConfig) {
        const nativeUiBundlesDetails = [];
        let combinedMetadata = (0, types_1.emptyMetadata)();
        await Promise.all(resources.map(async (resource) => {
            const entryPoint = {
                name: resource.key,
                path: resource.path
            };
            let bundlerOutput;
            try {
                bundlerOutput = await this.bundle({
                    appDirectory: '',
                    entryPoints: [entryPoint],
                    i18nConfig
                });
            }
            catch (e) {
                throw new types_1.BundlerError(e.message);
            }
            const { outputDir, metadata } = bundlerOutput;
            this.logger.debug(`NativeUI bundle created: ${outputDir}`);
            nativeUiBundlesDetails.push({
                ...resource,
                path: outputDir
            });
            if (metadata) {
                combinedMetadata = (0, types_1.mergeMetadata)(combinedMetadata, metadata);
            }
        }));
        return {
            nativeUiBundlesDetails,
            metadata: combinedMetadata
        };
    }
}
exports.NativeUIBundler = NativeUIBundler;
