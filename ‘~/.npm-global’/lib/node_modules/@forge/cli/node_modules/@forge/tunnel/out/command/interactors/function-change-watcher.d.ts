import { ConfigFile, Logger, TunnelOptions } from '@forge/cli-shared';
import { BundlerOutput } from '@forge/bundler';
import { Sandbox, SandboxConfig } from '@forge/runtime';
export interface FunctionChangeWatcher {
    startWatching(bundledCode: BundlerOutput, tunnelOptions: TunnelOptions): Promise<void>;
    stopWatching(): Promise<void>;
}
export declare const MEMORY_LIMIT = 256;
export declare class LocalFunctionHost implements FunctionChangeWatcher {
    private readonly configFile;
    private readonly logger;
    private readonly createSandbox;
    private currentTunnelOptions;
    constructor(configFile: ConfigFile, logger: Logger, createSandbox: (cfg: SandboxConfig) => Promise<Sandbox>);
    startWatching(bundledCode: BundlerOutput, tunnelOptions?: TunnelOptions): Promise<void>;
    stopWatching(): Promise<void>;
    private onRuntimeLog;
    private runAssistantErrorAnalysis;
    private initializeSandboxes;
    static getDebuggerPort(modName: string, handler: string, tunnelOptions: TunnelOptions): number | undefined;
}
//# sourceMappingURL=function-change-watcher.d.ts.map