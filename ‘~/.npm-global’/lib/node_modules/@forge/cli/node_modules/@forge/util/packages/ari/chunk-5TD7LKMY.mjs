import {
  MercuryStrategicEventAriResourceOwner,
  MercuryStrategicEventAriResourceType
} from "./chunk-AQRHDNVH.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/mercury/strategic-event/manifest.ts
var mercuryStrategicEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryStrategicEventAriResourceOwner,
  resourceType: MercuryStrategicEventAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{strategicEventId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    strategicEventId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/strategic-event/index.ts
var MercuryStrategicEventAri = class _MercuryStrategicEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._strategicEventId = opts.resourceIdSegmentValues.strategicEventId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get strategicEventId() {
    return this._strategicEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryStrategicEventAriStaticOpts.qualifier,
      platformQualifier: mercuryStrategicEventAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryStrategicEventAriStaticOpts.resourceOwner,
      resourceType: mercuryStrategicEventAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.strategicEventId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        strategicEventId: opts.strategicEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryStrategicEventAriStaticOpts);
    return new _MercuryStrategicEventAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      strategicEventId: this.strategicEventId
    };
  }
};

export {
  MercuryStrategicEventAri
};
