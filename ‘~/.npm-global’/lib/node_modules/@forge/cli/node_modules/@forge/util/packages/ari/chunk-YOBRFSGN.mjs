import {
  JiraIssueSecurityLevelPermissionAriResourceOwner,
  JiraIssueSecurityLevelPermissionAriResourceType
} from "./chunk-RHQOSNHG.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira/issue-security-level-permission/manifest.ts
var jiraIssueSecurityLevelPermissionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraIssueSecurityLevelPermissionAriResourceOwner,
  resourceType: JiraIssueSecurityLevelPermissionAriResourceType,
  resourceIdSlug: "activation/{activationId}/project/{projectId}/{securityLevelId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9]+/,
    // eslint-disable-line no-useless-escape
    securityLevelId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/issue-security-level-permission/index.ts
var JiraIssueSecurityLevelPermissionAri = class _JiraIssueSecurityLevelPermissionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;
  }
  get activationId() {
    return this._activationId;
  }
  get projectId() {
    return this._projectId;
  }
  get securityLevelId() {
    return this._securityLevelId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraIssueSecurityLevelPermissionAriStaticOpts.qualifier,
      platformQualifier: jiraIssueSecurityLevelPermissionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraIssueSecurityLevelPermissionAriStaticOpts.resourceOwner,
      resourceType: jiraIssueSecurityLevelPermissionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/project/${opts.projectId}/${opts.securityLevelId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        projectId: opts.projectId,
        securityLevelId: opts.securityLevelId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSecurityLevelPermissionAriStaticOpts);
    return new _JiraIssueSecurityLevelPermissionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraIssueSecurityLevelPermissionAriStaticOpts);
    return new _JiraIssueSecurityLevelPermissionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      projectId: this.projectId,
      securityLevelId: this.securityLevelId
    };
  }
};

export {
  JiraIssueSecurityLevelPermissionAri
};
