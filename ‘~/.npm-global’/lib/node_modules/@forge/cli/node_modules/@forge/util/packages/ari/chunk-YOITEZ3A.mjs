import {
  AzureDevopsAzureDevopsRemoteLinkAriResourceOwner,
  AzureDevopsAzureDevopsRemoteLinkAriResourceType
} from "./chunk-TE65IYB3.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/azure-devops.azure-devops/remote-link/manifest.ts
var azureDevopsAzureDevopsRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AzureDevopsAzureDevopsRemoteLinkAriResourceOwner,
  resourceType: AzureDevopsAzureDevopsRemoteLinkAriResourceType,
  resourceIdSlug: "organization/{organization}/project/{projectId}/repository/{repositoryId}",
  resourceIdSegmentFormats: {
    organization: /[a-fA-F0-9]{64}/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/azure-devops.azure-devops/remote-link/index.ts
var AzureDevopsAzureDevopsRemoteLinkAri = class _AzureDevopsAzureDevopsRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._organization = opts.resourceIdSegmentValues.organization, this._projectId = opts.resourceIdSegmentValues.projectId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get organization() {
    return this._organization;
  }
  get projectId() {
    return this._projectId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: azureDevopsAzureDevopsRemoteLinkAriStaticOpts.resourceType,
      resourceId: `organization/${opts.organization}/project/${opts.projectId}/repository/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        organization: opts.organization,
        projectId: opts.projectId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, azureDevopsAzureDevopsRemoteLinkAriStaticOpts);
    return new _AzureDevopsAzureDevopsRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, azureDevopsAzureDevopsRemoteLinkAriStaticOpts);
    return new _AzureDevopsAzureDevopsRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      organization: this.organization,
      projectId: this.projectId,
      repositoryId: this.repositoryId
    };
  }
};

export {
  AzureDevopsAzureDevopsRemoteLinkAri
};
