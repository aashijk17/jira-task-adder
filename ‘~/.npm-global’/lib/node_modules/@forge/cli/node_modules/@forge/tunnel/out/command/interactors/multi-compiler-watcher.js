"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiCompilerWatcher = void 0;
const cli_shared_1 = require("@forge/cli-shared");
class MultiCompilerWatcher {
    faasServer;
    uiServers;
    constructor(faasServer, uiServers) {
        this.faasServer = faasServer;
        this.uiServers = uiServers;
    }
    allServers() {
        return [this.faasServer, ...this.uiServers];
    }
    async compileAndWatch({ onRuntimeChange, onUIChange }, tunnelOptions = cli_shared_1.defaultNoDebugTunnelOptions) {
        const [faasResult] = await Promise.all([
            this.faasServer.compileAndWatch(onRuntimeChange, tunnelOptions),
            ...this.uiServers.map((server) => server.compileAndWatch(onUIChange, tunnelOptions))
        ]);
        return faasResult;
    }
    async stop() {
        await Promise.all(this.allServers().map((server) => server.stop()));
    }
}
exports.MultiCompilerWatcher = MultiCompilerWatcher;
