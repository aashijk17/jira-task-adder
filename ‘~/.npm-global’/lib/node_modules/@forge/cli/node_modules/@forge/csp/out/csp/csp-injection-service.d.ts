import type { LambdaEnvironment } from '@forge/cli-shared';
import { CSPDetails } from '../types';
declare type StandardIcOptions = {
    icLabel: string;
    serviceName: string;
};
declare type GetICDomainIcOptions = {
    serviceName?: string;
    getICDomain: () => string;
};
declare type IcOptions = StandardIcOptions | GetICDomainIcOptions;
export declare const getAtlassianImageHost: (microsEnv: LambdaEnvironment, icOptions?: IcOptions) => string[];
export declare const EXTERNAL_ALLOW_LISTED_IMAGES_HOSTS: string[];
export declare class CSPInjectionService {
    private getCSPReportUri;
    private getForgeGlobalCSP;
    private getMetalClientCSP;
    private getExistingCSPDetails;
    private getConnectSrc;
    private getFrameAncestors;
    getInjectableCSP: ({ existingCSPDetails, microsEnv, tunnelCSPReporterUri, hostname, isFedRAMP, icOptions }: {
        existingCSPDetails: CSPDetails;
        microsEnv: LambdaEnvironment;
        tunnelCSPReporterUri?: string | undefined;
        hostname?: string | undefined;
        isFedRAMP?: boolean | undefined;
        icOptions?: IcOptions | undefined;
    }) => string[];
}
export {};
//# sourceMappingURL=csp-injection-service.d.ts.map