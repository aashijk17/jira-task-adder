"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsEventName = exports.AnalyticsDiscoverEventName = exports.AnalyticsContentType = exports.AnalyticsCommentType = exports.AnalyticsClickEventName = exports.AllUpdatesFeedEventType = exports.AlertPriority = exports.AlertEventStatus = exports.AiCoreApiQuestionType = exports.AgentStudioToolDefinitionSource = exports.AgentStudioProductType = exports.AgentStudioJudgementDecision = exports.AgentStudioJobRunStatus = exports.AgentStudioDatasetResolution = exports.AgentStudioCreateAgentPermissionMode = exports.AgentStudioConversationReportPeriod = exports.AgentStudioAgentType = exports.AgentStudioAgentRole = exports.AdminUnitValidateNameErrorEnum = exports.AdminUnitCreateStatusEnum = exports.AdminPolicyStatus = exports.AdminOperation = exports.AdminInvitePolicyInvitorType = exports.AdminInvitePolicyInviteeType = exports.AdminInviteNotAppliedReason = exports.AdminInviteAllowedAction = exports.AdminHttpVerbs = exports.AdminAnnouncementBannerSettingsByCriteriaOrder = exports.ActivityProduct = exports.ActivityObjectType = exports.ActivityEventType = exports.ActivitiesObjectType = exports.ActivitiesFilterType = exports.ActivitiesContainerType = exports.ActionsConfigurationLayout = exports.ActionsCapabilityType = exports.ActionsAuthType = exports.AccountType = exports.AccountStatus = exports.AccessType = exports.AccessStatus = exports.AcceptableResponse = exports.AvpRefreshMethod = exports.AvpIntegrationId = exports.AvpEnvVarDataType = exports.AvpEnvVarChartType = exports.AvpDashboardStatusAction = exports.AvpDashboardStatus = exports.AvpDashboardPermissionType = exports.AvpCanvasRowHeight = void 0;
exports.BodyFormatType = exports.BoardSwimlaneStrategy = exports.BoardFeatureToggleStatus = exports.BoardFeatureStatus = exports.BlockedAccessSubjectType = exports.BitbucketPermission = exports.BillingSourceSystem = exports.BackendExperiment = exports.AuthClientType = exports.AtlassianProductHostingType = exports.AssetsDmStepStatus = exports.AssetsDmSortByInputOrder = exports.AssetsDmObjectsListSortOrder = exports.AssetsDmObjectsListSearchOperator = exports.AssetsDmObjectsListSearchGroupCondition = exports.AssetsDmObjectsListSearchCondition = exports.AssetsDmObjectsListRawColumnType = exports.AssetsDmObjectsListIconType = exports.AssetsDmObjectsListColumnType = exports.AssetsDmObjectClassEnum = exports.AssetsDmDataSourceTransformSelectFieldType = exports.AssetsDmDataSourceTransformParameterType = exports.AssetsDmDataSourceOperationEnum = exports.AssetsDmAttributeMappingSaveDefaultOption = exports.AriGraphRelationshipsSortDirection = exports.ArchivedMode = exports.AppVersionRolloutStatus = exports.AppTrustInformationState = exports.AppTaskState = exports.AppStoredEntityCondition = exports.AppStoredCustomEntityRangeCondition = exports.AppStoredCustomEntityFilterCondition = exports.AppStorageSqlTableDataSortDirection = exports.AppSecurityPoliciesPermissionTypeExtension = exports.AppSecurityPoliciesPermissionType = exports.AppNetworkPermissionTypeExtension = exports.AppNetworkPermissionType = exports.AppNetworkEgressCategoryExtension = exports.AppNetworkEgressCategory = exports.AppEnvironmentType = exports.AppDeploymentStepStatus = exports.AppDeploymentStatus = exports.AppDeploymentEventLogLevel = exports.AppContributorRole = exports.ApiGroup = exports.ApiContext = exports.AnalyticsTimeseriesGranularity = exports.AnalyticsSearchEventName = exports.AnalyticsMeasuresSpaceEventName = exports.AnalyticsMeasuresEventName = void 0;
exports.CcpProductStatus = exports.CcpPricingType = exports.CcpPricingPlanStatus = exports.CcpPaymentMethodType = exports.CcpOfferingUncollectibleActionType = exports.CcpOfferingType = exports.CcpOfferingStatus = exports.CcpOfferingRelationshipTemplateType = exports.CcpOfferingRelationshipTemplateStatus = exports.CcpOfferingRelationshipTemplateProcessorConfigStrategy = exports.CcpOfferingRelationshipTemplateOverrideType = exports.CcpOfferingRelationshipTemplateOverrideTrigger = exports.CcpOfferingRelationshipTemplateCustomizationSet = exports.CcpOfferingRelationshipTemplateConditionsHostingType = exports.CcpOfferingRelationshipDirection = exports.CcpOfferingHostingType = exports.CcpMeteredChargeElementType = exports.CcpLicenseErrorCode = exports.CcpLatestAllowancesEntityType = exports.CcpLatestAllowanceEnforcementModeType = exports.CcpExtensionEntityType = exports.CcpEntitlementTemplateStatus = exports.CcpEntitlementStatus = exports.CcpEntitlementPreDunningStatus = exports.CcpDuration = exports.CcpCustomizationSetCouplingType = exports.CcpCustomizationSetCouplingOperationType = exports.CcpCustomizationSetCouplingOperationSource = exports.CcpCustomizationSetCouplingOperationRelaxContextInTrial = exports.CcpCustomizationSetCouplingOperationComputeArgumentTag = exports.CcpCustomizationSetCouplingOperationComparator = exports.CcpCurrency = exports.CcpCreateEntitlementExperienceOptionsConfirmationScreen = exports.CcpCreateEntitlementExperienceCapabilityErrorReasonCode = exports.CcpChargeType = exports.CcpCancelEntitlementExperienceCapabilityReasonCode = exports.CcpBillingInterval = exports.CcpBenefitValueAppliedOn = exports.CcpBehaviourAtEndOfTrial = exports.CcpAndOr = exports.CcpActivationReason = exports.CatchupOverviewUpdateType = exports.CatchupContentType = exports.CardHierarchyLevelEnumType = exports.CapabilitySet = exports.BulkSetSpacePermissionSubjectType = exports.BulkSetSpacePermissionSpaceType = exports.BulkRoleAssignmentSpaceType = exports.BuiltinPolarisIdeaField = exports.BooleanUserInputType = void 0;
exports.CommentDeletionLocation = exports.CommentCreationLocation = exports.CollabFormat = exports.CloudIdProduct = exports.ClassificationLevelSource = exports.Classification = exports.ChannelPlatformRole = exports.ChannelPlatformQuickResponseQueryOperator = exports.ChannelPlatformQuickResponseOrder = exports.ChannelPlatformQuickResponseFilterOperator = exports.ChannelPlatformParticipantRole = exports.ChannelPlatformMutationStatus = exports.ChannelPlatformEventType = exports.ChannelPlatformContactState = exports.ChannelPlatformChannelType = exports.CcpUsageQueryStatistics = exports.CcpUsageQueryResolution = exports.CcpTrialEndBehaviour = exports.CcpTransactionAccountType = exports.CcpTiersMode = exports.CcpSupportedBillingSystems = exports.CcpSubscriptionStatus = exports.CcpSubscriptionScheduleAction = exports.CcpSearchSortOrder = exports.CcpRelationshipType = exports.CcpRelationshipStatus = exports.CcpRelationshipPricingType = exports.CcpQuoteStatus = exports.CcpQuoteStartDateType = exports.CcpQuoteReferenceType = exports.CcpQuoteProrationBehaviour = exports.CcpQuoteLineItemType = exports.CcpQuoteLineItemStatus = exports.CcpQuoteInterval = exports.CcpQuoteEndDateType = exports.CcpQuoteContractType = exports.CcpProrateOnUsageChange = exports.CcpPromotionType = exports.CcpPromotionSubBenefitType = exports.CcpPromotionStatus = exports.CcpPromotionSaleTransitionType = exports.CcpPromotionLimiterType = exports.CcpPromotionHostingType = exports.CcpPromotionEligibilityPricingType = exports.CcpPromotionDynamicFieldEvaluatorType = exports.CcpPromotionDynamicFieldEvaluatorComparator = exports.CcpPromotionCodeType = exports.CcpPromotionBillingPeriodPrev = exports.CcpPromotionBenefitType = exports.CcpPromotionAllowedRedemptionMethod = void 0;
exports.CompassScorecardScoreSystemType = exports.CompassScorecardScoreHistoryPeriodicity = exports.CompassScorecardQuerySortOrder = exports.CompassScorecardImportance = exports.CompassScorecardCriterionExpressionTextComparatorOptions = exports.CompassScorecardCriterionExpressionNumberComparatorOptions = exports.CompassScorecardCriterionExpressionMembershipComparatorOptions = exports.CompassScorecardCriterionExpressionEvaluationRuleAction = exports.CompassScorecardCriterionExpressionCollectionComparatorOptions = exports.CompassScorecardCriterionExpressionBooleanComparatorOptions = exports.CompassScorecardCriteriaScoringStrategyRuleAction = exports.CompassScorecardCriteriaScoreHistoryPeriodicity = exports.CompassRelationshipTypeInput = exports.CompassRelationshipType = exports.CompassRelationshipDirection = exports.CompassQuerySortOrder = exports.CompassPullRequestStatusForStatusInTimeRangeFilter = exports.CompassPullRequestStatus = exports.CompassPullRequestQuerySortName = exports.CompassPackageDependencyUnaryComparatorOptions = exports.CompassPackageDependencyNullaryComparatorOptions = exports.CompassPackageDependencyManagerOptions = exports.CompassMetricDefinitionType = exports.CompassLinkType = exports.CompassLifecycleFilterOperator = exports.CompassLifecycleEventStage = exports.CompassIncidentEventState = exports.CompassIncidentEventSeverityLevel = exports.CompassFieldType = exports.CompassEventType = exports.CompassDeploymentEventState = exports.CompassDeploymentEventEnvironmentCategory = exports.CompassDataConnectionSource = exports.CompassCustomPermissionPreset = exports.CompassCustomEventIcon = exports.CompassCriteriaTextComparatorOptions = exports.CompassCriteriaNumberComparatorOptions = exports.CompassCriteriaMembershipComparatorOptions = exports.CompassCriteriaCollectionComparatorOptions = exports.CompassCriteriaBooleanComparatorOptions = exports.CompassCreatePullRequestStatus = exports.CompassComponentType = exports.CompassComponentCreationTimeFilterType = exports.CompassComponentBootstrapStatus = exports.CompassCatalogBootstrapStatus = exports.CompassCampaignQuerySortOrder = exports.CompassBuildEventState = exports.CommentsType = exports.CommentType = exports.CommentReplyType = void 0;
exports.ConfluenceNbmVerificationResultDirection = exports.ConfluenceNbmVerificationAiState = exports.ConfluenceNbmScanStatus = exports.ConfluenceNbmCategoryTypes = exports.ConfluenceMutationContentStatus = exports.ConfluenceLegacyEditorReportType = exports.ConfluenceJiraMacroAppLinksValidationStatus = exports.ConfluenceInlineTaskStatus = exports.ConfluenceInlineCommentStepType = exports.ConfluenceInlineCommentResolutionStatus = exports.ConfluenceImportStatus = exports.ConfluenceImportSpaceTaskState = exports.ConfluenceGroupUsageType = exports.ConfluenceGroupManagementType = exports.ConfluenceGraphQlDefaultTitleEmoji = exports.ConfluenceGraphQlContentMode = exports.ConfluenceExtensionVisibilityControlMechanism = exports.ConfluenceEdition = exports.ConfluenceCustomContentPermissionType = exports.ConfluenceCustomContentPermissionPrincipalType = exports.ConfluenceCreateSpaceContentType = exports.ConfluenceContributionStatus = exports.ConfluenceContentType = exports.ConfluenceContentStatus = exports.ConfluenceContentRepresentation = exports.ConfluenceContentAccessRequestStatus = exports.ConfluenceCommentType = exports.ConfluenceCommentStatus = exports.ConfluenceCommentState = exports.ConfluenceCommentResolveAllLocation = exports.ConfluenceCommentLevel = exports.ConfluenceCollaborativeEditingService = exports.ConfluenceCategorizeNbmCategoryTypes = exports.ConfluenceCatchupOverviewTimeframeLength = exports.ConfluenceCalendarPermissionsType = exports.ConfluenceBodyRepresentation = exports.ConfluenceBlogPostStatus = exports.ConfluenceAttachmentSecurityLevel = exports.ConfluenceAssignableSpaceRolePrincipalType = exports.ConfluenceApplication = exports.ConfluenceAppType = exports.ConfluenceAppInstallationLicenseCapabilitySet = exports.ConfluenceAnalyticsCommentContentType = exports.ConfluenceAdminAnnouncementBannerVisibilityType = exports.ConfluenceAdminAnnouncementBannerStatusType = exports.ComponentSyncEventStatus = exports.ComplianceBoundary = exports.CompassVulnerabilityEventState = exports.CompassVulnerabilityEventSeverityLevel = exports.CompassScorecardScoringStrategyType = void 0;
exports.ConvoAiAgentMessageType = exports.Context = exports.ContentStateRestrictionLevel = exports.ContentRole = exports.ContentRepresentationV2 = exports.ContentRepresentation = exports.ContentRendererMode = exports.ContentPlatformSearchTypes = exports.ContentPlatformOperators = exports.ContentPlatformFieldNames = exports.ContentPlatformBooleanOperators = exports.ContentPermissionType = exports.ContentDeleteActionType = exports.ContentDataClassificationQueryContentStatus = exports.ContentDataClassificationMutationContentStatus = exports.ContentAction = exports.ContentAccessType = exports.ContentAccessInputType = exports.ContainerType = exports.ContactAdminPageDisabledReason = exports.ConfluenceVoteType = exports.ConfluenceViewState = exports.ConfluenceUserType = exports.ConfluenceTeamCalendarWeekValues = exports.ConfluenceTeamCalendarTimeFormatTypes = exports.ConfluenceSubscriptionContentType = exports.ConfluenceSpaceType = exports.ConfluenceSpaceStatus = exports.ConfluenceSpaceSettingEditorVersion = exports.ConfluenceSpaceRoleMode = exports.ConfluenceSpacePermissionAuditReportType = exports.ConfluenceSpacePermissionAuditReportSpaceType = exports.ConfluenceSpaceOwnerType = exports.ConfluenceSiteEmailAddressStatus = exports.ConfluenceSchedulePublishedType = exports.ConfluenceRoleAssignabilityCode = exports.ConfluenceRequestAccessApprovalDecision = exports.ConfluenceReIndexLongTaskStatus = exports.ConfluenceQuestionsOperationTarget = exports.ConfluenceQuestionsOperationName = exports.ConfluencePrincipalType = exports.ConfluencePolicyEnabledStatus = exports.ConfluencePermissionTypeAssignabilityCode = exports.ConfluencePdfExportState = exports.ConfluencePageSubType = exports.ConfluencePageStatus = exports.ConfluenceOperationTarget = exports.ConfluenceOperationName = exports.ConfluenceNotesOrdering = exports.ConfluenceNbmVerificationResultOrder = void 0;
exports.DevAiAutodevLogStatus = exports.DevAiAutodevLogPriority = exports.DevAiAutodevLogPhase = exports.DevAiAutodevLogGroupStatus = exports.DevAiAutodevLogGroupPhase = exports.DescendantsNoteApplicationOption = exports.Depth = exports.DeploymentState = exports.DeactivatedPageOwnerUserType = exports.DataSecurityPolicyDecidableContentStatus = exports.DataSecurityPolicyCoverageType = exports.DataSecurityPolicyAction = exports.DataResidencyResponse = exports.DataClassificationPolicyDecisionStatus = exports.CustomerServiceStatusKey = exports.CustomerServicePermissionGroupType = exports.CustomerServiceNoteEntity = exports.CustomerServiceEscalationType = exports.CustomerServiceCustomDetailsEntityType = exports.CustomerServiceCustomDetailTypeName = exports.CustomerServiceCustomDetailCreateErrorCode = exports.CustomerServiceContextType = exports.CustomerServiceBrandingEntityType = exports.CustomerServiceAttributeTypeName = exports.CustomUserFieldInputComparators = exports.CustomTextFieldInputComparators = exports.CustomSingleSelectFieldInputComparators = exports.CustomNumberFieldInputComparators = exports.CustomMultiselectFieldInputComparators = exports.CustomEntityStatus = exports.CustomEntityIndexStatus = exports.CustomEntityAttributeType = exports.CsmAiWidgetType = exports.CsmAiWidgetPosition = exports.CsmAiWidgetIconType = exports.CsmAiWidgetBrandingSpaceVariant = exports.CsmAiWidgetBrandingRadius = exports.CsmAiWidgetBrandingColorVibeVariant = exports.CsmAiWidgetBrandingChatColorVibeVariant = exports.CsmAiHttpMethod = exports.CsmAiHandoffTypeInput = exports.CsmAiHandoffType = exports.CsmAiAuthenticationType = exports.CsmAiActionVariableDataType = exports.CsmAiActionType = exports.CriterionExemptionType = exports.CplsTimeScaleType = exports.CplsContributionValueType = exports.ConvoAiHomeThreadSuggestedActionType = exports.ConvoAiAgentSessionStatus = void 0;
exports.DevOpsSecurityVulnerabilityStatus = exports.DevOpsSecurityVulnerabilitySeverity = exports.DevOpsRepositoryHostingProviderFilter = exports.DevOpsRelationshipCertaintyFilter = exports.DevOpsRelationshipCertainty = exports.DevOpsPullRequestStatus = exports.DevOpsPullRequestApprovalStatus = exports.DevOpsProviderType = exports.DevOpsProviderNamespace = exports.DevOpsProjectTargetDateType = exports.DevOpsProjectStatus = exports.DevOpsPostIncidentReviewStatus = exports.DevOpsOperationsIncidentStatus = exports.DevOpsOperationsIncidentSeverity = exports.DevOpsMetricsRollupOption = exports.DevOpsMetricsResolutionUnit = exports.DevOpsMetricsPerPrCycleTimeBreakdownPhase = exports.DevOpsMetricsCycleTimePhase = exports.DevOpsMetricsComparisonOperator = exports.DevOpsEnvironmentCategory = exports.DevOpsDocumentCategory = exports.DevOpsDesignType = exports.DevOpsDesignStatus = exports.DevOpsComponentType = exports.DevOpsComponentTier = exports.DevOpsBuildState = exports.DevConsoleUsageResolution = exports.DevConsoleResource = exports.DevConsoleGroupBy = exports.DevConsoleDeveloperSpaceType = exports.DevConsoleDeveloperSpaceMemberRole = exports.DevAiWorkflowRunStatus = exports.DevAiSupportedRepoFilterOption = exports.DevAiScanIntervalUnit = exports.DevAiRovoDevSessionStatus = exports.DevAiRovoDevSessionSort = exports.DevAiRovoDevSessionLinkRel = exports.DevAiRovoDevSessionArchivedFilter = exports.DevAiRovoDevRaisePullRequestOption = exports.DevAiRovoDevPrStatus = exports.DevAiRovoDevBuildStatus = exports.DevAiRovoAgentTemplateFilter = exports.DevAiRovoAgentRankCategory = exports.DevAiIssueScopingLabel = exports.DevAiFlowSessionsStatus = exports.DevAiFlowPipelinesStatus = exports.DevAiAutofixTaskStatus = exports.DevAiAutofixTaskSortField = exports.DevAiAutofixScanStatus = exports.DevAiAutofixScanSortField = void 0;
exports.ForgeAlertsListOrderOptions = exports.ForgeAlertsListOrderByColumns = exports.ForgeAlertsAlertActivityType = exports.FeedType = exports.FeedItemSourceType = exports.FeedEventType = exports.ExternalWorkItemSubtype = exports.ExternalVulnerabilityType = exports.ExternalVulnerabilityStatus = exports.ExternalVulnerabilitySeverityLevel = exports.ExternalSpaceSubtype = exports.ExternalPullRequestStatus = exports.ExternalMembershipType = exports.ExternalEventType = exports.ExternalEnvironmentType = exports.ExternalDocumentCategory = exports.ExternalDesignType = exports.ExternalDesignStatus = exports.ExternalDeploymentState = exports.ExternalConversationType = exports.ExternalCommitFlags = exports.ExternalCommentReactionType = exports.ExternalCollaboratorsSortField = exports.ExternalChangeType = exports.ExternalBuildState = exports.ExternalAttendeeRsvpStatus = exports.ExternalApprovalStatus = exports.ExtensionContextsFilterType = exports.ExperienceEventType = exports.EstimationType = exports.Environment = exports.EditorConversionSetting = exports.EditionValue = exports.EcosystemRequiredProduct = exports.EcosystemMarketplacePaymentModel = exports.EcosystemMarketplaceListingStatus = exports.EcosystemLicenseMode = exports.EcosystemInstallationRecoveryMode = exports.EcosystemInstallationOverrideKeys = exports.EcosystemGlobalInstallationOverrideKeys = exports.EcosystemAppsInstalledInContextsSortKey = exports.EcosystemAppsInstalledInContextsFilterType = exports.EcosystemAppNetworkPermissionType = exports.EcosystemAppInstallationConfigIdType = exports.DocumentRepresentation = exports.DistributionStatus = exports.DevStatusActivity = exports.DevOpsServiceRelationshipType = exports.DevOpsServiceAndRepositoryRelationshipSortBy = exports.DevOpsServiceAndJiraProjectRelationshipType = void 0;
exports.GraphQlCoverPictureWidth = exports.GraphQlContentTemplateType = exports.GraphQlContentStatus = exports.GraphIntegrationStatus = exports.GraphIntegrationMcpAdminManagementMcpToolStatus = exports.GraphIntegrationMcpAdminManagementMcpServerType = exports.GraphIntegrationMcpAdminManagementMcpServerStatus = exports.GraphIntegrationDirectoryItemType = exports.GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum = exports.GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = exports.GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = exports.GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum = exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = exports.GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum = exports.GrantCheckProduct = exports.GlanceEnvironment = exports.FunctionTriggerType = exports.FortifiedMetricsResolutionUnit = exports.FormStatus = exports.ForgeMetricsSiteFilterCategory = exports.ForgeMetricsResolutionUnit = exports.ForgeMetricsLabels = exports.ForgeMetricsGroupByDimensions = exports.ForgeMetricsDataType = exports.ForgeMetricsCustomGroupByDimensions = exports.ForgeMetricsContexts = exports.ForgeMetricsApiRequestType = exports.ForgeMetricsApiRequestStatus = exports.ForgeMetricsApiRequestGroupByDimensions = exports.ForgeAuditLogsActionType = exports.ForgeAlertsStatus = exports.ForgeAlertsRuleWhenConditions = exports.ForgeAlertsRuleSeverity = exports.ForgeAlertsRuleMetricType = exports.ForgeAlertsRuleFilterDimensions = exports.ForgeAlertsRuleFilterActions = exports.ForgeAlertsRuleActivityAction = exports.ForgeAlertsMetricsResolutionUnit = exports.ForgeAlertsMetricsDataType = void 0;
exports.GraphStoreFullIssueAssociatedDesignDesignTypeOutput = exports.GraphStoreFullIssueAssociatedDesignDesignStatusOutput = exports.GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullIssueAssociatedBuildBuildStateOutput = exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput = exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput = exports.GraphStoreCypherQueryV2VersionEnum = exports.GraphStoreCypherQueryV2BatchVersionEnum = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = exports.GraphStoreAtlasHomeSourcesEnum = exports.GraphStoreAtlasHomeRankingCriteriaEnum = exports.GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum = exports.GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum = exports.GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum = exports.GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum = exports.GraphQueryMetadataSortEnum = exports.GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum = exports.GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum = exports.GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum = exports.GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum = exports.GraphQlTemplateContentAppearance = exports.GraphQlReactionContentType = exports.GraphQlPageStatus = exports.GraphQlLabelSortField = exports.GraphQlLabelSortDirection = exports.GraphQlFrontCoverState = exports.GraphQlDateFormat = void 0;
exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = exports.GraphStoreProjectAssociatedPrReviewerReviewerStatus = exports.GraphStoreProjectAssociatedPrPullRequestStatus = exports.GraphStoreProjectAssociatedDeploymentEnvironmentType = exports.GraphStoreProjectAssociatedDeploymentDeploymentState = exports.GraphStoreProjectAssociatedBuildBuildState = exports.GraphStoreProjectAssociatedAutodevJobAutodevJobStatus = exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = exports.GraphStoreIssueHasAutodevJobAutodevJobStatus = exports.GraphStoreIssueAssociatedDeploymentEnvironmentType = exports.GraphStoreIssueAssociatedDeploymentDeploymentState = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput = exports.GraphStoreFullVersionAssociatedDesignDesignTypeOutput = exports.GraphStoreFullVersionAssociatedDesignDesignStatusOutput = exports.GraphStoreFullSprintContainsIssueStatusCategoryOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput = exports.GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullSprintAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput = exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullProjectAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullProjectAssociatedBuildBuildStateOutput = exports.GraphStoreFullPrInRepoReviewerReviewerStatusOutput = exports.GraphStoreFullPrInRepoPullRequestStatusOutput = exports.GraphStoreFullParentDocumentHasChildDocumentCategoryOutput = exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput = exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput = exports.GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullIssueAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput = exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput = void 0;
exports.HelpLayoutAtomicElementKey = exports.HelpExternalResourceLinkResourceType = exports.HelpCenterType = exports.HelpCenterSortOrder = exports.HelpCenterProjectType = exports.HelpCenterProjectMappingOperationType = exports.HelpCenterProductEntityType = exports.HelpCenterPortalsType = exports.HelpCenterPortalsSortOrder = exports.HelpCenterPageType = exports.HelpCenterMediaConfigOperationType = exports.HelpCenterDescriptionType = exports.HelpCenterAccessControlType = exports.GrowthUnifiedProfileUserIdType = exports.GrowthUnifiedProfileTwcEdition = exports.GrowthUnifiedProfileTwcCreatedFrom = exports.GrowthUnifiedProfileTrialType = exports.GrowthUnifiedProfileTrialTrigger = exports.GrowthUnifiedProfileTeamType = exports.GrowthUnifiedProfileRollingDateIntervalInput = exports.GrowthUnifiedProfileProductKey = exports.GrowthUnifiedProfileProductEdition = exports.GrowthUnifiedProfileProduct = exports.GrowthUnifiedProfileOnboardingContextProjectLandingSelection = exports.GrowthUnifiedProfileJiraFamiliarity = exports.GrowthUnifiedProfileJtbd = exports.GrowthUnifiedProfileFeatureType = exports.GrowthUnifiedProfileEntryType = exports.GrowthUnifiedProfileEntityType = exports.GrowthUnifiedProfileEnterpriseAccountStatus = exports.GrowthUnifiedProfileEnrichmentStatus = exports.GrowthUnifiedProfileDomainType = exports.GrowthUnifiedProfileConfluenceFamiliarity = exports.GrowthUnifiedProfileCompanyType = exports.GrowthUnifiedProfileCompanySize = exports.GrowthUnifiedProfileChannel = exports.GrowthUnifiedProfileAnchorType = exports.GraphStoreVersionAssociatedDesignDesignType = exports.GraphStoreVersionAssociatedDesignDesignStatus = exports.GraphStoreSprintContainsIssueStatusCategory = exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = exports.GraphStoreSprintAssociatedVulnerabilityStatusCategory = exports.GraphStoreSprintAssociatedPrReviewerReviewerStatus = exports.GraphStoreSprintAssociatedPrPullRequestStatus = exports.GraphStoreSprintAssociatedDeploymentEnvironmentType = exports.GraphStoreSprintAssociatedDeploymentDeploymentState = exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityType = void 0;
exports.JiraAppType = exports.JiraAnnouncementBannerVisibility = exports.JiraAllowedFieldFormatConfig = exports.JiraAlignAggProjectType = exports.JiraAddValueFieldOperations = exports.JiraActionType = exports.IssueDevOpsPullRequestStatus = exports.IssueDevOpsDeploymentState = exports.IssueDevOpsDeploymentEnvironmentType = exports.IssueDevOpsCommitChangeType = exports.InvitationUrlsStatus = exports.IntentDetectionTopLevelIntent = exports.IntentDetectionSubType = exports.InspectPermissions = exports.InsightsRecommendationVisibility = exports.InsightsNextBestTaskAction = exports.InlineTasksQuerySortOrder = exports.InlineTasksQuerySortColumn = exports.InitialPermissionOptions = exports.InfluentsNotificationReadState = exports.InfluentsNotificationCategory = exports.InfluentsNotificationAppearance = exports.InfluentsNotificationActorType = exports.HomeWidgetState = exports.HelpObjectStoreSearchableEntityType = exports.HelpObjectStoreSearchEntityType = exports.HelpObjectStoreSearchBackend = exports.HelpObjectStoreSearchAlgorithm = exports.HelpObjectStoreRequestTypeSearchStrategy = exports.HelpObjectStorePortalSearchStrategy = exports.HelpObjectStoreJsmEntityType = exports.HelpObjectStoreHelpObjectType = exports.HelpObjectStoreArticleSourceSystem = exports.HelpObjectStoreArticleSearchStrategy = exports.HelpObjectStoreArticleSearchExpandType = exports.HelpObjectStoreArticleContentType = exports.HelpLayoutVerticalAlignment = exports.HelpLayoutType = exports.HelpLayoutProjectType = exports.HelpLayoutHorizontalAlignment = exports.HelpLayoutHeadingType = exports.HelpLayoutForgeElementType = exports.HelpLayoutForgeElementPages = exports.HelpLayoutElementKey = exports.HelpLayoutElementCategory = exports.HelpLayoutConnectElementType = exports.HelpLayoutConnectElementPages = exports.HelpLayoutCompositeElementKey = exports.HelpLayoutBackgroundType = exports.HelpLayoutBackgroundImageObjectFit = void 0;
exports.JiraCustomFieldTypeCategory = exports.JiraCustomBackgroundBrightness = exports.JiraContactOrgAdminToEnableAtlassianIntelligenceState = exports.JiraConfluencePageContentErrorType = exports.JiraConfluenceContentRelationshipType = exports.JiraConfigStateProviderType = exports.JiraConfigStateConfigurationStatus = exports.JiraConfigFieldType = exports.JiraCommentThirdPartySource = exports.JiraCommentSortField = exports.JiraColorSchemeThemeSetting = exports.JiraCollapsibleSection = exports.JiraCmdbAttributeType = exports.JiraClassificationLevelType = exports.JiraClassificationLevelStatus = exports.JiraClassificationLevelSource = exports.JiraCascadingSelectOptionType = exports.JiraCannedResponseSortOrder = exports.JiraCannedResponseScope = exports.JiraCalendarWeekStart = exports.JiraCalendarPermissionKey = exports.JiraCalendarMode = exports.JiraCfoTimeGranularity = exports.JiraCfoFilterOperator = exports.JiraCfoBoardPerformanceStatus = exports.JiraCfoAggregationType = exports.JiraBulkOperationType = exports.JiraBulkEditMultiSelectFieldOptions = exports.JiraBoardType = exports.JiraBoardSwimlaneStrategy = exports.JiraBoardLocationType = exports.JiraBitbucketWorkspaceApprovalState = exports.JiraBatchWindowPreference = exports.JiraBacklogStrategy = exports.JiraBacklogDestination = exports.JiraBacklogCardDensity = exports.JiraBackgroundType = exports.JiraAutodevStatus = exports.JiraAutodevState = exports.JiraAutodevPhase = exports.JiraAutodevCreatePullRequestOptionEnumType = exports.JiraAutodevCodeChangeEnumType = exports.JiraAttachmentsPermissions = exports.JiraAttachmentSortField = exports.JiraAttachmentParentName = exports.JiraAttachmentOrderField = exports.JiraAtlassianIntelligenceFeatureEnum = exports.JiraApprovalDecision = exports.JiraApplicationLinkTargetType = exports.JiraApplicationKey = void 0;
exports.JiraIssueSearchAggregationFunction = exports.JiraIssueRemoteLinkOperations = exports.JiraIssueNavigatorSearchLayout = exports.JiraIssueModuleType = exports.JiraIssueLinkDirection = exports.JiraIssueLifecycleState = exports.JiraIssueItemSystemContainerType = exports.JiraIssueItemLayoutItemLocationRuleType = exports.JiraIssueExportType = exports.JiraIssueDeploymentEnvironmentState = exports.JiraIssueCreateFieldValidationType = exports.JiraIssueActivityType = exports.JiraInstallDeploymentsBannerPrecondition = exports.JiraIncidentPriority = exports.JiraHomePageType = exports.JiraGroupsContext = exports.JiraGroupUsageType = exports.JiraGroupManagedBy = exports.JiraGrantTypeKeyEnum = exports.JiraGoalStatus = exports.JiraGlobalPermissionType = exports.JiraGlobalIssueCreateView = exports.JiraFormulaFieldType = exports.JiraFormattingTwoValueOperator = exports.JiraFormattingSingleValueOperator = exports.JiraFormattingNoValueOperator = exports.JiraFormattingMultipleValueOperator = exports.JiraFormattingColor = exports.JiraFormattingArea = exports.JiraForgeWorkItemPinnableEntityType = exports.JiraForgeUpdatePanelActionType = exports.JiraForgeEnvironmentType = exports.JiraFlagOperations = exports.JiraFieldStatusType = exports.JiraFieldScopeType = exports.JiraFieldOptionIdsFilterOperation = exports.JiraFieldConfigOrderDirection = exports.JiraFieldConfigOrderBy = exports.JiraFieldCategoryType = exports.JiraFavouriteType = exports.JiraEntityScope = exports.JiraEmailMimeType = exports.JiraDevOpsUpdateAssociationsEntityType = exports.JiraDevOpsIssuePanelState = exports.JiraDevOpsIssuePanelBannerType = exports.JiraDevOpsInContextConfigPromptLocation = exports.JiraDevOpsCapability = exports.JiraDevInfoConfigErrorType = exports.JiraDeploymentsFeaturePrecondition = exports.JiraCustomIssueSearchErrorType = void 0;
exports.JiraPlaybookStepRunStatus = exports.JiraPlaybookStateField = exports.JiraPlaybookScopeType = exports.JiraPlaybookIssueFilterType = exports.JiraPlanStatus = exports.JiraPermissionType = exports.JiraPermissionTagEnum = exports.JiraPermissionMessageTypeEnum = exports.JiraOverviewPlanMigrationChangeboardingStatus = exports.JiraOrganizationApprovalLocation = exports.JiraOptionColorInput = exports.JiraOnboardingTargetType = exports.JiraOnboardingMediaType = exports.JiraOAuthAppsInstallationStatus = exports.JiraNumberFieldFormatStyle = exports.JiraNotificationType = exports.JiraNotificationChannelType = exports.JiraNotificationCategoryType = exports.JiraNavigationItemTypeKey = exports.JiraMultiValueFieldOperations = exports.JiraMoveBoardViewIssueToCellEnd = exports.JiraLongRunningTaskStatus = exports.JiraLinkIssuesToIncidentIssueLinkTypeName = exports.JiraJqlViewContext = exports.JiraJqlSyntaxError = exports.JiraJqlOperator = exports.JiraJqlFunctionStatus = exports.JiraJqlClauseType = exports.JiraJqlBuilderMode = exports.JiraJqlAutocompleteType = exports.JiraJourneyTriggerType = exports.JiraJourneyStatusDependencyType = exports.JiraJourneyStatus = exports.JiraJourneyRulesMigrationStatus = exports.JiraJourneyParentIssueType = exports.JiraJourneyItemConditionComparator = exports.JiraJourneyActiveState = exports.JiraJqlBuilderSearchMode = exports.JiraIteration = exports.JiraIssueViewUserPreferenceLayoutType = exports.JiraIssueViewTimestampDisplayMode = exports.JiraIssueViewAttachmentPanelViewMode = exports.JiraIssueViewActivityLayout = exports.JiraIssueViewActivityFeedSortOrder = exports.JiraIssueTransitionLayoutMessageType = exports.JiraIssueTransitionCommentType = exports.JiraIssueTownsquareProjectLinkType = exports.JiraIssueSearchViewLayout = exports.JiraIssueSearchOperationScope = exports.JiraIssueSearchFieldSetSelectedState = void 0;
exports.JiraServiceManagementRequestTypeCategoryStatus = exports.JiraServiceManagementRequestTypeCategoryRestriction = exports.JiraServiceManagementRendererType = exports.JiraServiceManagementPractice = exports.JiraServiceManagementMajorIncident = exports.JiraServiceManagementIssueViewDefaultCommentBehavior = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = exports.JiraServiceManagementCommentVisibility = exports.JiraServiceManagementApprovalState = exports.JiraServiceManagementApprovalDecisionResponseType = exports.JiraSearchableEntityType = exports.JiraScheduleTimelineItemOperation = exports.JiraScenarioType = exports.JiraReviewState = exports.JiraResourceUsageRecommendationStatus = exports.JiraResourceUsageCustomFieldRecommendationAction = exports.JiraReorderBoardViewColumnPosition = exports.JiraRemoteLinkedIssueErrorType = exports.JiraReleasesIssueReleaseStatusFilter = exports.JiraReleasesEpicReleaseStatusFilter = exports.JiraReleaseNotesIssueKeyConfig = exports.JiraRedactionSortField = exports.JiraRecommendationCategory = exports.JiraRankMutationEdge = exports.JiraPullRequestState = exports.JiraProjectsHelpCenterMappingStatus = exports.JiraProjectType = exports.JiraProjectStyle = exports.JiraProjectStatus = exports.JiraProjectSortField = exports.JiraProjectShortcutType = exports.JiraProjectRoleActorUserStatus = exports.JiraProjectRoleActorRecommendationAction = exports.JiraProjectRecommendationType = exports.JiraProjectPermissionType = exports.JiraProjectPermissionContext = exports.JiraProjectPermissionCategoryEnum = exports.JiraProjectNotificationConfigurationState = exports.JiraProjectListRightPanelState = exports.JiraProjectDateTimeFormat = exports.JiraProjectCleanupTaskStatusType = exports.JiraProjectCleanupRecommendationStaleSince = exports.JiraProjectCleanupRecommendationAction = exports.JiraProjectActionType = exports.JiraProjectAccessLevelType = exports.JiraProductEnum = exports.JiraPlaybooksSortBy = exports.JiraPlaybookStepType = void 0;
exports.JsmChatMessageType = exports.JsmChatMessageSource = exports.JsmChatCreateWebConversationUserRole = exports.JsmChatCreateWebConversationMessageContentType = exports.JsmChatConversationChannelType = exports.JsmChatConversationAnalyticsEvent = exports.JsmChatConnectedApps = exports.JsmChatChannelType = exports.JsmChatChannelExperienceId = exports.JsmChannelsOrchestratorConversationState = exports.JsmChannelsOrchestratorConversationCsatOptionType = exports.JsmChannelsOrchestratorConversationChannel = exports.JsmChannelsOrchestratorConversationActionType = exports.JsmChannelsExperience = exports.JiraWorklogAdjustmentEstimateOperation = exports.JiraWorkManagementUserLicenseSeatEdition = exports.JiraWorkManagementBackgroundType = exports.JiraWatchesOperations = exports.JiraVotesOperations = exports.JiraVisibilityControlMechanism = exports.JiraVersionWarningConfigState = exports.JiraVersionWarningCategories = exports.JiraVersionStatus = exports.JiraVersionSortField = exports.JiraVersionReleaseNotesType = exports.JiraVersionRelatedWorkType = exports.JiraVersionIssuesStatusCategories = exports.JiraVersionIssuesSortField = exports.JiraVersionIssuesFilter = exports.JiraVersionIssueTableColumn = exports.JiraVersionDetailsCollapsedUi = exports.JiraVersionApproverStatus = exports.JiraUiModificationsViewType = exports.JiraTransitionSortOption = exports.JiraTimeUnit = exports.JiraTimeFormat = exports.JiraSyntheticFieldCardOptionType = exports.JiraSuggestionType = exports.JiraSuggestionStatus = exports.JiraSuggestionActionType = exports.JiraSuggestedIssueFieldValueError = exports.JiraSuggestedIssueErrorType = exports.JiraSuggestedChildIssueStatusType = exports.JiraStatusCategoryColor = exports.JiraSprintState = exports.JiraSoftwareIssueSearchCustomInputContext = exports.JiraSingleValueFieldOperations = exports.JiraSidebarMenuItemReorderOperation = exports.JiraSidebarMenuDisplayMode = exports.JiraShareableEntityGrant = void 0;
exports.MarketplaceConsoleCloudComplianceBoundary = exports.MarketplaceConsoleAppSoftwareVersionState = exports.MarketplaceConsoleAppSoftwareVersionLicenseTypeId = exports.MarketplaceConsoleAsvlLegacyVersionStatus = exports.MarketplaceConsoleAsvlLegacyVersionApprovalStatus = exports.MarketplaceCloudFortifiedStatus = exports.MarketplaceBillingCycle = exports.MarketplaceAppVersionVisibility = exports.MarketplaceAppPaymentModel = exports.MacroRendererMode = exports.LpCourseStatus = exports.LpCourseSortField = exports.LpCertType = exports.LpCertStatus = exports.LpCertSortField = exports.LoomUserStatus = exports.LoomTranscriptLanguage = exports.LoomSpacePrivacyType = exports.LoomPhraseRangeType = exports.LoomMeetingSource = exports.LifecycleStage = exports.LicenseValue = exports.LicenseStatus = exports.LicenseOverrideState = exports.KnowledgeGraphObjectType = exports.KnowledgeGraphContentType = exports.KnowledgeDiscoveryZeroQueryType = exports.KnowledgeDiscoveryTopicType = exports.KnowledgeDiscoverySearchQueryClassificationSubtype = exports.KnowledgeDiscoverySearchQueryClassification = exports.KnowledgeDiscoveryRelatedEntityActionType = exports.KnowledgeDiscoveryQuerySuggestionType = exports.KnowledgeDiscoveryQuerySubType = exports.KnowledgeDiscoveryQueryClassification = exports.KnowledgeDiscoveryProduct = exports.KnowledgeDiscoveryKeyPhraseInputTextFormat = exports.KnowledgeDiscoveryKeyPhraseCategory = exports.KnowledgeDiscoveryEntityType = exports.KnowledgeDiscoveryDetectionType = exports.KnowledgeDiscoveryDefinitionScope = exports.KnowledgeDiscoveryBookmarkState = exports.KnowledgeBaseSpacePermissionType = exports.KnowledgeBaseArticleSearchSortOrder = exports.KnowledgeBaseArticleSearchSortByKey = exports.JsmChatWebInteractionType = exports.JsmChatWebConversationUserRole = exports.JsmChatWebConversationMessageContentType = exports.JsmChatWebConversationActions = exports.JsmChatWebChannelExperienceId = exports.JsmChatMode = void 0;
exports.MercuryCostType = exports.MercuryCostSubtypeSortField = exports.MercuryChangeType = exports.MercuryChangeSortField = exports.MercuryChangeProposalsViewSortField = exports.MercuryChangeProposalSortField = exports.MembershipState = exports.MembershipSetting = exports.MembershipRole = exports.MarketplaceStoreReviewsSorting = exports.MarketplaceStorePricingCurrency = exports.MarketplaceStorePartnerSupportAvailabilityDay = exports.MarketplaceStorePartnerEnrollmentProgramValue = exports.MarketplaceStorePartnerEnrollmentProgram = exports.MarketplaceStoreInstalledAppManageLinkType = exports.MarketplaceStoreInstallationTargetProduct = exports.MarketplaceStoreInstallAppStatus = exports.MarketplaceStoreHostInstanceType = exports.MarketplaceStoreHomePageHighlightedSectionVariation = exports.MarketplaceStoreEnterpriseProduct = exports.MarketplaceStoreEditionType = exports.MarketplaceStoreDeveloperSpaceStatus = exports.MarketplaceStoreBillingSystem = exports.MarketplaceStoreAtlassianProductHostingType = exports.MarketplaceProgramStatus = exports.MarketplacePricingTierType = exports.MarketplacePricingTierPolicy = exports.MarketplacePricingTierMode = exports.MarketplacePricingPlanStatus = exports.MarketplacePartnerType = exports.MarketplacePartnerTierType = exports.MarketplacePartnerSupportHolidayFrequency = exports.MarketplaceLocation = exports.MarketplaceListingStatus = exports.MarketplaceEntityStatus = exports.MarketplaceConsoleVersionType = exports.MarketplaceConsolePricingPlanStatus = exports.MarketplaceConsolePricingCurrency = exports.MarketplaceConsolePluginFrameworkType = exports.MarketplaceConsolePaymentModel = exports.MarketplaceConsoleParentSoftwareState = exports.MarketplaceConsoleOfferingStatus = exports.MarketplaceConsoleLegacyMongoStatus = exports.MarketplaceConsoleLegacyMongoPluginHiddenIn = exports.MarketplaceConsoleHosting = exports.MarketplaceConsoleEditionsGroup = exports.MarketplaceConsoleEditionsActivationStatus = exports.MarketplaceConsoleEditionType = exports.MarketplaceConsoleDevSpaceTier = exports.MarketplaceConsoleDevSpaceProgram = void 0;
exports.PagesSortOrder = exports.PagesSortField = exports.PagesDisplayPersistenceOption = exports.PageUpdateTrigger = exports.PageStatusInput = exports.PageLoadType = exports.PageCopyRestrictionValidationStatus = exports.PageCardInPageTreeHoverPreference = exports.PageAnalyticsTimeseriesCountType = exports.PageAnalyticsCountType = exports.PageActivityActionSubject = exports.PageActivityAction = exports.PtGraphQlPageStatus = exports.PeapProgramStatus = exports.OutputDeviceType = exports.Operation = exports.NumberUserInputType = exports.NotificationAction = exports.NotesProduct = exports.NotesContentType = exports.NotesByDateLastModifiedOrder = exports.NlpSearchResultType = exports.NlpSearchResultFormat = exports.NlpGetKeywordsTextFormat = exports.NlpErrorState = exports.NlpDisclaimer = exports.NadelHydrationTemplate = exports.MobilePlatform = exports.MissionControlMetricSuggestion = exports.MissionControlFeatureDiscoverySuggestion = exports.MigrationEventType = exports.MigrationEventStatus = exports.MercuryWorkTargetDateType = exports.MercuryViewType = exports.MercuryTargetDateType = exports.MercuryStrategicEventSortField = exports.MercuryStatusColor = exports.MercuryProviderWorkTargetDateType = exports.MercuryProviderWorkStatusColor = exports.MercuryProviderWorkErrorType = exports.MercuryProviderConfigurationStatus = exports.MercuryProjectTargetDateType = exports.MercuryProjectStatusColor = exports.MercuryJiraAlignProjectTypeKey = exports.MercuryFocusAreaSortField = exports.MercuryFocusAreaRankingValidationErrorCode = exports.MercuryFocusAreaHierarchySortField = exports.MercuryFocusAreaHealthColor = exports.MercuryEventType = exports.MercuryEntityType = void 0;
exports.RadarCustomFieldSyncStatus = exports.RadarConnectorType = exports.QueryType = exports.PushNotificationSettingGroup = exports.PushNotificationGroupInputType = exports.PublicLinksByCriteriaOrder = exports.PublicLinkStatus = exports.PublicLinkSpacesByCriteriaOrder = exports.PublicLinkSpaceStatus = exports.PublicLinkSiteStatus = exports.PublicLinkPermissionsType = exports.PublicLinkPermissionsObjectType = exports.PublicLinkPageStatus = exports.PublicLinkDefaultSpaceStatus = exports.PublicLinkContentType = exports.PublicLinkAdminAction = exports.Product = exports.PrincipalType = exports.PrincipalFilterType = exports.PolarisVisualizationType = exports.PolarisViewSortMode = exports.PolarisViewSetType = exports.PolarisViewLayoutType = exports.PolarisViewFilterOperator = exports.PolarisViewFilterKind = exports.PolarisViewFieldRollupType = exports.PolarisValueOperator = exports.PolarisTimelineTodayMarker = exports.PolarisTimelineMode = exports.PolarisSortOrder = exports.PolarisSnippetPropertyKind = exports.PolarisResolvedObjectAuthType = exports.PolarisRefreshError = exports.PolarisPlayKind = exports.PolarisFilterEnumType = exports.PolarisFieldType = exports.PolarisCommentKind = exports.PlaybookTemplateIcon = exports.PlaybookTemplateColor = exports.PlaybookTemplateCategory = exports.Platform = exports.PlanModeDestination = exports.PermsReportTargetType = exports.PermissionDisplayType = exports.PaywallStatus = exports.PathType = exports.PartnerInvoiceJsonCurrency = exports.PartnerCurrency = exports.PartnerCloudLicenseType = exports.PartnerBtfLicenseType = void 0;
exports.SearchResultType = exports.SearchProjectType = exports.SearchParticipantType = exports.SearchLinkedResultCategory = exports.SearchLinkedEntityGranularity = exports.SearchIssueStatusCategory = exports.SearchContainerStatus = exports.SearchConfluenceRangeField = exports.SearchConfluenceDocumentStatus = exports.SearchCombinationType = exports.SearchBoardProductType = exports.Scope = exports.SandboxEventType = exports.SandboxEventStatus = exports.SandboxEventSource = exports.SandboxEventResult = exports.RoleAssignmentPrincipalType = exports.RoadmapVersionStatus = exports.RoadmapTimelineMode = exports.RoadmapSprintState = exports.RoadmapRankPosition = exports.RoadmapPaletteColor = exports.RoadmapLevelOneView = exports.RoadmapEpicView = exports.RoadmapChildIssuePlanningMode = exports.RevertToLegacyEditorResult = exports.ReverseTrialCohort = exports.ResponseType = exports.ResourceType = exports.ResourceAccessType = exports.RelevantUsersSortOrder = exports.RelevantUserFilter = exports.RelationType = exports.RelationTargetType = exports.RelationSourceType = exports.RecommendedPagesSpaceBehavior = exports.ReclassificationFilterScope = exports.RecentFilter = exports.RateLimitingCurrency = exports.RadarUserFieldPermission = exports.RadarStatusAppearance = exports.RadarSensitivityLevel = exports.RadarPositionsByEntityType = exports.RadarPositionRole = exports.RadarNumericAppearance = exports.RadarFunctionId = exports.RadarFilterOperators = exports.RadarFilterInputType = exports.RadarFieldType = exports.RadarEntityType = void 0;
exports.ShepherdAlertSnippetRedactionStatus = exports.ShepherdAlertSnippetRedactionFailureReason = exports.ShepherdAlertDetectionCategory = exports.ShepherdAlertAction = exports.ShepherdActorOrgStatus = exports.ShepherdActionType = exports.ShareType = exports.ShardedGraphStoreVersionAssociatedDesignDesignType = exports.ShardedGraphStoreVersionAssociatedDesignDesignStatus = exports.ShardedGraphStoreSprintContainsIssueStatusCategory = exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = exports.ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory = exports.ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus = exports.ShardedGraphStoreSprintAssociatedPrPullRequestStatus = exports.ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreSprintAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = exports.ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus = exports.ShardedGraphStoreProjectAssociatedPrPullRequestStatus = exports.ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreProjectAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreProjectAssociatedBuildBuildState = exports.ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus = exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = exports.ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus = exports.ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreIssueAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreCypherQueryV2VersionEnum = exports.ShardedGraphStoreCypherQueryV2BatchVersionEnum = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = exports.ShardedGraphStoreAtlasHomeSourcesEnum = exports.ShardedGraphStoreAtlasHomeRankingCriteriaEnum = exports.SearchesByTermPeriod = exports.SearchesByTermColumns = exports.SearchThirdPartyRangeField = exports.SearchSortOrder = void 0;
exports.StakeholderCommsOrderType = exports.StakeholderCommsIncidentStatus = exports.StakeholderCommsIncidentImpact = exports.StakeholderCommsExternalIncidentSource = exports.StakeholderCommsErrorType = exports.StakeholderCommsComponentType = exports.StakeholderCommsComponentStyle = exports.StakeholderCommsComponentStatus = exports.StakeholderCommsAssignmentType = exports.StakeholderCommsAddedFromType = exports.SprintState = exports.SprintReportsEstimationStatisticType = exports.SpfAskTargetDateType = exports.SpfAskStatus = exports.SpfAskPriority = exports.SpfAskActivityType = exports.SpfAskActivityAttribute = exports.SpaceViewsPersistenceOption = exports.SpaceSidebarLinkType = exports.SpaceRoleType = exports.SpacePermissionType = exports.SpaceManagerOwnerType = exports.SpaceManagerOrderDirection = exports.SpaceManagerOrderColumn = exports.SpaceManagerFilterType = exports.SpaceAssignmentType = exports.SortOrder = exports.SortDirection = exports.SoftwareCardsDestinationEnum = exports.SitePermissionTypeFilter = exports.SitePermissionType = exports.SitePermissionOperationType = exports.ShepherdWebhookSubscriptionCategory = exports.ShepherdWebhookDestinationType = exports.ShepherdVortexModeStatus = exports.ShepherdSubscriptionStatus = exports.ShepherdSearchOrigin = exports.ShepherdRemediationActionType = exports.ShepherdRedactionStatus = exports.ShepherdRedactedContentStatus = exports.ShepherdRateThresholdValue = exports.ShepherdQueryErrorType = exports.ShepherdMutationErrorType = exports.ShepherdLoginDeviceType = exports.ShepherdDetectionScanningFrequency = exports.ShepherdCustomScanningMatchType = exports.ShepherdClassificationStatus = exports.ShepherdAtlassianProduct = exports.ShepherdAlertTemplateType = exports.ShepherdAlertStatus = void 0;
exports.TownsquareGoalSortEnum = exports.TownsquareGoalScoringMode = exports.TownsquareGoalProgressType = exports.TownsquareGoalIconKey = exports.TownsquareGoalIconAppearance = exports.TownsquareCapabilityContainer = exports.TownsquareCanCreateFusionResult = exports.TownsquareAccessControlCapability = exports.ToolchainWorkspaceConnectionErrorCode = exports.ToolchainProviderType = exports.ToolchainDisassociateEntitiesErrorCode = exports.ToolchainCreateContainerErrorCode = exports.ToolchainContainerConnectionErrorCode = exports.ToolchainCheckAuthErrorCode = exports.ToolchainAssociateEntitiesErrorCode = exports.TeamTypeDefaultFor = exports.TeamStateV2 = exports.TeamState = exports.TeamSortOrder = exports.TeamSortField = exports.TeamSearchField = exports.TeamRole = exports.TeamPermission = exports.TeamMembershipState = exports.TeamMembershipSettings = exports.TeamMembershipRole = exports.TeamHierarchyErrorCode = exports.TeamCalendarDayOfWeek = exports.TaskStatus = exports.TargetTransition = exports.SystemSpaceHomepageTemplate = exports.SwimlaneStrategy = exports.SupportRequestUserType = exports.SupportRequestStatusCategory = exports.SupportRequestQueryStatusCategory = exports.SupportRequestQueryOwnership = exports.SupportRequestNamedContactOperation = exports.SupportRequestFieldDataType = exports.SummaryType = exports.StringUserInputType = exports.StalePagesSortingType = exports.StalePageStatus = exports.StakeholderCommsUptimeStyle = exports.StakeholderCommsStakeholderType = exports.StakeholderCommsStakeholderStatus = exports.StakeholderCommsStakeholderGroupStatus = exports.StakeholderCommsSearchFilterType = exports.StakeholderCommsSearchField = exports.StakeholderCommsPageThemeMode = exports.StakeholderCommsPageTheme = void 0;
exports.VirtualAgentConversationChannel = exports.VirtualAgentConversationActionType = exports.VendorType = exports.UserInstallationRuleValue = exports.UnifiedSortDirection = exports.UnifiedLearningCertificationType = exports.UnifiedLearningCertificationStatus = exports.UnifiedLearningCertificationSortField = exports.UnifiedAiPostType = exports.UnifiedAiPostSortField = exports.UnifiedAiLikeTargetType = exports.TrelloWorkspaceTier = exports.TrelloWorkspaceMembershipType = exports.TrelloSupportedPlannerProviders = exports.TrelloPowerUpDataScope = exports.TrelloPowerUpDataAccess = exports.TrelloPlannerCalendarEventVisibility = exports.TrelloPlannerCalendarEventType = exports.TrelloPlannerCalendarEventStatus = exports.TrelloPlannerCalendarColor = exports.TrelloListType = exports.TrelloDataSourceHandler = exports.TrelloCheckItemState = exports.TrelloCardRole = exports.TrelloCardExternalSource = exports.TrelloCardCoverSize = exports.TrelloCardCoverColor = exports.TrelloCardCoverBrightness = exports.TrelloCardBatchStatus = exports.TrelloCardActionType = exports.TrelloBoardPrefsPermissionLevel = exports.TrelloBoardMembershipType = exports.TownsquareUpdateType = exports.TownsquareUnshardedCapabilityContainer = exports.TownsquareUnshardedAccessControlCapability = exports.TownsquareTargetDateType = exports.TownsquareTagSortEnum = exports.TownsquareRiskSortEnum = exports.TownsquareProjectStateValue = exports.TownsquareProjectSortEnum = exports.TownsquareProjectPhase = exports.TownsquareProjectFusionField = exports.TownsquareProjectDependencyRelationship = exports.TownsquareMetricValueSortEnum = exports.TownsquareMetricType = exports.TownsquareLinkType = exports.TownsquareHighlightType = exports.TownsquareHighlightSortEnum = exports.TownsquareGoalTypeState = exports.TownsquareGoalStateValue = void 0;
exports.SourceBillingType = exports.WorkSuggestionsVulnerabilityStatus = exports.WorkSuggestionsVersionCandidateIncludeReason = exports.WorkSuggestionsUserPersona = exports.WorkSuggestionsTargetAudience = exports.WorkSuggestionsEnvironmentType = exports.WorkSuggestionsAutoDevJobState = exports.WorkSuggestionsApprovalStatus = exports.WorkSuggestionsAction = exports.VirtualAgentIntentTemplateType = exports.VirtualAgentIntentStatus = exports.VirtualAgentConversationState = exports.VirtualAgentConversationCsatOptionType = void 0;
var AvpCanvasRowHeight;
(function (AvpCanvasRowHeight) {
    AvpCanvasRowHeight["Large"] = "large";
    AvpCanvasRowHeight["Medium"] = "medium";
    AvpCanvasRowHeight["Small"] = "small";
    AvpCanvasRowHeight["Xsmall"] = "xsmall";
})(AvpCanvasRowHeight = exports.AvpCanvasRowHeight || (exports.AvpCanvasRowHeight = {}));
var AvpDashboardPermissionType;
(function (AvpDashboardPermissionType) {
    AvpDashboardPermissionType["Closed"] = "CLOSED";
    AvpDashboardPermissionType["Manage"] = "MANAGE";
    AvpDashboardPermissionType["Read"] = "READ";
})(AvpDashboardPermissionType = exports.AvpDashboardPermissionType || (exports.AvpDashboardPermissionType = {}));
var AvpDashboardStatus;
(function (AvpDashboardStatus) {
    AvpDashboardStatus["Active"] = "ACTIVE";
    AvpDashboardStatus["Archived"] = "ARCHIVED";
    AvpDashboardStatus["Trashed"] = "TRASHED";
})(AvpDashboardStatus = exports.AvpDashboardStatus || (exports.AvpDashboardStatus = {}));
var AvpDashboardStatusAction;
(function (AvpDashboardStatusAction) {
    AvpDashboardStatusAction["Archive"] = "ARCHIVE";
    AvpDashboardStatusAction["Restore"] = "RESTORE";
    AvpDashboardStatusAction["Trash"] = "TRASH";
})(AvpDashboardStatusAction = exports.AvpDashboardStatusAction || (exports.AvpDashboardStatusAction = {}));
var AvpEnvVarChartType;
(function (AvpEnvVarChartType) {
    AvpEnvVarChartType["Calendar"] = "CALENDAR";
    AvpEnvVarChartType["CategoricalDropdown"] = "CATEGORICAL_DROPDOWN";
    AvpEnvVarChartType["DateBucket"] = "DATE_BUCKET";
    AvpEnvVarChartType["DateSlider"] = "DATE_SLIDER";
    AvpEnvVarChartType["InputWidget"] = "INPUT_WIDGET";
    AvpEnvVarChartType["RangeInput"] = "RANGE_INPUT";
})(AvpEnvVarChartType = exports.AvpEnvVarChartType || (exports.AvpEnvVarChartType = {}));
var AvpEnvVarDataType;
(function (AvpEnvVarDataType) {
    AvpEnvVarDataType["Boolean"] = "BOOLEAN";
    AvpEnvVarDataType["Date"] = "DATE";
    AvpEnvVarDataType["Datetime"] = "DATETIME";
    AvpEnvVarDataType["DateRange"] = "DATE_RANGE";
    AvpEnvVarDataType["Number"] = "NUMBER";
    AvpEnvVarDataType["NumberRange"] = "NUMBER_RANGE";
    AvpEnvVarDataType["Text"] = "TEXT";
})(AvpEnvVarDataType = exports.AvpEnvVarDataType || (exports.AvpEnvVarDataType = {}));
var AvpIntegrationId;
(function (AvpIntegrationId) {
    AvpIntegrationId["JsmAssets"] = "JSM_ASSETS";
})(AvpIntegrationId = exports.AvpIntegrationId || (exports.AvpIntegrationId = {}));
var AvpRefreshMethod;
(function (AvpRefreshMethod) {
    AvpRefreshMethod["RefreshAuto"] = "REFRESH_AUTO";
    AvpRefreshMethod["RefreshLoad"] = "REFRESH_LOAD";
    AvpRefreshMethod["RefreshManual"] = "REFRESH_MANUAL";
    AvpRefreshMethod["RefreshSmart"] = "REFRESH_SMART";
})(AvpRefreshMethod = exports.AvpRefreshMethod || (exports.AvpRefreshMethod = {}));
var AcceptableResponse;
(function (AcceptableResponse) {
    AcceptableResponse["False"] = "FALSE";
    AcceptableResponse["NotApplicable"] = "NOT_APPLICABLE";
    AcceptableResponse["True"] = "TRUE";
})(AcceptableResponse = exports.AcceptableResponse || (exports.AcceptableResponse = {}));
var AccessStatus;
(function (AccessStatus) {
    AccessStatus["AnonymousAccess"] = "ANONYMOUS_ACCESS";
    AccessStatus["ExternalCollaboratorAccess"] = "EXTERNAL_COLLABORATOR_ACCESS";
    AccessStatus["ExternalShareAccess"] = "EXTERNAL_SHARE_ACCESS";
    AccessStatus["LicensedAdminAccess"] = "LICENSED_ADMIN_ACCESS";
    AccessStatus["LicensedUseAccess"] = "LICENSED_USE_ACCESS";
    AccessStatus["NotPermitted"] = "NOT_PERMITTED";
    AccessStatus["UnlicensedAuthenticatedAccess"] = "UNLICENSED_AUTHENTICATED_ACCESS";
})(AccessStatus = exports.AccessStatus || (exports.AccessStatus = {}));
var AccessType;
(function (AccessType) {
    AccessType["Edit"] = "EDIT";
    AccessType["View"] = "VIEW";
})(AccessType = exports.AccessType || (exports.AccessType = {}));
var AccountStatus;
(function (AccountStatus) {
    AccountStatus["Active"] = "active";
    AccountStatus["Closed"] = "closed";
    AccountStatus["Inactive"] = "inactive";
})(AccountStatus = exports.AccountStatus || (exports.AccountStatus = {}));
var AccountType;
(function (AccountType) {
    AccountType["App"] = "APP";
    AccountType["Atlassian"] = "ATLASSIAN";
    AccountType["Customer"] = "CUSTOMER";
    AccountType["Unknown"] = "UNKNOWN";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
var ActionsAuthType;
(function (ActionsAuthType) {
    ActionsAuthType["ThreeLegged"] = "THREE_LEGGED";
    ActionsAuthType["TwoLegged"] = "TWO_LEGGED";
})(ActionsAuthType = exports.ActionsAuthType || (exports.ActionsAuthType = {}));
var ActionsCapabilityType;
(function (ActionsCapabilityType) {
    ActionsCapabilityType["Ai"] = "AI";
    ActionsCapabilityType["Automation"] = "AUTOMATION";
})(ActionsCapabilityType = exports.ActionsCapabilityType || (exports.ActionsCapabilityType = {}));
var ActionsConfigurationLayout;
(function (ActionsConfigurationLayout) {
    ActionsConfigurationLayout["VerticalLayout"] = "VerticalLayout";
})(ActionsConfigurationLayout = exports.ActionsConfigurationLayout || (exports.ActionsConfigurationLayout = {}));
var ActivitiesContainerType;
(function (ActivitiesContainerType) {
    ActivitiesContainerType["Project"] = "PROJECT";
    ActivitiesContainerType["Site"] = "SITE";
    ActivitiesContainerType["Space"] = "SPACE";
    ActivitiesContainerType["Workspace"] = "WORKSPACE";
})(ActivitiesContainerType = exports.ActivitiesContainerType || (exports.ActivitiesContainerType = {}));
var ActivitiesFilterType;
(function (ActivitiesFilterType) {
    ActivitiesFilterType["And"] = "AND";
    ActivitiesFilterType["Or"] = "OR";
})(ActivitiesFilterType = exports.ActivitiesFilterType || (exports.ActivitiesFilterType = {}));
var ActivitiesObjectType;
(function (ActivitiesObjectType) {
    ActivitiesObjectType["Blogpost"] = "BLOGPOST";
    ActivitiesObjectType["Database"] = "DATABASE";
    ActivitiesObjectType["Embed"] = "EMBED";
    ActivitiesObjectType["Goal"] = "GOAL";
    ActivitiesObjectType["Issue"] = "ISSUE";
    ActivitiesObjectType["Page"] = "PAGE";
    ActivitiesObjectType["Project"] = "PROJECT";
    ActivitiesObjectType["Whiteboard"] = "WHITEBOARD";
})(ActivitiesObjectType = exports.ActivitiesObjectType || (exports.ActivitiesObjectType = {}));
var ActivityEventType;
(function (ActivityEventType) {
    ActivityEventType["Assigned"] = "ASSIGNED";
    ActivityEventType["Commented"] = "COMMENTED";
    ActivityEventType["Created"] = "CREATED";
    ActivityEventType["Edited"] = "EDITED";
    ActivityEventType["Liked"] = "LIKED";
    ActivityEventType["Published"] = "PUBLISHED";
    ActivityEventType["Transitioned"] = "TRANSITIONED";
    ActivityEventType["Unassigned"] = "UNASSIGNED";
    ActivityEventType["Updated"] = "UPDATED";
    ActivityEventType["Viewed"] = "VIEWED";
})(ActivityEventType = exports.ActivityEventType || (exports.ActivityEventType = {}));
var ActivityObjectType;
(function (ActivityObjectType) {
    ActivityObjectType["Blogpost"] = "BLOGPOST";
    ActivityObjectType["Comment"] = "COMMENT";
    ActivityObjectType["Database"] = "DATABASE";
    ActivityObjectType["Embed"] = "EMBED";
    ActivityObjectType["Goal"] = "GOAL";
    ActivityObjectType["Issue"] = "ISSUE";
    ActivityObjectType["Page"] = "PAGE";
    ActivityObjectType["Project"] = "PROJECT";
    ActivityObjectType["Site"] = "SITE";
    ActivityObjectType["Space"] = "SPACE";
    ActivityObjectType["Task"] = "TASK";
    ActivityObjectType["Whiteboard"] = "WHITEBOARD";
})(ActivityObjectType = exports.ActivityObjectType || (exports.ActivityObjectType = {}));
var ActivityProduct;
(function (ActivityProduct) {
    ActivityProduct["Confluence"] = "CONFLUENCE";
    ActivityProduct["Jira"] = "JIRA";
    ActivityProduct["JiraBusiness"] = "JIRA_BUSINESS";
    ActivityProduct["JiraOps"] = "JIRA_OPS";
    ActivityProduct["JiraServiceDesk"] = "JIRA_SERVICE_DESK";
    ActivityProduct["JiraSoftware"] = "JIRA_SOFTWARE";
    ActivityProduct["Townsquare"] = "TOWNSQUARE";
})(ActivityProduct = exports.ActivityProduct || (exports.ActivityProduct = {}));
var AdminAnnouncementBannerSettingsByCriteriaOrder;
(function (AdminAnnouncementBannerSettingsByCriteriaOrder) {
    AdminAnnouncementBannerSettingsByCriteriaOrder["Default"] = "DEFAULT";
    AdminAnnouncementBannerSettingsByCriteriaOrder["ScheduledEndDate"] = "SCHEDULED_END_DATE";
    AdminAnnouncementBannerSettingsByCriteriaOrder["ScheduledStartDate"] = "SCHEDULED_START_DATE";
    AdminAnnouncementBannerSettingsByCriteriaOrder["Visibility"] = "VISIBILITY";
})(AdminAnnouncementBannerSettingsByCriteriaOrder = exports.AdminAnnouncementBannerSettingsByCriteriaOrder || (exports.AdminAnnouncementBannerSettingsByCriteriaOrder = {}));
var AdminHttpVerbs;
(function (AdminHttpVerbs) {
    AdminHttpVerbs["Delete"] = "DELETE";
})(AdminHttpVerbs = exports.AdminHttpVerbs || (exports.AdminHttpVerbs = {}));
var AdminInviteAllowedAction;
(function (AdminInviteAllowedAction) {
    AdminInviteAllowedAction["DirectInvite"] = "DIRECT_INVITE";
    AdminInviteAllowedAction["RequestAccess"] = "REQUEST_ACCESS";
})(AdminInviteAllowedAction = exports.AdminInviteAllowedAction || (exports.AdminInviteAllowedAction = {}));
var AdminInviteNotAppliedReason;
(function (AdminInviteNotAppliedReason) {
    AdminInviteNotAppliedReason["LicenseExceeded"] = "LICENSE_EXCEEDED";
    AdminInviteNotAppliedReason["PendingInviteExists"] = "PENDING_INVITE_EXISTS";
    AdminInviteNotAppliedReason["Rejected"] = "REJECTED";
    AdminInviteNotAppliedReason["UserExists"] = "USER_EXISTS";
})(AdminInviteNotAppliedReason = exports.AdminInviteNotAppliedReason || (exports.AdminInviteNotAppliedReason = {}));
var AdminInvitePolicyInviteeType;
(function (AdminInvitePolicyInviteeType) {
    AdminInvitePolicyInviteeType["Domains"] = "DOMAINS";
    AdminInvitePolicyInviteeType["Groups"] = "GROUPS";
    AdminInvitePolicyInviteeType["Resources"] = "RESOURCES";
})(AdminInvitePolicyInviteeType = exports.AdminInvitePolicyInviteeType || (exports.AdminInvitePolicyInviteeType = {}));
var AdminInvitePolicyInvitorType;
(function (AdminInvitePolicyInvitorType) {
    AdminInvitePolicyInvitorType["Domains"] = "DOMAINS";
    AdminInvitePolicyInvitorType["Groups"] = "GROUPS";
    AdminInvitePolicyInvitorType["Resources"] = "RESOURCES";
})(AdminInvitePolicyInvitorType = exports.AdminInvitePolicyInvitorType || (exports.AdminInvitePolicyInvitorType = {}));
var AdminOperation;
(function (AdminOperation) {
    AdminOperation["And"] = "AND";
    AdminOperation["Nor"] = "NOR";
})(AdminOperation = exports.AdminOperation || (exports.AdminOperation = {}));
var AdminPolicyStatus;
(function (AdminPolicyStatus) {
    AdminPolicyStatus["Disabled"] = "DISABLED";
    AdminPolicyStatus["Enabled"] = "ENABLED";
})(AdminPolicyStatus = exports.AdminPolicyStatus || (exports.AdminPolicyStatus = {}));
var AdminUnitCreateStatusEnum;
(function (AdminUnitCreateStatusEnum) {
    AdminUnitCreateStatusEnum["Failed"] = "FAILED";
    AdminUnitCreateStatusEnum["InProgress"] = "IN_PROGRESS";
    AdminUnitCreateStatusEnum["Success"] = "SUCCESS";
})(AdminUnitCreateStatusEnum = exports.AdminUnitCreateStatusEnum || (exports.AdminUnitCreateStatusEnum = {}));
var AdminUnitValidateNameErrorEnum;
(function (AdminUnitValidateNameErrorEnum) {
    AdminUnitValidateNameErrorEnum["NameConflict"] = "NAME_CONFLICT";
    AdminUnitValidateNameErrorEnum["NameInvalid"] = "NAME_INVALID";
})(AdminUnitValidateNameErrorEnum = exports.AdminUnitValidateNameErrorEnum || (exports.AdminUnitValidateNameErrorEnum = {}));
var AgentStudioAgentRole;
(function (AgentStudioAgentRole) {
    AgentStudioAgentRole["Admin"] = "ADMIN";
    AgentStudioAgentRole["Collaborator"] = "COLLABORATOR";
})(AgentStudioAgentRole = exports.AgentStudioAgentRole || (exports.AgentStudioAgentRole = {}));
var AgentStudioAgentType;
(function (AgentStudioAgentType) {
    AgentStudioAgentType["Assistant"] = "ASSISTANT";
    AgentStudioAgentType["ServiceAgent"] = "SERVICE_AGENT";
})(AgentStudioAgentType = exports.AgentStudioAgentType || (exports.AgentStudioAgentType = {}));
var AgentStudioConversationReportPeriod;
(function (AgentStudioConversationReportPeriod) {
    AgentStudioConversationReportPeriod["Daily"] = "DAILY";
    AgentStudioConversationReportPeriod["Monthly"] = "MONTHLY";
})(AgentStudioConversationReportPeriod = exports.AgentStudioConversationReportPeriod || (exports.AgentStudioConversationReportPeriod = {}));
var AgentStudioCreateAgentPermissionMode;
(function (AgentStudioCreateAgentPermissionMode) {
    AgentStudioCreateAgentPermissionMode["Everyone"] = "EVERYONE";
    AgentStudioCreateAgentPermissionMode["NoOne"] = "NO_ONE";
    AgentStudioCreateAgentPermissionMode["Selected"] = "SELECTED";
})(AgentStudioCreateAgentPermissionMode = exports.AgentStudioCreateAgentPermissionMode || (exports.AgentStudioCreateAgentPermissionMode = {}));
var AgentStudioDatasetResolution;
(function (AgentStudioDatasetResolution) {
    AgentStudioDatasetResolution["Failed"] = "FAILED";
    AgentStudioDatasetResolution["Mixed"] = "MIXED";
    AgentStudioDatasetResolution["Resolved"] = "RESOLVED";
    AgentStudioDatasetResolution["Unresolved"] = "UNRESOLVED";
})(AgentStudioDatasetResolution = exports.AgentStudioDatasetResolution || (exports.AgentStudioDatasetResolution = {}));
var AgentStudioJobRunStatus;
(function (AgentStudioJobRunStatus) {
    AgentStudioJobRunStatus["Cancelled"] = "CANCELLED";
    AgentStudioJobRunStatus["Completed"] = "COMPLETED";
    AgentStudioJobRunStatus["Failed"] = "FAILED";
    AgentStudioJobRunStatus["Pending"] = "PENDING";
    AgentStudioJobRunStatus["Running"] = "RUNNING";
})(AgentStudioJobRunStatus = exports.AgentStudioJobRunStatus || (exports.AgentStudioJobRunStatus = {}));
var AgentStudioJudgementDecision;
(function (AgentStudioJudgementDecision) {
    AgentStudioJudgementDecision["Successful"] = "SUCCESSFUL";
    AgentStudioJudgementDecision["Unsuccessful"] = "UNSUCCESSFUL";
})(AgentStudioJudgementDecision = exports.AgentStudioJudgementDecision || (exports.AgentStudioJudgementDecision = {}));
var AgentStudioProductType;
(function (AgentStudioProductType) {
    AgentStudioProductType["Csm"] = "CSM";
    AgentStudioProductType["RovoAgents"] = "ROVO_AGENTS";
    AgentStudioProductType["RovoServiceAgents"] = "ROVO_SERVICE_AGENTS";
})(AgentStudioProductType = exports.AgentStudioProductType || (exports.AgentStudioProductType = {}));
var AgentStudioToolDefinitionSource;
(function (AgentStudioToolDefinitionSource) {
    AgentStudioToolDefinitionSource["ConvoAi"] = "CONVO_AI";
    AgentStudioToolDefinitionSource["Forge"] = "FORGE";
    AgentStudioToolDefinitionSource["IntegrationsService"] = "INTEGRATIONS_SERVICE";
    AgentStudioToolDefinitionSource["McpServer"] = "MCP_SERVER";
    AgentStudioToolDefinitionSource["McpTool"] = "MCP_TOOL";
})(AgentStudioToolDefinitionSource = exports.AgentStudioToolDefinitionSource || (exports.AgentStudioToolDefinitionSource = {}));
var AiCoreApiQuestionType;
(function (AiCoreApiQuestionType) {
    AiCoreApiQuestionType["DraftDocument"] = "DRAFT_DOCUMENT";
    AiCoreApiQuestionType["KnowledgeBase"] = "KNOWLEDGE_BASE";
})(AiCoreApiQuestionType = exports.AiCoreApiQuestionType || (exports.AiCoreApiQuestionType = {}));
var AlertEventStatus;
(function (AlertEventStatus) {
    AlertEventStatus["Acknowledged"] = "ACKNOWLEDGED";
    AlertEventStatus["Closed"] = "CLOSED";
    AlertEventStatus["Opened"] = "OPENED";
    AlertEventStatus["Snoozed"] = "SNOOZED";
})(AlertEventStatus = exports.AlertEventStatus || (exports.AlertEventStatus = {}));
var AlertPriority;
(function (AlertPriority) {
    AlertPriority["P1"] = "P1";
    AlertPriority["P2"] = "P2";
    AlertPriority["P3"] = "P3";
    AlertPriority["P4"] = "P4";
    AlertPriority["P5"] = "P5";
})(AlertPriority = exports.AlertPriority || (exports.AlertPriority = {}));
var AllUpdatesFeedEventType;
(function (AllUpdatesFeedEventType) {
    AllUpdatesFeedEventType["Comment"] = "COMMENT";
    AllUpdatesFeedEventType["Create"] = "CREATE";
    AllUpdatesFeedEventType["Edit"] = "EDIT";
})(AllUpdatesFeedEventType = exports.AllUpdatesFeedEventType || (exports.AllUpdatesFeedEventType = {}));
var AnalyticsClickEventName;
(function (AnalyticsClickEventName) {
    AnalyticsClickEventName["CompanyHubLinkClicked"] = "companyHubLink_clicked";
})(AnalyticsClickEventName = exports.AnalyticsClickEventName || (exports.AnalyticsClickEventName = {}));
var AnalyticsCommentType;
(function (AnalyticsCommentType) {
    AnalyticsCommentType["Inline"] = "inline";
    AnalyticsCommentType["Page"] = "page";
})(AnalyticsCommentType = exports.AnalyticsCommentType || (exports.AnalyticsCommentType = {}));
var AnalyticsContentType;
(function (AnalyticsContentType) {
    AnalyticsContentType["Blogpost"] = "blogpost";
    AnalyticsContentType["Page"] = "page";
})(AnalyticsContentType = exports.AnalyticsContentType || (exports.AnalyticsContentType = {}));
var AnalyticsDiscoverEventName;
(function (AnalyticsDiscoverEventName) {
    AnalyticsDiscoverEventName["CompanyHubLinkViewed"] = "companyHubLink_viewed";
})(AnalyticsDiscoverEventName = exports.AnalyticsDiscoverEventName || (exports.AnalyticsDiscoverEventName = {}));
var AnalyticsEventName;
(function (AnalyticsEventName) {
    AnalyticsEventName["AnalyticsPageModalViewed"] = "analyticsPageModal_viewed";
    AnalyticsEventName["AutomationRuleTrackCreated"] = "automationRuleTrack_created";
    AnalyticsEventName["CalendarCreated"] = "calendar_created";
    AnalyticsEventName["CommentCreated"] = "comment_created";
    AnalyticsEventName["CompanyHubLinkClicked"] = "companyHubLink_clicked";
    AnalyticsEventName["CompanyHubLinkViewed"] = "companyHubLink_viewed";
    AnalyticsEventName["DatabaseCreated"] = "database_created";
    AnalyticsEventName["DatabaseViewed"] = "database_viewed";
    AnalyticsEventName["InspectPermissionsDialogViewed"] = "inspectPermissionsDialog_viewed";
    AnalyticsEventName["InstanceAnalyticsViewed"] = "instanceAnalytics_viewed";
    AnalyticsEventName["LivedocViewed"] = "livedoc_viewed";
    AnalyticsEventName["PageAnalyticsViewed"] = "pageAnalytics_viewed";
    AnalyticsEventName["PageCreated"] = "page_created";
    AnalyticsEventName["PageInitialized"] = "page_initialized";
    AnalyticsEventName["PageSnapshotted"] = "page_snapshotted";
    AnalyticsEventName["PageUpdated"] = "page_updated";
    AnalyticsEventName["PageViewed"] = "page_viewed";
    AnalyticsEventName["PubliclinkPageViewed"] = "publiclink_page_viewed";
    AnalyticsEventName["SpaceAnalyticsViewed"] = "spaceAnalytics_viewed";
    AnalyticsEventName["TeamCalendarsViewed"] = "teamCalendars_viewed";
    AnalyticsEventName["WhiteboardCreated"] = "whiteboard_created";
    AnalyticsEventName["WhiteboardViewed"] = "whiteboard_viewed";
})(AnalyticsEventName = exports.AnalyticsEventName || (exports.AnalyticsEventName = {}));
var AnalyticsMeasuresEventName;
(function (AnalyticsMeasuresEventName) {
    AnalyticsMeasuresEventName["CurrentBlogpostCountSpacestateMeasured"] = "currentBlogpostCount_spacestate_measured";
    AnalyticsMeasuresEventName["CurrentDatabaseCountSpacestateMeasured"] = "currentDatabaseCount_spacestate_measured";
    AnalyticsMeasuresEventName["CurrentLivedocsCountSpacestateMeasured"] = "currentLivedocsCount_spacestate_measured";
    AnalyticsMeasuresEventName["CurrentPageCountSpacestateMeasured"] = "currentPageCount_spacestate_measured";
    AnalyticsMeasuresEventName["CurrentWhiteboardCountSpacestateMeasured"] = "currentWhiteboardCount_spacestate_measured";
    AnalyticsMeasuresEventName["InactivePageCountSitestateMeasured"] = "inactivePageCount_sitestate_measured";
    AnalyticsMeasuresEventName["InactivePageCountSpacestateMeasured"] = "inactivePageCount_spacestate_measured";
    AnalyticsMeasuresEventName["TotalActiveCommunalSpacesSitestateMeasured"] = "totalActiveCommunalSpaces_sitestate_measured";
    AnalyticsMeasuresEventName["TotalActivePersonalSpacesSitestateMeasured"] = "totalActivePersonalSpaces_sitestate_measured";
    AnalyticsMeasuresEventName["TotalActivePublicLinksSitestateMeasured"] = "totalActivePublicLinks_sitestate_measured";
    AnalyticsMeasuresEventName["TotalActivePublicLinksSpacestateMeasured"] = "totalActivePublicLinks_spacestate_measured";
    AnalyticsMeasuresEventName["TotalActiveSpacesSitestateMeasured"] = "totalActiveSpaces_sitestate_measured";
    AnalyticsMeasuresEventName["TotalCurrentBlogpostCountSitestateMeasured"] = "totalCurrentBlogpostCount_sitestate_measured";
    AnalyticsMeasuresEventName["TotalCurrentDatabaseCountSitestateMeasured"] = "totalCurrentDatabaseCount_sitestate_measured";
    AnalyticsMeasuresEventName["TotalCurrentLivedocsCountSitestateMeasured"] = "totalCurrentLivedocsCount_sitestate_measured";
    AnalyticsMeasuresEventName["TotalCurrentPageCountSitestateMeasured"] = "totalCurrentPageCount_sitestate_measured";
    AnalyticsMeasuresEventName["TotalCurrentWhiteboardCountSitestateMeasured"] = "totalCurrentWhiteboardCount_sitestate_measured";
    AnalyticsMeasuresEventName["TotalPagesDeactivatedOwnerSitestateMeasured"] = "totalPagesDeactivatedOwner_sitestate_measured";
    AnalyticsMeasuresEventName["TotalPagesDeactivatedOwnerSpacestateMeasured"] = "totalPagesDeactivatedOwner_spacestate_measured";
})(AnalyticsMeasuresEventName = exports.AnalyticsMeasuresEventName || (exports.AnalyticsMeasuresEventName = {}));
var AnalyticsMeasuresSpaceEventName;
(function (AnalyticsMeasuresSpaceEventName) {
    AnalyticsMeasuresSpaceEventName["CurrentBlogpostCountSpacestateMeasured"] = "currentBlogpostCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["CurrentDatabaseCountSpacestateMeasured"] = "currentDatabaseCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["CurrentLivedocsCountSpacestateMeasured"] = "currentLivedocsCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["CurrentPageCountSpacestateMeasured"] = "currentPageCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["CurrentWhiteboardCountSpacestateMeasured"] = "currentWhiteboardCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["InactivePageCountSpacestateMeasured"] = "inactivePageCount_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["TotalActivePublicLinksSpacestateMeasured"] = "totalActivePublicLinks_spacestate_measured";
    AnalyticsMeasuresSpaceEventName["TotalPagesDeactivatedOwnerSpacestateMeasured"] = "totalPagesDeactivatedOwner_spacestate_measured";
})(AnalyticsMeasuresSpaceEventName = exports.AnalyticsMeasuresSpaceEventName || (exports.AnalyticsMeasuresSpaceEventName = {}));
var AnalyticsSearchEventName;
(function (AnalyticsSearchEventName) {
    AnalyticsSearchEventName["AdvancedSearchResultLinkClicked"] = "advancedSearchResultLink_clicked";
    AnalyticsSearchEventName["AdvancedSearchResultsShown"] = "advancedSearchResults_shown";
    AnalyticsSearchEventName["QuickSearchRequestCompleted"] = "quickSearchRequest_completed";
    AnalyticsSearchEventName["QuickSearchResultSelected"] = "quickSearchResult_selected";
})(AnalyticsSearchEventName = exports.AnalyticsSearchEventName || (exports.AnalyticsSearchEventName = {}));
var AnalyticsTimeseriesGranularity;
(function (AnalyticsTimeseriesGranularity) {
    AnalyticsTimeseriesGranularity["Day"] = "DAY";
    AnalyticsTimeseriesGranularity["Hour"] = "HOUR";
    AnalyticsTimeseriesGranularity["Month"] = "MONTH";
    AnalyticsTimeseriesGranularity["Week"] = "WEEK";
})(AnalyticsTimeseriesGranularity = exports.AnalyticsTimeseriesGranularity || (exports.AnalyticsTimeseriesGranularity = {}));
var ApiContext;
(function (ApiContext) {
    ApiContext["Devops"] = "DEVOPS";
})(ApiContext = exports.ApiContext || (exports.ApiContext = {}));
var ApiGroup;
(function (ApiGroup) {
    ApiGroup["Actions"] = "ACTIONS";
    ApiGroup["AgentStudio"] = "AGENT_STUDIO";
    ApiGroup["AppRecommendations"] = "APP_RECOMMENDATIONS";
    ApiGroup["AtlassianStudio"] = "ATLASSIAN_STUDIO";
    ApiGroup["Caas"] = "CAAS";
    ApiGroup["CloudAdmin"] = "CLOUD_ADMIN";
    ApiGroup["CollaborationGraph"] = "COLLABORATION_GRAPH";
    ApiGroup["CommerceCcp"] = "COMMERCE_CCP";
    ApiGroup["CommerceHams"] = "COMMERCE_HAMS";
    ApiGroup["CommerceSharedApi"] = "COMMERCE_SHARED_API";
    ApiGroup["Compass"] = "COMPASS";
    ApiGroup["Confluence"] = "CONFLUENCE";
    ApiGroup["ConfluenceAnalytics"] = "CONFLUENCE_ANALYTICS";
    ApiGroup["ConfluenceLegacy"] = "CONFLUENCE_LEGACY";
    ApiGroup["ConfluenceMigration"] = "CONFLUENCE_MIGRATION";
    ApiGroup["ConfluenceMutations"] = "CONFLUENCE_MUTATIONS";
    ApiGroup["ConfluencePages"] = "CONFLUENCE_PAGES";
    ApiGroup["ConfluencePageTree"] = "CONFLUENCE_PAGE_TREE";
    ApiGroup["ConfluenceSmarts"] = "CONFLUENCE_SMARTS";
    ApiGroup["ConfluenceTenant"] = "CONFLUENCE_TENANT";
    ApiGroup["ConfluenceUser"] = "CONFLUENCE_USER";
    ApiGroup["ConfluenceV2"] = "CONFLUENCE_V2";
    ApiGroup["ContentPlatformApi"] = "CONTENT_PLATFORM_API";
    ApiGroup["CsmAi"] = "CSM_AI";
    ApiGroup["CustomerService"] = "CUSTOMER_SERVICE";
    ApiGroup["DevopsAriGraph"] = "DEVOPS_ARI_GRAPH";
    ApiGroup["DevopsContainerRelationship"] = "DEVOPS_CONTAINER_RELATIONSHIP";
    ApiGroup["DevopsService"] = "DEVOPS_SERVICE";
    ApiGroup["DevopsThirdParty"] = "DEVOPS_THIRD_PARTY";
    ApiGroup["DevopsToolchain"] = "DEVOPS_TOOLCHAIN";
    ApiGroup["FeatureReleaseQuery"] = "FEATURE_RELEASE_QUERY";
    ApiGroup["Forge"] = "FORGE";
    ApiGroup["Goals"] = "GOALS";
    ApiGroup["GuardDetect"] = "GUARD_DETECT";
    ApiGroup["Help"] = "HELP";
    ApiGroup["Identity"] = "IDENTITY";
    ApiGroup["InsightsXperienceService"] = "INSIGHTS_XPERIENCE_SERVICE";
    ApiGroup["Jira"] = "JIRA";
    ApiGroup["Papi"] = "PAPI";
    ApiGroup["Polaris"] = "POLARIS";
    ApiGroup["Projects"] = "PROJECTS";
    ApiGroup["ServiceHubAgentConfiguration"] = "SERVICE_HUB_AGENT_CONFIGURATION";
    ApiGroup["SurfacePlatform"] = "SURFACE_PLATFORM";
    ApiGroup["Teams"] = "TEAMS";
    ApiGroup["VirtualAgent"] = "VIRTUAL_AGENT";
    ApiGroup["WebTriggers"] = "WEB_TRIGGERS";
    ApiGroup["XenInvocationService"] = "XEN_INVOCATION_SERVICE";
    ApiGroup["XenLogsApi"] = "XEN_LOGS_API";
})(ApiGroup = exports.ApiGroup || (exports.ApiGroup = {}));
var AppContributorRole;
(function (AppContributorRole) {
    AppContributorRole["Admin"] = "ADMIN";
    AppContributorRole["Deployer"] = "DEPLOYER";
    AppContributorRole["Developer"] = "DEVELOPER";
    AppContributorRole["Viewer"] = "VIEWER";
    AppContributorRole["ViewerAdvanced"] = "VIEWER_ADVANCED";
})(AppContributorRole = exports.AppContributorRole || (exports.AppContributorRole = {}));
var AppDeploymentEventLogLevel;
(function (AppDeploymentEventLogLevel) {
    AppDeploymentEventLogLevel["Error"] = "ERROR";
    AppDeploymentEventLogLevel["Info"] = "INFO";
    AppDeploymentEventLogLevel["Warning"] = "WARNING";
})(AppDeploymentEventLogLevel = exports.AppDeploymentEventLogLevel || (exports.AppDeploymentEventLogLevel = {}));
var AppDeploymentStatus;
(function (AppDeploymentStatus) {
    AppDeploymentStatus["Done"] = "DONE";
    AppDeploymentStatus["Failed"] = "FAILED";
    AppDeploymentStatus["InProgress"] = "IN_PROGRESS";
})(AppDeploymentStatus = exports.AppDeploymentStatus || (exports.AppDeploymentStatus = {}));
var AppDeploymentStepStatus;
(function (AppDeploymentStepStatus) {
    AppDeploymentStepStatus["Done"] = "DONE";
    AppDeploymentStepStatus["Failed"] = "FAILED";
    AppDeploymentStepStatus["Started"] = "STARTED";
})(AppDeploymentStepStatus = exports.AppDeploymentStepStatus || (exports.AppDeploymentStepStatus = {}));
var AppEnvironmentType;
(function (AppEnvironmentType) {
    AppEnvironmentType["Development"] = "DEVELOPMENT";
    AppEnvironmentType["Production"] = "PRODUCTION";
    AppEnvironmentType["Staging"] = "STAGING";
})(AppEnvironmentType = exports.AppEnvironmentType || (exports.AppEnvironmentType = {}));
var AppNetworkEgressCategory;
(function (AppNetworkEgressCategory) {
    AppNetworkEgressCategory["Analytics"] = "ANALYTICS";
})(AppNetworkEgressCategory = exports.AppNetworkEgressCategory || (exports.AppNetworkEgressCategory = {}));
var AppNetworkEgressCategoryExtension;
(function (AppNetworkEgressCategoryExtension) {
    AppNetworkEgressCategoryExtension["Analytics"] = "ANALYTICS";
})(AppNetworkEgressCategoryExtension = exports.AppNetworkEgressCategoryExtension || (exports.AppNetworkEgressCategoryExtension = {}));
var AppNetworkPermissionType;
(function (AppNetworkPermissionType) {
    AppNetworkPermissionType["FetchBackendSide"] = "FETCH_BACKEND_SIDE";
    AppNetworkPermissionType["FetchClientSide"] = "FETCH_CLIENT_SIDE";
    AppNetworkPermissionType["Fonts"] = "FONTS";
    AppNetworkPermissionType["Frames"] = "FRAMES";
    AppNetworkPermissionType["Images"] = "IMAGES";
    AppNetworkPermissionType["Media"] = "MEDIA";
    AppNetworkPermissionType["Navigation"] = "NAVIGATION";
    AppNetworkPermissionType["Scripts"] = "SCRIPTS";
    AppNetworkPermissionType["Styles"] = "STYLES";
})(AppNetworkPermissionType = exports.AppNetworkPermissionType || (exports.AppNetworkPermissionType = {}));
var AppNetworkPermissionTypeExtension;
(function (AppNetworkPermissionTypeExtension) {
    AppNetworkPermissionTypeExtension["FetchBackendSide"] = "FETCH_BACKEND_SIDE";
    AppNetworkPermissionTypeExtension["FetchClientSide"] = "FETCH_CLIENT_SIDE";
    AppNetworkPermissionTypeExtension["Fonts"] = "FONTS";
    AppNetworkPermissionTypeExtension["Frames"] = "FRAMES";
    AppNetworkPermissionTypeExtension["Images"] = "IMAGES";
    AppNetworkPermissionTypeExtension["Media"] = "MEDIA";
    AppNetworkPermissionTypeExtension["Navigation"] = "NAVIGATION";
    AppNetworkPermissionTypeExtension["Scripts"] = "SCRIPTS";
    AppNetworkPermissionTypeExtension["Styles"] = "STYLES";
})(AppNetworkPermissionTypeExtension = exports.AppNetworkPermissionTypeExtension || (exports.AppNetworkPermissionTypeExtension = {}));
var AppSecurityPoliciesPermissionType;
(function (AppSecurityPoliciesPermissionType) {
    AppSecurityPoliciesPermissionType["Scripts"] = "SCRIPTS";
    AppSecurityPoliciesPermissionType["Styles"] = "STYLES";
})(AppSecurityPoliciesPermissionType = exports.AppSecurityPoliciesPermissionType || (exports.AppSecurityPoliciesPermissionType = {}));
var AppSecurityPoliciesPermissionTypeExtension;
(function (AppSecurityPoliciesPermissionTypeExtension) {
    AppSecurityPoliciesPermissionTypeExtension["Scripts"] = "SCRIPTS";
    AppSecurityPoliciesPermissionTypeExtension["Styles"] = "STYLES";
})(AppSecurityPoliciesPermissionTypeExtension = exports.AppSecurityPoliciesPermissionTypeExtension || (exports.AppSecurityPoliciesPermissionTypeExtension = {}));
var AppStorageSqlTableDataSortDirection;
(function (AppStorageSqlTableDataSortDirection) {
    AppStorageSqlTableDataSortDirection["Asc"] = "ASC";
    AppStorageSqlTableDataSortDirection["Desc"] = "DESC";
})(AppStorageSqlTableDataSortDirection = exports.AppStorageSqlTableDataSortDirection || (exports.AppStorageSqlTableDataSortDirection = {}));
var AppStoredCustomEntityFilterCondition;
(function (AppStoredCustomEntityFilterCondition) {
    AppStoredCustomEntityFilterCondition["BeginsWith"] = "BEGINS_WITH";
    AppStoredCustomEntityFilterCondition["Between"] = "BETWEEN";
    AppStoredCustomEntityFilterCondition["Contains"] = "CONTAINS";
    AppStoredCustomEntityFilterCondition["EqualTo"] = "EQUAL_TO";
    AppStoredCustomEntityFilterCondition["Exists"] = "EXISTS";
    AppStoredCustomEntityFilterCondition["GreaterThan"] = "GREATER_THAN";
    AppStoredCustomEntityFilterCondition["GreaterThanEqualTo"] = "GREATER_THAN_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["LessThan"] = "LESS_THAN";
    AppStoredCustomEntityFilterCondition["LessThanEqualTo"] = "LESS_THAN_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["NotContains"] = "NOT_CONTAINS";
    AppStoredCustomEntityFilterCondition["NotEqualTo"] = "NOT_EQUAL_TO";
    AppStoredCustomEntityFilterCondition["NotExists"] = "NOT_EXISTS";
})(AppStoredCustomEntityFilterCondition = exports.AppStoredCustomEntityFilterCondition || (exports.AppStoredCustomEntityFilterCondition = {}));
var AppStoredCustomEntityRangeCondition;
(function (AppStoredCustomEntityRangeCondition) {
    AppStoredCustomEntityRangeCondition["BeginsWith"] = "BEGINS_WITH";
    AppStoredCustomEntityRangeCondition["Between"] = "BETWEEN";
    AppStoredCustomEntityRangeCondition["EqualTo"] = "EQUAL_TO";
    AppStoredCustomEntityRangeCondition["GreaterThan"] = "GREATER_THAN";
    AppStoredCustomEntityRangeCondition["GreaterThanEqualTo"] = "GREATER_THAN_EQUAL_TO";
    AppStoredCustomEntityRangeCondition["LessThan"] = "LESS_THAN";
    AppStoredCustomEntityRangeCondition["LessThanEqualTo"] = "LESS_THAN_EQUAL_TO";
})(AppStoredCustomEntityRangeCondition = exports.AppStoredCustomEntityRangeCondition || (exports.AppStoredCustomEntityRangeCondition = {}));
var AppStoredEntityCondition;
(function (AppStoredEntityCondition) {
    AppStoredEntityCondition["In"] = "IN";
    AppStoredEntityCondition["NotEqualTo"] = "NOT_EQUAL_TO";
    AppStoredEntityCondition["StartsWith"] = "STARTS_WITH";
})(AppStoredEntityCondition = exports.AppStoredEntityCondition || (exports.AppStoredEntityCondition = {}));
var AppTaskState;
(function (AppTaskState) {
    AppTaskState["Complete"] = "COMPLETE";
    AppTaskState["Failed"] = "FAILED";
    AppTaskState["Pending"] = "PENDING";
    AppTaskState["Running"] = "RUNNING";
})(AppTaskState = exports.AppTaskState || (exports.AppTaskState = {}));
var AppTrustInformationState;
(function (AppTrustInformationState) {
    AppTrustInformationState["Draft"] = "DRAFT";
    AppTrustInformationState["Live"] = "LIVE";
})(AppTrustInformationState = exports.AppTrustInformationState || (exports.AppTrustInformationState = {}));
var AppVersionRolloutStatus;
(function (AppVersionRolloutStatus) {
    AppVersionRolloutStatus["Cancelled"] = "CANCELLED";
    AppVersionRolloutStatus["Complete"] = "COMPLETE";
    AppVersionRolloutStatus["Running"] = "RUNNING";
})(AppVersionRolloutStatus = exports.AppVersionRolloutStatus || (exports.AppVersionRolloutStatus = {}));
var ArchivedMode;
(function (ArchivedMode) {
    ArchivedMode["ActiveOnly"] = "ACTIVE_ONLY";
    ArchivedMode["All"] = "ALL";
    ArchivedMode["ArchivedOnly"] = "ARCHIVED_ONLY";
})(ArchivedMode = exports.ArchivedMode || (exports.ArchivedMode = {}));
var AriGraphRelationshipsSortDirection;
(function (AriGraphRelationshipsSortDirection) {
    AriGraphRelationshipsSortDirection["Asc"] = "ASC";
    AriGraphRelationshipsSortDirection["Desc"] = "DESC";
})(AriGraphRelationshipsSortDirection = exports.AriGraphRelationshipsSortDirection || (exports.AriGraphRelationshipsSortDirection = {}));
var AssetsDmAttributeMappingSaveDefaultOption;
(function (AssetsDmAttributeMappingSaveDefaultOption) {
    AssetsDmAttributeMappingSaveDefaultOption["AddNewOnly"] = "AddNewOnly";
    AssetsDmAttributeMappingSaveDefaultOption["Merge"] = "Merge";
    AssetsDmAttributeMappingSaveDefaultOption["OverwriteAll"] = "OverwriteAll";
    AssetsDmAttributeMappingSaveDefaultOption["UpdateOnly"] = "UpdateOnly";
})(AssetsDmAttributeMappingSaveDefaultOption = exports.AssetsDmAttributeMappingSaveDefaultOption || (exports.AssetsDmAttributeMappingSaveDefaultOption = {}));
var AssetsDmDataSourceOperationEnum;
(function (AssetsDmDataSourceOperationEnum) {
    AssetsDmDataSourceOperationEnum["Create"] = "Create";
    AssetsDmDataSourceOperationEnum["Update"] = "Update";
    AssetsDmDataSourceOperationEnum["UpdateTransform"] = "UpdateTransform";
})(AssetsDmDataSourceOperationEnum = exports.AssetsDmDataSourceOperationEnum || (exports.AssetsDmDataSourceOperationEnum = {}));
var AssetsDmDataSourceTransformParameterType;
(function (AssetsDmDataSourceTransformParameterType) {
    AssetsDmDataSourceTransformParameterType["Date"] = "date";
    AssetsDmDataSourceTransformParameterType["Numeric"] = "numeric";
    AssetsDmDataSourceTransformParameterType["Select"] = "select";
    AssetsDmDataSourceTransformParameterType["String"] = "string";
})(AssetsDmDataSourceTransformParameterType = exports.AssetsDmDataSourceTransformParameterType || (exports.AssetsDmDataSourceTransformParameterType = {}));
var AssetsDmDataSourceTransformSelectFieldType;
(function (AssetsDmDataSourceTransformSelectFieldType) {
    AssetsDmDataSourceTransformSelectFieldType["ColumnTypes"] = "columnTypes";
    AssetsDmDataSourceTransformSelectFieldType["Columns"] = "columns";
    AssetsDmDataSourceTransformSelectFieldType["ColumnsWithDateTime"] = "columnsWithDateTime";
    AssetsDmDataSourceTransformSelectFieldType["DateFormats"] = "dateFormats";
    AssetsDmDataSourceTransformSelectFieldType["Intervals"] = "intervals";
    AssetsDmDataSourceTransformSelectFieldType["Jobs"] = "jobs";
})(AssetsDmDataSourceTransformSelectFieldType = exports.AssetsDmDataSourceTransformSelectFieldType || (exports.AssetsDmDataSourceTransformSelectFieldType = {}));
var AssetsDmObjectClassEnum;
(function (AssetsDmObjectClassEnum) {
    AssetsDmObjectClassEnum["Compute"] = "Compute";
    AssetsDmObjectClassEnum["Network"] = "Network";
    AssetsDmObjectClassEnum["People"] = "People";
    AssetsDmObjectClassEnum["Peripherals"] = "Peripherals";
    AssetsDmObjectClassEnum["Software"] = "Software";
})(AssetsDmObjectClassEnum = exports.AssetsDmObjectClassEnum || (exports.AssetsDmObjectClassEnum = {}));
var AssetsDmObjectsListColumnType;
(function (AssetsDmObjectsListColumnType) {
    AssetsDmObjectsListColumnType["Boolean"] = "BOOLEAN";
    AssetsDmObjectsListColumnType["Datetime"] = "DATETIME";
    AssetsDmObjectsListColumnType["Icon"] = "ICON";
    AssetsDmObjectsListColumnType["Number"] = "NUMBER";
    AssetsDmObjectsListColumnType["String"] = "STRING";
    AssetsDmObjectsListColumnType["Tag"] = "TAG";
})(AssetsDmObjectsListColumnType = exports.AssetsDmObjectsListColumnType || (exports.AssetsDmObjectsListColumnType = {}));
var AssetsDmObjectsListIconType;
(function (AssetsDmObjectsListIconType) {
    AssetsDmObjectsListIconType["Failed"] = "FAILED";
    AssetsDmObjectsListIconType["Success"] = "SUCCESS";
    AssetsDmObjectsListIconType["Unknown"] = "UNKNOWN";
})(AssetsDmObjectsListIconType = exports.AssetsDmObjectsListIconType || (exports.AssetsDmObjectsListIconType = {}));
var AssetsDmObjectsListRawColumnType;
(function (AssetsDmObjectsListRawColumnType) {
    AssetsDmObjectsListRawColumnType["Bigint"] = "BIGINT";
    AssetsDmObjectsListRawColumnType["Boolean"] = "BOOLEAN";
    AssetsDmObjectsListRawColumnType["Datetime"] = "DATETIME";
    AssetsDmObjectsListRawColumnType["Decimal"] = "DECIMAL";
    AssetsDmObjectsListRawColumnType["Int"] = "INT";
    AssetsDmObjectsListRawColumnType["String"] = "STRING";
})(AssetsDmObjectsListRawColumnType = exports.AssetsDmObjectsListRawColumnType || (exports.AssetsDmObjectsListRawColumnType = {}));
var AssetsDmObjectsListSearchCondition;
(function (AssetsDmObjectsListSearchCondition) {
    AssetsDmObjectsListSearchCondition["And"] = "AND";
    AssetsDmObjectsListSearchCondition["Andnot"] = "ANDNOT";
    AssetsDmObjectsListSearchCondition["Not"] = "NOT";
    AssetsDmObjectsListSearchCondition["Or"] = "OR";
    AssetsDmObjectsListSearchCondition["Ornot"] = "ORNOT";
})(AssetsDmObjectsListSearchCondition = exports.AssetsDmObjectsListSearchCondition || (exports.AssetsDmObjectsListSearchCondition = {}));
var AssetsDmObjectsListSearchGroupCondition;
(function (AssetsDmObjectsListSearchGroupCondition) {
    AssetsDmObjectsListSearchGroupCondition["And"] = "AND";
    AssetsDmObjectsListSearchGroupCondition["Andnot"] = "ANDNOT";
    AssetsDmObjectsListSearchGroupCondition["Not"] = "NOT";
    AssetsDmObjectsListSearchGroupCondition["Or"] = "OR";
    AssetsDmObjectsListSearchGroupCondition["Ornot"] = "ORNOT";
})(AssetsDmObjectsListSearchGroupCondition = exports.AssetsDmObjectsListSearchGroupCondition || (exports.AssetsDmObjectsListSearchGroupCondition = {}));
var AssetsDmObjectsListSearchOperator;
(function (AssetsDmObjectsListSearchOperator) {
    AssetsDmObjectsListSearchOperator["AfterNext"] = "AFTER_NEXT";
    AssetsDmObjectsListSearchOperator["ComputeIssues"] = "COMPUTE_ISSUES";
    AssetsDmObjectsListSearchOperator["Contains"] = "CONTAINS";
    AssetsDmObjectsListSearchOperator["Empty"] = "EMPTY";
    AssetsDmObjectsListSearchOperator["EndsWith"] = "ENDS_WITH";
    AssetsDmObjectsListSearchOperator["Equals"] = "EQUALS";
    AssetsDmObjectsListSearchOperator["GreaterThan"] = "GREATER_THAN";
    AssetsDmObjectsListSearchOperator["In"] = "IN";
    AssetsDmObjectsListSearchOperator["Known"] = "KNOWN";
    AssetsDmObjectsListSearchOperator["LessThan"] = "LESS_THAN";
    AssetsDmObjectsListSearchOperator["Mapped"] = "MAPPED";
    AssetsDmObjectsListSearchOperator["NotContains"] = "NOT_CONTAINS";
    AssetsDmObjectsListSearchOperator["NotEmpty"] = "NOT_EMPTY";
    AssetsDmObjectsListSearchOperator["NotEndsWith"] = "NOT_ENDS_WITH";
    AssetsDmObjectsListSearchOperator["NotEquals"] = "NOT_EQUALS";
    AssetsDmObjectsListSearchOperator["NotIn"] = "NOT_IN";
    AssetsDmObjectsListSearchOperator["NotMapped"] = "NOT_MAPPED";
    AssetsDmObjectsListSearchOperator["NotNull"] = "NOT_NULL";
    AssetsDmObjectsListSearchOperator["NotNullOrEmpty"] = "NOT_NULL_OR_EMPTY";
    AssetsDmObjectsListSearchOperator["NotStartsWith"] = "NOT_STARTS_WITH";
    AssetsDmObjectsListSearchOperator["Null"] = "NULL";
    AssetsDmObjectsListSearchOperator["NullOrEmpty"] = "NULL_OR_EMPTY";
    AssetsDmObjectsListSearchOperator["OlderThan"] = "OLDER_THAN";
    AssetsDmObjectsListSearchOperator["StartsWith"] = "STARTS_WITH";
    AssetsDmObjectsListSearchOperator["Unknown"] = "UNKNOWN";
    AssetsDmObjectsListSearchOperator["WithinLast"] = "WITHIN_LAST";
    AssetsDmObjectsListSearchOperator["WithinNext"] = "WITHIN_NEXT";
})(AssetsDmObjectsListSearchOperator = exports.AssetsDmObjectsListSearchOperator || (exports.AssetsDmObjectsListSearchOperator = {}));
var AssetsDmObjectsListSortOrder;
(function (AssetsDmObjectsListSortOrder) {
    AssetsDmObjectsListSortOrder["Asc"] = "ASC";
    AssetsDmObjectsListSortOrder["Desc"] = "DESC";
})(AssetsDmObjectsListSortOrder = exports.AssetsDmObjectsListSortOrder || (exports.AssetsDmObjectsListSortOrder = {}));
var AssetsDmSortByInputOrder;
(function (AssetsDmSortByInputOrder) {
    AssetsDmSortByInputOrder["Asc"] = "ASC";
    AssetsDmSortByInputOrder["Desc"] = "DESC";
})(AssetsDmSortByInputOrder = exports.AssetsDmSortByInputOrder || (exports.AssetsDmSortByInputOrder = {}));
var AssetsDmStepStatus;
(function (AssetsDmStepStatus) {
    AssetsDmStepStatus["Blocked"] = "BLOCKED";
    AssetsDmStepStatus["Completed"] = "COMPLETED";
    AssetsDmStepStatus["Error"] = "ERROR";
    AssetsDmStepStatus["NotStarted"] = "NOT_STARTED";
    AssetsDmStepStatus["Outdated"] = "OUTDATED";
})(AssetsDmStepStatus = exports.AssetsDmStepStatus || (exports.AssetsDmStepStatus = {}));
var AtlassianProductHostingType;
(function (AtlassianProductHostingType) {
    AtlassianProductHostingType["Cloud"] = "CLOUD";
    AtlassianProductHostingType["DataCenter"] = "DATA_CENTER";
    AtlassianProductHostingType["Server"] = "SERVER";
})(AtlassianProductHostingType = exports.AtlassianProductHostingType || (exports.AtlassianProductHostingType = {}));
var AuthClientType;
(function (AuthClientType) {
    AuthClientType["AtlassianMobile"] = "ATLASSIAN_MOBILE";
    AuthClientType["ThirdParty"] = "THIRD_PARTY";
    AuthClientType["ThirdPartyNative"] = "THIRD_PARTY_NATIVE";
})(AuthClientType = exports.AuthClientType || (exports.AuthClientType = {}));
var BackendExperiment;
(function (BackendExperiment) {
    BackendExperiment["Einstein"] = "EINSTEIN";
})(BackendExperiment = exports.BackendExperiment || (exports.BackendExperiment = {}));
var BillingSourceSystem;
(function (BillingSourceSystem) {
    BillingSourceSystem["Ccp"] = "CCP";
    BillingSourceSystem["Hams"] = "HAMS";
})(BillingSourceSystem = exports.BillingSourceSystem || (exports.BillingSourceSystem = {}));
var BitbucketPermission;
(function (BitbucketPermission) {
    BitbucketPermission["Admin"] = "ADMIN";
})(BitbucketPermission = exports.BitbucketPermission || (exports.BitbucketPermission = {}));
var BlockedAccessSubjectType;
(function (BlockedAccessSubjectType) {
    BlockedAccessSubjectType["Group"] = "GROUP";
    BlockedAccessSubjectType["User"] = "USER";
})(BlockedAccessSubjectType = exports.BlockedAccessSubjectType || (exports.BlockedAccessSubjectType = {}));
var BoardFeatureStatus;
(function (BoardFeatureStatus) {
    BoardFeatureStatus["ComingSoon"] = "COMING_SOON";
    BoardFeatureStatus["Disabled"] = "DISABLED";
    BoardFeatureStatus["Enabled"] = "ENABLED";
})(BoardFeatureStatus = exports.BoardFeatureStatus || (exports.BoardFeatureStatus = {}));
var BoardFeatureToggleStatus;
(function (BoardFeatureToggleStatus) {
    BoardFeatureToggleStatus["Disabled"] = "DISABLED";
    BoardFeatureToggleStatus["Enabled"] = "ENABLED";
})(BoardFeatureToggleStatus = exports.BoardFeatureToggleStatus || (exports.BoardFeatureToggleStatus = {}));
var BoardSwimlaneStrategy;
(function (BoardSwimlaneStrategy) {
    BoardSwimlaneStrategy["AssigneeUnassignedFirst"] = "ASSIGNEE_UNASSIGNED_FIRST";
    BoardSwimlaneStrategy["AssigneeUnassignedLast"] = "ASSIGNEE_UNASSIGNED_LAST";
    BoardSwimlaneStrategy["Custom"] = "CUSTOM";
    BoardSwimlaneStrategy["Epic"] = "EPIC";
    BoardSwimlaneStrategy["IssueChildren"] = "ISSUE_CHILDREN";
    BoardSwimlaneStrategy["IssueParent"] = "ISSUE_PARENT";
    BoardSwimlaneStrategy["None"] = "NONE";
    BoardSwimlaneStrategy["ParentChild"] = "PARENT_CHILD";
    BoardSwimlaneStrategy["Project"] = "PROJECT";
    BoardSwimlaneStrategy["RequestType"] = "REQUEST_TYPE";
})(BoardSwimlaneStrategy = exports.BoardSwimlaneStrategy || (exports.BoardSwimlaneStrategy = {}));
var BodyFormatType;
(function (BodyFormatType) {
    BodyFormatType["AnonymousExportView"] = "ANONYMOUS_EXPORT_VIEW";
    BodyFormatType["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    BodyFormatType["Editor"] = "EDITOR";
    BodyFormatType["Editor2"] = "EDITOR2";
    BodyFormatType["ExportView"] = "EXPORT_VIEW";
    BodyFormatType["Storage"] = "STORAGE";
    BodyFormatType["StyledView"] = "STYLED_VIEW";
    BodyFormatType["View"] = "VIEW";
})(BodyFormatType = exports.BodyFormatType || (exports.BodyFormatType = {}));
var BooleanUserInputType;
(function (BooleanUserInputType) {
    BooleanUserInputType["Boolean"] = "BOOLEAN";
})(BooleanUserInputType = exports.BooleanUserInputType || (exports.BooleanUserInputType = {}));
var BuiltinPolarisIdeaField;
(function (BuiltinPolarisIdeaField) {
    BuiltinPolarisIdeaField["Archived"] = "ARCHIVED";
    BuiltinPolarisIdeaField["ArchivedBy"] = "ARCHIVED_BY";
    BuiltinPolarisIdeaField["ArchivedOn"] = "ARCHIVED_ON";
    BuiltinPolarisIdeaField["Assignee"] = "ASSIGNEE";
    BuiltinPolarisIdeaField["AtlasGoal"] = "ATLAS_GOAL";
    BuiltinPolarisIdeaField["AtlasProject"] = "ATLAS_PROJECT";
    BuiltinPolarisIdeaField["AtlasProjectStatus"] = "ATLAS_PROJECT_STATUS";
    BuiltinPolarisIdeaField["AtlasProjectTarget"] = "ATLAS_PROJECT_TARGET";
    BuiltinPolarisIdeaField["Created"] = "CREATED";
    BuiltinPolarisIdeaField["Creator"] = "CREATOR";
    BuiltinPolarisIdeaField["DeliveryProgress"] = "DELIVERY_PROGRESS";
    BuiltinPolarisIdeaField["DeliveryStatus"] = "DELIVERY_STATUS";
    BuiltinPolarisIdeaField["Description"] = "DESCRIPTION";
    BuiltinPolarisIdeaField["IssueComments"] = "ISSUE_COMMENTS";
    BuiltinPolarisIdeaField["IssueId"] = "ISSUE_ID";
    BuiltinPolarisIdeaField["IssueType"] = "ISSUE_TYPE";
    BuiltinPolarisIdeaField["Key"] = "KEY";
    BuiltinPolarisIdeaField["Labels"] = "LABELS";
    BuiltinPolarisIdeaField["LinkedIssues"] = "LINKED_ISSUES";
    BuiltinPolarisIdeaField["NumDataPoints"] = "NUM_DATA_POINTS";
    BuiltinPolarisIdeaField["Reporter"] = "REPORTER";
    BuiltinPolarisIdeaField["Status"] = "STATUS";
    BuiltinPolarisIdeaField["Summary"] = "SUMMARY";
    BuiltinPolarisIdeaField["Updated"] = "UPDATED";
    BuiltinPolarisIdeaField["Votes"] = "VOTES";
})(BuiltinPolarisIdeaField = exports.BuiltinPolarisIdeaField || (exports.BuiltinPolarisIdeaField = {}));
var BulkRoleAssignmentSpaceType;
(function (BulkRoleAssignmentSpaceType) {
    BulkRoleAssignmentSpaceType["Collaboration"] = "COLLABORATION";
    BulkRoleAssignmentSpaceType["Global"] = "GLOBAL";
    BulkRoleAssignmentSpaceType["KnowledgeBase"] = "KNOWLEDGE_BASE";
    BulkRoleAssignmentSpaceType["Personal"] = "PERSONAL";
})(BulkRoleAssignmentSpaceType = exports.BulkRoleAssignmentSpaceType || (exports.BulkRoleAssignmentSpaceType = {}));
var BulkSetSpacePermissionSpaceType;
(function (BulkSetSpacePermissionSpaceType) {
    BulkSetSpacePermissionSpaceType["Collaboration"] = "COLLABORATION";
    BulkSetSpacePermissionSpaceType["Global"] = "GLOBAL";
    BulkSetSpacePermissionSpaceType["KnowledgeBase"] = "KNOWLEDGE_BASE";
    BulkSetSpacePermissionSpaceType["Personal"] = "PERSONAL";
})(BulkSetSpacePermissionSpaceType = exports.BulkSetSpacePermissionSpaceType || (exports.BulkSetSpacePermissionSpaceType = {}));
var BulkSetSpacePermissionSubjectType;
(function (BulkSetSpacePermissionSubjectType) {
    BulkSetSpacePermissionSubjectType["AccessClass"] = "ACCESS_CLASS";
    BulkSetSpacePermissionSubjectType["Group"] = "GROUP";
    BulkSetSpacePermissionSubjectType["User"] = "USER";
})(BulkSetSpacePermissionSubjectType = exports.BulkSetSpacePermissionSubjectType || (exports.BulkSetSpacePermissionSubjectType = {}));
var CapabilitySet;
(function (CapabilitySet) {
    CapabilitySet["CapabilityAdvanced"] = "capabilityAdvanced";
    CapabilitySet["CapabilityStandard"] = "capabilityStandard";
})(CapabilitySet = exports.CapabilitySet || (exports.CapabilitySet = {}));
var CardHierarchyLevelEnumType;
(function (CardHierarchyLevelEnumType) {
    CardHierarchyLevelEnumType["Base"] = "BASE";
    CardHierarchyLevelEnumType["Child"] = "CHILD";
    CardHierarchyLevelEnumType["Parent"] = "PARENT";
})(CardHierarchyLevelEnumType = exports.CardHierarchyLevelEnumType || (exports.CardHierarchyLevelEnumType = {}));
var CatchupContentType;
(function (CatchupContentType) {
    CatchupContentType["Blogpost"] = "BLOGPOST";
    CatchupContentType["Page"] = "PAGE";
})(CatchupContentType = exports.CatchupContentType || (exports.CatchupContentType = {}));
var CatchupOverviewUpdateType;
(function (CatchupOverviewUpdateType) {
    CatchupOverviewUpdateType["SinceLastViewed"] = "SINCE_LAST_VIEWED";
    CatchupOverviewUpdateType["SinceLastViewedMarkdown"] = "SINCE_LAST_VIEWED_MARKDOWN";
    CatchupOverviewUpdateType["SinceXDays"] = "SINCE_X_DAYS";
})(CatchupOverviewUpdateType = exports.CatchupOverviewUpdateType || (exports.CatchupOverviewUpdateType = {}));
var CcpActivationReason;
(function (CcpActivationReason) {
    CcpActivationReason["AdvantagePricing"] = "ADVANTAGE_PRICING";
    CcpActivationReason["DefaultPricing"] = "DEFAULT_PRICING";
    CcpActivationReason["ExperimentalPricing"] = "EXPERIMENTAL_PRICING";
})(CcpActivationReason = exports.CcpActivationReason || (exports.CcpActivationReason = {}));
var CcpAndOr;
(function (CcpAndOr) {
    CcpAndOr["And"] = "AND";
    CcpAndOr["Or"] = "OR";
})(CcpAndOr = exports.CcpAndOr || (exports.CcpAndOr = {}));
var CcpBehaviourAtEndOfTrial;
(function (CcpBehaviourAtEndOfTrial) {
    CcpBehaviourAtEndOfTrial["Cancel"] = "CANCEL";
    CcpBehaviourAtEndOfTrial["ConvertToPaid"] = "CONVERT_TO_PAID";
    CcpBehaviourAtEndOfTrial["RevertTrial"] = "REVERT_TRIAL";
})(CcpBehaviourAtEndOfTrial = exports.CcpBehaviourAtEndOfTrial || (exports.CcpBehaviourAtEndOfTrial = {}));
var CcpBenefitValueAppliedOn;
(function (CcpBenefitValueAppliedOn) {
    CcpBenefitValueAppliedOn["Renew"] = "RENEW";
    CcpBenefitValueAppliedOn["Total"] = "TOTAL";
    CcpBenefitValueAppliedOn["Upsell"] = "UPSELL";
})(CcpBenefitValueAppliedOn = exports.CcpBenefitValueAppliedOn || (exports.CcpBenefitValueAppliedOn = {}));
var CcpBillingInterval;
(function (CcpBillingInterval) {
    CcpBillingInterval["Day"] = "DAY";
    CcpBillingInterval["Month"] = "MONTH";
    CcpBillingInterval["Week"] = "WEEK";
    CcpBillingInterval["Year"] = "YEAR";
})(CcpBillingInterval = exports.CcpBillingInterval || (exports.CcpBillingInterval = {}));
var CcpCancelEntitlementExperienceCapabilityReasonCode;
(function (CcpCancelEntitlementExperienceCapabilityReasonCode) {
    CcpCancelEntitlementExperienceCapabilityReasonCode["EntitlementIsCollectionInstance"] = "ENTITLEMENT_IS_COLLECTION_INSTANCE";
})(CcpCancelEntitlementExperienceCapabilityReasonCode = exports.CcpCancelEntitlementExperienceCapabilityReasonCode || (exports.CcpCancelEntitlementExperienceCapabilityReasonCode = {}));
var CcpChargeType;
(function (CcpChargeType) {
    CcpChargeType["AutoScaling"] = "AUTO_SCALING";
    CcpChargeType["Licensed"] = "LICENSED";
    CcpChargeType["Metered"] = "METERED";
})(CcpChargeType = exports.CcpChargeType || (exports.CcpChargeType = {}));
var CcpCreateEntitlementExperienceCapabilityErrorReasonCode;
(function (CcpCreateEntitlementExperienceCapabilityErrorReasonCode) {
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["AnnualToMonthlyTransition"] = "ANNUAL_TO_MONTHLY_TRANSITION";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["AnnualTransitionNotSupported"] = "ANNUAL_TRANSITION_NOT_SUPPORTED";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["EntitlementsInDifferentIg"] = "ENTITLEMENTS_IN_DIFFERENT_IG";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["EntitlementsInDifferentTxa"] = "ENTITLEMENTS_IN_DIFFERENT_TXA";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["EntitlementsOnDifferentBillingCycle"] = "ENTITLEMENTS_ON_DIFFERENT_BILLING_CYCLE";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["InsufficientInput"] = "INSUFFICIENT_INPUT";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["InvoiceGroupInDunning"] = "INVOICE_GROUP_IN_DUNNING";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["MultipleTransactionAccount"] = "MULTIPLE_TRANSACTION_ACCOUNT";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["NoOfferingForProduct"] = "NO_OFFERING_FOR_PRODUCT";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["UnableToSourceTxa"] = "UNABLE_TO_SOURCE_TXA";
    CcpCreateEntitlementExperienceCapabilityErrorReasonCode["UsecaseNotImplemented"] = "USECASE_NOT_IMPLEMENTED";
})(CcpCreateEntitlementExperienceCapabilityErrorReasonCode = exports.CcpCreateEntitlementExperienceCapabilityErrorReasonCode || (exports.CcpCreateEntitlementExperienceCapabilityErrorReasonCode = {}));
var CcpCreateEntitlementExperienceOptionsConfirmationScreen;
(function (CcpCreateEntitlementExperienceOptionsConfirmationScreen) {
    CcpCreateEntitlementExperienceOptionsConfirmationScreen["Comparison"] = "COMPARISON";
    CcpCreateEntitlementExperienceOptionsConfirmationScreen["Default"] = "DEFAULT";
})(CcpCreateEntitlementExperienceOptionsConfirmationScreen = exports.CcpCreateEntitlementExperienceOptionsConfirmationScreen || (exports.CcpCreateEntitlementExperienceOptionsConfirmationScreen = {}));
var CcpCurrency;
(function (CcpCurrency) {
    CcpCurrency["Jpy"] = "JPY";
    CcpCurrency["Usd"] = "USD";
})(CcpCurrency = exports.CcpCurrency || (exports.CcpCurrency = {}));
var CcpCustomizationSetCouplingOperationComparator;
(function (CcpCustomizationSetCouplingOperationComparator) {
    CcpCustomizationSetCouplingOperationComparator["Equal"] = "EQUAL";
    CcpCustomizationSetCouplingOperationComparator["GreaterThan"] = "GREATER_THAN";
    CcpCustomizationSetCouplingOperationComparator["GreaterThanOrEqual"] = "GREATER_THAN_OR_EQUAL";
    CcpCustomizationSetCouplingOperationComparator["LessThan"] = "LESS_THAN";
    CcpCustomizationSetCouplingOperationComparator["LessThanOrEqual"] = "LESS_THAN_OR_EQUAL";
    CcpCustomizationSetCouplingOperationComparator["MatchTo"] = "MATCH_TO";
})(CcpCustomizationSetCouplingOperationComparator = exports.CcpCustomizationSetCouplingOperationComparator || (exports.CcpCustomizationSetCouplingOperationComparator = {}));
var CcpCustomizationSetCouplingOperationComputeArgumentTag;
(function (CcpCustomizationSetCouplingOperationComputeArgumentTag) {
    CcpCustomizationSetCouplingOperationComputeArgumentTag["MultiInstanceTag"] = "MULTI_INSTANCE_TAG";
})(CcpCustomizationSetCouplingOperationComputeArgumentTag = exports.CcpCustomizationSetCouplingOperationComputeArgumentTag || (exports.CcpCustomizationSetCouplingOperationComputeArgumentTag = {}));
var CcpCustomizationSetCouplingOperationRelaxContextInTrial;
(function (CcpCustomizationSetCouplingOperationRelaxContextInTrial) {
    CcpCustomizationSetCouplingOperationRelaxContextInTrial["Any"] = "ANY";
    CcpCustomizationSetCouplingOperationRelaxContextInTrial["Both"] = "BOTH";
    CcpCustomizationSetCouplingOperationRelaxContextInTrial["From"] = "FROM";
    CcpCustomizationSetCouplingOperationRelaxContextInTrial["To"] = "TO";
})(CcpCustomizationSetCouplingOperationRelaxContextInTrial = exports.CcpCustomizationSetCouplingOperationRelaxContextInTrial || (exports.CcpCustomizationSetCouplingOperationRelaxContextInTrial = {}));
var CcpCustomizationSetCouplingOperationSource;
(function (CcpCustomizationSetCouplingOperationSource) {
    CcpCustomizationSetCouplingOperationSource["Relationship"] = "RELATIONSHIP";
    CcpCustomizationSetCouplingOperationSource["RelationshipFrom"] = "RELATIONSHIP_FROM";
    CcpCustomizationSetCouplingOperationSource["RelationshipTo"] = "RELATIONSHIP_TO";
    CcpCustomizationSetCouplingOperationSource["RelationshipToMax"] = "RELATIONSHIP_TO_MAX";
})(CcpCustomizationSetCouplingOperationSource = exports.CcpCustomizationSetCouplingOperationSource || (exports.CcpCustomizationSetCouplingOperationSource = {}));
var CcpCustomizationSetCouplingOperationType;
(function (CcpCustomizationSetCouplingOperationType) {
    CcpCustomizationSetCouplingOperationType["Compute"] = "COMPUTE";
    CcpCustomizationSetCouplingOperationType["Constraint"] = "CONSTRAINT";
})(CcpCustomizationSetCouplingOperationType = exports.CcpCustomizationSetCouplingOperationType || (exports.CcpCustomizationSetCouplingOperationType = {}));
var CcpCustomizationSetCouplingType;
(function (CcpCustomizationSetCouplingType) {
    CcpCustomizationSetCouplingType["CouplingBillingAnchorDate"] = "COUPLING_BILLING_ANCHOR_DATE";
    CcpCustomizationSetCouplingType["CouplingBillingCycle"] = "COUPLING_BILLING_CYCLE";
    CcpCustomizationSetCouplingType["CouplingBillingTermedDate"] = "COUPLING_BILLING_TERMED_DATE";
    CcpCustomizationSetCouplingType["CouplingChargeElementBillableLimit"] = "COUPLING_CHARGE_ELEMENT_BILLABLE_LIMIT";
    CcpCustomizationSetCouplingType["CouplingChargeType"] = "COUPLING_CHARGE_TYPE";
    CcpCustomizationSetCouplingType["CouplingInvoiceGroup"] = "COUPLING_INVOICE_GROUP";
    CcpCustomizationSetCouplingType["CouplingTagMultiInstanceType"] = "COUPLING_TAG_MULTI_INSTANCE_TYPE";
    CcpCustomizationSetCouplingType["CouplingTransactionAccount"] = "COUPLING_TRANSACTION_ACCOUNT";
    CcpCustomizationSetCouplingType["CouplingTrialEndDate"] = "COUPLING_TRIAL_END_DATE";
})(CcpCustomizationSetCouplingType = exports.CcpCustomizationSetCouplingType || (exports.CcpCustomizationSetCouplingType = {}));
var CcpDuration;
(function (CcpDuration) {
    CcpDuration["Forever"] = "FOREVER";
    CcpDuration["Once"] = "ONCE";
    CcpDuration["Repeating"] = "REPEATING";
})(CcpDuration = exports.CcpDuration || (exports.CcpDuration = {}));
var CcpEntitlementPreDunningStatus;
(function (CcpEntitlementPreDunningStatus) {
    CcpEntitlementPreDunningStatus["InPreDunning"] = "IN_PRE_DUNNING";
    CcpEntitlementPreDunningStatus["NotInPreDunning"] = "NOT_IN_PRE_DUNNING";
})(CcpEntitlementPreDunningStatus = exports.CcpEntitlementPreDunningStatus || (exports.CcpEntitlementPreDunningStatus = {}));
var CcpEntitlementStatus;
(function (CcpEntitlementStatus) {
    CcpEntitlementStatus["Active"] = "ACTIVE";
    CcpEntitlementStatus["Inactive"] = "INACTIVE";
})(CcpEntitlementStatus = exports.CcpEntitlementStatus || (exports.CcpEntitlementStatus = {}));
var CcpEntitlementTemplateStatus;
(function (CcpEntitlementTemplateStatus) {
    CcpEntitlementTemplateStatus["Deprecated"] = "DEPRECATED";
    CcpEntitlementTemplateStatus["None"] = "NONE";
    CcpEntitlementTemplateStatus["Published"] = "PUBLISHED";
    CcpEntitlementTemplateStatus["Unpublished"] = "UNPUBLISHED";
})(CcpEntitlementTemplateStatus = exports.CcpEntitlementTemplateStatus || (exports.CcpEntitlementTemplateStatus = {}));
var CcpExtensionEntityType;
(function (CcpExtensionEntityType) {
    CcpExtensionEntityType["Offering"] = "OFFERING";
    CcpExtensionEntityType["PricingPlan"] = "PRICING_PLAN";
    CcpExtensionEntityType["Product"] = "PRODUCT";
})(CcpExtensionEntityType = exports.CcpExtensionEntityType || (exports.CcpExtensionEntityType = {}));
var CcpLatestAllowanceEnforcementModeType;
(function (CcpLatestAllowanceEnforcementModeType) {
    CcpLatestAllowanceEnforcementModeType["Block"] = "BLOCK";
    CcpLatestAllowanceEnforcementModeType["LimitedOverage"] = "LIMITED_OVERAGE";
    CcpLatestAllowanceEnforcementModeType["Overage"] = "OVERAGE";
})(CcpLatestAllowanceEnforcementModeType = exports.CcpLatestAllowanceEnforcementModeType || (exports.CcpLatestAllowanceEnforcementModeType = {}));
var CcpLatestAllowancesEntityType;
(function (CcpLatestAllowancesEntityType) {
    CcpLatestAllowancesEntityType["Cloud"] = "CLOUD";
    CcpLatestAllowancesEntityType["Entitlement"] = "ENTITLEMENT";
    CcpLatestAllowancesEntityType["Organization"] = "ORGANIZATION";
    CcpLatestAllowancesEntityType["User"] = "USER";
})(CcpLatestAllowancesEntityType = exports.CcpLatestAllowancesEntityType || (exports.CcpLatestAllowancesEntityType = {}));
var CcpLicenseErrorCode;
(function (CcpLicenseErrorCode) {
    CcpLicenseErrorCode["ActiveLicenseNotFound"] = "ACTIVE_LICENSE_NOT_FOUND";
    CcpLicenseErrorCode["InternalError"] = "INTERNAL_ERROR";
    CcpLicenseErrorCode["LicenseNotFound"] = "LICENSE_NOT_FOUND";
    CcpLicenseErrorCode["ServerIdMissing"] = "SERVER_ID_MISSING";
})(CcpLicenseErrorCode = exports.CcpLicenseErrorCode || (exports.CcpLicenseErrorCode = {}));
var CcpMeteredChargeElementType;
(function (CcpMeteredChargeElementType) {
    CcpMeteredChargeElementType["Counter"] = "COUNTER";
    CcpMeteredChargeElementType["Gauge"] = "GAUGE";
})(CcpMeteredChargeElementType = exports.CcpMeteredChargeElementType || (exports.CcpMeteredChargeElementType = {}));
var CcpOfferingHostingType;
(function (CcpOfferingHostingType) {
    CcpOfferingHostingType["Cloud"] = "CLOUD";
    CcpOfferingHostingType["Datacenter"] = "DATACENTER";
})(CcpOfferingHostingType = exports.CcpOfferingHostingType || (exports.CcpOfferingHostingType = {}));
var CcpOfferingRelationshipDirection;
(function (CcpOfferingRelationshipDirection) {
    CcpOfferingRelationshipDirection["From"] = "FROM";
    CcpOfferingRelationshipDirection["To"] = "TO";
})(CcpOfferingRelationshipDirection = exports.CcpOfferingRelationshipDirection || (exports.CcpOfferingRelationshipDirection = {}));
var CcpOfferingRelationshipTemplateConditionsHostingType;
(function (CcpOfferingRelationshipTemplateConditionsHostingType) {
    CcpOfferingRelationshipTemplateConditionsHostingType["Cloud"] = "CLOUD";
    CcpOfferingRelationshipTemplateConditionsHostingType["Datacenter"] = "DATACENTER";
    CcpOfferingRelationshipTemplateConditionsHostingType["Server"] = "SERVER";
})(CcpOfferingRelationshipTemplateConditionsHostingType = exports.CcpOfferingRelationshipTemplateConditionsHostingType || (exports.CcpOfferingRelationshipTemplateConditionsHostingType = {}));
var CcpOfferingRelationshipTemplateCustomizationSet;
(function (CcpOfferingRelationshipTemplateCustomizationSet) {
    CcpOfferingRelationshipTemplateCustomizationSet["AddOnBillingCoupled"] = "ADD_ON_BILLING_COUPLED";
    CcpOfferingRelationshipTemplateCustomizationSet["AppDatacenter"] = "APP_DATACENTER";
    CcpOfferingRelationshipTemplateCustomizationSet["CollectionEnterprise"] = "COLLECTION_ENTERPRISE";
    CcpOfferingRelationshipTemplateCustomizationSet["CollectionNonEnterprise"] = "COLLECTION_NON_ENTERPRISE";
    CcpOfferingRelationshipTemplateCustomizationSet["CollectionTrialEnterprise"] = "COLLECTION_TRIAL_ENTERPRISE";
    CcpOfferingRelationshipTemplateCustomizationSet["Enterprise"] = "ENTERPRISE";
    CcpOfferingRelationshipTemplateCustomizationSet["EnterpriseSandboxGrant"] = "ENTERPRISE_SANDBOX_GRANT";
    CcpOfferingRelationshipTemplateCustomizationSet["JiraFamily"] = "JIRA_FAMILY";
    CcpOfferingRelationshipTemplateCustomizationSet["Marketplace"] = "MARKETPLACE";
    CcpOfferingRelationshipTemplateCustomizationSet["MarketplaceMultiInstance"] = "MARKETPLACE_MULTI_INSTANCE";
    CcpOfferingRelationshipTemplateCustomizationSet["MultiInstance"] = "MULTI_INSTANCE";
    CcpOfferingRelationshipTemplateCustomizationSet["Sandbox"] = "SANDBOX";
    CcpOfferingRelationshipTemplateCustomizationSet["SandboxDependenceContainer"] = "SANDBOX_DEPENDENCE_CONTAINER";
    CcpOfferingRelationshipTemplateCustomizationSet["SandboxGrant"] = "SANDBOX_GRANT";
})(CcpOfferingRelationshipTemplateCustomizationSet = exports.CcpOfferingRelationshipTemplateCustomizationSet || (exports.CcpOfferingRelationshipTemplateCustomizationSet = {}));
var CcpOfferingRelationshipTemplateOverrideTrigger;
(function (CcpOfferingRelationshipTemplateOverrideTrigger) {
    CcpOfferingRelationshipTemplateOverrideTrigger["Any"] = "ANY";
    CcpOfferingRelationshipTemplateOverrideTrigger["CouplingConstraintMultiInstanceTag"] = "COUPLING_CONSTRAINT_MULTI_INSTANCE_TAG";
    CcpOfferingRelationshipTemplateOverrideTrigger["CreatingFrom"] = "CREATING_FROM";
    CcpOfferingRelationshipTemplateOverrideTrigger["CreatingTo"] = "CREATING_TO";
    CcpOfferingRelationshipTemplateOverrideTrigger["DeactivatingFrom"] = "DEACTIVATING_FROM";
    CcpOfferingRelationshipTemplateOverrideTrigger["DeactivatingTo"] = "DEACTIVATING_TO";
    CcpOfferingRelationshipTemplateOverrideTrigger["TermEndDateOnFrom"] = "TERM_END_DATE_ON_FROM";
    CcpOfferingRelationshipTemplateOverrideTrigger["UpdatingFrom"] = "UPDATING_FROM";
    CcpOfferingRelationshipTemplateOverrideTrigger["UpdatingTo"] = "UPDATING_TO";
})(CcpOfferingRelationshipTemplateOverrideTrigger = exports.CcpOfferingRelationshipTemplateOverrideTrigger || (exports.CcpOfferingRelationshipTemplateOverrideTrigger = {}));
var CcpOfferingRelationshipTemplateOverrideType;
(function (CcpOfferingRelationshipTemplateOverrideType) {
    CcpOfferingRelationshipTemplateOverrideType["DeactivateEntitlement"] = "DEACTIVATE_ENTITLEMENT";
    CcpOfferingRelationshipTemplateOverrideType["DeactivateRelationship"] = "DEACTIVATE_RELATIONSHIP";
    CcpOfferingRelationshipTemplateOverrideType["DeactivateTo"] = "DEACTIVATE_TO";
    CcpOfferingRelationshipTemplateOverrideType["InheritChargeElementBillableLimit"] = "INHERIT_CHARGE_ELEMENT_BILLABLE_LIMIT";
    CcpOfferingRelationshipTemplateOverrideType["InheritTrialEndDate"] = "INHERIT_TRIAL_END_DATE";
    CcpOfferingRelationshipTemplateOverrideType["SoftTermEntitlement"] = "SOFT_TERM_ENTITLEMENT";
})(CcpOfferingRelationshipTemplateOverrideType = exports.CcpOfferingRelationshipTemplateOverrideType || (exports.CcpOfferingRelationshipTemplateOverrideType = {}));
var CcpOfferingRelationshipTemplateProcessorConfigStrategy;
(function (CcpOfferingRelationshipTemplateProcessorConfigStrategy) {
    CcpOfferingRelationshipTemplateProcessorConfigStrategy["ComputeGlpAsWhole"] = "COMPUTE_GLP_AS_WHOLE";
})(CcpOfferingRelationshipTemplateProcessorConfigStrategy = exports.CcpOfferingRelationshipTemplateProcessorConfigStrategy || (exports.CcpOfferingRelationshipTemplateProcessorConfigStrategy = {}));
var CcpOfferingRelationshipTemplateStatus;
(function (CcpOfferingRelationshipTemplateStatus) {
    CcpOfferingRelationshipTemplateStatus["Active"] = "ACTIVE";
    CcpOfferingRelationshipTemplateStatus["Deprecated"] = "DEPRECATED";
    CcpOfferingRelationshipTemplateStatus["Draft"] = "DRAFT";
    CcpOfferingRelationshipTemplateStatus["None"] = "NONE";
})(CcpOfferingRelationshipTemplateStatus = exports.CcpOfferingRelationshipTemplateStatus || (exports.CcpOfferingRelationshipTemplateStatus = {}));
var CcpOfferingRelationshipTemplateType;
(function (CcpOfferingRelationshipTemplateType) {
    CcpOfferingRelationshipTemplateType["AddonDependence"] = "ADDON_DEPENDENCE";
    CcpOfferingRelationshipTemplateType["AppCompatibility"] = "APP_COMPATIBILITY";
    CcpOfferingRelationshipTemplateType["AppDependence"] = "APP_DEPENDENCE";
    CcpOfferingRelationshipTemplateType["Collection"] = "COLLECTION";
    CcpOfferingRelationshipTemplateType["CollectionTrial"] = "COLLECTION_TRIAL";
    CcpOfferingRelationshipTemplateType["Enterprise"] = "ENTERPRISE";
    CcpOfferingRelationshipTemplateType["EnterpriseSandboxGrant"] = "ENTERPRISE_SANDBOX_GRANT";
    CcpOfferingRelationshipTemplateType["FamilyContainer"] = "FAMILY_CONTAINER";
    CcpOfferingRelationshipTemplateType["MultiInstance"] = "MULTI_INSTANCE";
    CcpOfferingRelationshipTemplateType["SandboxDependence"] = "SANDBOX_DEPENDENCE";
    CcpOfferingRelationshipTemplateType["SandboxGrant"] = "SANDBOX_GRANT";
})(CcpOfferingRelationshipTemplateType = exports.CcpOfferingRelationshipTemplateType || (exports.CcpOfferingRelationshipTemplateType = {}));
var CcpOfferingStatus;
(function (CcpOfferingStatus) {
    CcpOfferingStatus["Active"] = "ACTIVE";
    CcpOfferingStatus["AtNotice"] = "AT_NOTICE";
    CcpOfferingStatus["Draft"] = "DRAFT";
    CcpOfferingStatus["Expired"] = "EXPIRED";
})(CcpOfferingStatus = exports.CcpOfferingStatus || (exports.CcpOfferingStatus = {}));
var CcpOfferingType;
(function (CcpOfferingType) {
    CcpOfferingType["Child"] = "CHILD";
    CcpOfferingType["Parent"] = "PARENT";
})(CcpOfferingType = exports.CcpOfferingType || (exports.CcpOfferingType = {}));
var CcpOfferingUncollectibleActionType;
(function (CcpOfferingUncollectibleActionType) {
    CcpOfferingUncollectibleActionType["Cancel"] = "CANCEL";
    CcpOfferingUncollectibleActionType["Downgrade"] = "DOWNGRADE";
    CcpOfferingUncollectibleActionType["NoAction"] = "NO_ACTION";
})(CcpOfferingUncollectibleActionType = exports.CcpOfferingUncollectibleActionType || (exports.CcpOfferingUncollectibleActionType = {}));
var CcpPaymentMethodType;
(function (CcpPaymentMethodType) {
    CcpPaymentMethodType["Ach"] = "ACH";
    CcpPaymentMethodType["Card"] = "CARD";
    CcpPaymentMethodType["Deferred"] = "DEFERRED";
    CcpPaymentMethodType["Paypal"] = "PAYPAL";
})(CcpPaymentMethodType = exports.CcpPaymentMethodType || (exports.CcpPaymentMethodType = {}));
var CcpPricingPlanStatus;
(function (CcpPricingPlanStatus) {
    CcpPricingPlanStatus["Active"] = "ACTIVE";
    CcpPricingPlanStatus["AtNotice"] = "AT_NOTICE";
    CcpPricingPlanStatus["Draft"] = "DRAFT";
    CcpPricingPlanStatus["Expired"] = "EXPIRED";
})(CcpPricingPlanStatus = exports.CcpPricingPlanStatus || (exports.CcpPricingPlanStatus = {}));
var CcpPricingType;
(function (CcpPricingType) {
    CcpPricingType["External"] = "EXTERNAL";
    CcpPricingType["Free"] = "FREE";
    CcpPricingType["LimitedFree"] = "LIMITED_FREE";
    CcpPricingType["Paid"] = "PAID";
})(CcpPricingType = exports.CcpPricingType || (exports.CcpPricingType = {}));
var CcpProductStatus;
(function (CcpProductStatus) {
    CcpProductStatus["Active"] = "ACTIVE";
    CcpProductStatus["AtNotice"] = "AT_NOTICE";
    CcpProductStatus["Draft"] = "DRAFT";
    CcpProductStatus["Expired"] = "EXPIRED";
})(CcpProductStatus = exports.CcpProductStatus || (exports.CcpProductStatus = {}));
var CcpPromotionAllowedRedemptionMethod;
(function (CcpPromotionAllowedRedemptionMethod) {
    CcpPromotionAllowedRedemptionMethod["Promotion"] = "PROMOTION";
    CcpPromotionAllowedRedemptionMethod["PromotionCode"] = "PROMOTION_CODE";
})(CcpPromotionAllowedRedemptionMethod = exports.CcpPromotionAllowedRedemptionMethod || (exports.CcpPromotionAllowedRedemptionMethod = {}));
var CcpPromotionBenefitType;
(function (CcpPromotionBenefitType) {
    CcpPromotionBenefitType["Discount"] = "DISCOUNT";
    CcpPromotionBenefitType["Override"] = "OVERRIDE";
})(CcpPromotionBenefitType = exports.CcpPromotionBenefitType || (exports.CcpPromotionBenefitType = {}));
var CcpPromotionBillingPeriodPrev;
(function (CcpPromotionBillingPeriodPrev) {
    CcpPromotionBillingPeriodPrev["Free"] = "FREE";
    CcpPromotionBillingPeriodPrev["Paid"] = "PAID";
    CcpPromotionBillingPeriodPrev["Trial"] = "TRIAL";
})(CcpPromotionBillingPeriodPrev = exports.CcpPromotionBillingPeriodPrev || (exports.CcpPromotionBillingPeriodPrev = {}));
var CcpPromotionCodeType;
(function (CcpPromotionCodeType) {
    CcpPromotionCodeType["None"] = "NONE";
    CcpPromotionCodeType["Shared"] = "SHARED";
    CcpPromotionCodeType["Unique"] = "UNIQUE";
})(CcpPromotionCodeType = exports.CcpPromotionCodeType || (exports.CcpPromotionCodeType = {}));
var CcpPromotionDynamicFieldEvaluatorComparator;
(function (CcpPromotionDynamicFieldEvaluatorComparator) {
    CcpPromotionDynamicFieldEvaluatorComparator["Equal"] = "EQUAL";
    CcpPromotionDynamicFieldEvaluatorComparator["GreaterThan"] = "GREATER_THAN";
    CcpPromotionDynamicFieldEvaluatorComparator["LessThan"] = "LESS_THAN";
    CcpPromotionDynamicFieldEvaluatorComparator["LessThanEqual"] = "LESS_THAN_EQUAL";
    CcpPromotionDynamicFieldEvaluatorComparator["NotEqual"] = "NOT_EQUAL";
    CcpPromotionDynamicFieldEvaluatorComparator["NotNull"] = "NOT_NULL";
    CcpPromotionDynamicFieldEvaluatorComparator["Null"] = "NULL";
})(CcpPromotionDynamicFieldEvaluatorComparator = exports.CcpPromotionDynamicFieldEvaluatorComparator || (exports.CcpPromotionDynamicFieldEvaluatorComparator = {}));
var CcpPromotionDynamicFieldEvaluatorType;
(function (CcpPromotionDynamicFieldEvaluatorType) {
    CcpPromotionDynamicFieldEvaluatorType["Number"] = "NUMBER";
    CcpPromotionDynamicFieldEvaluatorType["String"] = "STRING";
})(CcpPromotionDynamicFieldEvaluatorType = exports.CcpPromotionDynamicFieldEvaluatorType || (exports.CcpPromotionDynamicFieldEvaluatorType = {}));
var CcpPromotionEligibilityPricingType;
(function (CcpPromotionEligibilityPricingType) {
    CcpPromotionEligibilityPricingType["Free"] = "FREE";
    CcpPromotionEligibilityPricingType["LimitedFree"] = "LIMITED_FREE";
    CcpPromotionEligibilityPricingType["Paid"] = "PAID";
})(CcpPromotionEligibilityPricingType = exports.CcpPromotionEligibilityPricingType || (exports.CcpPromotionEligibilityPricingType = {}));
var CcpPromotionHostingType;
(function (CcpPromotionHostingType) {
    CcpPromotionHostingType["Cloud"] = "CLOUD";
    CcpPromotionHostingType["Datacenter"] = "DATACENTER";
    CcpPromotionHostingType["Server"] = "SERVER";
})(CcpPromotionHostingType = exports.CcpPromotionHostingType || (exports.CcpPromotionHostingType = {}));
var CcpPromotionLimiterType;
(function (CcpPromotionLimiterType) {
    CcpPromotionLimiterType["Range"] = "RANGE";
    CcpPromotionLimiterType["Set"] = "SET";
})(CcpPromotionLimiterType = exports.CcpPromotionLimiterType || (exports.CcpPromotionLimiterType = {}));
var CcpPromotionSaleTransitionType;
(function (CcpPromotionSaleTransitionType) {
    CcpPromotionSaleTransitionType["Downgrade"] = "DOWNGRADE";
    CcpPromotionSaleTransitionType["New"] = "NEW";
    CcpPromotionSaleTransitionType["Renewal"] = "RENEWAL";
    CcpPromotionSaleTransitionType["Upgrade"] = "UPGRADE";
})(CcpPromotionSaleTransitionType = exports.CcpPromotionSaleTransitionType || (exports.CcpPromotionSaleTransitionType = {}));
var CcpPromotionStatus;
(function (CcpPromotionStatus) {
    CcpPromotionStatus["Active"] = "ACTIVE";
    CcpPromotionStatus["Cancelled"] = "CANCELLED";
    CcpPromotionStatus["Drafted"] = "DRAFTED";
    CcpPromotionStatus["Expired"] = "EXPIRED";
    CcpPromotionStatus["Inactive"] = "INACTIVE";
    CcpPromotionStatus["Withdrawn"] = "WITHDRAWN";
})(CcpPromotionStatus = exports.CcpPromotionStatus || (exports.CcpPromotionStatus = {}));
var CcpPromotionSubBenefitType;
(function (CcpPromotionSubBenefitType) {
    CcpPromotionSubBenefitType["Flat"] = "FLAT";
    CcpPromotionSubBenefitType["MultiPercentage"] = "MULTI_PERCENTAGE";
    CcpPromotionSubBenefitType["None"] = "NONE";
    CcpPromotionSubBenefitType["Percentage"] = "PERCENTAGE";
    CcpPromotionSubBenefitType["Trial"] = "TRIAL";
})(CcpPromotionSubBenefitType = exports.CcpPromotionSubBenefitType || (exports.CcpPromotionSubBenefitType = {}));
var CcpPromotionType;
(function (CcpPromotionType) {
    CcpPromotionType["DiscretionaryDiscount"] = "DISCRETIONARY_DISCOUNT";
    CcpPromotionType["ListPrice"] = "LIST_PRICE";
    CcpPromotionType["ListPriceAdjustment"] = "LIST_PRICE_ADJUSTMENT";
    CcpPromotionType["LoyaltyDiscount"] = "LOYALTY_DISCOUNT";
    CcpPromotionType["PartnerDiscount"] = "PARTNER_DISCOUNT";
    CcpPromotionType["PartnerMargin"] = "PARTNER_MARGIN";
    CcpPromotionType["PromoCode"] = "PROMO_CODE";
    CcpPromotionType["TrialExtension"] = "TRIAL_EXTENSION";
})(CcpPromotionType = exports.CcpPromotionType || (exports.CcpPromotionType = {}));
var CcpProrateOnUsageChange;
(function (CcpProrateOnUsageChange) {
    CcpProrateOnUsageChange["AlwaysInvoice"] = "ALWAYS_INVOICE";
    CcpProrateOnUsageChange["CreateProrations"] = "CREATE_PRORATIONS";
    CcpProrateOnUsageChange["None"] = "NONE";
})(CcpProrateOnUsageChange = exports.CcpProrateOnUsageChange || (exports.CcpProrateOnUsageChange = {}));
var CcpQuoteContractType;
(function (CcpQuoteContractType) {
    CcpQuoteContractType["NonStandard"] = "NON_STANDARD";
    CcpQuoteContractType["Standard"] = "STANDARD";
})(CcpQuoteContractType = exports.CcpQuoteContractType || (exports.CcpQuoteContractType = {}));
var CcpQuoteEndDateType;
(function (CcpQuoteEndDateType) {
    CcpQuoteEndDateType["Duration"] = "DURATION";
    CcpQuoteEndDateType["Timestamp"] = "TIMESTAMP";
})(CcpQuoteEndDateType = exports.CcpQuoteEndDateType || (exports.CcpQuoteEndDateType = {}));
var CcpQuoteInterval;
(function (CcpQuoteInterval) {
    CcpQuoteInterval["Year"] = "YEAR";
})(CcpQuoteInterval = exports.CcpQuoteInterval || (exports.CcpQuoteInterval = {}));
var CcpQuoteLineItemStatus;
(function (CcpQuoteLineItemStatus) {
    CcpQuoteLineItemStatus["Cancelled"] = "CANCELLED";
    CcpQuoteLineItemStatus["Stale"] = "STALE";
})(CcpQuoteLineItemStatus = exports.CcpQuoteLineItemStatus || (exports.CcpQuoteLineItemStatus = {}));
var CcpQuoteLineItemType;
(function (CcpQuoteLineItemType) {
    CcpQuoteLineItemType["AccountModification"] = "ACCOUNT_MODIFICATION";
    CcpQuoteLineItemType["AmendEntitlement"] = "AMEND_ENTITLEMENT";
    CcpQuoteLineItemType["CancelEntitlement"] = "CANCEL_ENTITLEMENT";
    CcpQuoteLineItemType["CreateEntitlement"] = "CREATE_ENTITLEMENT";
    CcpQuoteLineItemType["ReactivateEntitlement"] = "REACTIVATE_ENTITLEMENT";
})(CcpQuoteLineItemType = exports.CcpQuoteLineItemType || (exports.CcpQuoteLineItemType = {}));
var CcpQuoteProrationBehaviour;
(function (CcpQuoteProrationBehaviour) {
    CcpQuoteProrationBehaviour["CreateProrations"] = "CREATE_PRORATIONS";
    CcpQuoteProrationBehaviour["None"] = "NONE";
})(CcpQuoteProrationBehaviour = exports.CcpQuoteProrationBehaviour || (exports.CcpQuoteProrationBehaviour = {}));
var CcpQuoteReferenceType;
(function (CcpQuoteReferenceType) {
    CcpQuoteReferenceType["Entitlement"] = "ENTITLEMENT";
    CcpQuoteReferenceType["LineItem"] = "LINE_ITEM";
})(CcpQuoteReferenceType = exports.CcpQuoteReferenceType || (exports.CcpQuoteReferenceType = {}));
var CcpQuoteStartDateType;
(function (CcpQuoteStartDateType) {
    CcpQuoteStartDateType["QuoteAcceptanceDate"] = "QUOTE_ACCEPTANCE_DATE";
    CcpQuoteStartDateType["Timestamp"] = "TIMESTAMP";
    CcpQuoteStartDateType["UpcomingInvoice"] = "UPCOMING_INVOICE";
})(CcpQuoteStartDateType = exports.CcpQuoteStartDateType || (exports.CcpQuoteStartDateType = {}));
var CcpQuoteStatus;
(function (CcpQuoteStatus) {
    CcpQuoteStatus["AcceptanceInProgress"] = "ACCEPTANCE_IN_PROGRESS";
    CcpQuoteStatus["Accepted"] = "ACCEPTED";
    CcpQuoteStatus["CancellationInProgress"] = "CANCELLATION_IN_PROGRESS";
    CcpQuoteStatus["Cancelled"] = "CANCELLED";
    CcpQuoteStatus["CloningInProgress"] = "CLONING_IN_PROGRESS";
    CcpQuoteStatus["CreationInProgress"] = "CREATION_IN_PROGRESS";
    CcpQuoteStatus["Draft"] = "DRAFT";
    CcpQuoteStatus["FinalizationInProgress"] = "FINALIZATION_IN_PROGRESS";
    CcpQuoteStatus["Open"] = "OPEN";
    CcpQuoteStatus["RevisionInProgress"] = "REVISION_IN_PROGRESS";
    CcpQuoteStatus["Stale"] = "STALE";
    CcpQuoteStatus["UpdateInProgress"] = "UPDATE_IN_PROGRESS";
    CcpQuoteStatus["ValidationInProgress"] = "VALIDATION_IN_PROGRESS";
})(CcpQuoteStatus = exports.CcpQuoteStatus || (exports.CcpQuoteStatus = {}));
var CcpRelationshipPricingType;
(function (CcpRelationshipPricingType) {
    CcpRelationshipPricingType["AdvantagePricing"] = "ADVANTAGE_PRICING";
    CcpRelationshipPricingType["CurrencyGenerated"] = "CURRENCY_GENERATED";
    CcpRelationshipPricingType["NextPricing"] = "NEXT_PRICING";
    CcpRelationshipPricingType["SyntheticGenerated"] = "SYNTHETIC_GENERATED";
})(CcpRelationshipPricingType = exports.CcpRelationshipPricingType || (exports.CcpRelationshipPricingType = {}));
var CcpRelationshipStatus;
(function (CcpRelationshipStatus) {
    CcpRelationshipStatus["Active"] = "ACTIVE";
    CcpRelationshipStatus["Deprecated"] = "DEPRECATED";
})(CcpRelationshipStatus = exports.CcpRelationshipStatus || (exports.CcpRelationshipStatus = {}));
var CcpRelationshipType;
(function (CcpRelationshipType) {
    CcpRelationshipType["AddonDependence"] = "ADDON_DEPENDENCE";
    CcpRelationshipType["AppCompatibility"] = "APP_COMPATIBILITY";
    CcpRelationshipType["AppDependence"] = "APP_DEPENDENCE";
    CcpRelationshipType["Collection"] = "COLLECTION";
    CcpRelationshipType["CollectionTrial"] = "COLLECTION_TRIAL";
    CcpRelationshipType["Enterprise"] = "ENTERPRISE";
    CcpRelationshipType["EnterpriseSandboxGrant"] = "ENTERPRISE_SANDBOX_GRANT";
    CcpRelationshipType["FamilyContainer"] = "FAMILY_CONTAINER";
    CcpRelationshipType["MultiInstance"] = "MULTI_INSTANCE";
    CcpRelationshipType["SandboxDependence"] = "SANDBOX_DEPENDENCE";
    CcpRelationshipType["SandboxGrant"] = "SANDBOX_GRANT";
})(CcpRelationshipType = exports.CcpRelationshipType || (exports.CcpRelationshipType = {}));
var CcpSearchSortOrder;
(function (CcpSearchSortOrder) {
    CcpSearchSortOrder["Asc"] = "ASC";
    CcpSearchSortOrder["Desc"] = "DESC";
})(CcpSearchSortOrder = exports.CcpSearchSortOrder || (exports.CcpSearchSortOrder = {}));
var CcpSubscriptionScheduleAction;
(function (CcpSubscriptionScheduleAction) {
    CcpSubscriptionScheduleAction["Cancel"] = "CANCEL";
    CcpSubscriptionScheduleAction["Update"] = "UPDATE";
})(CcpSubscriptionScheduleAction = exports.CcpSubscriptionScheduleAction || (exports.CcpSubscriptionScheduleAction = {}));
var CcpSubscriptionStatus;
(function (CcpSubscriptionStatus) {
    CcpSubscriptionStatus["Active"] = "ACTIVE";
    CcpSubscriptionStatus["Cancelled"] = "CANCELLED";
    CcpSubscriptionStatus["Processing"] = "PROCESSING";
})(CcpSubscriptionStatus = exports.CcpSubscriptionStatus || (exports.CcpSubscriptionStatus = {}));
var CcpSupportedBillingSystems;
(function (CcpSupportedBillingSystems) {
    CcpSupportedBillingSystems["BackOffice"] = "BACK_OFFICE";
    CcpSupportedBillingSystems["Ccp"] = "CCP";
    CcpSupportedBillingSystems["Hams"] = "HAMS";
    CcpSupportedBillingSystems["Opsgenie"] = "OPSGENIE";
})(CcpSupportedBillingSystems = exports.CcpSupportedBillingSystems || (exports.CcpSupportedBillingSystems = {}));
var CcpTiersMode;
(function (CcpTiersMode) {
    CcpTiersMode["Graduated"] = "GRADUATED";
    CcpTiersMode["Volume"] = "VOLUME";
})(CcpTiersMode = exports.CcpTiersMode || (exports.CcpTiersMode = {}));
var CcpTransactionAccountType;
(function (CcpTransactionAccountType) {
    CcpTransactionAccountType["Direct"] = "DIRECT";
    CcpTransactionAccountType["Partner"] = "PARTNER";
    CcpTransactionAccountType["UnaffiliatedReseller"] = "UNAFFILIATED_RESELLER";
})(CcpTransactionAccountType = exports.CcpTransactionAccountType || (exports.CcpTransactionAccountType = {}));
var CcpTrialEndBehaviour;
(function (CcpTrialEndBehaviour) {
    CcpTrialEndBehaviour["BillingPlan"] = "BILLING_PLAN";
    CcpTrialEndBehaviour["TrialPlan"] = "TRIAL_PLAN";
})(CcpTrialEndBehaviour = exports.CcpTrialEndBehaviour || (exports.CcpTrialEndBehaviour = {}));
var CcpUsageQueryResolution;
(function (CcpUsageQueryResolution) {
    CcpUsageQueryResolution["OneDay"] = "ONE_DAY";
    CcpUsageQueryResolution["OneHour"] = "ONE_HOUR";
    CcpUsageQueryResolution["OneMonth"] = "ONE_MONTH";
})(CcpUsageQueryResolution = exports.CcpUsageQueryResolution || (exports.CcpUsageQueryResolution = {}));
var CcpUsageQueryStatistics;
(function (CcpUsageQueryStatistics) {
    CcpUsageQueryStatistics["Latest"] = "LATEST";
    CcpUsageQueryStatistics["Sum"] = "SUM";
})(CcpUsageQueryStatistics = exports.CcpUsageQueryStatistics || (exports.CcpUsageQueryStatistics = {}));
var ChannelPlatformChannelType;
(function (ChannelPlatformChannelType) {
    ChannelPlatformChannelType["Chat"] = "CHAT";
    ChannelPlatformChannelType["Phone"] = "PHONE";
    ChannelPlatformChannelType["Ticket"] = "TICKET";
    ChannelPlatformChannelType["Voice"] = "VOICE";
})(ChannelPlatformChannelType = exports.ChannelPlatformChannelType || (exports.ChannelPlatformChannelType = {}));
var ChannelPlatformContactState;
(function (ChannelPlatformContactState) {
    ChannelPlatformContactState["Assigned"] = "ASSIGNED";
    ChannelPlatformContactState["Closed"] = "CLOSED";
    ChannelPlatformContactState["Initialized"] = "INITIALIZED";
    ChannelPlatformContactState["Unassigned"] = "UNASSIGNED";
})(ChannelPlatformContactState = exports.ChannelPlatformContactState || (exports.ChannelPlatformContactState = {}));
var ChannelPlatformEventType;
(function (ChannelPlatformEventType) {
    ChannelPlatformEventType["AgentInitialMessage"] = "AGENT_INITIAL_MESSAGE";
    ChannelPlatformEventType["ConferenceEnded"] = "CONFERENCE_ENDED";
    ChannelPlatformEventType["ConferenceInitiated"] = "CONFERENCE_INITIATED";
    ChannelPlatformEventType["ConferenceResponse"] = "CONFERENCE_RESPONSE";
    ChannelPlatformEventType["CustomChatClosed"] = "CUSTOM_CHAT_CLOSED";
    ChannelPlatformEventType["Initiated"] = "INITIATED";
})(ChannelPlatformEventType = exports.ChannelPlatformEventType || (exports.ChannelPlatformEventType = {}));
var ChannelPlatformMutationStatus;
(function (ChannelPlatformMutationStatus) {
    ChannelPlatformMutationStatus["Failure"] = "FAILURE";
    ChannelPlatformMutationStatus["Success"] = "SUCCESS";
})(ChannelPlatformMutationStatus = exports.ChannelPlatformMutationStatus || (exports.ChannelPlatformMutationStatus = {}));
var ChannelPlatformParticipantRole;
(function (ChannelPlatformParticipantRole) {
    ChannelPlatformParticipantRole["Agent"] = "AGENT";
    ChannelPlatformParticipantRole["Customer"] = "CUSTOMER";
    ChannelPlatformParticipantRole["CustomBot"] = "CUSTOM_BOT";
    ChannelPlatformParticipantRole["Supervisor"] = "SUPERVISOR";
    ChannelPlatformParticipantRole["System"] = "SYSTEM";
})(ChannelPlatformParticipantRole = exports.ChannelPlatformParticipantRole || (exports.ChannelPlatformParticipantRole = {}));
var ChannelPlatformQuickResponseFilterOperator;
(function (ChannelPlatformQuickResponseFilterOperator) {
    ChannelPlatformQuickResponseFilterOperator["Equals"] = "EQUALS";
    ChannelPlatformQuickResponseFilterOperator["Prefix"] = "PREFIX";
})(ChannelPlatformQuickResponseFilterOperator = exports.ChannelPlatformQuickResponseFilterOperator || (exports.ChannelPlatformQuickResponseFilterOperator = {}));
var ChannelPlatformQuickResponseOrder;
(function (ChannelPlatformQuickResponseOrder) {
    ChannelPlatformQuickResponseOrder["Asc"] = "ASC";
    ChannelPlatformQuickResponseOrder["Desc"] = "DESC";
})(ChannelPlatformQuickResponseOrder = exports.ChannelPlatformQuickResponseOrder || (exports.ChannelPlatformQuickResponseOrder = {}));
var ChannelPlatformQuickResponseQueryOperator;
(function (ChannelPlatformQuickResponseQueryOperator) {
    ChannelPlatformQuickResponseQueryOperator["Contains"] = "CONTAINS";
    ChannelPlatformQuickResponseQueryOperator["ContainsAndPrefix"] = "CONTAINS_AND_PREFIX";
})(ChannelPlatformQuickResponseQueryOperator = exports.ChannelPlatformQuickResponseQueryOperator || (exports.ChannelPlatformQuickResponseQueryOperator = {}));
var ChannelPlatformRole;
(function (ChannelPlatformRole) {
    ChannelPlatformRole["Agent"] = "AGENT";
    ChannelPlatformRole["Customer"] = "CUSTOMER";
})(ChannelPlatformRole = exports.ChannelPlatformRole || (exports.ChannelPlatformRole = {}));
var Classification;
(function (Classification) {
    Classification["Other"] = "other";
    Classification["Pii"] = "pii";
    Classification["Ugc"] = "ugc";
})(Classification = exports.Classification || (exports.Classification = {}));
var ClassificationLevelSource;
(function (ClassificationLevelSource) {
    ClassificationLevelSource["Content"] = "CONTENT";
    ClassificationLevelSource["Organization"] = "ORGANIZATION";
    ClassificationLevelSource["Space"] = "SPACE";
})(ClassificationLevelSource = exports.ClassificationLevelSource || (exports.ClassificationLevelSource = {}));
var CloudIdProduct;
(function (CloudIdProduct) {
    CloudIdProduct["Avp"] = "AVP";
    CloudIdProduct["Beacon"] = "BEACON";
    CloudIdProduct["Compass"] = "COMPASS";
    CloudIdProduct["Confluence"] = "CONFLUENCE";
    CloudIdProduct["Devai"] = "DEVAI";
    CloudIdProduct["Goal"] = "GOAL";
    CloudIdProduct["JiraCustomerService"] = "JIRA_CUSTOMER_SERVICE";
    CloudIdProduct["JiraProductDiscovery"] = "JIRA_PRODUCT_DISCOVERY";
    CloudIdProduct["JiraServiceDesk"] = "JIRA_SERVICE_DESK";
    CloudIdProduct["JiraSoftware"] = "JIRA_SOFTWARE";
    CloudIdProduct["Loom"] = "LOOM";
    CloudIdProduct["Mercury"] = "MERCURY";
    CloudIdProduct["Opsgenie"] = "OPSGENIE";
    CloudIdProduct["Project"] = "PROJECT";
    CloudIdProduct["Radar"] = "RADAR";
    CloudIdProduct["Statuspage"] = "STATUSPAGE";
})(CloudIdProduct = exports.CloudIdProduct || (exports.CloudIdProduct = {}));
var CollabFormat;
(function (CollabFormat) {
    CollabFormat["Adf"] = "ADF";
    CollabFormat["Pm"] = "PM";
})(CollabFormat = exports.CollabFormat || (exports.CollabFormat = {}));
var CommentCreationLocation;
(function (CommentCreationLocation) {
    CommentCreationLocation["Database"] = "DATABASE";
    CommentCreationLocation["Editor"] = "EDITOR";
    CommentCreationLocation["Live"] = "LIVE";
    CommentCreationLocation["Renderer"] = "RENDERER";
    CommentCreationLocation["Whiteboard"] = "WHITEBOARD";
})(CommentCreationLocation = exports.CommentCreationLocation || (exports.CommentCreationLocation = {}));
var CommentDeletionLocation;
(function (CommentDeletionLocation) {
    CommentDeletionLocation["Editor"] = "EDITOR";
    CommentDeletionLocation["Live"] = "LIVE";
})(CommentDeletionLocation = exports.CommentDeletionLocation || (exports.CommentDeletionLocation = {}));
var CommentReplyType;
(function (CommentReplyType) {
    CommentReplyType["Emoji"] = "EMOJI";
    CommentReplyType["Prompt"] = "PROMPT";
    CommentReplyType["QuickReply"] = "QUICK_REPLY";
})(CommentReplyType = exports.CommentReplyType || (exports.CommentReplyType = {}));
var CommentType;
(function (CommentType) {
    CommentType["Footer"] = "FOOTER";
    CommentType["Inline"] = "INLINE";
    CommentType["Resolved"] = "RESOLVED";
    CommentType["Unresolved"] = "UNRESOLVED";
})(CommentType = exports.CommentType || (exports.CommentType = {}));
var CommentsType;
(function (CommentsType) {
    CommentsType["Footer"] = "FOOTER";
    CommentsType["Inline"] = "INLINE";
})(CommentsType = exports.CommentsType || (exports.CommentsType = {}));
var CompassBuildEventState;
(function (CompassBuildEventState) {
    CompassBuildEventState["Cancelled"] = "CANCELLED";
    CompassBuildEventState["Error"] = "ERROR";
    CompassBuildEventState["Failed"] = "FAILED";
    CompassBuildEventState["InProgress"] = "IN_PROGRESS";
    CompassBuildEventState["Successful"] = "SUCCESSFUL";
    CompassBuildEventState["TimedOut"] = "TIMED_OUT";
    CompassBuildEventState["Unknown"] = "UNKNOWN";
})(CompassBuildEventState = exports.CompassBuildEventState || (exports.CompassBuildEventState = {}));
var CompassCampaignQuerySortOrder;
(function (CompassCampaignQuerySortOrder) {
    CompassCampaignQuerySortOrder["Asc"] = "ASC";
    CompassCampaignQuerySortOrder["Desc"] = "DESC";
})(CompassCampaignQuerySortOrder = exports.CompassCampaignQuerySortOrder || (exports.CompassCampaignQuerySortOrder = {}));
var CompassCatalogBootstrapStatus;
(function (CompassCatalogBootstrapStatus) {
    CompassCatalogBootstrapStatus["Complete"] = "COMPLETE";
    CompassCatalogBootstrapStatus["Error"] = "ERROR";
    CompassCatalogBootstrapStatus["Pending"] = "PENDING";
    CompassCatalogBootstrapStatus["Unknown"] = "UNKNOWN";
})(CompassCatalogBootstrapStatus = exports.CompassCatalogBootstrapStatus || (exports.CompassCatalogBootstrapStatus = {}));
var CompassComponentBootstrapStatus;
(function (CompassComponentBootstrapStatus) {
    CompassComponentBootstrapStatus["Complete"] = "COMPLETE";
    CompassComponentBootstrapStatus["Error"] = "ERROR";
    CompassComponentBootstrapStatus["Pending"] = "PENDING";
})(CompassComponentBootstrapStatus = exports.CompassComponentBootstrapStatus || (exports.CompassComponentBootstrapStatus = {}));
var CompassComponentCreationTimeFilterType;
(function (CompassComponentCreationTimeFilterType) {
    CompassComponentCreationTimeFilterType["After"] = "AFTER";
    CompassComponentCreationTimeFilterType["Before"] = "BEFORE";
})(CompassComponentCreationTimeFilterType = exports.CompassComponentCreationTimeFilterType || (exports.CompassComponentCreationTimeFilterType = {}));
var CompassComponentType;
(function (CompassComponentType) {
    CompassComponentType["Application"] = "APPLICATION";
    CompassComponentType["Library"] = "LIBRARY";
    CompassComponentType["Other"] = "OTHER";
    CompassComponentType["Service"] = "SERVICE";
})(CompassComponentType = exports.CompassComponentType || (exports.CompassComponentType = {}));
var CompassCreatePullRequestStatus;
(function (CompassCreatePullRequestStatus) {
    CompassCreatePullRequestStatus["Created"] = "CREATED";
    CompassCreatePullRequestStatus["InReview"] = "IN_REVIEW";
    CompassCreatePullRequestStatus["Merged"] = "MERGED";
    CompassCreatePullRequestStatus["Rejected"] = "REJECTED";
})(CompassCreatePullRequestStatus = exports.CompassCreatePullRequestStatus || (exports.CompassCreatePullRequestStatus = {}));
var CompassCriteriaBooleanComparatorOptions;
(function (CompassCriteriaBooleanComparatorOptions) {
    CompassCriteriaBooleanComparatorOptions["Equals"] = "EQUALS";
})(CompassCriteriaBooleanComparatorOptions = exports.CompassCriteriaBooleanComparatorOptions || (exports.CompassCriteriaBooleanComparatorOptions = {}));
var CompassCriteriaCollectionComparatorOptions;
(function (CompassCriteriaCollectionComparatorOptions) {
    CompassCriteriaCollectionComparatorOptions["AllOf"] = "ALL_OF";
    CompassCriteriaCollectionComparatorOptions["AnyOf"] = "ANY_OF";
    CompassCriteriaCollectionComparatorOptions["IsPresent"] = "IS_PRESENT";
    CompassCriteriaCollectionComparatorOptions["NoneOf"] = "NONE_OF";
})(CompassCriteriaCollectionComparatorOptions = exports.CompassCriteriaCollectionComparatorOptions || (exports.CompassCriteriaCollectionComparatorOptions = {}));
var CompassCriteriaMembershipComparatorOptions;
(function (CompassCriteriaMembershipComparatorOptions) {
    CompassCriteriaMembershipComparatorOptions["In"] = "IN";
    CompassCriteriaMembershipComparatorOptions["IsPresent"] = "IS_PRESENT";
    CompassCriteriaMembershipComparatorOptions["NotIn"] = "NOT_IN";
})(CompassCriteriaMembershipComparatorOptions = exports.CompassCriteriaMembershipComparatorOptions || (exports.CompassCriteriaMembershipComparatorOptions = {}));
var CompassCriteriaNumberComparatorOptions;
(function (CompassCriteriaNumberComparatorOptions) {
    CompassCriteriaNumberComparatorOptions["Equals"] = "EQUALS";
    CompassCriteriaNumberComparatorOptions["GreaterThan"] = "GREATER_THAN";
    CompassCriteriaNumberComparatorOptions["GreaterThanOrEqualTo"] = "GREATER_THAN_OR_EQUAL_TO";
    CompassCriteriaNumberComparatorOptions["IsPresent"] = "IS_PRESENT";
    CompassCriteriaNumberComparatorOptions["LessThan"] = "LESS_THAN";
    CompassCriteriaNumberComparatorOptions["LessThanOrEqualTo"] = "LESS_THAN_OR_EQUAL_TO";
})(CompassCriteriaNumberComparatorOptions = exports.CompassCriteriaNumberComparatorOptions || (exports.CompassCriteriaNumberComparatorOptions = {}));
var CompassCriteriaTextComparatorOptions;
(function (CompassCriteriaTextComparatorOptions) {
    CompassCriteriaTextComparatorOptions["IsPresent"] = "IS_PRESENT";
    CompassCriteriaTextComparatorOptions["MatchesRegex"] = "MATCHES_REGEX";
})(CompassCriteriaTextComparatorOptions = exports.CompassCriteriaTextComparatorOptions || (exports.CompassCriteriaTextComparatorOptions = {}));
var CompassCustomEventIcon;
(function (CompassCustomEventIcon) {
    CompassCustomEventIcon["Checkpoint"] = "CHECKPOINT";
    CompassCustomEventIcon["Info"] = "INFO";
    CompassCustomEventIcon["Warning"] = "WARNING";
})(CompassCustomEventIcon = exports.CompassCustomEventIcon || (exports.CompassCustomEventIcon = {}));
var CompassCustomPermissionPreset;
(function (CompassCustomPermissionPreset) {
    CompassCustomPermissionPreset["AdminsAndOwners"] = "ADMINS_AND_OWNERS";
    CompassCustomPermissionPreset["Default"] = "DEFAULT";
})(CompassCustomPermissionPreset = exports.CompassCustomPermissionPreset || (exports.CompassCustomPermissionPreset = {}));
var CompassDataConnectionSource;
(function (CompassDataConnectionSource) {
    CompassDataConnectionSource["Api"] = "API";
    CompassDataConnectionSource["Bitbucket"] = "BITBUCKET";
    CompassDataConnectionSource["Circleci"] = "CIRCLECI";
    CompassDataConnectionSource["CustomWebhooks"] = "CUSTOM_WEBHOOKS";
    CompassDataConnectionSource["ForgeApp"] = "FORGE_APP";
    CompassDataConnectionSource["Github"] = "GITHUB";
    CompassDataConnectionSource["Gitlab"] = "GITLAB";
    CompassDataConnectionSource["Jira"] = "JIRA";
    CompassDataConnectionSource["JiraDocumentation"] = "JIRA_DOCUMENTATION";
    CompassDataConnectionSource["MarketplaceApps"] = "MARKETPLACE_APPS";
    CompassDataConnectionSource["Pagerduty"] = "PAGERDUTY";
    CompassDataConnectionSource["Snyk"] = "SNYK";
    CompassDataConnectionSource["Sonarqube"] = "SONARQUBE";
    CompassDataConnectionSource["Webhook"] = "WEBHOOK";
})(CompassDataConnectionSource = exports.CompassDataConnectionSource || (exports.CompassDataConnectionSource = {}));
var CompassDeploymentEventEnvironmentCategory;
(function (CompassDeploymentEventEnvironmentCategory) {
    CompassDeploymentEventEnvironmentCategory["Development"] = "DEVELOPMENT";
    CompassDeploymentEventEnvironmentCategory["Production"] = "PRODUCTION";
    CompassDeploymentEventEnvironmentCategory["Staging"] = "STAGING";
    CompassDeploymentEventEnvironmentCategory["Testing"] = "TESTING";
    CompassDeploymentEventEnvironmentCategory["Unmapped"] = "UNMAPPED";
})(CompassDeploymentEventEnvironmentCategory = exports.CompassDeploymentEventEnvironmentCategory || (exports.CompassDeploymentEventEnvironmentCategory = {}));
var CompassDeploymentEventState;
(function (CompassDeploymentEventState) {
    CompassDeploymentEventState["Cancelled"] = "CANCELLED";
    CompassDeploymentEventState["Failed"] = "FAILED";
    CompassDeploymentEventState["InProgress"] = "IN_PROGRESS";
    CompassDeploymentEventState["Pending"] = "PENDING";
    CompassDeploymentEventState["RolledBack"] = "ROLLED_BACK";
    CompassDeploymentEventState["Successful"] = "SUCCESSFUL";
    CompassDeploymentEventState["Unknown"] = "UNKNOWN";
})(CompassDeploymentEventState = exports.CompassDeploymentEventState || (exports.CompassDeploymentEventState = {}));
var CompassEventType;
(function (CompassEventType) {
    CompassEventType["Alert"] = "ALERT";
    CompassEventType["Build"] = "BUILD";
    CompassEventType["Custom"] = "CUSTOM";
    CompassEventType["Deployment"] = "DEPLOYMENT";
    CompassEventType["Flag"] = "FLAG";
    CompassEventType["Incident"] = "INCIDENT";
    CompassEventType["Lifecycle"] = "LIFECYCLE";
    CompassEventType["PullRequest"] = "PULL_REQUEST";
    CompassEventType["Push"] = "PUSH";
    CompassEventType["Vulnerability"] = "VULNERABILITY";
})(CompassEventType = exports.CompassEventType || (exports.CompassEventType = {}));
var CompassFieldType;
(function (CompassFieldType) {
    CompassFieldType["Boolean"] = "BOOLEAN";
    CompassFieldType["Date"] = "DATE";
    CompassFieldType["Enum"] = "ENUM";
    CompassFieldType["Number"] = "NUMBER";
    CompassFieldType["Text"] = "TEXT";
})(CompassFieldType = exports.CompassFieldType || (exports.CompassFieldType = {}));
var CompassIncidentEventSeverityLevel;
(function (CompassIncidentEventSeverityLevel) {
    CompassIncidentEventSeverityLevel["Five"] = "FIVE";
    CompassIncidentEventSeverityLevel["Four"] = "FOUR";
    CompassIncidentEventSeverityLevel["One"] = "ONE";
    CompassIncidentEventSeverityLevel["Three"] = "THREE";
    CompassIncidentEventSeverityLevel["Two"] = "TWO";
})(CompassIncidentEventSeverityLevel = exports.CompassIncidentEventSeverityLevel || (exports.CompassIncidentEventSeverityLevel = {}));
var CompassIncidentEventState;
(function (CompassIncidentEventState) {
    CompassIncidentEventState["Deleted"] = "DELETED";
    CompassIncidentEventState["Open"] = "OPEN";
    CompassIncidentEventState["Resolved"] = "RESOLVED";
})(CompassIncidentEventState = exports.CompassIncidentEventState || (exports.CompassIncidentEventState = {}));
var CompassLifecycleEventStage;
(function (CompassLifecycleEventStage) {
    CompassLifecycleEventStage["Deprecation"] = "DEPRECATION";
    CompassLifecycleEventStage["EndOfLife"] = "END_OF_LIFE";
    CompassLifecycleEventStage["PreRelease"] = "PRE_RELEASE";
    CompassLifecycleEventStage["Production"] = "PRODUCTION";
})(CompassLifecycleEventStage = exports.CompassLifecycleEventStage || (exports.CompassLifecycleEventStage = {}));
var CompassLifecycleFilterOperator;
(function (CompassLifecycleFilterOperator) {
    CompassLifecycleFilterOperator["Nor"] = "NOR";
    CompassLifecycleFilterOperator["Or"] = "OR";
})(CompassLifecycleFilterOperator = exports.CompassLifecycleFilterOperator || (exports.CompassLifecycleFilterOperator = {}));
var CompassLinkType;
(function (CompassLinkType) {
    CompassLinkType["ChatChannel"] = "CHAT_CHANNEL";
    CompassLinkType["Dashboard"] = "DASHBOARD";
    CompassLinkType["Document"] = "DOCUMENT";
    CompassLinkType["OnCall"] = "ON_CALL";
    CompassLinkType["OtherLink"] = "OTHER_LINK";
    CompassLinkType["Project"] = "PROJECT";
    CompassLinkType["Repository"] = "REPOSITORY";
})(CompassLinkType = exports.CompassLinkType || (exports.CompassLinkType = {}));
var CompassMetricDefinitionType;
(function (CompassMetricDefinitionType) {
    CompassMetricDefinitionType["BuiltIn"] = "BUILT_IN";
    CompassMetricDefinitionType["Custom"] = "CUSTOM";
})(CompassMetricDefinitionType = exports.CompassMetricDefinitionType || (exports.CompassMetricDefinitionType = {}));
var CompassPackageDependencyManagerOptions;
(function (CompassPackageDependencyManagerOptions) {
    CompassPackageDependencyManagerOptions["Npm"] = "NPM";
})(CompassPackageDependencyManagerOptions = exports.CompassPackageDependencyManagerOptions || (exports.CompassPackageDependencyManagerOptions = {}));
var CompassPackageDependencyNullaryComparatorOptions;
(function (CompassPackageDependencyNullaryComparatorOptions) {
    CompassPackageDependencyNullaryComparatorOptions["IsAbsent"] = "IS_ABSENT";
    CompassPackageDependencyNullaryComparatorOptions["IsPresent"] = "IS_PRESENT";
})(CompassPackageDependencyNullaryComparatorOptions = exports.CompassPackageDependencyNullaryComparatorOptions || (exports.CompassPackageDependencyNullaryComparatorOptions = {}));
var CompassPackageDependencyUnaryComparatorOptions;
(function (CompassPackageDependencyUnaryComparatorOptions) {
    CompassPackageDependencyUnaryComparatorOptions["CompatibleWith"] = "COMPATIBLE_WITH";
    CompassPackageDependencyUnaryComparatorOptions["Equals"] = "EQUALS";
    CompassPackageDependencyUnaryComparatorOptions["GreaterThan"] = "GREATER_THAN";
    CompassPackageDependencyUnaryComparatorOptions["GreaterThanOrEqualTo"] = "GREATER_THAN_OR_EQUAL_TO";
    CompassPackageDependencyUnaryComparatorOptions["LessThan"] = "LESS_THAN";
    CompassPackageDependencyUnaryComparatorOptions["LessThanOrEqualTo"] = "LESS_THAN_OR_EQUAL_TO";
    CompassPackageDependencyUnaryComparatorOptions["MatchesRegex"] = "MATCHES_REGEX";
    CompassPackageDependencyUnaryComparatorOptions["NotEqualTo"] = "NOT_EQUAL_TO";
})(CompassPackageDependencyUnaryComparatorOptions = exports.CompassPackageDependencyUnaryComparatorOptions || (exports.CompassPackageDependencyUnaryComparatorOptions = {}));
var CompassPullRequestQuerySortName;
(function (CompassPullRequestQuerySortName) {
    CompassPullRequestQuerySortName["CycleTime"] = "CYCLE_TIME";
    CompassPullRequestQuerySortName["OpenToFirstReview"] = "OPEN_TO_FIRST_REVIEW";
    CompassPullRequestQuerySortName["PrClosedTime"] = "PR_CLOSED_TIME";
    CompassPullRequestQuerySortName["PrCreatedTime"] = "PR_CREATED_TIME";
    CompassPullRequestQuerySortName["ReviewTime"] = "REVIEW_TIME";
})(CompassPullRequestQuerySortName = exports.CompassPullRequestQuerySortName || (exports.CompassPullRequestQuerySortName = {}));
var CompassPullRequestStatus;
(function (CompassPullRequestStatus) {
    CompassPullRequestStatus["Created"] = "CREATED";
    CompassPullRequestStatus["FirstReviewed"] = "FIRST_REVIEWED";
    CompassPullRequestStatus["Merged"] = "MERGED";
    CompassPullRequestStatus["Overdue"] = "OVERDUE";
    CompassPullRequestStatus["Rejected"] = "REJECTED";
})(CompassPullRequestStatus = exports.CompassPullRequestStatus || (exports.CompassPullRequestStatus = {}));
var CompassPullRequestStatusForStatusInTimeRangeFilter;
(function (CompassPullRequestStatusForStatusInTimeRangeFilter) {
    CompassPullRequestStatusForStatusInTimeRangeFilter["Created"] = "CREATED";
    CompassPullRequestStatusForStatusInTimeRangeFilter["FirstReviewed"] = "FIRST_REVIEWED";
    CompassPullRequestStatusForStatusInTimeRangeFilter["Merged"] = "MERGED";
    CompassPullRequestStatusForStatusInTimeRangeFilter["Rejected"] = "REJECTED";
})(CompassPullRequestStatusForStatusInTimeRangeFilter = exports.CompassPullRequestStatusForStatusInTimeRangeFilter || (exports.CompassPullRequestStatusForStatusInTimeRangeFilter = {}));
var CompassQuerySortOrder;
(function (CompassQuerySortOrder) {
    CompassQuerySortOrder["Asc"] = "ASC";
    CompassQuerySortOrder["Desc"] = "DESC";
})(CompassQuerySortOrder = exports.CompassQuerySortOrder || (exports.CompassQuerySortOrder = {}));
var CompassRelationshipDirection;
(function (CompassRelationshipDirection) {
    CompassRelationshipDirection["Inward"] = "INWARD";
    CompassRelationshipDirection["Outward"] = "OUTWARD";
})(CompassRelationshipDirection = exports.CompassRelationshipDirection || (exports.CompassRelationshipDirection = {}));
var CompassRelationshipType;
(function (CompassRelationshipType) {
    CompassRelationshipType["DependsOn"] = "DEPENDS_ON";
})(CompassRelationshipType = exports.CompassRelationshipType || (exports.CompassRelationshipType = {}));
var CompassRelationshipTypeInput;
(function (CompassRelationshipTypeInput) {
    CompassRelationshipTypeInput["ChildOf"] = "CHILD_OF";
    CompassRelationshipTypeInput["DependsOn"] = "DEPENDS_ON";
})(CompassRelationshipTypeInput = exports.CompassRelationshipTypeInput || (exports.CompassRelationshipTypeInput = {}));
var CompassScorecardCriteriaScoreHistoryPeriodicity;
(function (CompassScorecardCriteriaScoreHistoryPeriodicity) {
    CompassScorecardCriteriaScoreHistoryPeriodicity["Daily"] = "DAILY";
    CompassScorecardCriteriaScoreHistoryPeriodicity["Weekly"] = "WEEKLY";
})(CompassScorecardCriteriaScoreHistoryPeriodicity = exports.CompassScorecardCriteriaScoreHistoryPeriodicity || (exports.CompassScorecardCriteriaScoreHistoryPeriodicity = {}));
var CompassScorecardCriteriaScoringStrategyRuleAction;
(function (CompassScorecardCriteriaScoringStrategyRuleAction) {
    CompassScorecardCriteriaScoringStrategyRuleAction["MarkAsError"] = "MARK_AS_ERROR";
    CompassScorecardCriteriaScoringStrategyRuleAction["MarkAsFailed"] = "MARK_AS_FAILED";
    CompassScorecardCriteriaScoringStrategyRuleAction["MarkAsPassed"] = "MARK_AS_PASSED";
    CompassScorecardCriteriaScoringStrategyRuleAction["MarkAsSkipped"] = "MARK_AS_SKIPPED";
})(CompassScorecardCriteriaScoringStrategyRuleAction = exports.CompassScorecardCriteriaScoringStrategyRuleAction || (exports.CompassScorecardCriteriaScoringStrategyRuleAction = {}));
var CompassScorecardCriterionExpressionBooleanComparatorOptions;
(function (CompassScorecardCriterionExpressionBooleanComparatorOptions) {
    CompassScorecardCriterionExpressionBooleanComparatorOptions["EqualTo"] = "EQUAL_TO";
    CompassScorecardCriterionExpressionBooleanComparatorOptions["NotEqualTo"] = "NOT_EQUAL_TO";
})(CompassScorecardCriterionExpressionBooleanComparatorOptions = exports.CompassScorecardCriterionExpressionBooleanComparatorOptions || (exports.CompassScorecardCriterionExpressionBooleanComparatorOptions = {}));
var CompassScorecardCriterionExpressionCollectionComparatorOptions;
(function (CompassScorecardCriterionExpressionCollectionComparatorOptions) {
    CompassScorecardCriterionExpressionCollectionComparatorOptions["AllOf"] = "ALL_OF";
    CompassScorecardCriterionExpressionCollectionComparatorOptions["AnyOf"] = "ANY_OF";
    CompassScorecardCriterionExpressionCollectionComparatorOptions["NoneOf"] = "NONE_OF";
})(CompassScorecardCriterionExpressionCollectionComparatorOptions = exports.CompassScorecardCriterionExpressionCollectionComparatorOptions || (exports.CompassScorecardCriterionExpressionCollectionComparatorOptions = {}));
var CompassScorecardCriterionExpressionEvaluationRuleAction;
(function (CompassScorecardCriterionExpressionEvaluationRuleAction) {
    CompassScorecardCriterionExpressionEvaluationRuleAction["Continue"] = "CONTINUE";
    CompassScorecardCriterionExpressionEvaluationRuleAction["ReturnError"] = "RETURN_ERROR";
    CompassScorecardCriterionExpressionEvaluationRuleAction["ReturnFailed"] = "RETURN_FAILED";
    CompassScorecardCriterionExpressionEvaluationRuleAction["ReturnPassed"] = "RETURN_PASSED";
    CompassScorecardCriterionExpressionEvaluationRuleAction["ReturnSkipped"] = "RETURN_SKIPPED";
})(CompassScorecardCriterionExpressionEvaluationRuleAction = exports.CompassScorecardCriterionExpressionEvaluationRuleAction || (exports.CompassScorecardCriterionExpressionEvaluationRuleAction = {}));
var CompassScorecardCriterionExpressionMembershipComparatorOptions;
(function (CompassScorecardCriterionExpressionMembershipComparatorOptions) {
    CompassScorecardCriterionExpressionMembershipComparatorOptions["In"] = "IN";
    CompassScorecardCriterionExpressionMembershipComparatorOptions["NotIn"] = "NOT_IN";
})(CompassScorecardCriterionExpressionMembershipComparatorOptions = exports.CompassScorecardCriterionExpressionMembershipComparatorOptions || (exports.CompassScorecardCriterionExpressionMembershipComparatorOptions = {}));
var CompassScorecardCriterionExpressionNumberComparatorOptions;
(function (CompassScorecardCriterionExpressionNumberComparatorOptions) {
    CompassScorecardCriterionExpressionNumberComparatorOptions["EqualTo"] = "EQUAL_TO";
    CompassScorecardCriterionExpressionNumberComparatorOptions["GreaterThan"] = "GREATER_THAN";
    CompassScorecardCriterionExpressionNumberComparatorOptions["GreaterThanOrEqualTo"] = "GREATER_THAN_OR_EQUAL_TO";
    CompassScorecardCriterionExpressionNumberComparatorOptions["LessThan"] = "LESS_THAN";
    CompassScorecardCriterionExpressionNumberComparatorOptions["LessThanOrEqualTo"] = "LESS_THAN_OR_EQUAL_TO";
    CompassScorecardCriterionExpressionNumberComparatorOptions["NotEqualTo"] = "NOT_EQUAL_TO";
})(CompassScorecardCriterionExpressionNumberComparatorOptions = exports.CompassScorecardCriterionExpressionNumberComparatorOptions || (exports.CompassScorecardCriterionExpressionNumberComparatorOptions = {}));
var CompassScorecardCriterionExpressionTextComparatorOptions;
(function (CompassScorecardCriterionExpressionTextComparatorOptions) {
    CompassScorecardCriterionExpressionTextComparatorOptions["EqualTo"] = "EQUAL_TO";
    CompassScorecardCriterionExpressionTextComparatorOptions["NotEqualTo"] = "NOT_EQUAL_TO";
    CompassScorecardCriterionExpressionTextComparatorOptions["Regex"] = "REGEX";
})(CompassScorecardCriterionExpressionTextComparatorOptions = exports.CompassScorecardCriterionExpressionTextComparatorOptions || (exports.CompassScorecardCriterionExpressionTextComparatorOptions = {}));
var CompassScorecardImportance;
(function (CompassScorecardImportance) {
    CompassScorecardImportance["Recommended"] = "RECOMMENDED";
    CompassScorecardImportance["Required"] = "REQUIRED";
    CompassScorecardImportance["UserDefined"] = "USER_DEFINED";
})(CompassScorecardImportance = exports.CompassScorecardImportance || (exports.CompassScorecardImportance = {}));
var CompassScorecardQuerySortOrder;
(function (CompassScorecardQuerySortOrder) {
    CompassScorecardQuerySortOrder["Asc"] = "ASC";
    CompassScorecardQuerySortOrder["Desc"] = "DESC";
})(CompassScorecardQuerySortOrder = exports.CompassScorecardQuerySortOrder || (exports.CompassScorecardQuerySortOrder = {}));
var CompassScorecardScoreHistoryPeriodicity;
(function (CompassScorecardScoreHistoryPeriodicity) {
    CompassScorecardScoreHistoryPeriodicity["Daily"] = "DAILY";
    CompassScorecardScoreHistoryPeriodicity["Weekly"] = "WEEKLY";
})(CompassScorecardScoreHistoryPeriodicity = exports.CompassScorecardScoreHistoryPeriodicity || (exports.CompassScorecardScoreHistoryPeriodicity = {}));
var CompassScorecardScoreSystemType;
(function (CompassScorecardScoreSystemType) {
    CompassScorecardScoreSystemType["MaturityLevel"] = "MATURITY_LEVEL";
    CompassScorecardScoreSystemType["ThresholdPercentageBased"] = "THRESHOLD_PERCENTAGE_BASED";
    CompassScorecardScoreSystemType["ThresholdPointBased"] = "THRESHOLD_POINT_BASED";
})(CompassScorecardScoreSystemType = exports.CompassScorecardScoreSystemType || (exports.CompassScorecardScoreSystemType = {}));
var CompassScorecardScoringStrategyType;
(function (CompassScorecardScoringStrategyType) {
    CompassScorecardScoringStrategyType["PercentageBased"] = "PERCENTAGE_BASED";
    CompassScorecardScoringStrategyType["PointBased"] = "POINT_BASED";
    CompassScorecardScoringStrategyType["WeightBased"] = "WEIGHT_BASED";
})(CompassScorecardScoringStrategyType = exports.CompassScorecardScoringStrategyType || (exports.CompassScorecardScoringStrategyType = {}));
var CompassVulnerabilityEventSeverityLevel;
(function (CompassVulnerabilityEventSeverityLevel) {
    CompassVulnerabilityEventSeverityLevel["Critical"] = "CRITICAL";
    CompassVulnerabilityEventSeverityLevel["High"] = "HIGH";
    CompassVulnerabilityEventSeverityLevel["Low"] = "LOW";
    CompassVulnerabilityEventSeverityLevel["Medium"] = "MEDIUM";
})(CompassVulnerabilityEventSeverityLevel = exports.CompassVulnerabilityEventSeverityLevel || (exports.CompassVulnerabilityEventSeverityLevel = {}));
var CompassVulnerabilityEventState;
(function (CompassVulnerabilityEventState) {
    CompassVulnerabilityEventState["Declined"] = "DECLINED";
    CompassVulnerabilityEventState["Open"] = "OPEN";
    CompassVulnerabilityEventState["Remediated"] = "REMEDIATED";
})(CompassVulnerabilityEventState = exports.CompassVulnerabilityEventState || (exports.CompassVulnerabilityEventState = {}));
var ComplianceBoundary;
(function (ComplianceBoundary) {
    ComplianceBoundary["Commercial"] = "COMMERCIAL";
    ComplianceBoundary["FedrampModerate"] = "FEDRAMP_MODERATE";
})(ComplianceBoundary = exports.ComplianceBoundary || (exports.ComplianceBoundary = {}));
var ComponentSyncEventStatus;
(function (ComponentSyncEventStatus) {
    ComponentSyncEventStatus["ServerError"] = "SERVER_ERROR";
    ComponentSyncEventStatus["Success"] = "SUCCESS";
    ComponentSyncEventStatus["UserError"] = "USER_ERROR";
})(ComponentSyncEventStatus = exports.ComponentSyncEventStatus || (exports.ComponentSyncEventStatus = {}));
var ConfluenceAdminAnnouncementBannerStatusType;
(function (ConfluenceAdminAnnouncementBannerStatusType) {
    ConfluenceAdminAnnouncementBannerStatusType["Published"] = "PUBLISHED";
    ConfluenceAdminAnnouncementBannerStatusType["Saved"] = "SAVED";
    ConfluenceAdminAnnouncementBannerStatusType["Scheduled"] = "SCHEDULED";
})(ConfluenceAdminAnnouncementBannerStatusType = exports.ConfluenceAdminAnnouncementBannerStatusType || (exports.ConfluenceAdminAnnouncementBannerStatusType = {}));
var ConfluenceAdminAnnouncementBannerVisibilityType;
(function (ConfluenceAdminAnnouncementBannerVisibilityType) {
    ConfluenceAdminAnnouncementBannerVisibilityType["All"] = "ALL";
    ConfluenceAdminAnnouncementBannerVisibilityType["Authorized"] = "AUTHORIZED";
})(ConfluenceAdminAnnouncementBannerVisibilityType = exports.ConfluenceAdminAnnouncementBannerVisibilityType || (exports.ConfluenceAdminAnnouncementBannerVisibilityType = {}));
var ConfluenceAnalyticsCommentContentType;
(function (ConfluenceAnalyticsCommentContentType) {
    ConfluenceAnalyticsCommentContentType["Database"] = "database";
    ConfluenceAnalyticsCommentContentType["Page"] = "page";
    ConfluenceAnalyticsCommentContentType["Whiteboard"] = "whiteboard";
})(ConfluenceAnalyticsCommentContentType = exports.ConfluenceAnalyticsCommentContentType || (exports.ConfluenceAnalyticsCommentContentType = {}));
var ConfluenceAppInstallationLicenseCapabilitySet;
(function (ConfluenceAppInstallationLicenseCapabilitySet) {
    ConfluenceAppInstallationLicenseCapabilitySet["CapabilityAdvanced"] = "CAPABILITY_ADVANCED";
    ConfluenceAppInstallationLicenseCapabilitySet["CapabilityStandard"] = "CAPABILITY_STANDARD";
})(ConfluenceAppInstallationLicenseCapabilitySet = exports.ConfluenceAppInstallationLicenseCapabilitySet || (exports.ConfluenceAppInstallationLicenseCapabilitySet = {}));
var ConfluenceAppType;
(function (ConfluenceAppType) {
    ConfluenceAppType["Connect"] = "CONNECT";
    ConfluenceAppType["Forge"] = "FORGE";
})(ConfluenceAppType = exports.ConfluenceAppType || (exports.ConfluenceAppType = {}));
var ConfluenceApplication;
(function (ConfluenceApplication) {
    ConfluenceApplication["Html"] = "HTML";
    ConfluenceApplication["Miro"] = "MIRO";
    ConfluenceApplication["Mural"] = "MURAL";
    ConfluenceApplication["Notion"] = "NOTION";
})(ConfluenceApplication = exports.ConfluenceApplication || (exports.ConfluenceApplication = {}));
var ConfluenceAssignableSpaceRolePrincipalType;
(function (ConfluenceAssignableSpaceRolePrincipalType) {
    ConfluenceAssignableSpaceRolePrincipalType["Anonymous"] = "ANONYMOUS";
    ConfluenceAssignableSpaceRolePrincipalType["Guest"] = "GUEST";
})(ConfluenceAssignableSpaceRolePrincipalType = exports.ConfluenceAssignableSpaceRolePrincipalType || (exports.ConfluenceAssignableSpaceRolePrincipalType = {}));
var ConfluenceAttachmentSecurityLevel;
(function (ConfluenceAttachmentSecurityLevel) {
    ConfluenceAttachmentSecurityLevel["Insecure"] = "INSECURE";
    ConfluenceAttachmentSecurityLevel["Secure"] = "SECURE";
    ConfluenceAttachmentSecurityLevel["Smart"] = "SMART";
})(ConfluenceAttachmentSecurityLevel = exports.ConfluenceAttachmentSecurityLevel || (exports.ConfluenceAttachmentSecurityLevel = {}));
var ConfluenceBlogPostStatus;
(function (ConfluenceBlogPostStatus) {
    ConfluenceBlogPostStatus["Archived"] = "ARCHIVED";
    ConfluenceBlogPostStatus["Current"] = "CURRENT";
    ConfluenceBlogPostStatus["Deleted"] = "DELETED";
    ConfluenceBlogPostStatus["Draft"] = "DRAFT";
    ConfluenceBlogPostStatus["Historical"] = "HISTORICAL";
    ConfluenceBlogPostStatus["Trashed"] = "TRASHED";
})(ConfluenceBlogPostStatus = exports.ConfluenceBlogPostStatus || (exports.ConfluenceBlogPostStatus = {}));
var ConfluenceBodyRepresentation;
(function (ConfluenceBodyRepresentation) {
    ConfluenceBodyRepresentation["AnonymousExportView"] = "ANONYMOUS_EXPORT_VIEW";
    ConfluenceBodyRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    ConfluenceBodyRepresentation["Dynamic"] = "DYNAMIC";
    ConfluenceBodyRepresentation["Editor"] = "EDITOR";
    ConfluenceBodyRepresentation["Editor2"] = "EDITOR2";
    ConfluenceBodyRepresentation["ExportView"] = "EXPORT_VIEW";
    ConfluenceBodyRepresentation["Storage"] = "STORAGE";
    ConfluenceBodyRepresentation["StyledView"] = "STYLED_VIEW";
    ConfluenceBodyRepresentation["View"] = "VIEW";
    ConfluenceBodyRepresentation["WhiteboardDocFormat"] = "WHITEBOARD_DOC_FORMAT";
})(ConfluenceBodyRepresentation = exports.ConfluenceBodyRepresentation || (exports.ConfluenceBodyRepresentation = {}));
var ConfluenceCalendarPermissionsType;
(function (ConfluenceCalendarPermissionsType) {
    ConfluenceCalendarPermissionsType["Edit"] = "EDIT";
    ConfluenceCalendarPermissionsType["View"] = "VIEW";
})(ConfluenceCalendarPermissionsType = exports.ConfluenceCalendarPermissionsType || (exports.ConfluenceCalendarPermissionsType = {}));
var ConfluenceCatchupOverviewTimeframeLength;
(function (ConfluenceCatchupOverviewTimeframeLength) {
    ConfluenceCatchupOverviewTimeframeLength["AllTime"] = "ALL_TIME";
    ConfluenceCatchupOverviewTimeframeLength["OneDayAgo"] = "ONE_DAY_AGO";
    ConfluenceCatchupOverviewTimeframeLength["OneMonthAgo"] = "ONE_MONTH_AGO";
    ConfluenceCatchupOverviewTimeframeLength["OneWeekAgo"] = "ONE_WEEK_AGO";
    ConfluenceCatchupOverviewTimeframeLength["TwoWeeksAgo"] = "TWO_WEEKS_AGO";
})(ConfluenceCatchupOverviewTimeframeLength = exports.ConfluenceCatchupOverviewTimeframeLength || (exports.ConfluenceCatchupOverviewTimeframeLength = {}));
var ConfluenceCategorizeNbmCategoryTypes;
(function (ConfluenceCategorizeNbmCategoryTypes) {
    ConfluenceCategorizeNbmCategoryTypes["NotSupported"] = "NOT_SUPPORTED";
    ConfluenceCategorizeNbmCategoryTypes["Supported"] = "SUPPORTED";
    ConfluenceCategorizeNbmCategoryTypes["SupportedWithMitigation"] = "SUPPORTED_WITH_MITIGATION";
    ConfluenceCategorizeNbmCategoryTypes["Unverified"] = "UNVERIFIED";
})(ConfluenceCategorizeNbmCategoryTypes = exports.ConfluenceCategorizeNbmCategoryTypes || (exports.ConfluenceCategorizeNbmCategoryTypes = {}));
var ConfluenceCollaborativeEditingService;
(function (ConfluenceCollaborativeEditingService) {
    ConfluenceCollaborativeEditingService["Ncs"] = "NCS";
    ConfluenceCollaborativeEditingService["Synchrony"] = "SYNCHRONY";
})(ConfluenceCollaborativeEditingService = exports.ConfluenceCollaborativeEditingService || (exports.ConfluenceCollaborativeEditingService = {}));
var ConfluenceCommentLevel;
(function (ConfluenceCommentLevel) {
    ConfluenceCommentLevel["Reply"] = "REPLY";
    ConfluenceCommentLevel["TopLevel"] = "TOP_LEVEL";
})(ConfluenceCommentLevel = exports.ConfluenceCommentLevel || (exports.ConfluenceCommentLevel = {}));
var ConfluenceCommentResolveAllLocation;
(function (ConfluenceCommentResolveAllLocation) {
    ConfluenceCommentResolveAllLocation["Editor"] = "EDITOR";
    ConfluenceCommentResolveAllLocation["Live"] = "LIVE";
    ConfluenceCommentResolveAllLocation["Renderer"] = "RENDERER";
})(ConfluenceCommentResolveAllLocation = exports.ConfluenceCommentResolveAllLocation || (exports.ConfluenceCommentResolveAllLocation = {}));
var ConfluenceCommentState;
(function (ConfluenceCommentState) {
    ConfluenceCommentState["Resolved"] = "RESOLVED";
    ConfluenceCommentState["Unresolved"] = "UNRESOLVED";
})(ConfluenceCommentState = exports.ConfluenceCommentState || (exports.ConfluenceCommentState = {}));
var ConfluenceCommentStatus;
(function (ConfluenceCommentStatus) {
    ConfluenceCommentStatus["Current"] = "CURRENT";
    ConfluenceCommentStatus["Draft"] = "DRAFT";
})(ConfluenceCommentStatus = exports.ConfluenceCommentStatus || (exports.ConfluenceCommentStatus = {}));
var ConfluenceCommentType;
(function (ConfluenceCommentType) {
    ConfluenceCommentType["Footer"] = "FOOTER";
    ConfluenceCommentType["Inline"] = "INLINE";
})(ConfluenceCommentType = exports.ConfluenceCommentType || (exports.ConfluenceCommentType = {}));
var ConfluenceContentAccessRequestStatus;
(function (ConfluenceContentAccessRequestStatus) {
    ConfluenceContentAccessRequestStatus["Approve"] = "APPROVE";
    ConfluenceContentAccessRequestStatus["Deny"] = "DENY";
    ConfluenceContentAccessRequestStatus["Pending"] = "PENDING";
    ConfluenceContentAccessRequestStatus["PendingSiteApproval"] = "PENDING_SITE_APPROVAL";
})(ConfluenceContentAccessRequestStatus = exports.ConfluenceContentAccessRequestStatus || (exports.ConfluenceContentAccessRequestStatus = {}));
var ConfluenceContentRepresentation;
(function (ConfluenceContentRepresentation) {
    ConfluenceContentRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    ConfluenceContentRepresentation["Editor"] = "EDITOR";
    ConfluenceContentRepresentation["Editor2"] = "EDITOR2";
    ConfluenceContentRepresentation["ExportView"] = "EXPORT_VIEW";
    ConfluenceContentRepresentation["Plain"] = "PLAIN";
    ConfluenceContentRepresentation["Raw"] = "RAW";
    ConfluenceContentRepresentation["Storage"] = "STORAGE";
    ConfluenceContentRepresentation["StyledView"] = "STYLED_VIEW";
    ConfluenceContentRepresentation["View"] = "VIEW";
    ConfluenceContentRepresentation["Wiki"] = "WIKI";
})(ConfluenceContentRepresentation = exports.ConfluenceContentRepresentation || (exports.ConfluenceContentRepresentation = {}));
var ConfluenceContentStatus;
(function (ConfluenceContentStatus) {
    ConfluenceContentStatus["Archived"] = "ARCHIVED";
    ConfluenceContentStatus["Current"] = "CURRENT";
    ConfluenceContentStatus["Deleted"] = "DELETED";
    ConfluenceContentStatus["Draft"] = "DRAFT";
    ConfluenceContentStatus["Historical"] = "HISTORICAL";
    ConfluenceContentStatus["Trashed"] = "TRASHED";
})(ConfluenceContentStatus = exports.ConfluenceContentStatus || (exports.ConfluenceContentStatus = {}));
var ConfluenceContentType;
(function (ConfluenceContentType) {
    ConfluenceContentType["Attachment"] = "ATTACHMENT";
    ConfluenceContentType["BlogPost"] = "BLOG_POST";
    ConfluenceContentType["Comment"] = "COMMENT";
    ConfluenceContentType["Database"] = "DATABASE";
    ConfluenceContentType["Embed"] = "EMBED";
    ConfluenceContentType["Folder"] = "FOLDER";
    ConfluenceContentType["Page"] = "PAGE";
    ConfluenceContentType["Whiteboard"] = "WHITEBOARD";
})(ConfluenceContentType = exports.ConfluenceContentType || (exports.ConfluenceContentType = {}));
var ConfluenceContributionStatus;
(function (ConfluenceContributionStatus) {
    ConfluenceContributionStatus["Current"] = "CURRENT";
    ConfluenceContributionStatus["Draft"] = "DRAFT";
    ConfluenceContributionStatus["Unknown"] = "UNKNOWN";
    ConfluenceContributionStatus["Unpublished"] = "UNPUBLISHED";
})(ConfluenceContributionStatus = exports.ConfluenceContributionStatus || (exports.ConfluenceContributionStatus = {}));
var ConfluenceCreateSpaceContentType;
(function (ConfluenceCreateSpaceContentType) {
    ConfluenceCreateSpaceContentType["Folder"] = "FOLDER";
    ConfluenceCreateSpaceContentType["Page"] = "PAGE";
})(ConfluenceCreateSpaceContentType = exports.ConfluenceCreateSpaceContentType || (exports.ConfluenceCreateSpaceContentType = {}));
var ConfluenceCustomContentPermissionPrincipalType;
(function (ConfluenceCustomContentPermissionPrincipalType) {
    ConfluenceCustomContentPermissionPrincipalType["App"] = "APP";
    ConfluenceCustomContentPermissionPrincipalType["Group"] = "GROUP";
    ConfluenceCustomContentPermissionPrincipalType["Guest"] = "GUEST";
    ConfluenceCustomContentPermissionPrincipalType["User"] = "USER";
    ConfluenceCustomContentPermissionPrincipalType["UserClass"] = "USER_CLASS";
})(ConfluenceCustomContentPermissionPrincipalType = exports.ConfluenceCustomContentPermissionPrincipalType || (exports.ConfluenceCustomContentPermissionPrincipalType = {}));
var ConfluenceCustomContentPermissionType;
(function (ConfluenceCustomContentPermissionType) {
    ConfluenceCustomContentPermissionType["Create"] = "CREATE";
    ConfluenceCustomContentPermissionType["Delete"] = "DELETE";
    ConfluenceCustomContentPermissionType["Read"] = "READ";
})(ConfluenceCustomContentPermissionType = exports.ConfluenceCustomContentPermissionType || (exports.ConfluenceCustomContentPermissionType = {}));
var ConfluenceEdition;
(function (ConfluenceEdition) {
    ConfluenceEdition["Free"] = "FREE";
    ConfluenceEdition["Premium"] = "PREMIUM";
    ConfluenceEdition["Standard"] = "STANDARD";
})(ConfluenceEdition = exports.ConfluenceEdition || (exports.ConfluenceEdition = {}));
var ConfluenceExtensionVisibilityControlMechanism;
(function (ConfluenceExtensionVisibilityControlMechanism) {
    ConfluenceExtensionVisibilityControlMechanism["AppAccessRules"] = "APP_ACCESS_RULES";
    ConfluenceExtensionVisibilityControlMechanism["DisplayConditions"] = "DISPLAY_CONDITIONS";
})(ConfluenceExtensionVisibilityControlMechanism = exports.ConfluenceExtensionVisibilityControlMechanism || (exports.ConfluenceExtensionVisibilityControlMechanism = {}));
var ConfluenceGraphQlContentMode;
(function (ConfluenceGraphQlContentMode) {
    ConfluenceGraphQlContentMode["Dense"] = "DENSE";
    ConfluenceGraphQlContentMode["Standard"] = "STANDARD";
})(ConfluenceGraphQlContentMode = exports.ConfluenceGraphQlContentMode || (exports.ConfluenceGraphQlContentMode = {}));
var ConfluenceGraphQlDefaultTitleEmoji;
(function (ConfluenceGraphQlDefaultTitleEmoji) {
    ConfluenceGraphQlDefaultTitleEmoji["LivePageDefault"] = "LIVE_PAGE_DEFAULT";
    ConfluenceGraphQlDefaultTitleEmoji["None"] = "NONE";
})(ConfluenceGraphQlDefaultTitleEmoji = exports.ConfluenceGraphQlDefaultTitleEmoji || (exports.ConfluenceGraphQlDefaultTitleEmoji = {}));
var ConfluenceGroupManagementType;
(function (ConfluenceGroupManagementType) {
    ConfluenceGroupManagementType["Admins"] = "ADMINS";
    ConfluenceGroupManagementType["External"] = "EXTERNAL";
    ConfluenceGroupManagementType["Open"] = "OPEN";
    ConfluenceGroupManagementType["TeamMembers"] = "TEAM_MEMBERS";
})(ConfluenceGroupManagementType = exports.ConfluenceGroupManagementType || (exports.ConfluenceGroupManagementType = {}));
var ConfluenceGroupUsageType;
(function (ConfluenceGroupUsageType) {
    ConfluenceGroupUsageType["AdminOversight"] = "ADMIN_OVERSIGHT";
    ConfluenceGroupUsageType["TeamCollaboration"] = "TEAM_COLLABORATION";
    ConfluenceGroupUsageType["UserbaseGroup"] = "USERBASE_GROUP";
})(ConfluenceGroupUsageType = exports.ConfluenceGroupUsageType || (exports.ConfluenceGroupUsageType = {}));
var ConfluenceImportSpaceTaskState;
(function (ConfluenceImportSpaceTaskState) {
    ConfluenceImportSpaceTaskState["Completed"] = "COMPLETED";
    ConfluenceImportSpaceTaskState["Failed"] = "FAILED";
    ConfluenceImportSpaceTaskState["InProgress"] = "IN_PROGRESS";
})(ConfluenceImportSpaceTaskState = exports.ConfluenceImportSpaceTaskState || (exports.ConfluenceImportSpaceTaskState = {}));
var ConfluenceImportStatus;
(function (ConfluenceImportStatus) {
    ConfluenceImportStatus["CombinedManifests"] = "COMBINED_MANIFESTS";
    ConfluenceImportStatus["Created"] = "CREATED";
    ConfluenceImportStatus["CreatedSpace"] = "CREATED_SPACE";
    ConfluenceImportStatus["CreatingPagesAndSpaces"] = "CREATING_PAGES_AND_SPACES";
    ConfluenceImportStatus["DetectedExportType"] = "DETECTED_EXPORT_TYPE";
    ConfluenceImportStatus["ExportedFrom_3P"] = "EXPORTED_FROM_3P";
    ConfluenceImportStatus["ExportingFrom_3P"] = "EXPORTING_FROM_3P";
    ConfluenceImportStatus["Failed"] = "FAILED";
    ConfluenceImportStatus["FetchedEntitiesToExport"] = "FETCHED_ENTITIES_TO_EXPORT";
    ConfluenceImportStatus["FetchedIdsFrom_3P"] = "FETCHED_IDS_FROM_3P";
    ConfluenceImportStatus["FetchingEntitiesToExport"] = "FETCHING_ENTITIES_TO_EXPORT";
    ConfluenceImportStatus["ImportedUser"] = "IMPORTED_USER";
    ConfluenceImportStatus["ImportedWhiteboard"] = "IMPORTED_WHITEBOARD";
    ConfluenceImportStatus["ImportingUser"] = "IMPORTING_USER";
    ConfluenceImportStatus["ImportingWhiteboards"] = "IMPORTING_WHITEBOARDS";
    ConfluenceImportStatus["NestedUnzipping"] = "NESTED_UNZIPPING";
    ConfluenceImportStatus["PartialFailed"] = "PARTIAL_FAILED";
    ConfluenceImportStatus["Queued"] = "QUEUED";
    ConfluenceImportStatus["Unzipped"] = "UNZIPPED";
    ConfluenceImportStatus["Unzipping"] = "UNZIPPING";
    ConfluenceImportStatus["Updated"] = "UPDATED";
    ConfluenceImportStatus["UpdatedContent"] = "UPDATED_CONTENT";
    ConfluenceImportStatus["UpdatingContent"] = "UPDATING_CONTENT";
})(ConfluenceImportStatus = exports.ConfluenceImportStatus || (exports.ConfluenceImportStatus = {}));
var ConfluenceInlineCommentResolutionStatus;
(function (ConfluenceInlineCommentResolutionStatus) {
    ConfluenceInlineCommentResolutionStatus["Resolved"] = "RESOLVED";
    ConfluenceInlineCommentResolutionStatus["Unresolved"] = "UNRESOLVED";
})(ConfluenceInlineCommentResolutionStatus = exports.ConfluenceInlineCommentResolutionStatus || (exports.ConfluenceInlineCommentResolutionStatus = {}));
var ConfluenceInlineCommentStepType;
(function (ConfluenceInlineCommentStepType) {
    ConfluenceInlineCommentStepType["AddMark"] = "ADD_MARK";
    ConfluenceInlineCommentStepType["AddNodeMark"] = "ADD_NODE_MARK";
    ConfluenceInlineCommentStepType["RemoveMark"] = "REMOVE_MARK";
    ConfluenceInlineCommentStepType["RemoveNodeMark"] = "REMOVE_NODE_MARK";
    ConfluenceInlineCommentStepType["SetAttrs"] = "SET_ATTRS";
})(ConfluenceInlineCommentStepType = exports.ConfluenceInlineCommentStepType || (exports.ConfluenceInlineCommentStepType = {}));
var ConfluenceInlineTaskStatus;
(function (ConfluenceInlineTaskStatus) {
    ConfluenceInlineTaskStatus["Complete"] = "COMPLETE";
    ConfluenceInlineTaskStatus["Incomplete"] = "INCOMPLETE";
})(ConfluenceInlineTaskStatus = exports.ConfluenceInlineTaskStatus || (exports.ConfluenceInlineTaskStatus = {}));
var ConfluenceJiraMacroAppLinksValidationStatus;
(function (ConfluenceJiraMacroAppLinksValidationStatus) {
    ConfluenceJiraMacroAppLinksValidationStatus["Done"] = "DONE";
    ConfluenceJiraMacroAppLinksValidationStatus["Error"] = "ERROR";
    ConfluenceJiraMacroAppLinksValidationStatus["Fixing"] = "FIXING";
    ConfluenceJiraMacroAppLinksValidationStatus["NotStarted"] = "NOT_STARTED";
    ConfluenceJiraMacroAppLinksValidationStatus["NoApplink"] = "NO_APPLINK";
    ConfluenceJiraMacroAppLinksValidationStatus["Scanning"] = "SCANNING";
    ConfluenceJiraMacroAppLinksValidationStatus["WaitForConfig"] = "WAIT_FOR_CONFIG";
})(ConfluenceJiraMacroAppLinksValidationStatus = exports.ConfluenceJiraMacroAppLinksValidationStatus || (exports.ConfluenceJiraMacroAppLinksValidationStatus = {}));
var ConfluenceLegacyEditorReportType;
(function (ConfluenceLegacyEditorReportType) {
    ConfluenceLegacyEditorReportType["Page"] = "PAGE";
    ConfluenceLegacyEditorReportType["Template"] = "TEMPLATE";
})(ConfluenceLegacyEditorReportType = exports.ConfluenceLegacyEditorReportType || (exports.ConfluenceLegacyEditorReportType = {}));
var ConfluenceMutationContentStatus;
(function (ConfluenceMutationContentStatus) {
    ConfluenceMutationContentStatus["Current"] = "CURRENT";
    ConfluenceMutationContentStatus["Draft"] = "DRAFT";
})(ConfluenceMutationContentStatus = exports.ConfluenceMutationContentStatus || (exports.ConfluenceMutationContentStatus = {}));
var ConfluenceNbmCategoryTypes;
(function (ConfluenceNbmCategoryTypes) {
    ConfluenceNbmCategoryTypes["NotSupported"] = "NOT_SUPPORTED";
    ConfluenceNbmCategoryTypes["Supported"] = "SUPPORTED";
    ConfluenceNbmCategoryTypes["SupportedWithMitigation"] = "SUPPORTED_WITH_MITIGATION";
    ConfluenceNbmCategoryTypes["Unknown"] = "UNKNOWN";
    ConfluenceNbmCategoryTypes["Unverified"] = "UNVERIFIED";
})(ConfluenceNbmCategoryTypes = exports.ConfluenceNbmCategoryTypes || (exports.ConfluenceNbmCategoryTypes = {}));
var ConfluenceNbmScanStatus;
(function (ConfluenceNbmScanStatus) {
    ConfluenceNbmScanStatus["Cancelled"] = "CANCELLED";
    ConfluenceNbmScanStatus["Completed"] = "COMPLETED";
    ConfluenceNbmScanStatus["Failed"] = "FAILED";
    ConfluenceNbmScanStatus["Pending"] = "PENDING";
    ConfluenceNbmScanStatus["Running"] = "RUNNING";
})(ConfluenceNbmScanStatus = exports.ConfluenceNbmScanStatus || (exports.ConfluenceNbmScanStatus = {}));
var ConfluenceNbmVerificationAiState;
(function (ConfluenceNbmVerificationAiState) {
    ConfluenceNbmVerificationAiState["Broken"] = "BROKEN";
    ConfluenceNbmVerificationAiState["Unknown"] = "UNKNOWN";
    ConfluenceNbmVerificationAiState["Working"] = "WORKING";
})(ConfluenceNbmVerificationAiState = exports.ConfluenceNbmVerificationAiState || (exports.ConfluenceNbmVerificationAiState = {}));
var ConfluenceNbmVerificationResultDirection;
(function (ConfluenceNbmVerificationResultDirection) {
    ConfluenceNbmVerificationResultDirection["Asc"] = "ASC";
    ConfluenceNbmVerificationResultDirection["Desc"] = "DESC";
})(ConfluenceNbmVerificationResultDirection = exports.ConfluenceNbmVerificationResultDirection || (exports.ConfluenceNbmVerificationResultDirection = {}));
var ConfluenceNbmVerificationResultOrder;
(function (ConfluenceNbmVerificationResultOrder) {
    ConfluenceNbmVerificationResultOrder["AiState"] = "AI_STATE";
    ConfluenceNbmVerificationResultOrder["ManualState"] = "MANUAL_STATE";
})(ConfluenceNbmVerificationResultOrder = exports.ConfluenceNbmVerificationResultOrder || (exports.ConfluenceNbmVerificationResultOrder = {}));
var ConfluenceNotesOrdering;
(function (ConfluenceNotesOrdering) {
    ConfluenceNotesOrdering["DateLastModifiedAsc"] = "DATE_LAST_MODIFIED_ASC";
    ConfluenceNotesOrdering["DateLastModifiedDesc"] = "DATE_LAST_MODIFIED_DESC";
})(ConfluenceNotesOrdering = exports.ConfluenceNotesOrdering || (exports.ConfluenceNotesOrdering = {}));
var ConfluenceOperationName;
(function (ConfluenceOperationName) {
    ConfluenceOperationName["Administer"] = "ADMINISTER";
    ConfluenceOperationName["Archive"] = "ARCHIVE";
    ConfluenceOperationName["Copy"] = "COPY";
    ConfluenceOperationName["Create"] = "CREATE";
    ConfluenceOperationName["CreateSpace"] = "CREATE_SPACE";
    ConfluenceOperationName["Delete"] = "DELETE";
    ConfluenceOperationName["Export"] = "EXPORT";
    ConfluenceOperationName["Move"] = "MOVE";
    ConfluenceOperationName["Purge"] = "PURGE";
    ConfluenceOperationName["PurgeVersion"] = "PURGE_VERSION";
    ConfluenceOperationName["Read"] = "READ";
    ConfluenceOperationName["Restore"] = "RESTORE";
    ConfluenceOperationName["RestrictContent"] = "RESTRICT_CONTENT";
    ConfluenceOperationName["Update"] = "UPDATE";
    ConfluenceOperationName["Use"] = "USE";
})(ConfluenceOperationName = exports.ConfluenceOperationName || (exports.ConfluenceOperationName = {}));
var ConfluenceOperationTarget;
(function (ConfluenceOperationTarget) {
    ConfluenceOperationTarget["Application"] = "APPLICATION";
    ConfluenceOperationTarget["Attachment"] = "ATTACHMENT";
    ConfluenceOperationTarget["BlogPost"] = "BLOG_POST";
    ConfluenceOperationTarget["Comment"] = "COMMENT";
    ConfluenceOperationTarget["Page"] = "PAGE";
    ConfluenceOperationTarget["Space"] = "SPACE";
    ConfluenceOperationTarget["UserProfile"] = "USER_PROFILE";
})(ConfluenceOperationTarget = exports.ConfluenceOperationTarget || (exports.ConfluenceOperationTarget = {}));
var ConfluencePageStatus;
(function (ConfluencePageStatus) {
    ConfluencePageStatus["Archived"] = "ARCHIVED";
    ConfluencePageStatus["Current"] = "CURRENT";
    ConfluencePageStatus["Deleted"] = "DELETED";
    ConfluencePageStatus["Draft"] = "DRAFT";
    ConfluencePageStatus["Historical"] = "HISTORICAL";
    ConfluencePageStatus["Trashed"] = "TRASHED";
})(ConfluencePageStatus = exports.ConfluencePageStatus || (exports.ConfluencePageStatus = {}));
var ConfluencePageSubType;
(function (ConfluencePageSubType) {
    ConfluencePageSubType["Live"] = "LIVE";
})(ConfluencePageSubType = exports.ConfluencePageSubType || (exports.ConfluencePageSubType = {}));
var ConfluencePdfExportState;
(function (ConfluencePdfExportState) {
    ConfluencePdfExportState["Done"] = "DONE";
    ConfluencePdfExportState["Failed"] = "FAILED";
    ConfluencePdfExportState["InProgress"] = "IN_PROGRESS";
    ConfluencePdfExportState["Validating"] = "VALIDATING";
})(ConfluencePdfExportState = exports.ConfluencePdfExportState || (exports.ConfluencePdfExportState = {}));
var ConfluencePermissionTypeAssignabilityCode;
(function (ConfluencePermissionTypeAssignabilityCode) {
    ConfluencePermissionTypeAssignabilityCode["AnonymousAssignable"] = "ANONYMOUS_ASSIGNABLE";
    ConfluencePermissionTypeAssignabilityCode["Assignable"] = "ASSIGNABLE";
    ConfluencePermissionTypeAssignabilityCode["GuestAssignable"] = "GUEST_ASSIGNABLE";
})(ConfluencePermissionTypeAssignabilityCode = exports.ConfluencePermissionTypeAssignabilityCode || (exports.ConfluencePermissionTypeAssignabilityCode = {}));
var ConfluencePolicyEnabledStatus;
(function (ConfluencePolicyEnabledStatus) {
    ConfluencePolicyEnabledStatus["Disabled"] = "DISABLED";
    ConfluencePolicyEnabledStatus["Enabled"] = "ENABLED";
    ConfluencePolicyEnabledStatus["UndeterminedDueToInternalError"] = "UNDETERMINED_DUE_TO_INTERNAL_ERROR";
})(ConfluencePolicyEnabledStatus = exports.ConfluencePolicyEnabledStatus || (exports.ConfluencePolicyEnabledStatus = {}));
var ConfluencePrincipalType;
(function (ConfluencePrincipalType) {
    ConfluencePrincipalType["Group"] = "GROUP";
    ConfluencePrincipalType["User"] = "USER";
})(ConfluencePrincipalType = exports.ConfluencePrincipalType || (exports.ConfluencePrincipalType = {}));
var ConfluenceQuestionsOperationName;
(function (ConfluenceQuestionsOperationName) {
    ConfluenceQuestionsOperationName["Create"] = "CREATE";
    ConfluenceQuestionsOperationName["Delete"] = "DELETE";
    ConfluenceQuestionsOperationName["Read"] = "READ";
    ConfluenceQuestionsOperationName["Update"] = "UPDATE";
})(ConfluenceQuestionsOperationName = exports.ConfluenceQuestionsOperationName || (exports.ConfluenceQuestionsOperationName = {}));
var ConfluenceQuestionsOperationTarget;
(function (ConfluenceQuestionsOperationTarget) {
    ConfluenceQuestionsOperationTarget["Answer"] = "ANSWER";
    ConfluenceQuestionsOperationTarget["Attachment"] = "ATTACHMENT";
    ConfluenceQuestionsOperationTarget["Comment"] = "COMMENT";
    ConfluenceQuestionsOperationTarget["Question"] = "QUESTION";
})(ConfluenceQuestionsOperationTarget = exports.ConfluenceQuestionsOperationTarget || (exports.ConfluenceQuestionsOperationTarget = {}));
var ConfluenceReIndexLongTaskStatus;
(function (ConfluenceReIndexLongTaskStatus) {
    ConfluenceReIndexLongTaskStatus["Failed"] = "FAILED";
    ConfluenceReIndexLongTaskStatus["InProgress"] = "IN_PROGRESS";
    ConfluenceReIndexLongTaskStatus["NotTriggered"] = "NOT_TRIGGERED";
    ConfluenceReIndexLongTaskStatus["Submitted"] = "SUBMITTED";
    ConfluenceReIndexLongTaskStatus["Succeed"] = "SUCCEED";
})(ConfluenceReIndexLongTaskStatus = exports.ConfluenceReIndexLongTaskStatus || (exports.ConfluenceReIndexLongTaskStatus = {}));
var ConfluenceRequestAccessApprovalDecision;
(function (ConfluenceRequestAccessApprovalDecision) {
    ConfluenceRequestAccessApprovalDecision["Approve"] = "APPROVE";
    ConfluenceRequestAccessApprovalDecision["Deny"] = "DENY";
})(ConfluenceRequestAccessApprovalDecision = exports.ConfluenceRequestAccessApprovalDecision || (exports.ConfluenceRequestAccessApprovalDecision = {}));
var ConfluenceRoleAssignabilityCode;
(function (ConfluenceRoleAssignabilityCode) {
    ConfluenceRoleAssignabilityCode["Assignable"] = "ASSIGNABLE";
    ConfluenceRoleAssignabilityCode["DefaultRoleAssignmentNotSupported"] = "DEFAULT_ROLE_ASSIGNMENT_NOT_SUPPORTED";
    ConfluenceRoleAssignabilityCode["EscalationNotAssignable"] = "ESCALATION_NOT_ASSIGNABLE";
    ConfluenceRoleAssignabilityCode["GuestExistingSpaceAccess"] = "GUEST_EXISTING_SPACE_ACCESS";
    ConfluenceRoleAssignabilityCode["GuestSystemSpaceAccess"] = "GUEST_SYSTEM_SPACE_ACCESS";
    ConfluenceRoleAssignabilityCode["NotAssignable"] = "NOT_ASSIGNABLE";
    ConfluenceRoleAssignabilityCode["NoManageGuestUsersPermNotAssignable"] = "NO_MANAGE_GUEST_USERS_PERM_NOT_ASSIGNABLE";
    ConfluenceRoleAssignabilityCode["NoManageNonlicensedUsersPermNotAssignable"] = "NO_MANAGE_NONLICENSED_USERS_PERM_NOT_ASSIGNABLE";
    ConfluenceRoleAssignabilityCode["PrincipalInvalidRole"] = "PRINCIPAL_INVALID_ROLE";
})(ConfluenceRoleAssignabilityCode = exports.ConfluenceRoleAssignabilityCode || (exports.ConfluenceRoleAssignabilityCode = {}));
var ConfluenceSchedulePublishedType;
(function (ConfluenceSchedulePublishedType) {
    ConfluenceSchedulePublishedType["Published"] = "PUBLISHED";
    ConfluenceSchedulePublishedType["Scheduled"] = "SCHEDULED";
    ConfluenceSchedulePublishedType["Unscheduled"] = "UNSCHEDULED";
})(ConfluenceSchedulePublishedType = exports.ConfluenceSchedulePublishedType || (exports.ConfluenceSchedulePublishedType = {}));
var ConfluenceSiteEmailAddressStatus;
(function (ConfluenceSiteEmailAddressStatus) {
    ConfluenceSiteEmailAddressStatus["Active"] = "ACTIVE";
    ConfluenceSiteEmailAddressStatus["Inactive"] = "INACTIVE";
    ConfluenceSiteEmailAddressStatus["SiteEmailAddressNotPresent"] = "SITE_EMAIL_ADDRESS_NOT_PRESENT";
})(ConfluenceSiteEmailAddressStatus = exports.ConfluenceSiteEmailAddressStatus || (exports.ConfluenceSiteEmailAddressStatus = {}));
var ConfluenceSpaceOwnerType;
(function (ConfluenceSpaceOwnerType) {
    ConfluenceSpaceOwnerType["Group"] = "GROUP";
    ConfluenceSpaceOwnerType["User"] = "USER";
})(ConfluenceSpaceOwnerType = exports.ConfluenceSpaceOwnerType || (exports.ConfluenceSpaceOwnerType = {}));
var ConfluenceSpacePermissionAuditReportSpaceType;
(function (ConfluenceSpacePermissionAuditReportSpaceType) {
    ConfluenceSpacePermissionAuditReportSpaceType["All"] = "ALL";
    ConfluenceSpacePermissionAuditReportSpaceType["AllExceptPersonal"] = "ALL_EXCEPT_PERSONAL";
    ConfluenceSpacePermissionAuditReportSpaceType["AllExceptSpecific"] = "ALL_EXCEPT_SPECIFIC";
    ConfluenceSpacePermissionAuditReportSpaceType["Personal"] = "PERSONAL";
    ConfluenceSpacePermissionAuditReportSpaceType["Specific"] = "SPECIFIC";
})(ConfluenceSpacePermissionAuditReportSpaceType = exports.ConfluenceSpacePermissionAuditReportSpaceType || (exports.ConfluenceSpacePermissionAuditReportSpaceType = {}));
var ConfluenceSpacePermissionAuditReportType;
(function (ConfluenceSpacePermissionAuditReportType) {
    ConfluenceSpacePermissionAuditReportType["FullSitePermission"] = "FULL_SITE_PERMISSION";
    ConfluenceSpacePermissionAuditReportType["PermissionCombination"] = "PERMISSION_COMBINATION";
})(ConfluenceSpacePermissionAuditReportType = exports.ConfluenceSpacePermissionAuditReportType || (exports.ConfluenceSpacePermissionAuditReportType = {}));
var ConfluenceSpaceRoleMode;
(function (ConfluenceSpaceRoleMode) {
    ConfluenceSpaceRoleMode["PreRoles"] = "PRE_ROLES";
    ConfluenceSpaceRoleMode["Roles"] = "ROLES";
    ConfluenceSpaceRoleMode["RolesTransition"] = "ROLES_TRANSITION";
})(ConfluenceSpaceRoleMode = exports.ConfluenceSpaceRoleMode || (exports.ConfluenceSpaceRoleMode = {}));
var ConfluenceSpaceSettingEditorVersion;
(function (ConfluenceSpaceSettingEditorVersion) {
    ConfluenceSpaceSettingEditorVersion["V1"] = "V1";
    ConfluenceSpaceSettingEditorVersion["V2"] = "V2";
})(ConfluenceSpaceSettingEditorVersion = exports.ConfluenceSpaceSettingEditorVersion || (exports.ConfluenceSpaceSettingEditorVersion = {}));
var ConfluenceSpaceStatus;
(function (ConfluenceSpaceStatus) {
    ConfluenceSpaceStatus["Archived"] = "ARCHIVED";
    ConfluenceSpaceStatus["Current"] = "CURRENT";
})(ConfluenceSpaceStatus = exports.ConfluenceSpaceStatus || (exports.ConfluenceSpaceStatus = {}));
var ConfluenceSpaceType;
(function (ConfluenceSpaceType) {
    ConfluenceSpaceType["Global"] = "GLOBAL";
    ConfluenceSpaceType["Personal"] = "PERSONAL";
})(ConfluenceSpaceType = exports.ConfluenceSpaceType || (exports.ConfluenceSpaceType = {}));
var ConfluenceSubscriptionContentType;
(function (ConfluenceSubscriptionContentType) {
    ConfluenceSubscriptionContentType["Blogpost"] = "BLOGPOST";
    ConfluenceSubscriptionContentType["Comment"] = "COMMENT";
    ConfluenceSubscriptionContentType["Database"] = "DATABASE";
    ConfluenceSubscriptionContentType["Embed"] = "EMBED";
    ConfluenceSubscriptionContentType["Folder"] = "FOLDER";
    ConfluenceSubscriptionContentType["Page"] = "PAGE";
    ConfluenceSubscriptionContentType["Whiteboard"] = "WHITEBOARD";
})(ConfluenceSubscriptionContentType = exports.ConfluenceSubscriptionContentType || (exports.ConfluenceSubscriptionContentType = {}));
var ConfluenceTeamCalendarTimeFormatTypes;
(function (ConfluenceTeamCalendarTimeFormatTypes) {
    ConfluenceTeamCalendarTimeFormatTypes["DisplayTimeFormat_12"] = "DISPLAY_TIME_FORMAT_12";
    ConfluenceTeamCalendarTimeFormatTypes["DisplayTimeFormat_24"] = "DISPLAY_TIME_FORMAT_24";
})(ConfluenceTeamCalendarTimeFormatTypes = exports.ConfluenceTeamCalendarTimeFormatTypes || (exports.ConfluenceTeamCalendarTimeFormatTypes = {}));
var ConfluenceTeamCalendarWeekValues;
(function (ConfluenceTeamCalendarWeekValues) {
    ConfluenceTeamCalendarWeekValues["Default"] = "DEFAULT";
    ConfluenceTeamCalendarWeekValues["Five"] = "FIVE";
    ConfluenceTeamCalendarWeekValues["Four"] = "FOUR";
    ConfluenceTeamCalendarWeekValues["One"] = "ONE";
    ConfluenceTeamCalendarWeekValues["Seven"] = "SEVEN";
    ConfluenceTeamCalendarWeekValues["Six"] = "SIX";
    ConfluenceTeamCalendarWeekValues["Three"] = "THREE";
    ConfluenceTeamCalendarWeekValues["Two"] = "TWO";
})(ConfluenceTeamCalendarWeekValues = exports.ConfluenceTeamCalendarWeekValues || (exports.ConfluenceTeamCalendarWeekValues = {}));
var ConfluenceUserType;
(function (ConfluenceUserType) {
    ConfluenceUserType["Anonymous"] = "ANONYMOUS";
    ConfluenceUserType["Known"] = "KNOWN";
})(ConfluenceUserType = exports.ConfluenceUserType || (exports.ConfluenceUserType = {}));
var ConfluenceViewState;
(function (ConfluenceViewState) {
    ConfluenceViewState["Editor"] = "EDITOR";
    ConfluenceViewState["Live"] = "LIVE";
    ConfluenceViewState["Renderer"] = "RENDERER";
})(ConfluenceViewState = exports.ConfluenceViewState || (exports.ConfluenceViewState = {}));
var ConfluenceVoteType;
(function (ConfluenceVoteType) {
    ConfluenceVoteType["Downvote"] = "DOWNVOTE";
    ConfluenceVoteType["Upvote"] = "UPVOTE";
})(ConfluenceVoteType = exports.ConfluenceVoteType || (exports.ConfluenceVoteType = {}));
var ContactAdminPageDisabledReason;
(function (ContactAdminPageDisabledReason) {
    ContactAdminPageDisabledReason["ConfigOff"] = "CONFIG_OFF";
    ContactAdminPageDisabledReason["NoAdminEmails"] = "NO_ADMIN_EMAILS";
    ContactAdminPageDisabledReason["NoMailServer"] = "NO_MAIL_SERVER";
    ContactAdminPageDisabledReason["NoRecaptcha"] = "NO_RECAPTCHA";
})(ContactAdminPageDisabledReason = exports.ContactAdminPageDisabledReason || (exports.ContactAdminPageDisabledReason = {}));
var ContainerType;
(function (ContainerType) {
    ContainerType["Blogpost"] = "BLOGPOST";
    ContainerType["Database"] = "DATABASE";
    ContainerType["Page"] = "PAGE";
    ContainerType["Space"] = "SPACE";
    ContainerType["Whiteboard"] = "WHITEBOARD";
})(ContainerType = exports.ContainerType || (exports.ContainerType = {}));
var ContentAccessInputType;
(function (ContentAccessInputType) {
    ContentAccessInputType["EveryoneCanEdit"] = "EVERYONE_CAN_EDIT";
    ContentAccessInputType["EveryoneCanView"] = "EVERYONE_CAN_VIEW";
    ContentAccessInputType["EveryoneNoAccess"] = "EVERYONE_NO_ACCESS";
    ContentAccessInputType["Private"] = "PRIVATE";
})(ContentAccessInputType = exports.ContentAccessInputType || (exports.ContentAccessInputType = {}));
var ContentAccessType;
(function (ContentAccessType) {
    ContentAccessType["EveryoneCanEdit"] = "EVERYONE_CAN_EDIT";
    ContentAccessType["EveryoneCanView"] = "EVERYONE_CAN_VIEW";
    ContentAccessType["EveryoneNoAccess"] = "EVERYONE_NO_ACCESS";
})(ContentAccessType = exports.ContentAccessType || (exports.ContentAccessType = {}));
var ContentAction;
(function (ContentAction) {
    ContentAction["Created"] = "created";
    ContentAction["Updated"] = "updated";
    ContentAction["Viewed"] = "viewed";
})(ContentAction = exports.ContentAction || (exports.ContentAction = {}));
var ContentDataClassificationMutationContentStatus;
(function (ContentDataClassificationMutationContentStatus) {
    ContentDataClassificationMutationContentStatus["Current"] = "CURRENT";
    ContentDataClassificationMutationContentStatus["Draft"] = "DRAFT";
})(ContentDataClassificationMutationContentStatus = exports.ContentDataClassificationMutationContentStatus || (exports.ContentDataClassificationMutationContentStatus = {}));
var ContentDataClassificationQueryContentStatus;
(function (ContentDataClassificationQueryContentStatus) {
    ContentDataClassificationQueryContentStatus["Archived"] = "ARCHIVED";
    ContentDataClassificationQueryContentStatus["Current"] = "CURRENT";
    ContentDataClassificationQueryContentStatus["Draft"] = "DRAFT";
})(ContentDataClassificationQueryContentStatus = exports.ContentDataClassificationQueryContentStatus || (exports.ContentDataClassificationQueryContentStatus = {}));
var ContentDeleteActionType;
(function (ContentDeleteActionType) {
    ContentDeleteActionType["DeleteDraft"] = "DELETE_DRAFT";
    ContentDeleteActionType["DeleteDraftIfBlank"] = "DELETE_DRAFT_IF_BLANK";
    ContentDeleteActionType["MoveToTrash"] = "MOVE_TO_TRASH";
    ContentDeleteActionType["PurgeFromTrash"] = "PURGE_FROM_TRASH";
})(ContentDeleteActionType = exports.ContentDeleteActionType || (exports.ContentDeleteActionType = {}));
var ContentPermissionType;
(function (ContentPermissionType) {
    ContentPermissionType["Edit"] = "EDIT";
    ContentPermissionType["View"] = "VIEW";
})(ContentPermissionType = exports.ContentPermissionType || (exports.ContentPermissionType = {}));
var ContentPlatformBooleanOperators;
(function (ContentPlatformBooleanOperators) {
    ContentPlatformBooleanOperators["And"] = "AND";
    ContentPlatformBooleanOperators["Or"] = "OR";
})(ContentPlatformBooleanOperators = exports.ContentPlatformBooleanOperators || (exports.ContentPlatformBooleanOperators = {}));
var ContentPlatformFieldNames;
(function (ContentPlatformFieldNames) {
    ContentPlatformFieldNames["Description"] = "DESCRIPTION";
    ContentPlatformFieldNames["Title"] = "TITLE";
})(ContentPlatformFieldNames = exports.ContentPlatformFieldNames || (exports.ContentPlatformFieldNames = {}));
var ContentPlatformOperators;
(function (ContentPlatformOperators) {
    ContentPlatformOperators["All"] = "ALL";
    ContentPlatformOperators["Any"] = "ANY";
})(ContentPlatformOperators = exports.ContentPlatformOperators || (exports.ContentPlatformOperators = {}));
var ContentPlatformSearchTypes;
(function (ContentPlatformSearchTypes) {
    ContentPlatformSearchTypes["Contains"] = "CONTAINS";
    ContentPlatformSearchTypes["ExactMatch"] = "EXACT_MATCH";
})(ContentPlatformSearchTypes = exports.ContentPlatformSearchTypes || (exports.ContentPlatformSearchTypes = {}));
var ContentRendererMode;
(function (ContentRendererMode) {
    ContentRendererMode["Editor"] = "EDITOR";
    ContentRendererMode["Pdf"] = "PDF";
    ContentRendererMode["Renderer"] = "RENDERER";
})(ContentRendererMode = exports.ContentRendererMode || (exports.ContentRendererMode = {}));
var ContentRepresentation;
(function (ContentRepresentation) {
    ContentRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    ContentRepresentation["Editor"] = "EDITOR";
    ContentRepresentation["Editor2"] = "EDITOR2";
    ContentRepresentation["ExportView"] = "EXPORT_VIEW";
    ContentRepresentation["Plain"] = "PLAIN";
    ContentRepresentation["Raw"] = "RAW";
    ContentRepresentation["Storage"] = "STORAGE";
    ContentRepresentation["StyledView"] = "STYLED_VIEW";
    ContentRepresentation["View"] = "VIEW";
    ContentRepresentation["Wiki"] = "WIKI";
})(ContentRepresentation = exports.ContentRepresentation || (exports.ContentRepresentation = {}));
var ContentRepresentationV2;
(function (ContentRepresentationV2) {
    ContentRepresentationV2["AtlasDocFormat"] = "atlas_doc_format";
    ContentRepresentationV2["Editor"] = "editor";
    ContentRepresentationV2["Editor2"] = "editor2";
    ContentRepresentationV2["ExportView"] = "export_view";
    ContentRepresentationV2["Plain"] = "plain";
    ContentRepresentationV2["Raw"] = "raw";
    ContentRepresentationV2["Storage"] = "storage";
    ContentRepresentationV2["StyledView"] = "styled_view";
    ContentRepresentationV2["View"] = "view";
    ContentRepresentationV2["Wiki"] = "wiki";
})(ContentRepresentationV2 = exports.ContentRepresentationV2 || (exports.ContentRepresentationV2 = {}));
var ContentRole;
(function (ContentRole) {
    ContentRole["Default"] = "DEFAULT";
    ContentRole["Editor"] = "EDITOR";
    ContentRole["Viewer"] = "VIEWER";
})(ContentRole = exports.ContentRole || (exports.ContentRole = {}));
var ContentStateRestrictionLevel;
(function (ContentStateRestrictionLevel) {
    ContentStateRestrictionLevel["None"] = "NONE";
    ContentStateRestrictionLevel["PageOwner"] = "PAGE_OWNER";
})(ContentStateRestrictionLevel = exports.ContentStateRestrictionLevel || (exports.ContentStateRestrictionLevel = {}));
var Context;
(function (Context) {
    Context["Compass"] = "COMPASS";
    Context["Confluence"] = "CONFLUENCE";
    Context["Jira"] = "JIRA";
})(Context = exports.Context || (exports.Context = {}));
var ConvoAiAgentMessageType;
(function (ConvoAiAgentMessageType) {
    ConvoAiAgentMessageType["ConversationChannelData"] = "CONVERSATION_CHANNEL_DATA";
    ConvoAiAgentMessageType["EarlyStop"] = "EARLY_STOP";
    ConvoAiAgentMessageType["Empty"] = "EMPTY";
    ConvoAiAgentMessageType["Error"] = "ERROR";
    ConvoAiAgentMessageType["FinalMessage"] = "FINAL_MESSAGE";
    ConvoAiAgentMessageType["Trace"] = "TRACE";
})(ConvoAiAgentMessageType = exports.ConvoAiAgentMessageType || (exports.ConvoAiAgentMessageType = {}));
var ConvoAiAgentSessionStatus;
(function (ConvoAiAgentSessionStatus) {
    ConvoAiAgentSessionStatus["Completed"] = "COMPLETED";
    ConvoAiAgentSessionStatus["InputRequired"] = "INPUT_REQUIRED";
    ConvoAiAgentSessionStatus["Unknown"] = "UNKNOWN";
    ConvoAiAgentSessionStatus["Working"] = "WORKING";
})(ConvoAiAgentSessionStatus = exports.ConvoAiAgentSessionStatus || (exports.ConvoAiAgentSessionStatus = {}));
var ConvoAiHomeThreadSuggestedActionType;
(function (ConvoAiHomeThreadSuggestedActionType) {
    ConvoAiHomeThreadSuggestedActionType["Delete"] = "DELETE";
    ConvoAiHomeThreadSuggestedActionType["Reply"] = "REPLY";
    ConvoAiHomeThreadSuggestedActionType["Share"] = "SHARE";
    ConvoAiHomeThreadSuggestedActionType["View"] = "VIEW";
})(ConvoAiHomeThreadSuggestedActionType = exports.ConvoAiHomeThreadSuggestedActionType || (exports.ConvoAiHomeThreadSuggestedActionType = {}));
var CplsContributionValueType;
(function (CplsContributionValueType) {
    CplsContributionValueType["Hours"] = "HOURS";
    CplsContributionValueType["Percentage"] = "PERCENTAGE";
})(CplsContributionValueType = exports.CplsContributionValueType || (exports.CplsContributionValueType = {}));
var CplsTimeScaleType;
(function (CplsTimeScaleType) {
    CplsTimeScaleType["Weekly"] = "WEEKLY";
})(CplsTimeScaleType = exports.CplsTimeScaleType || (exports.CplsTimeScaleType = {}));
var CriterionExemptionType;
(function (CriterionExemptionType) {
    CriterionExemptionType["Exemption"] = "EXEMPTION";
    CriterionExemptionType["Global"] = "GLOBAL";
})(CriterionExemptionType = exports.CriterionExemptionType || (exports.CriterionExemptionType = {}));
var CsmAiActionType;
(function (CsmAiActionType) {
    CsmAiActionType["Mutator"] = "MUTATOR";
    CsmAiActionType["Retriever"] = "RETRIEVER";
})(CsmAiActionType = exports.CsmAiActionType || (exports.CsmAiActionType = {}));
var CsmAiActionVariableDataType;
(function (CsmAiActionVariableDataType) {
    CsmAiActionVariableDataType["Boolean"] = "BOOLEAN";
    CsmAiActionVariableDataType["Integer"] = "INTEGER";
    CsmAiActionVariableDataType["Number"] = "NUMBER";
    CsmAiActionVariableDataType["String"] = "STRING";
})(CsmAiActionVariableDataType = exports.CsmAiActionVariableDataType || (exports.CsmAiActionVariableDataType = {}));
var CsmAiAuthenticationType;
(function (CsmAiAuthenticationType) {
    CsmAiAuthenticationType["EndUserAuth"] = "END_USER_AUTH";
    CsmAiAuthenticationType["NoAuth"] = "NO_AUTH";
})(CsmAiAuthenticationType = exports.CsmAiAuthenticationType || (exports.CsmAiAuthenticationType = {}));
var CsmAiHandoffType;
(function (CsmAiHandoffType) {
    CsmAiHandoffType["Csm"] = "CSM";
    CsmAiHandoffType["Message"] = "MESSAGE";
})(CsmAiHandoffType = exports.CsmAiHandoffType || (exports.CsmAiHandoffType = {}));
var CsmAiHandoffTypeInput;
(function (CsmAiHandoffTypeInput) {
    CsmAiHandoffTypeInput["Csm"] = "CSM";
    CsmAiHandoffTypeInput["Message"] = "MESSAGE";
})(CsmAiHandoffTypeInput = exports.CsmAiHandoffTypeInput || (exports.CsmAiHandoffTypeInput = {}));
var CsmAiHttpMethod;
(function (CsmAiHttpMethod) {
    CsmAiHttpMethod["Delete"] = "DELETE";
    CsmAiHttpMethod["Get"] = "GET";
    CsmAiHttpMethod["Patch"] = "PATCH";
    CsmAiHttpMethod["Post"] = "POST";
    CsmAiHttpMethod["Put"] = "PUT";
})(CsmAiHttpMethod = exports.CsmAiHttpMethod || (exports.CsmAiHttpMethod = {}));
var CsmAiWidgetBrandingChatColorVibeVariant;
(function (CsmAiWidgetBrandingChatColorVibeVariant) {
    CsmAiWidgetBrandingChatColorVibeVariant["Dark"] = "DARK";
    CsmAiWidgetBrandingChatColorVibeVariant["Default"] = "DEFAULT";
    CsmAiWidgetBrandingChatColorVibeVariant["Light"] = "LIGHT";
    CsmAiWidgetBrandingChatColorVibeVariant["Vibrant"] = "VIBRANT";
})(CsmAiWidgetBrandingChatColorVibeVariant = exports.CsmAiWidgetBrandingChatColorVibeVariant || (exports.CsmAiWidgetBrandingChatColorVibeVariant = {}));
var CsmAiWidgetBrandingColorVibeVariant;
(function (CsmAiWidgetBrandingColorVibeVariant) {
    CsmAiWidgetBrandingColorVibeVariant["Dark"] = "DARK";
    CsmAiWidgetBrandingColorVibeVariant["Light"] = "LIGHT";
    CsmAiWidgetBrandingColorVibeVariant["Vibrant"] = "VIBRANT";
})(CsmAiWidgetBrandingColorVibeVariant = exports.CsmAiWidgetBrandingColorVibeVariant || (exports.CsmAiWidgetBrandingColorVibeVariant = {}));
var CsmAiWidgetBrandingRadius;
(function (CsmAiWidgetBrandingRadius) {
    CsmAiWidgetBrandingRadius["Normal"] = "NORMAL";
    CsmAiWidgetBrandingRadius["Rounded"] = "ROUNDED";
    CsmAiWidgetBrandingRadius["Sharp"] = "SHARP";
})(CsmAiWidgetBrandingRadius = exports.CsmAiWidgetBrandingRadius || (exports.CsmAiWidgetBrandingRadius = {}));
var CsmAiWidgetBrandingSpaceVariant;
(function (CsmAiWidgetBrandingSpaceVariant) {
    CsmAiWidgetBrandingSpaceVariant["Comfortable"] = "COMFORTABLE";
    CsmAiWidgetBrandingSpaceVariant["Cosy"] = "COSY";
    CsmAiWidgetBrandingSpaceVariant["Generous"] = "GENEROUS";
})(CsmAiWidgetBrandingSpaceVariant = exports.CsmAiWidgetBrandingSpaceVariant || (exports.CsmAiWidgetBrandingSpaceVariant = {}));
var CsmAiWidgetIconType;
(function (CsmAiWidgetIconType) {
    CsmAiWidgetIconType["Custom"] = "CUSTOM";
    CsmAiWidgetIconType["Default"] = "DEFAULT";
    CsmAiWidgetIconType["Inherited"] = "INHERITED";
})(CsmAiWidgetIconType = exports.CsmAiWidgetIconType || (exports.CsmAiWidgetIconType = {}));
var CsmAiWidgetPosition;
(function (CsmAiWidgetPosition) {
    CsmAiWidgetPosition["Center"] = "CENTER";
    CsmAiWidgetPosition["Corner"] = "CORNER";
})(CsmAiWidgetPosition = exports.CsmAiWidgetPosition || (exports.CsmAiWidgetPosition = {}));
var CsmAiWidgetType;
(function (CsmAiWidgetType) {
    CsmAiWidgetType["Embed"] = "EMBED";
    CsmAiWidgetType["SupportSite"] = "SUPPORT_SITE";
})(CsmAiWidgetType = exports.CsmAiWidgetType || (exports.CsmAiWidgetType = {}));
var CustomEntityAttributeType;
(function (CustomEntityAttributeType) {
    CustomEntityAttributeType["Any"] = "any";
    CustomEntityAttributeType["Boolean"] = "boolean";
    CustomEntityAttributeType["Float"] = "float";
    CustomEntityAttributeType["Integer"] = "integer";
    CustomEntityAttributeType["String"] = "string";
})(CustomEntityAttributeType = exports.CustomEntityAttributeType || (exports.CustomEntityAttributeType = {}));
var CustomEntityIndexStatus;
(function (CustomEntityIndexStatus) {
    CustomEntityIndexStatus["Active"] = "ACTIVE";
    CustomEntityIndexStatus["Creating"] = "CREATING";
    CustomEntityIndexStatus["Inactive"] = "INACTIVE";
    CustomEntityIndexStatus["Pending"] = "PENDING";
})(CustomEntityIndexStatus = exports.CustomEntityIndexStatus || (exports.CustomEntityIndexStatus = {}));
var CustomEntityStatus;
(function (CustomEntityStatus) {
    CustomEntityStatus["Active"] = "ACTIVE";
    CustomEntityStatus["Inactive"] = "INACTIVE";
})(CustomEntityStatus = exports.CustomEntityStatus || (exports.CustomEntityStatus = {}));
var CustomMultiselectFieldInputComparators;
(function (CustomMultiselectFieldInputComparators) {
    CustomMultiselectFieldInputComparators["ContainAll"] = "CONTAIN_ALL";
    CustomMultiselectFieldInputComparators["ContainAny"] = "CONTAIN_ANY";
    CustomMultiselectFieldInputComparators["ContainNone"] = "CONTAIN_NONE";
    CustomMultiselectFieldInputComparators["IsSet"] = "IS_SET";
    CustomMultiselectFieldInputComparators["NotSet"] = "NOT_SET";
})(CustomMultiselectFieldInputComparators = exports.CustomMultiselectFieldInputComparators || (exports.CustomMultiselectFieldInputComparators = {}));
var CustomNumberFieldInputComparators;
(function (CustomNumberFieldInputComparators) {
    CustomNumberFieldInputComparators["ContainAny"] = "CONTAIN_ANY";
    CustomNumberFieldInputComparators["IsSet"] = "IS_SET";
    CustomNumberFieldInputComparators["NotSet"] = "NOT_SET";
})(CustomNumberFieldInputComparators = exports.CustomNumberFieldInputComparators || (exports.CustomNumberFieldInputComparators = {}));
var CustomSingleSelectFieldInputComparators;
(function (CustomSingleSelectFieldInputComparators) {
    CustomSingleSelectFieldInputComparators["ContainAny"] = "CONTAIN_ANY";
    CustomSingleSelectFieldInputComparators["ContainNone"] = "CONTAIN_NONE";
    CustomSingleSelectFieldInputComparators["IsSet"] = "IS_SET";
    CustomSingleSelectFieldInputComparators["NotSet"] = "NOT_SET";
})(CustomSingleSelectFieldInputComparators = exports.CustomSingleSelectFieldInputComparators || (exports.CustomSingleSelectFieldInputComparators = {}));
var CustomTextFieldInputComparators;
(function (CustomTextFieldInputComparators) {
    CustomTextFieldInputComparators["ContainAny"] = "CONTAIN_ANY";
    CustomTextFieldInputComparators["IsSet"] = "IS_SET";
    CustomTextFieldInputComparators["NotSet"] = "NOT_SET";
})(CustomTextFieldInputComparators = exports.CustomTextFieldInputComparators || (exports.CustomTextFieldInputComparators = {}));
var CustomUserFieldInputComparators;
(function (CustomUserFieldInputComparators) {
    CustomUserFieldInputComparators["ContainAny"] = "CONTAIN_ANY";
    CustomUserFieldInputComparators["IsSet"] = "IS_SET";
    CustomUserFieldInputComparators["NotSet"] = "NOT_SET";
})(CustomUserFieldInputComparators = exports.CustomUserFieldInputComparators || (exports.CustomUserFieldInputComparators = {}));
var CustomerServiceAttributeTypeName;
(function (CustomerServiceAttributeTypeName) {
    CustomerServiceAttributeTypeName["Boolean"] = "BOOLEAN";
    CustomerServiceAttributeTypeName["Date"] = "DATE";
    CustomerServiceAttributeTypeName["Email"] = "EMAIL";
    CustomerServiceAttributeTypeName["Multiselect"] = "MULTISELECT";
    CustomerServiceAttributeTypeName["Number"] = "NUMBER";
    CustomerServiceAttributeTypeName["Phone"] = "PHONE";
    CustomerServiceAttributeTypeName["Select"] = "SELECT";
    CustomerServiceAttributeTypeName["Text"] = "TEXT";
    CustomerServiceAttributeTypeName["Url"] = "URL";
    CustomerServiceAttributeTypeName["User"] = "USER";
})(CustomerServiceAttributeTypeName = exports.CustomerServiceAttributeTypeName || (exports.CustomerServiceAttributeTypeName = {}));
var CustomerServiceBrandingEntityType;
(function (CustomerServiceBrandingEntityType) {
    CustomerServiceBrandingEntityType["CustomerHub"] = "CUSTOMER_HUB";
    CustomerServiceBrandingEntityType["SupportSite"] = "SUPPORT_SITE";
})(CustomerServiceBrandingEntityType = exports.CustomerServiceBrandingEntityType || (exports.CustomerServiceBrandingEntityType = {}));
var CustomerServiceContextType;
(function (CustomerServiceContextType) {
    CustomerServiceContextType["Default"] = "DEFAULT";
    CustomerServiceContextType["Issue"] = "ISSUE";
})(CustomerServiceContextType = exports.CustomerServiceContextType || (exports.CustomerServiceContextType = {}));
var CustomerServiceCustomDetailCreateErrorCode;
(function (CustomerServiceCustomDetailCreateErrorCode) {
    CustomerServiceCustomDetailCreateErrorCode["ColorNotSaved"] = "COLOR_NOT_SAVED";
    CustomerServiceCustomDetailCreateErrorCode["PermissionsNotSaved"] = "PERMISSIONS_NOT_SAVED";
})(CustomerServiceCustomDetailCreateErrorCode = exports.CustomerServiceCustomDetailCreateErrorCode || (exports.CustomerServiceCustomDetailCreateErrorCode = {}));
var CustomerServiceCustomDetailTypeName;
(function (CustomerServiceCustomDetailTypeName) {
    CustomerServiceCustomDetailTypeName["Boolean"] = "BOOLEAN";
    CustomerServiceCustomDetailTypeName["Date"] = "DATE";
    CustomerServiceCustomDetailTypeName["Email"] = "EMAIL";
    CustomerServiceCustomDetailTypeName["Multiselect"] = "MULTISELECT";
    CustomerServiceCustomDetailTypeName["Number"] = "NUMBER";
    CustomerServiceCustomDetailTypeName["Phone"] = "PHONE";
    CustomerServiceCustomDetailTypeName["Select"] = "SELECT";
    CustomerServiceCustomDetailTypeName["Text"] = "TEXT";
    CustomerServiceCustomDetailTypeName["Url"] = "URL";
    CustomerServiceCustomDetailTypeName["User"] = "USER";
})(CustomerServiceCustomDetailTypeName = exports.CustomerServiceCustomDetailTypeName || (exports.CustomerServiceCustomDetailTypeName = {}));
var CustomerServiceCustomDetailsEntityType;
(function (CustomerServiceCustomDetailsEntityType) {
    CustomerServiceCustomDetailsEntityType["Customer"] = "CUSTOMER";
    CustomerServiceCustomDetailsEntityType["Entitlement"] = "ENTITLEMENT";
    CustomerServiceCustomDetailsEntityType["Organization"] = "ORGANIZATION";
})(CustomerServiceCustomDetailsEntityType = exports.CustomerServiceCustomDetailsEntityType || (exports.CustomerServiceCustomDetailsEntityType = {}));
var CustomerServiceEscalationType;
(function (CustomerServiceEscalationType) {
    CustomerServiceEscalationType["SupportEscalation"] = "SUPPORT_ESCALATION";
})(CustomerServiceEscalationType = exports.CustomerServiceEscalationType || (exports.CustomerServiceEscalationType = {}));
var CustomerServiceNoteEntity;
(function (CustomerServiceNoteEntity) {
    CustomerServiceNoteEntity["Customer"] = "CUSTOMER";
    CustomerServiceNoteEntity["Organization"] = "ORGANIZATION";
})(CustomerServiceNoteEntity = exports.CustomerServiceNoteEntity || (exports.CustomerServiceNoteEntity = {}));
var CustomerServicePermissionGroupType;
(function (CustomerServicePermissionGroupType) {
    CustomerServicePermissionGroupType["Admins"] = "ADMINS";
    CustomerServicePermissionGroupType["AdminsAgents"] = "ADMINS_AGENTS";
    CustomerServicePermissionGroupType["AdminsAgentsSiteAccess"] = "ADMINS_AGENTS_SITE_ACCESS";
})(CustomerServicePermissionGroupType = exports.CustomerServicePermissionGroupType || (exports.CustomerServicePermissionGroupType = {}));
var CustomerServiceStatusKey;
(function (CustomerServiceStatusKey) {
    CustomerServiceStatusKey["Resolved"] = "RESOLVED";
    CustomerServiceStatusKey["Submitted"] = "SUBMITTED";
})(CustomerServiceStatusKey = exports.CustomerServiceStatusKey || (exports.CustomerServiceStatusKey = {}));
var DataClassificationPolicyDecisionStatus;
(function (DataClassificationPolicyDecisionStatus) {
    DataClassificationPolicyDecisionStatus["Allowed"] = "ALLOWED";
    DataClassificationPolicyDecisionStatus["Blocked"] = "BLOCKED";
})(DataClassificationPolicyDecisionStatus = exports.DataClassificationPolicyDecisionStatus || (exports.DataClassificationPolicyDecisionStatus = {}));
var DataResidencyResponse;
(function (DataResidencyResponse) {
    DataResidencyResponse["AppDoesNotSupportDr"] = "APP_DOES_NOT_SUPPORT_DR";
    DataResidencyResponse["NotApplicable"] = "NOT_APPLICABLE";
    DataResidencyResponse["StoredExternalToAtlassian"] = "STORED_EXTERNAL_TO_ATLASSIAN";
    DataResidencyResponse["StoredInAtlassianAndDrNotSupported"] = "STORED_IN_ATLASSIAN_AND_DR_NOT_SUPPORTED";
    DataResidencyResponse["StoredInAtlassianAndDrSupported"] = "STORED_IN_ATLASSIAN_AND_DR_SUPPORTED";
})(DataResidencyResponse = exports.DataResidencyResponse || (exports.DataResidencyResponse = {}));
var DataSecurityPolicyAction;
(function (DataSecurityPolicyAction) {
    DataSecurityPolicyAction["AiAccess"] = "AI_ACCESS";
    DataSecurityPolicyAction["AppAccess"] = "APP_ACCESS";
    DataSecurityPolicyAction["PageExport"] = "PAGE_EXPORT";
    DataSecurityPolicyAction["PublicLinks"] = "PUBLIC_LINKS";
})(DataSecurityPolicyAction = exports.DataSecurityPolicyAction || (exports.DataSecurityPolicyAction = {}));
var DataSecurityPolicyCoverageType;
(function (DataSecurityPolicyCoverageType) {
    DataSecurityPolicyCoverageType["ClassificationLevel"] = "CLASSIFICATION_LEVEL";
    DataSecurityPolicyCoverageType["Container"] = "CONTAINER";
    DataSecurityPolicyCoverageType["None"] = "NONE";
    DataSecurityPolicyCoverageType["Workspace"] = "WORKSPACE";
})(DataSecurityPolicyCoverageType = exports.DataSecurityPolicyCoverageType || (exports.DataSecurityPolicyCoverageType = {}));
var DataSecurityPolicyDecidableContentStatus;
(function (DataSecurityPolicyDecidableContentStatus) {
    DataSecurityPolicyDecidableContentStatus["Archived"] = "ARCHIVED";
    DataSecurityPolicyDecidableContentStatus["Current"] = "CURRENT";
    DataSecurityPolicyDecidableContentStatus["Draft"] = "DRAFT";
})(DataSecurityPolicyDecidableContentStatus = exports.DataSecurityPolicyDecidableContentStatus || (exports.DataSecurityPolicyDecidableContentStatus = {}));
var DeactivatedPageOwnerUserType;
(function (DeactivatedPageOwnerUserType) {
    DeactivatedPageOwnerUserType["FormerUsers"] = "FORMER_USERS";
    DeactivatedPageOwnerUserType["NonFormerUsers"] = "NON_FORMER_USERS";
})(DeactivatedPageOwnerUserType = exports.DeactivatedPageOwnerUserType || (exports.DeactivatedPageOwnerUserType = {}));
var DeploymentState;
(function (DeploymentState) {
    DeploymentState["Cancelled"] = "CANCELLED";
    DeploymentState["Failed"] = "FAILED";
    DeploymentState["InProgress"] = "IN_PROGRESS";
    DeploymentState["Pending"] = "PENDING";
    DeploymentState["RolledBack"] = "ROLLED_BACK";
    DeploymentState["Successful"] = "SUCCESSFUL";
    DeploymentState["Unknown"] = "UNKNOWN";
})(DeploymentState = exports.DeploymentState || (exports.DeploymentState = {}));
var Depth;
(function (Depth) {
    Depth["All"] = "ALL";
    Depth["Root"] = "ROOT";
})(Depth = exports.Depth || (exports.Depth = {}));
var DescendantsNoteApplicationOption;
(function (DescendantsNoteApplicationOption) {
    DescendantsNoteApplicationOption["All"] = "ALL";
    DescendantsNoteApplicationOption["None"] = "NONE";
    DescendantsNoteApplicationOption["Roots"] = "ROOTS";
})(DescendantsNoteApplicationOption = exports.DescendantsNoteApplicationOption || (exports.DescendantsNoteApplicationOption = {}));
var DevAiAutodevLogGroupPhase;
(function (DevAiAutodevLogGroupPhase) {
    DevAiAutodevLogGroupPhase["CodeGenerating"] = "CODE_GENERATING";
    DevAiAutodevLogGroupPhase["CodeReview"] = "CODE_REVIEW";
    DevAiAutodevLogGroupPhase["CodeReGenerating"] = "CODE_RE_GENERATING";
    DevAiAutodevLogGroupPhase["PlanGenerating"] = "PLAN_GENERATING";
    DevAiAutodevLogGroupPhase["PlanReview"] = "PLAN_REVIEW";
    DevAiAutodevLogGroupPhase["PlanReGenerating"] = "PLAN_RE_GENERATING";
})(DevAiAutodevLogGroupPhase = exports.DevAiAutodevLogGroupPhase || (exports.DevAiAutodevLogGroupPhase = {}));
var DevAiAutodevLogGroupStatus;
(function (DevAiAutodevLogGroupStatus) {
    DevAiAutodevLogGroupStatus["Completed"] = "COMPLETED";
    DevAiAutodevLogGroupStatus["Failed"] = "FAILED";
    DevAiAutodevLogGroupStatus["InProgress"] = "IN_PROGRESS";
})(DevAiAutodevLogGroupStatus = exports.DevAiAutodevLogGroupStatus || (exports.DevAiAutodevLogGroupStatus = {}));
var DevAiAutodevLogPhase;
(function (DevAiAutodevLogPhase) {
    DevAiAutodevLogPhase["CodeGenerating"] = "CODE_GENERATING";
    DevAiAutodevLogPhase["CodeReview"] = "CODE_REVIEW";
    DevAiAutodevLogPhase["CodeReGenerating"] = "CODE_RE_GENERATING";
    DevAiAutodevLogPhase["PlanGenerating"] = "PLAN_GENERATING";
    DevAiAutodevLogPhase["PlanReview"] = "PLAN_REVIEW";
    DevAiAutodevLogPhase["PlanReGenerating"] = "PLAN_RE_GENERATING";
})(DevAiAutodevLogPhase = exports.DevAiAutodevLogPhase || (exports.DevAiAutodevLogPhase = {}));
var DevAiAutodevLogPriority;
(function (DevAiAutodevLogPriority) {
    DevAiAutodevLogPriority["Lowest"] = "LOWEST";
    DevAiAutodevLogPriority["Medium"] = "MEDIUM";
})(DevAiAutodevLogPriority = exports.DevAiAutodevLogPriority || (exports.DevAiAutodevLogPriority = {}));
var DevAiAutodevLogStatus;
(function (DevAiAutodevLogStatus) {
    DevAiAutodevLogStatus["Completed"] = "COMPLETED";
    DevAiAutodevLogStatus["Failed"] = "FAILED";
    DevAiAutodevLogStatus["InProgress"] = "IN_PROGRESS";
})(DevAiAutodevLogStatus = exports.DevAiAutodevLogStatus || (exports.DevAiAutodevLogStatus = {}));
var DevAiAutofixScanSortField;
(function (DevAiAutofixScanSortField) {
    DevAiAutofixScanSortField["StartDate"] = "START_DATE";
})(DevAiAutofixScanSortField = exports.DevAiAutofixScanSortField || (exports.DevAiAutofixScanSortField = {}));
var DevAiAutofixScanStatus;
(function (DevAiAutofixScanStatus) {
    DevAiAutofixScanStatus["Completed"] = "COMPLETED";
    DevAiAutofixScanStatus["Failed"] = "FAILED";
    DevAiAutofixScanStatus["InProgress"] = "IN_PROGRESS";
})(DevAiAutofixScanStatus = exports.DevAiAutofixScanStatus || (exports.DevAiAutofixScanStatus = {}));
var DevAiAutofixTaskSortField;
(function (DevAiAutofixTaskSortField) {
    DevAiAutofixTaskSortField["CreatedAt"] = "CREATED_AT";
    DevAiAutofixTaskSortField["Filename"] = "FILENAME";
    DevAiAutofixTaskSortField["NewCoveragePercentage"] = "NEW_COVERAGE_PERCENTAGE";
    DevAiAutofixTaskSortField["PreviousCoveragePercentage"] = "PREVIOUS_COVERAGE_PERCENTAGE";
    DevAiAutofixTaskSortField["PrimaryLanguage"] = "PRIMARY_LANGUAGE";
    DevAiAutofixTaskSortField["Status"] = "STATUS";
    DevAiAutofixTaskSortField["UpdatedAt"] = "UPDATED_AT";
})(DevAiAutofixTaskSortField = exports.DevAiAutofixTaskSortField || (exports.DevAiAutofixTaskSortField = {}));
var DevAiAutofixTaskStatus;
(function (DevAiAutofixTaskStatus) {
    DevAiAutofixTaskStatus["PrDeclined"] = "PR_DECLINED";
    DevAiAutofixTaskStatus["PrMerged"] = "PR_MERGED";
    DevAiAutofixTaskStatus["PrOpened"] = "PR_OPENED";
    DevAiAutofixTaskStatus["WorkflowCancelled"] = "WORKFLOW_CANCELLED";
    DevAiAutofixTaskStatus["WorkflowCompleted"] = "WORKFLOW_COMPLETED";
    DevAiAutofixTaskStatus["WorkflowInprogress"] = "WORKFLOW_INPROGRESS";
    DevAiAutofixTaskStatus["WorkflowPending"] = "WORKFLOW_PENDING";
})(DevAiAutofixTaskStatus = exports.DevAiAutofixTaskStatus || (exports.DevAiAutofixTaskStatus = {}));
var DevAiFlowPipelinesStatus;
(function (DevAiFlowPipelinesStatus) {
    DevAiFlowPipelinesStatus["Failed"] = "FAILED";
    DevAiFlowPipelinesStatus["InProgress"] = "IN_PROGRESS";
    DevAiFlowPipelinesStatus["Provisioned"] = "PROVISIONED";
    DevAiFlowPipelinesStatus["Starting"] = "STARTING";
    DevAiFlowPipelinesStatus["Stopped"] = "STOPPED";
})(DevAiFlowPipelinesStatus = exports.DevAiFlowPipelinesStatus || (exports.DevAiFlowPipelinesStatus = {}));
var DevAiFlowSessionsStatus;
(function (DevAiFlowSessionsStatus) {
    DevAiFlowSessionsStatus["Completed"] = "COMPLETED";
    DevAiFlowSessionsStatus["Failed"] = "FAILED";
    DevAiFlowSessionsStatus["InProgress"] = "IN_PROGRESS";
    DevAiFlowSessionsStatus["Paused"] = "PAUSED";
    DevAiFlowSessionsStatus["Pending"] = "PENDING";
})(DevAiFlowSessionsStatus = exports.DevAiFlowSessionsStatus || (exports.DevAiFlowSessionsStatus = {}));
var DevAiIssueScopingLabel;
(function (DevAiIssueScopingLabel) {
    DevAiIssueScopingLabel["Complex"] = "COMPLEX";
    DevAiIssueScopingLabel["InScope"] = "IN_SCOPE";
    DevAiIssueScopingLabel["Optimal"] = "OPTIMAL";
    DevAiIssueScopingLabel["Recoverable"] = "RECOVERABLE";
    DevAiIssueScopingLabel["Unsolvable"] = "UNSOLVABLE";
})(DevAiIssueScopingLabel = exports.DevAiIssueScopingLabel || (exports.DevAiIssueScopingLabel = {}));
var DevAiRovoAgentRankCategory;
(function (DevAiRovoAgentRankCategory) {
    DevAiRovoAgentRankCategory["AdequateMatch"] = "ADEQUATE_MATCH";
    DevAiRovoAgentRankCategory["GoodMatch"] = "GOOD_MATCH";
    DevAiRovoAgentRankCategory["PoorMatch"] = "POOR_MATCH";
})(DevAiRovoAgentRankCategory = exports.DevAiRovoAgentRankCategory || (exports.DevAiRovoAgentRankCategory = {}));
var DevAiRovoAgentTemplateFilter;
(function (DevAiRovoAgentTemplateFilter) {
    DevAiRovoAgentTemplateFilter["Exclude"] = "EXCLUDE";
    DevAiRovoAgentTemplateFilter["Include"] = "INCLUDE";
    DevAiRovoAgentTemplateFilter["Only"] = "ONLY";
})(DevAiRovoAgentTemplateFilter = exports.DevAiRovoAgentTemplateFilter || (exports.DevAiRovoAgentTemplateFilter = {}));
var DevAiRovoDevBuildStatus;
(function (DevAiRovoDevBuildStatus) {
    DevAiRovoDevBuildStatus["Active"] = "ACTIVE";
    DevAiRovoDevBuildStatus["Failed"] = "FAILED";
    DevAiRovoDevBuildStatus["Inactive"] = "INACTIVE";
    DevAiRovoDevBuildStatus["Succeeded"] = "SUCCEEDED";
})(DevAiRovoDevBuildStatus = exports.DevAiRovoDevBuildStatus || (exports.DevAiRovoDevBuildStatus = {}));
var DevAiRovoDevPrStatus;
(function (DevAiRovoDevPrStatus) {
    DevAiRovoDevPrStatus["Declined"] = "DECLINED";
    DevAiRovoDevPrStatus["Draft"] = "DRAFT";
    DevAiRovoDevPrStatus["Merged"] = "MERGED";
    DevAiRovoDevPrStatus["Open"] = "OPEN";
})(DevAiRovoDevPrStatus = exports.DevAiRovoDevPrStatus || (exports.DevAiRovoDevPrStatus = {}));
var DevAiRovoDevRaisePullRequestOption;
(function (DevAiRovoDevRaisePullRequestOption) {
    DevAiRovoDevRaisePullRequestOption["Always"] = "ALWAYS";
    DevAiRovoDevRaisePullRequestOption["Draft"] = "DRAFT";
    DevAiRovoDevRaisePullRequestOption["DraftOnBuildPass"] = "DRAFT_ON_BUILD_PASS";
    DevAiRovoDevRaisePullRequestOption["Never"] = "NEVER";
    DevAiRovoDevRaisePullRequestOption["OnBuildPass"] = "ON_BUILD_PASS";
})(DevAiRovoDevRaisePullRequestOption = exports.DevAiRovoDevRaisePullRequestOption || (exports.DevAiRovoDevRaisePullRequestOption = {}));
var DevAiRovoDevSessionArchivedFilter;
(function (DevAiRovoDevSessionArchivedFilter) {
    DevAiRovoDevSessionArchivedFilter["All"] = "ALL";
    DevAiRovoDevSessionArchivedFilter["ArchivedOnly"] = "ARCHIVED_ONLY";
    DevAiRovoDevSessionArchivedFilter["NonArchivedOnly"] = "NON_ARCHIVED_ONLY";
})(DevAiRovoDevSessionArchivedFilter = exports.DevAiRovoDevSessionArchivedFilter || (exports.DevAiRovoDevSessionArchivedFilter = {}));
var DevAiRovoDevSessionLinkRel;
(function (DevAiRovoDevSessionLinkRel) {
    DevAiRovoDevSessionLinkRel["Container"] = "CONTAINER";
    DevAiRovoDevSessionLinkRel["Site"] = "SITE";
    DevAiRovoDevSessionLinkRel["Target"] = "TARGET";
})(DevAiRovoDevSessionLinkRel = exports.DevAiRovoDevSessionLinkRel || (exports.DevAiRovoDevSessionLinkRel = {}));
var DevAiRovoDevSessionSort;
(function (DevAiRovoDevSessionSort) {
    DevAiRovoDevSessionSort["Asc"] = "ASC";
    DevAiRovoDevSessionSort["Desc"] = "DESC";
})(DevAiRovoDevSessionSort = exports.DevAiRovoDevSessionSort || (exports.DevAiRovoDevSessionSort = {}));
var DevAiRovoDevSessionStatus;
(function (DevAiRovoDevSessionStatus) {
    DevAiRovoDevSessionStatus["AgentWorking"] = "AGENT_WORKING";
    DevAiRovoDevSessionStatus["Archived"] = "ARCHIVED";
    DevAiRovoDevSessionStatus["Cloning"] = "CLONING";
    DevAiRovoDevSessionStatus["Deleted"] = "DELETED";
    DevAiRovoDevSessionStatus["Failed"] = "FAILED";
    DevAiRovoDevSessionStatus["Initialising"] = "INITIALISING";
    DevAiRovoDevSessionStatus["InProgress"] = "IN_PROGRESS";
    DevAiRovoDevSessionStatus["Pending"] = "PENDING";
    DevAiRovoDevSessionStatus["ReadyForReview"] = "READY_FOR_REVIEW";
    DevAiRovoDevSessionStatus["WaitingForUser"] = "WAITING_FOR_USER";
})(DevAiRovoDevSessionStatus = exports.DevAiRovoDevSessionStatus || (exports.DevAiRovoDevSessionStatus = {}));
var DevAiScanIntervalUnit;
(function (DevAiScanIntervalUnit) {
    DevAiScanIntervalUnit["Days"] = "DAYS";
    DevAiScanIntervalUnit["Months"] = "MONTHS";
    DevAiScanIntervalUnit["Weeks"] = "WEEKS";
})(DevAiScanIntervalUnit = exports.DevAiScanIntervalUnit || (exports.DevAiScanIntervalUnit = {}));
var DevAiSupportedRepoFilterOption;
(function (DevAiSupportedRepoFilterOption) {
    DevAiSupportedRepoFilterOption["All"] = "ALL";
    DevAiSupportedRepoFilterOption["DisabledOnly"] = "DISABLED_ONLY";
    DevAiSupportedRepoFilterOption["EnabledOnly"] = "ENABLED_ONLY";
})(DevAiSupportedRepoFilterOption = exports.DevAiSupportedRepoFilterOption || (exports.DevAiSupportedRepoFilterOption = {}));
var DevAiWorkflowRunStatus;
(function (DevAiWorkflowRunStatus) {
    DevAiWorkflowRunStatus["Cancelled"] = "CANCELLED";
    DevAiWorkflowRunStatus["Completed"] = "COMPLETED";
    DevAiWorkflowRunStatus["Failed"] = "FAILED";
    DevAiWorkflowRunStatus["InProgress"] = "IN_PROGRESS";
    DevAiWorkflowRunStatus["Pending"] = "PENDING";
})(DevAiWorkflowRunStatus = exports.DevAiWorkflowRunStatus || (exports.DevAiWorkflowRunStatus = {}));
var DevConsoleDeveloperSpaceMemberRole;
(function (DevConsoleDeveloperSpaceMemberRole) {
    DevConsoleDeveloperSpaceMemberRole["Admin"] = "ADMIN";
})(DevConsoleDeveloperSpaceMemberRole = exports.DevConsoleDeveloperSpaceMemberRole || (exports.DevConsoleDeveloperSpaceMemberRole = {}));
var DevConsoleDeveloperSpaceType;
(function (DevConsoleDeveloperSpaceType) {
    DevConsoleDeveloperSpaceType["AtlassianExternal"] = "ATLASSIAN_EXTERNAL";
    DevConsoleDeveloperSpaceType["AtlassianInternal"] = "ATLASSIAN_INTERNAL";
})(DevConsoleDeveloperSpaceType = exports.DevConsoleDeveloperSpaceType || (exports.DevConsoleDeveloperSpaceType = {}));
var DevConsoleGroupBy;
(function (DevConsoleGroupBy) {
    DevConsoleGroupBy["ContextAri"] = "CONTEXT_ARI";
    DevConsoleGroupBy["EnvironmentId"] = "ENVIRONMENT_ID";
})(DevConsoleGroupBy = exports.DevConsoleGroupBy || (exports.DevConsoleGroupBy = {}));
var DevConsoleResource;
(function (DevConsoleResource) {
    DevConsoleResource["FunctionCompute"] = "FUNCTION_COMPUTE";
    DevConsoleResource["KvsRead"] = "KVS_READ";
    DevConsoleResource["KvsWrite"] = "KVS_WRITE";
    DevConsoleResource["LogsWrite"] = "LOGS_WRITE";
    DevConsoleResource["SqlCompute"] = "SQL_COMPUTE";
    DevConsoleResource["SqlRequests"] = "SQL_REQUESTS";
    DevConsoleResource["SqlStorage"] = "SQL_STORAGE";
})(DevConsoleResource = exports.DevConsoleResource || (exports.DevConsoleResource = {}));
var DevConsoleUsageResolution;
(function (DevConsoleUsageResolution) {
    DevConsoleUsageResolution["OneDay"] = "ONE_DAY";
    DevConsoleUsageResolution["OneHour"] = "ONE_HOUR";
    DevConsoleUsageResolution["OneMonth"] = "ONE_MONTH";
    DevConsoleUsageResolution["OneWeek"] = "ONE_WEEK";
})(DevConsoleUsageResolution = exports.DevConsoleUsageResolution || (exports.DevConsoleUsageResolution = {}));
var DevOpsBuildState;
(function (DevOpsBuildState) {
    DevOpsBuildState["Cancelled"] = "CANCELLED";
    DevOpsBuildState["Failed"] = "FAILED";
    DevOpsBuildState["InProgress"] = "IN_PROGRESS";
    DevOpsBuildState["Pending"] = "PENDING";
    DevOpsBuildState["Successful"] = "SUCCESSFUL";
    DevOpsBuildState["Unknown"] = "UNKNOWN";
})(DevOpsBuildState = exports.DevOpsBuildState || (exports.DevOpsBuildState = {}));
var DevOpsComponentTier;
(function (DevOpsComponentTier) {
    DevOpsComponentTier["Tier_1"] = "TIER_1";
    DevOpsComponentTier["Tier_2"] = "TIER_2";
    DevOpsComponentTier["Tier_3"] = "TIER_3";
    DevOpsComponentTier["Tier_4"] = "TIER_4";
})(DevOpsComponentTier = exports.DevOpsComponentTier || (exports.DevOpsComponentTier = {}));
var DevOpsComponentType;
(function (DevOpsComponentType) {
    DevOpsComponentType["Application"] = "APPLICATION";
    DevOpsComponentType["Capability"] = "CAPABILITY";
    DevOpsComponentType["CloudResource"] = "CLOUD_RESOURCE";
    DevOpsComponentType["DataPipeline"] = "DATA_PIPELINE";
    DevOpsComponentType["Library"] = "LIBRARY";
    DevOpsComponentType["MachineLearningModel"] = "MACHINE_LEARNING_MODEL";
    DevOpsComponentType["Other"] = "OTHER";
    DevOpsComponentType["Service"] = "SERVICE";
    DevOpsComponentType["UiElement"] = "UI_ELEMENT";
    DevOpsComponentType["Website"] = "WEBSITE";
})(DevOpsComponentType = exports.DevOpsComponentType || (exports.DevOpsComponentType = {}));
var DevOpsDesignStatus;
(function (DevOpsDesignStatus) {
    DevOpsDesignStatus["None"] = "NONE";
    DevOpsDesignStatus["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    DevOpsDesignStatus["Unknown"] = "UNKNOWN";
})(DevOpsDesignStatus = exports.DevOpsDesignStatus || (exports.DevOpsDesignStatus = {}));
var DevOpsDesignType;
(function (DevOpsDesignType) {
    DevOpsDesignType["Canvas"] = "CANVAS";
    DevOpsDesignType["File"] = "FILE";
    DevOpsDesignType["Group"] = "GROUP";
    DevOpsDesignType["Node"] = "NODE";
    DevOpsDesignType["Other"] = "OTHER";
    DevOpsDesignType["Prototype"] = "PROTOTYPE";
})(DevOpsDesignType = exports.DevOpsDesignType || (exports.DevOpsDesignType = {}));
var DevOpsDocumentCategory;
(function (DevOpsDocumentCategory) {
    DevOpsDocumentCategory["Archive"] = "ARCHIVE";
    DevOpsDocumentCategory["Audio"] = "AUDIO";
    DevOpsDocumentCategory["Code"] = "CODE";
    DevOpsDocumentCategory["Document"] = "DOCUMENT";
    DevOpsDocumentCategory["Folder"] = "FOLDER";
    DevOpsDocumentCategory["Form"] = "FORM";
    DevOpsDocumentCategory["Image"] = "IMAGE";
    DevOpsDocumentCategory["Other"] = "OTHER";
    DevOpsDocumentCategory["Pdf"] = "PDF";
    DevOpsDocumentCategory["Presentation"] = "PRESENTATION";
    DevOpsDocumentCategory["Shortcut"] = "SHORTCUT";
    DevOpsDocumentCategory["Spreadsheet"] = "SPREADSHEET";
    DevOpsDocumentCategory["Video"] = "VIDEO";
})(DevOpsDocumentCategory = exports.DevOpsDocumentCategory || (exports.DevOpsDocumentCategory = {}));
var DevOpsEnvironmentCategory;
(function (DevOpsEnvironmentCategory) {
    DevOpsEnvironmentCategory["Development"] = "DEVELOPMENT";
    DevOpsEnvironmentCategory["Production"] = "PRODUCTION";
    DevOpsEnvironmentCategory["Staging"] = "STAGING";
    DevOpsEnvironmentCategory["Testing"] = "TESTING";
    DevOpsEnvironmentCategory["Unmapped"] = "UNMAPPED";
})(DevOpsEnvironmentCategory = exports.DevOpsEnvironmentCategory || (exports.DevOpsEnvironmentCategory = {}));
var DevOpsMetricsComparisonOperator;
(function (DevOpsMetricsComparisonOperator) {
    DevOpsMetricsComparisonOperator["EqualTo"] = "EQUAL_TO";
    DevOpsMetricsComparisonOperator["GreaterThan"] = "GREATER_THAN";
    DevOpsMetricsComparisonOperator["LessThan"] = "LESS_THAN";
    DevOpsMetricsComparisonOperator["NotEqualTo"] = "NOT_EQUAL_TO";
})(DevOpsMetricsComparisonOperator = exports.DevOpsMetricsComparisonOperator || (exports.DevOpsMetricsComparisonOperator = {}));
var DevOpsMetricsCycleTimePhase;
(function (DevOpsMetricsCycleTimePhase) {
    DevOpsMetricsCycleTimePhase["CommitToDeployment"] = "COMMIT_TO_DEPLOYMENT";
    DevOpsMetricsCycleTimePhase["CommitToPr"] = "COMMIT_TO_PR";
})(DevOpsMetricsCycleTimePhase = exports.DevOpsMetricsCycleTimePhase || (exports.DevOpsMetricsCycleTimePhase = {}));
var DevOpsMetricsPerPrCycleTimeBreakdownPhase;
(function (DevOpsMetricsPerPrCycleTimeBreakdownPhase) {
    DevOpsMetricsPerPrCycleTimeBreakdownPhase["Review"] = "REVIEW";
    DevOpsMetricsPerPrCycleTimeBreakdownPhase["TimeToFirstReview"] = "TIME_TO_FIRST_REVIEW";
    DevOpsMetricsPerPrCycleTimeBreakdownPhase["TimeToMerge"] = "TIME_TO_MERGE";
})(DevOpsMetricsPerPrCycleTimeBreakdownPhase = exports.DevOpsMetricsPerPrCycleTimeBreakdownPhase || (exports.DevOpsMetricsPerPrCycleTimeBreakdownPhase = {}));
var DevOpsMetricsResolutionUnit;
(function (DevOpsMetricsResolutionUnit) {
    DevOpsMetricsResolutionUnit["Day"] = "DAY";
    DevOpsMetricsResolutionUnit["Hour"] = "HOUR";
    DevOpsMetricsResolutionUnit["Week"] = "WEEK";
})(DevOpsMetricsResolutionUnit = exports.DevOpsMetricsResolutionUnit || (exports.DevOpsMetricsResolutionUnit = {}));
var DevOpsMetricsRollupOption;
(function (DevOpsMetricsRollupOption) {
    DevOpsMetricsRollupOption["Mean"] = "MEAN";
    DevOpsMetricsRollupOption["Percentile"] = "PERCENTILE";
})(DevOpsMetricsRollupOption = exports.DevOpsMetricsRollupOption || (exports.DevOpsMetricsRollupOption = {}));
var DevOpsOperationsIncidentSeverity;
(function (DevOpsOperationsIncidentSeverity) {
    DevOpsOperationsIncidentSeverity["P1"] = "P1";
    DevOpsOperationsIncidentSeverity["P2"] = "P2";
    DevOpsOperationsIncidentSeverity["P3"] = "P3";
    DevOpsOperationsIncidentSeverity["P4"] = "P4";
    DevOpsOperationsIncidentSeverity["P5"] = "P5";
    DevOpsOperationsIncidentSeverity["Pending"] = "PENDING";
    DevOpsOperationsIncidentSeverity["Unknown"] = "UNKNOWN";
})(DevOpsOperationsIncidentSeverity = exports.DevOpsOperationsIncidentSeverity || (exports.DevOpsOperationsIncidentSeverity = {}));
var DevOpsOperationsIncidentStatus;
(function (DevOpsOperationsIncidentStatus) {
    DevOpsOperationsIncidentStatus["Open"] = "OPEN";
    DevOpsOperationsIncidentStatus["Resolved"] = "RESOLVED";
    DevOpsOperationsIncidentStatus["Unknown"] = "UNKNOWN";
})(DevOpsOperationsIncidentStatus = exports.DevOpsOperationsIncidentStatus || (exports.DevOpsOperationsIncidentStatus = {}));
var DevOpsPostIncidentReviewStatus;
(function (DevOpsPostIncidentReviewStatus) {
    DevOpsPostIncidentReviewStatus["Completed"] = "COMPLETED";
    DevOpsPostIncidentReviewStatus["InProgress"] = "IN_PROGRESS";
    DevOpsPostIncidentReviewStatus["Todo"] = "TODO";
})(DevOpsPostIncidentReviewStatus = exports.DevOpsPostIncidentReviewStatus || (exports.DevOpsPostIncidentReviewStatus = {}));
var DevOpsProjectStatus;
(function (DevOpsProjectStatus) {
    DevOpsProjectStatus["Cancelled"] = "CANCELLED";
    DevOpsProjectStatus["Completed"] = "COMPLETED";
    DevOpsProjectStatus["InProgress"] = "IN_PROGRESS";
    DevOpsProjectStatus["Paused"] = "PAUSED";
    DevOpsProjectStatus["Pending"] = "PENDING";
    DevOpsProjectStatus["Unknown"] = "UNKNOWN";
})(DevOpsProjectStatus = exports.DevOpsProjectStatus || (exports.DevOpsProjectStatus = {}));
var DevOpsProjectTargetDateType;
(function (DevOpsProjectTargetDateType) {
    DevOpsProjectTargetDateType["Day"] = "DAY";
    DevOpsProjectTargetDateType["Month"] = "MONTH";
    DevOpsProjectTargetDateType["Quarter"] = "QUARTER";
    DevOpsProjectTargetDateType["Unknown"] = "UNKNOWN";
})(DevOpsProjectTargetDateType = exports.DevOpsProjectTargetDateType || (exports.DevOpsProjectTargetDateType = {}));
var DevOpsProviderNamespace;
(function (DevOpsProviderNamespace) {
    DevOpsProviderNamespace["Asap"] = "ASAP";
    DevOpsProviderNamespace["Classic"] = "CLASSIC";
    DevOpsProviderNamespace["Forge"] = "FORGE";
    DevOpsProviderNamespace["Oauth"] = "OAUTH";
})(DevOpsProviderNamespace = exports.DevOpsProviderNamespace || (exports.DevOpsProviderNamespace = {}));
var DevOpsProviderType;
(function (DevOpsProviderType) {
    DevOpsProviderType["Build"] = "BUILD";
    DevOpsProviderType["Deployment"] = "DEPLOYMENT";
    DevOpsProviderType["Design"] = "DESIGN";
    DevOpsProviderType["DevopsComponents"] = "DEVOPS_COMPONENTS";
    DevOpsProviderType["DevInfo"] = "DEV_INFO";
    DevOpsProviderType["Documentation"] = "DOCUMENTATION";
    DevOpsProviderType["FeatureFlag"] = "FEATURE_FLAG";
    DevOpsProviderType["Operations"] = "OPERATIONS";
    DevOpsProviderType["Project"] = "PROJECT";
    DevOpsProviderType["RemoteLinks"] = "REMOTE_LINKS";
    DevOpsProviderType["Security"] = "SECURITY";
})(DevOpsProviderType = exports.DevOpsProviderType || (exports.DevOpsProviderType = {}));
var DevOpsPullRequestApprovalStatus;
(function (DevOpsPullRequestApprovalStatus) {
    DevOpsPullRequestApprovalStatus["Approved"] = "APPROVED";
    DevOpsPullRequestApprovalStatus["Needswork"] = "NEEDSWORK";
    DevOpsPullRequestApprovalStatus["Unapproved"] = "UNAPPROVED";
})(DevOpsPullRequestApprovalStatus = exports.DevOpsPullRequestApprovalStatus || (exports.DevOpsPullRequestApprovalStatus = {}));
var DevOpsPullRequestStatus;
(function (DevOpsPullRequestStatus) {
    DevOpsPullRequestStatus["Declined"] = "DECLINED";
    DevOpsPullRequestStatus["Draft"] = "DRAFT";
    DevOpsPullRequestStatus["Merged"] = "MERGED";
    DevOpsPullRequestStatus["Open"] = "OPEN";
    DevOpsPullRequestStatus["Unknown"] = "UNKNOWN";
})(DevOpsPullRequestStatus = exports.DevOpsPullRequestStatus || (exports.DevOpsPullRequestStatus = {}));
var DevOpsRelationshipCertainty;
(function (DevOpsRelationshipCertainty) {
    DevOpsRelationshipCertainty["Explicit"] = "EXPLICIT";
    DevOpsRelationshipCertainty["Implicit"] = "IMPLICIT";
})(DevOpsRelationshipCertainty = exports.DevOpsRelationshipCertainty || (exports.DevOpsRelationshipCertainty = {}));
var DevOpsRelationshipCertaintyFilter;
(function (DevOpsRelationshipCertaintyFilter) {
    DevOpsRelationshipCertaintyFilter["All"] = "ALL";
    DevOpsRelationshipCertaintyFilter["Explicit"] = "EXPLICIT";
    DevOpsRelationshipCertaintyFilter["Implicit"] = "IMPLICIT";
})(DevOpsRelationshipCertaintyFilter = exports.DevOpsRelationshipCertaintyFilter || (exports.DevOpsRelationshipCertaintyFilter = {}));
var DevOpsRepositoryHostingProviderFilter;
(function (DevOpsRepositoryHostingProviderFilter) {
    DevOpsRepositoryHostingProviderFilter["All"] = "ALL";
    DevOpsRepositoryHostingProviderFilter["BitbucketCloud"] = "BITBUCKET_CLOUD";
    DevOpsRepositoryHostingProviderFilter["ThirdParty"] = "THIRD_PARTY";
})(DevOpsRepositoryHostingProviderFilter = exports.DevOpsRepositoryHostingProviderFilter || (exports.DevOpsRepositoryHostingProviderFilter = {}));
var DevOpsSecurityVulnerabilitySeverity;
(function (DevOpsSecurityVulnerabilitySeverity) {
    DevOpsSecurityVulnerabilitySeverity["Critical"] = "CRITICAL";
    DevOpsSecurityVulnerabilitySeverity["High"] = "HIGH";
    DevOpsSecurityVulnerabilitySeverity["Low"] = "LOW";
    DevOpsSecurityVulnerabilitySeverity["Medium"] = "MEDIUM";
    DevOpsSecurityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(DevOpsSecurityVulnerabilitySeverity = exports.DevOpsSecurityVulnerabilitySeverity || (exports.DevOpsSecurityVulnerabilitySeverity = {}));
var DevOpsSecurityVulnerabilityStatus;
(function (DevOpsSecurityVulnerabilityStatus) {
    DevOpsSecurityVulnerabilityStatus["Closed"] = "CLOSED";
    DevOpsSecurityVulnerabilityStatus["Ignored"] = "IGNORED";
    DevOpsSecurityVulnerabilityStatus["Open"] = "OPEN";
    DevOpsSecurityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(DevOpsSecurityVulnerabilityStatus = exports.DevOpsSecurityVulnerabilityStatus || (exports.DevOpsSecurityVulnerabilityStatus = {}));
var DevOpsServiceAndJiraProjectRelationshipType;
(function (DevOpsServiceAndJiraProjectRelationshipType) {
    DevOpsServiceAndJiraProjectRelationshipType["ChangeManagement"] = "CHANGE_MANAGEMENT";
    DevOpsServiceAndJiraProjectRelationshipType["Default"] = "DEFAULT";
})(DevOpsServiceAndJiraProjectRelationshipType = exports.DevOpsServiceAndJiraProjectRelationshipType || (exports.DevOpsServiceAndJiraProjectRelationshipType = {}));
var DevOpsServiceAndRepositoryRelationshipSortBy;
(function (DevOpsServiceAndRepositoryRelationshipSortBy) {
    DevOpsServiceAndRepositoryRelationshipSortBy["LastInferredAt"] = "LAST_INFERRED_AT";
})(DevOpsServiceAndRepositoryRelationshipSortBy = exports.DevOpsServiceAndRepositoryRelationshipSortBy || (exports.DevOpsServiceAndRepositoryRelationshipSortBy = {}));
var DevOpsServiceRelationshipType;
(function (DevOpsServiceRelationshipType) {
    DevOpsServiceRelationshipType["Contains"] = "CONTAINS";
    DevOpsServiceRelationshipType["DependsOn"] = "DEPENDS_ON";
})(DevOpsServiceRelationshipType = exports.DevOpsServiceRelationshipType || (exports.DevOpsServiceRelationshipType = {}));
var DevStatusActivity;
(function (DevStatusActivity) {
    DevStatusActivity["BranchOpen"] = "BRANCH_OPEN";
    DevStatusActivity["Commit"] = "COMMIT";
    DevStatusActivity["Deployment"] = "DEPLOYMENT";
    DevStatusActivity["Design"] = "DESIGN";
    DevStatusActivity["PrDeclined"] = "PR_DECLINED";
    DevStatusActivity["PrMerged"] = "PR_MERGED";
    DevStatusActivity["PrOpen"] = "PR_OPEN";
})(DevStatusActivity = exports.DevStatusActivity || (exports.DevStatusActivity = {}));
var DistributionStatus;
(function (DistributionStatus) {
    DistributionStatus["Development"] = "DEVELOPMENT";
    DistributionStatus["Public"] = "PUBLIC";
})(DistributionStatus = exports.DistributionStatus || (exports.DistributionStatus = {}));
var DocumentRepresentation;
(function (DocumentRepresentation) {
    DocumentRepresentation["AtlasDocFormat"] = "ATLAS_DOC_FORMAT";
    DocumentRepresentation["Html"] = "HTML";
    DocumentRepresentation["Storage"] = "STORAGE";
    DocumentRepresentation["View"] = "VIEW";
})(DocumentRepresentation = exports.DocumentRepresentation || (exports.DocumentRepresentation = {}));
var EcosystemAppInstallationConfigIdType;
(function (EcosystemAppInstallationConfigIdType) {
    EcosystemAppInstallationConfigIdType["Cloud"] = "CLOUD";
    EcosystemAppInstallationConfigIdType["Installation"] = "INSTALLATION";
})(EcosystemAppInstallationConfigIdType = exports.EcosystemAppInstallationConfigIdType || (exports.EcosystemAppInstallationConfigIdType = {}));
var EcosystemAppNetworkPermissionType;
(function (EcosystemAppNetworkPermissionType) {
    EcosystemAppNetworkPermissionType["Connect"] = "CONNECT";
})(EcosystemAppNetworkPermissionType = exports.EcosystemAppNetworkPermissionType || (exports.EcosystemAppNetworkPermissionType = {}));
var EcosystemAppsInstalledInContextsFilterType;
(function (EcosystemAppsInstalledInContextsFilterType) {
    EcosystemAppsInstalledInContextsFilterType["Name"] = "NAME";
    EcosystemAppsInstalledInContextsFilterType["OnlyAppIds"] = "ONLY_APP_IDS";
})(EcosystemAppsInstalledInContextsFilterType = exports.EcosystemAppsInstalledInContextsFilterType || (exports.EcosystemAppsInstalledInContextsFilterType = {}));
var EcosystemAppsInstalledInContextsSortKey;
(function (EcosystemAppsInstalledInContextsSortKey) {
    EcosystemAppsInstalledInContextsSortKey["Name"] = "NAME";
    EcosystemAppsInstalledInContextsSortKey["RelatedApps"] = "RELATED_APPS";
})(EcosystemAppsInstalledInContextsSortKey = exports.EcosystemAppsInstalledInContextsSortKey || (exports.EcosystemAppsInstalledInContextsSortKey = {}));
var EcosystemGlobalInstallationOverrideKeys;
(function (EcosystemGlobalInstallationOverrideKeys) {
    EcosystemGlobalInstallationOverrideKeys["AllowEgressAnalytics"] = "ALLOW_EGRESS_ANALYTICS";
    EcosystemGlobalInstallationOverrideKeys["AllowLogsAccess"] = "ALLOW_LOGS_ACCESS";
    EcosystemGlobalInstallationOverrideKeys["AllowRestApis"] = "ALLOW_REST_APIS";
})(EcosystemGlobalInstallationOverrideKeys = exports.EcosystemGlobalInstallationOverrideKeys || (exports.EcosystemGlobalInstallationOverrideKeys = {}));
var EcosystemInstallationOverrideKeys;
(function (EcosystemInstallationOverrideKeys) {
    EcosystemInstallationOverrideKeys["AllowEgressAnalytics"] = "ALLOW_EGRESS_ANALYTICS";
    EcosystemInstallationOverrideKeys["AllowRestApis"] = "ALLOW_REST_APIS";
})(EcosystemInstallationOverrideKeys = exports.EcosystemInstallationOverrideKeys || (exports.EcosystemInstallationOverrideKeys = {}));
var EcosystemInstallationRecoveryMode;
(function (EcosystemInstallationRecoveryMode) {
    EcosystemInstallationRecoveryMode["FreshInstall"] = "FRESH_INSTALL";
    EcosystemInstallationRecoveryMode["RecoverPreviousInstall"] = "RECOVER_PREVIOUS_INSTALL";
})(EcosystemInstallationRecoveryMode = exports.EcosystemInstallationRecoveryMode || (exports.EcosystemInstallationRecoveryMode = {}));
var EcosystemLicenseMode;
(function (EcosystemLicenseMode) {
    EcosystemLicenseMode["UserAccess"] = "USER_ACCESS";
})(EcosystemLicenseMode = exports.EcosystemLicenseMode || (exports.EcosystemLicenseMode = {}));
var EcosystemMarketplaceListingStatus;
(function (EcosystemMarketplaceListingStatus) {
    EcosystemMarketplaceListingStatus["Private"] = "PRIVATE";
    EcosystemMarketplaceListingStatus["Public"] = "PUBLIC";
    EcosystemMarketplaceListingStatus["ReadyToLaunch"] = "READY_TO_LAUNCH";
    EcosystemMarketplaceListingStatus["Rejected"] = "REJECTED";
    EcosystemMarketplaceListingStatus["Submitted"] = "SUBMITTED";
})(EcosystemMarketplaceListingStatus = exports.EcosystemMarketplaceListingStatus || (exports.EcosystemMarketplaceListingStatus = {}));
var EcosystemMarketplacePaymentModel;
(function (EcosystemMarketplacePaymentModel) {
    EcosystemMarketplacePaymentModel["Free"] = "FREE";
    EcosystemMarketplacePaymentModel["PaidViaAtlassian"] = "PAID_VIA_ATLASSIAN";
    EcosystemMarketplacePaymentModel["PaidViaPartner"] = "PAID_VIA_PARTNER";
})(EcosystemMarketplacePaymentModel = exports.EcosystemMarketplacePaymentModel || (exports.EcosystemMarketplacePaymentModel = {}));
var EcosystemRequiredProduct;
(function (EcosystemRequiredProduct) {
    EcosystemRequiredProduct["Compass"] = "COMPASS";
    EcosystemRequiredProduct["Confluence"] = "CONFLUENCE";
    EcosystemRequiredProduct["Jira"] = "JIRA";
})(EcosystemRequiredProduct = exports.EcosystemRequiredProduct || (exports.EcosystemRequiredProduct = {}));
var EditionValue;
(function (EditionValue) {
    EditionValue["Advanced"] = "ADVANCED";
    EditionValue["Standard"] = "STANDARD";
})(EditionValue = exports.EditionValue || (exports.EditionValue = {}));
var EditorConversionSetting;
(function (EditorConversionSetting) {
    EditorConversionSetting["None"] = "NONE";
    EditorConversionSetting["Supported"] = "SUPPORTED";
})(EditorConversionSetting = exports.EditorConversionSetting || (exports.EditorConversionSetting = {}));
var Environment;
(function (Environment) {
    Environment["Development"] = "DEVELOPMENT";
    Environment["Production"] = "PRODUCTION";
    Environment["Staging"] = "STAGING";
})(Environment = exports.Environment || (exports.Environment = {}));
var EstimationType;
(function (EstimationType) {
    EstimationType["CustomNumberField"] = "CUSTOM_NUMBER_FIELD";
    EstimationType["IssueCount"] = "ISSUE_COUNT";
    EstimationType["OriginalEstimate"] = "ORIGINAL_ESTIMATE";
    EstimationType["StoryPoints"] = "STORY_POINTS";
})(EstimationType = exports.EstimationType || (exports.EstimationType = {}));
var ExperienceEventType;
(function (ExperienceEventType) {
    ExperienceEventType["Custom"] = "CUSTOM";
    ExperienceEventType["Database"] = "DATABASE";
    ExperienceEventType["InlineResult"] = "INLINE_RESULT";
    ExperienceEventType["PageLoad"] = "PAGE_LOAD";
    ExperienceEventType["PageSegmentLoad"] = "PAGE_SEGMENT_LOAD";
    ExperienceEventType["WebVitals"] = "WEB_VITALS";
})(ExperienceEventType = exports.ExperienceEventType || (exports.ExperienceEventType = {}));
var ExtensionContextsFilterType;
(function (ExtensionContextsFilterType) {
    ExtensionContextsFilterType["AppIdEnvironmentId"] = "APP_ID_ENVIRONMENT_ID";
    ExtensionContextsFilterType["DataClassificationTag"] = "DATA_CLASSIFICATION_TAG";
    ExtensionContextsFilterType["DefinitionId"] = "DEFINITION_ID";
    ExtensionContextsFilterType["ExtensionType"] = "EXTENSION_TYPE";
    ExtensionContextsFilterType["PrincipalType"] = "PRINCIPAL_TYPE";
})(ExtensionContextsFilterType = exports.ExtensionContextsFilterType || (exports.ExtensionContextsFilterType = {}));
var ExternalApprovalStatus;
(function (ExternalApprovalStatus) {
    ExternalApprovalStatus["Approved"] = "APPROVED";
    ExternalApprovalStatus["Needswork"] = "NEEDSWORK";
    ExternalApprovalStatus["Unapproved"] = "UNAPPROVED";
})(ExternalApprovalStatus = exports.ExternalApprovalStatus || (exports.ExternalApprovalStatus = {}));
var ExternalAttendeeRsvpStatus;
(function (ExternalAttendeeRsvpStatus) {
    ExternalAttendeeRsvpStatus["Accepted"] = "ACCEPTED";
    ExternalAttendeeRsvpStatus["Declined"] = "DECLINED";
    ExternalAttendeeRsvpStatus["NotResponded"] = "NOT_RESPONDED";
    ExternalAttendeeRsvpStatus["Other"] = "OTHER";
    ExternalAttendeeRsvpStatus["TenativelyAccepted"] = "TENATIVELY_ACCEPTED";
})(ExternalAttendeeRsvpStatus = exports.ExternalAttendeeRsvpStatus || (exports.ExternalAttendeeRsvpStatus = {}));
var ExternalBuildState;
(function (ExternalBuildState) {
    ExternalBuildState["Cancelled"] = "CANCELLED";
    ExternalBuildState["Failed"] = "FAILED";
    ExternalBuildState["InProgress"] = "IN_PROGRESS";
    ExternalBuildState["Pending"] = "PENDING";
    ExternalBuildState["Successful"] = "SUCCESSFUL";
    ExternalBuildState["Unknown"] = "UNKNOWN";
})(ExternalBuildState = exports.ExternalBuildState || (exports.ExternalBuildState = {}));
var ExternalChangeType;
(function (ExternalChangeType) {
    ExternalChangeType["Added"] = "ADDED";
    ExternalChangeType["Copied"] = "COPIED";
    ExternalChangeType["Deleted"] = "DELETED";
    ExternalChangeType["Modified"] = "MODIFIED";
    ExternalChangeType["Moved"] = "MOVED";
    ExternalChangeType["Unknown"] = "UNKNOWN";
})(ExternalChangeType = exports.ExternalChangeType || (exports.ExternalChangeType = {}));
var ExternalCollaboratorsSortField;
(function (ExternalCollaboratorsSortField) {
    ExternalCollaboratorsSortField["Name"] = "NAME";
})(ExternalCollaboratorsSortField = exports.ExternalCollaboratorsSortField || (exports.ExternalCollaboratorsSortField = {}));
var ExternalCommentReactionType;
(function (ExternalCommentReactionType) {
    ExternalCommentReactionType["Like"] = "LIKE";
})(ExternalCommentReactionType = exports.ExternalCommentReactionType || (exports.ExternalCommentReactionType = {}));
var ExternalCommitFlags;
(function (ExternalCommitFlags) {
    ExternalCommitFlags["MergeCommit"] = "MERGE_COMMIT";
})(ExternalCommitFlags = exports.ExternalCommitFlags || (exports.ExternalCommitFlags = {}));
var ExternalConversationType;
(function (ExternalConversationType) {
    ExternalConversationType["Channel"] = "CHANNEL";
    ExternalConversationType["DirectMessage"] = "DIRECT_MESSAGE";
    ExternalConversationType["GroupDirectMessage"] = "GROUP_DIRECT_MESSAGE";
})(ExternalConversationType = exports.ExternalConversationType || (exports.ExternalConversationType = {}));
var ExternalDeploymentState;
(function (ExternalDeploymentState) {
    ExternalDeploymentState["Cancelled"] = "CANCELLED";
    ExternalDeploymentState["Failed"] = "FAILED";
    ExternalDeploymentState["InProgress"] = "IN_PROGRESS";
    ExternalDeploymentState["Pending"] = "PENDING";
    ExternalDeploymentState["RolledBack"] = "ROLLED_BACK";
    ExternalDeploymentState["Successful"] = "SUCCESSFUL";
    ExternalDeploymentState["Unknown"] = "UNKNOWN";
})(ExternalDeploymentState = exports.ExternalDeploymentState || (exports.ExternalDeploymentState = {}));
var ExternalDesignStatus;
(function (ExternalDesignStatus) {
    ExternalDesignStatus["None"] = "NONE";
    ExternalDesignStatus["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    ExternalDesignStatus["Unknown"] = "UNKNOWN";
})(ExternalDesignStatus = exports.ExternalDesignStatus || (exports.ExternalDesignStatus = {}));
var ExternalDesignType;
(function (ExternalDesignType) {
    ExternalDesignType["Canvas"] = "CANVAS";
    ExternalDesignType["File"] = "FILE";
    ExternalDesignType["Group"] = "GROUP";
    ExternalDesignType["Node"] = "NODE";
    ExternalDesignType["Other"] = "OTHER";
    ExternalDesignType["Prototype"] = "PROTOTYPE";
})(ExternalDesignType = exports.ExternalDesignType || (exports.ExternalDesignType = {}));
var ExternalDocumentCategory;
(function (ExternalDocumentCategory) {
    ExternalDocumentCategory["Archive"] = "ARCHIVE";
    ExternalDocumentCategory["Audio"] = "AUDIO";
    ExternalDocumentCategory["Blogpost"] = "BLOGPOST";
    ExternalDocumentCategory["Code"] = "CODE";
    ExternalDocumentCategory["Document"] = "DOCUMENT";
    ExternalDocumentCategory["Folder"] = "FOLDER";
    ExternalDocumentCategory["Form"] = "FORM";
    ExternalDocumentCategory["Image"] = "IMAGE";
    ExternalDocumentCategory["Other"] = "OTHER";
    ExternalDocumentCategory["Page"] = "PAGE";
    ExternalDocumentCategory["Pdf"] = "PDF";
    ExternalDocumentCategory["Presentation"] = "PRESENTATION";
    ExternalDocumentCategory["Shortcut"] = "SHORTCUT";
    ExternalDocumentCategory["Spreadsheet"] = "SPREADSHEET";
    ExternalDocumentCategory["Video"] = "VIDEO";
    ExternalDocumentCategory["WebPage"] = "WEB_PAGE";
})(ExternalDocumentCategory = exports.ExternalDocumentCategory || (exports.ExternalDocumentCategory = {}));
var ExternalEnvironmentType;
(function (ExternalEnvironmentType) {
    ExternalEnvironmentType["Development"] = "DEVELOPMENT";
    ExternalEnvironmentType["Production"] = "PRODUCTION";
    ExternalEnvironmentType["Staging"] = "STAGING";
    ExternalEnvironmentType["Testing"] = "TESTING";
    ExternalEnvironmentType["Unmapped"] = "UNMAPPED";
})(ExternalEnvironmentType = exports.ExternalEnvironmentType || (exports.ExternalEnvironmentType = {}));
var ExternalEventType;
(function (ExternalEventType) {
    ExternalEventType["Appointment"] = "APPOINTMENT";
    ExternalEventType["Birthday"] = "BIRTHDAY";
    ExternalEventType["Default"] = "DEFAULT";
    ExternalEventType["Event"] = "EVENT";
    ExternalEventType["FocusTime"] = "FOCUS_TIME";
    ExternalEventType["OutOfOffice"] = "OUT_OF_OFFICE";
    ExternalEventType["Reminder"] = "REMINDER";
    ExternalEventType["Task"] = "TASK";
    ExternalEventType["WorkingLocation"] = "WORKING_LOCATION";
})(ExternalEventType = exports.ExternalEventType || (exports.ExternalEventType = {}));
var ExternalMembershipType;
(function (ExternalMembershipType) {
    ExternalMembershipType["Private"] = "PRIVATE";
    ExternalMembershipType["Public"] = "PUBLIC";
    ExternalMembershipType["Shared"] = "SHARED";
})(ExternalMembershipType = exports.ExternalMembershipType || (exports.ExternalMembershipType = {}));
var ExternalPullRequestStatus;
(function (ExternalPullRequestStatus) {
    ExternalPullRequestStatus["Declined"] = "DECLINED";
    ExternalPullRequestStatus["Draft"] = "DRAFT";
    ExternalPullRequestStatus["Merged"] = "MERGED";
    ExternalPullRequestStatus["Open"] = "OPEN";
    ExternalPullRequestStatus["Unknown"] = "UNKNOWN";
})(ExternalPullRequestStatus = exports.ExternalPullRequestStatus || (exports.ExternalPullRequestStatus = {}));
var ExternalSpaceSubtype;
(function (ExternalSpaceSubtype) {
    ExternalSpaceSubtype["Business"] = "BUSINESS";
    ExternalSpaceSubtype["Project"] = "PROJECT";
    ExternalSpaceSubtype["ServiceDesk"] = "SERVICE_DESK";
    ExternalSpaceSubtype["Software"] = "SOFTWARE";
    ExternalSpaceSubtype["Space"] = "SPACE";
})(ExternalSpaceSubtype = exports.ExternalSpaceSubtype || (exports.ExternalSpaceSubtype = {}));
var ExternalVulnerabilitySeverityLevel;
(function (ExternalVulnerabilitySeverityLevel) {
    ExternalVulnerabilitySeverityLevel["Critical"] = "CRITICAL";
    ExternalVulnerabilitySeverityLevel["High"] = "HIGH";
    ExternalVulnerabilitySeverityLevel["Low"] = "LOW";
    ExternalVulnerabilitySeverityLevel["Medium"] = "MEDIUM";
    ExternalVulnerabilitySeverityLevel["Unknown"] = "UNKNOWN";
})(ExternalVulnerabilitySeverityLevel = exports.ExternalVulnerabilitySeverityLevel || (exports.ExternalVulnerabilitySeverityLevel = {}));
var ExternalVulnerabilityStatus;
(function (ExternalVulnerabilityStatus) {
    ExternalVulnerabilityStatus["Closed"] = "CLOSED";
    ExternalVulnerabilityStatus["Ignored"] = "IGNORED";
    ExternalVulnerabilityStatus["Open"] = "OPEN";
    ExternalVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(ExternalVulnerabilityStatus = exports.ExternalVulnerabilityStatus || (exports.ExternalVulnerabilityStatus = {}));
var ExternalVulnerabilityType;
(function (ExternalVulnerabilityType) {
    ExternalVulnerabilityType["Dast"] = "DAST";
    ExternalVulnerabilityType["Sast"] = "SAST";
    ExternalVulnerabilityType["Sca"] = "SCA";
    ExternalVulnerabilityType["Unknown"] = "UNKNOWN";
})(ExternalVulnerabilityType = exports.ExternalVulnerabilityType || (exports.ExternalVulnerabilityType = {}));
var ExternalWorkItemSubtype;
(function (ExternalWorkItemSubtype) {
    ExternalWorkItemSubtype["Approval"] = "APPROVAL";
    ExternalWorkItemSubtype["Bug"] = "BUG";
    ExternalWorkItemSubtype["DefaultTask"] = "DEFAULT_TASK";
    ExternalWorkItemSubtype["Epic"] = "EPIC";
    ExternalWorkItemSubtype["Incident"] = "INCIDENT";
    ExternalWorkItemSubtype["Issue"] = "ISSUE";
    ExternalWorkItemSubtype["Milestone"] = "MILESTONE";
    ExternalWorkItemSubtype["Other"] = "OTHER";
    ExternalWorkItemSubtype["Problem"] = "PROBLEM";
    ExternalWorkItemSubtype["Question"] = "QUESTION";
    ExternalWorkItemSubtype["Section"] = "SECTION";
    ExternalWorkItemSubtype["Story"] = "STORY";
    ExternalWorkItemSubtype["Task"] = "TASK";
    ExternalWorkItemSubtype["WorkItem"] = "WORK_ITEM";
})(ExternalWorkItemSubtype = exports.ExternalWorkItemSubtype || (exports.ExternalWorkItemSubtype = {}));
var FeedEventType;
(function (FeedEventType) {
    FeedEventType["Comment"] = "COMMENT";
    FeedEventType["Create"] = "CREATE";
    FeedEventType["Edit"] = "EDIT";
    FeedEventType["Editlive"] = "EDITLIVE";
    FeedEventType["Publishlive"] = "PUBLISHLIVE";
})(FeedEventType = exports.FeedEventType || (exports.FeedEventType = {}));
var FeedItemSourceType;
(function (FeedItemSourceType) {
    FeedItemSourceType["Person"] = "PERSON";
    FeedItemSourceType["Space"] = "SPACE";
})(FeedItemSourceType = exports.FeedItemSourceType || (exports.FeedItemSourceType = {}));
var FeedType;
(function (FeedType) {
    FeedType["Direct"] = "DIRECT";
    FeedType["Following"] = "FOLLOWING";
    FeedType["Popular"] = "POPULAR";
})(FeedType = exports.FeedType || (exports.FeedType = {}));
var ForgeAlertsAlertActivityType;
(function (ForgeAlertsAlertActivityType) {
    ForgeAlertsAlertActivityType["AlertClosed"] = "ALERT_CLOSED";
    ForgeAlertsAlertActivityType["AlertOpen"] = "ALERT_OPEN";
    ForgeAlertsAlertActivityType["EmailSent"] = "EMAIL_SENT";
    ForgeAlertsAlertActivityType["SeverityUpdated"] = "SEVERITY_UPDATED";
})(ForgeAlertsAlertActivityType = exports.ForgeAlertsAlertActivityType || (exports.ForgeAlertsAlertActivityType = {}));
var ForgeAlertsListOrderByColumns;
(function (ForgeAlertsListOrderByColumns) {
    ForgeAlertsListOrderByColumns["AlertId"] = "alertId";
    ForgeAlertsListOrderByColumns["ClosedAt"] = "closedAt";
    ForgeAlertsListOrderByColumns["CreatedAt"] = "createdAt";
    ForgeAlertsListOrderByColumns["Duration"] = "duration";
    ForgeAlertsListOrderByColumns["Severity"] = "severity";
})(ForgeAlertsListOrderByColumns = exports.ForgeAlertsListOrderByColumns || (exports.ForgeAlertsListOrderByColumns = {}));
var ForgeAlertsListOrderOptions;
(function (ForgeAlertsListOrderOptions) {
    ForgeAlertsListOrderOptions["Asc"] = "ASC";
    ForgeAlertsListOrderOptions["Desc"] = "DESC";
})(ForgeAlertsListOrderOptions = exports.ForgeAlertsListOrderOptions || (exports.ForgeAlertsListOrderOptions = {}));
var ForgeAlertsMetricsDataType;
(function (ForgeAlertsMetricsDataType) {
    ForgeAlertsMetricsDataType["DateTime"] = "DATE_TIME";
})(ForgeAlertsMetricsDataType = exports.ForgeAlertsMetricsDataType || (exports.ForgeAlertsMetricsDataType = {}));
var ForgeAlertsMetricsResolutionUnit;
(function (ForgeAlertsMetricsResolutionUnit) {
    ForgeAlertsMetricsResolutionUnit["Day"] = "DAY";
    ForgeAlertsMetricsResolutionUnit["Hours"] = "HOURS";
    ForgeAlertsMetricsResolutionUnit["Minutes"] = "MINUTES";
})(ForgeAlertsMetricsResolutionUnit = exports.ForgeAlertsMetricsResolutionUnit || (exports.ForgeAlertsMetricsResolutionUnit = {}));
var ForgeAlertsRuleActivityAction;
(function (ForgeAlertsRuleActivityAction) {
    ForgeAlertsRuleActivityAction["Created"] = "CREATED";
    ForgeAlertsRuleActivityAction["Deleted"] = "DELETED";
    ForgeAlertsRuleActivityAction["Disabled"] = "DISABLED";
    ForgeAlertsRuleActivityAction["Enabled"] = "ENABLED";
    ForgeAlertsRuleActivityAction["Updated"] = "UPDATED";
})(ForgeAlertsRuleActivityAction = exports.ForgeAlertsRuleActivityAction || (exports.ForgeAlertsRuleActivityAction = {}));
var ForgeAlertsRuleFilterActions;
(function (ForgeAlertsRuleFilterActions) {
    ForgeAlertsRuleFilterActions["Exclude"] = "EXCLUDE";
    ForgeAlertsRuleFilterActions["Include"] = "INCLUDE";
})(ForgeAlertsRuleFilterActions = exports.ForgeAlertsRuleFilterActions || (exports.ForgeAlertsRuleFilterActions = {}));
var ForgeAlertsRuleFilterDimensions;
(function (ForgeAlertsRuleFilterDimensions) {
    ForgeAlertsRuleFilterDimensions["ErrorTypes"] = "ERROR_TYPES";
    ForgeAlertsRuleFilterDimensions["Functions"] = "FUNCTIONS";
    ForgeAlertsRuleFilterDimensions["Sites"] = "SITES";
    ForgeAlertsRuleFilterDimensions["Versions"] = "VERSIONS";
})(ForgeAlertsRuleFilterDimensions = exports.ForgeAlertsRuleFilterDimensions || (exports.ForgeAlertsRuleFilterDimensions = {}));
var ForgeAlertsRuleMetricType;
(function (ForgeAlertsRuleMetricType) {
    ForgeAlertsRuleMetricType["InvocationCount"] = "INVOCATION_COUNT";
    ForgeAlertsRuleMetricType["InvocationErrors"] = "INVOCATION_ERRORS";
    ForgeAlertsRuleMetricType["InvocationLatency"] = "INVOCATION_LATENCY";
    ForgeAlertsRuleMetricType["InvocationSuccessRate"] = "INVOCATION_SUCCESS_RATE";
})(ForgeAlertsRuleMetricType = exports.ForgeAlertsRuleMetricType || (exports.ForgeAlertsRuleMetricType = {}));
var ForgeAlertsRuleSeverity;
(function (ForgeAlertsRuleSeverity) {
    ForgeAlertsRuleSeverity["Critical"] = "CRITICAL";
    ForgeAlertsRuleSeverity["Major"] = "MAJOR";
    ForgeAlertsRuleSeverity["Minor"] = "MINOR";
})(ForgeAlertsRuleSeverity = exports.ForgeAlertsRuleSeverity || (exports.ForgeAlertsRuleSeverity = {}));
var ForgeAlertsRuleWhenConditions;
(function (ForgeAlertsRuleWhenConditions) {
    ForgeAlertsRuleWhenConditions["Above"] = "ABOVE";
    ForgeAlertsRuleWhenConditions["AboveOrEqualTo"] = "ABOVE_OR_EQUAL_TO";
    ForgeAlertsRuleWhenConditions["Below"] = "BELOW";
    ForgeAlertsRuleWhenConditions["BelowOrEqualTo"] = "BELOW_OR_EQUAL_TO";
})(ForgeAlertsRuleWhenConditions = exports.ForgeAlertsRuleWhenConditions || (exports.ForgeAlertsRuleWhenConditions = {}));
var ForgeAlertsStatus;
(function (ForgeAlertsStatus) {
    ForgeAlertsStatus["Closed"] = "CLOSED";
    ForgeAlertsStatus["Open"] = "OPEN";
})(ForgeAlertsStatus = exports.ForgeAlertsStatus || (exports.ForgeAlertsStatus = {}));
var ForgeAuditLogsActionType;
(function (ForgeAuditLogsActionType) {
    ForgeAuditLogsActionType["ContributorAdded"] = "CONTRIBUTOR_ADDED";
    ForgeAuditLogsActionType["ContributorRemoved"] = "CONTRIBUTOR_REMOVED";
    ForgeAuditLogsActionType["ContributorRoleUpdated"] = "CONTRIBUTOR_ROLE_UPDATED";
    ForgeAuditLogsActionType["OwnershipTransferred"] = "OWNERSHIP_TRANSFERRED";
})(ForgeAuditLogsActionType = exports.ForgeAuditLogsActionType || (exports.ForgeAuditLogsActionType = {}));
var ForgeMetricsApiRequestGroupByDimensions;
(function (ForgeMetricsApiRequestGroupByDimensions) {
    ForgeMetricsApiRequestGroupByDimensions["ContextAri"] = "CONTEXT_ARI";
    ForgeMetricsApiRequestGroupByDimensions["Status"] = "STATUS";
    ForgeMetricsApiRequestGroupByDimensions["Url"] = "URL";
})(ForgeMetricsApiRequestGroupByDimensions = exports.ForgeMetricsApiRequestGroupByDimensions || (exports.ForgeMetricsApiRequestGroupByDimensions = {}));
var ForgeMetricsApiRequestStatus;
(function (ForgeMetricsApiRequestStatus) {
    ForgeMetricsApiRequestStatus["2Xx"] = "_2XX";
    ForgeMetricsApiRequestStatus["4Xx"] = "_4XX";
    ForgeMetricsApiRequestStatus["5Xx"] = "_5XX";
})(ForgeMetricsApiRequestStatus = exports.ForgeMetricsApiRequestStatus || (exports.ForgeMetricsApiRequestStatus = {}));
var ForgeMetricsApiRequestType;
(function (ForgeMetricsApiRequestType) {
    ForgeMetricsApiRequestType["Cache"] = "CACHE";
    ForgeMetricsApiRequestType["External"] = "EXTERNAL";
    ForgeMetricsApiRequestType["Product"] = "PRODUCT";
    ForgeMetricsApiRequestType["Sql"] = "SQL";
})(ForgeMetricsApiRequestType = exports.ForgeMetricsApiRequestType || (exports.ForgeMetricsApiRequestType = {}));
var ForgeMetricsContexts;
(function (ForgeMetricsContexts) {
    ForgeMetricsContexts["Compass"] = "COMPASS";
    ForgeMetricsContexts["Confluence"] = "CONFLUENCE";
    ForgeMetricsContexts["Graph"] = "GRAPH";
    ForgeMetricsContexts["Jira"] = "JIRA";
})(ForgeMetricsContexts = exports.ForgeMetricsContexts || (exports.ForgeMetricsContexts = {}));
var ForgeMetricsCustomGroupByDimensions;
(function (ForgeMetricsCustomGroupByDimensions) {
    ForgeMetricsCustomGroupByDimensions["CustomMetricName"] = "CUSTOM_METRIC_NAME";
})(ForgeMetricsCustomGroupByDimensions = exports.ForgeMetricsCustomGroupByDimensions || (exports.ForgeMetricsCustomGroupByDimensions = {}));
var ForgeMetricsDataType;
(function (ForgeMetricsDataType) {
    ForgeMetricsDataType["Category"] = "CATEGORY";
    ForgeMetricsDataType["DateTime"] = "DATE_TIME";
    ForgeMetricsDataType["Numeric"] = "NUMERIC";
})(ForgeMetricsDataType = exports.ForgeMetricsDataType || (exports.ForgeMetricsDataType = {}));
var ForgeMetricsGroupByDimensions;
(function (ForgeMetricsGroupByDimensions) {
    ForgeMetricsGroupByDimensions["ContextAri"] = "CONTEXT_ARI";
    ForgeMetricsGroupByDimensions["EnvironmentId"] = "ENVIRONMENT_ID";
    ForgeMetricsGroupByDimensions["ErrorType"] = "ERROR_TYPE";
    ForgeMetricsGroupByDimensions["Function"] = "FUNCTION";
    ForgeMetricsGroupByDimensions["UserTier"] = "USER_TIER";
    ForgeMetricsGroupByDimensions["Version"] = "VERSION";
})(ForgeMetricsGroupByDimensions = exports.ForgeMetricsGroupByDimensions || (exports.ForgeMetricsGroupByDimensions = {}));
var ForgeMetricsLabels;
(function (ForgeMetricsLabels) {
    ForgeMetricsLabels["ForgeApiRequestCount"] = "FORGE_API_REQUEST_COUNT";
    ForgeMetricsLabels["ForgeApiRequestLatency"] = "FORGE_API_REQUEST_LATENCY";
    ForgeMetricsLabels["ForgeBackendInvocationCount"] = "FORGE_BACKEND_INVOCATION_COUNT";
    ForgeMetricsLabels["ForgeBackendInvocationErrors"] = "FORGE_BACKEND_INVOCATION_ERRORS";
    ForgeMetricsLabels["ForgeBackendInvocationLatency"] = "FORGE_BACKEND_INVOCATION_LATENCY";
})(ForgeMetricsLabels = exports.ForgeMetricsLabels || (exports.ForgeMetricsLabels = {}));
var ForgeMetricsResolutionUnit;
(function (ForgeMetricsResolutionUnit) {
    ForgeMetricsResolutionUnit["Hours"] = "HOURS";
    ForgeMetricsResolutionUnit["Minutes"] = "MINUTES";
})(ForgeMetricsResolutionUnit = exports.ForgeMetricsResolutionUnit || (exports.ForgeMetricsResolutionUnit = {}));
var ForgeMetricsSiteFilterCategory;
(function (ForgeMetricsSiteFilterCategory) {
    ForgeMetricsSiteFilterCategory["All"] = "ALL";
    ForgeMetricsSiteFilterCategory["HighestInvocationCount"] = "HIGHEST_INVOCATION_COUNT";
    ForgeMetricsSiteFilterCategory["HighestNumberOfErrors"] = "HIGHEST_NUMBER_OF_ERRORS";
    ForgeMetricsSiteFilterCategory["HighestNumberOfUsers"] = "HIGHEST_NUMBER_OF_USERS";
    ForgeMetricsSiteFilterCategory["LowestSuccessRate"] = "LOWEST_SUCCESS_RATE";
})(ForgeMetricsSiteFilterCategory = exports.ForgeMetricsSiteFilterCategory || (exports.ForgeMetricsSiteFilterCategory = {}));
var FormStatus;
(function (FormStatus) {
    FormStatus["Approved"] = "APPROVED";
    FormStatus["Rejected"] = "REJECTED";
    FormStatus["Saved"] = "SAVED";
    FormStatus["Submitted"] = "SUBMITTED";
})(FormStatus = exports.FormStatus || (exports.FormStatus = {}));
var FortifiedMetricsResolutionUnit;
(function (FortifiedMetricsResolutionUnit) {
    FortifiedMetricsResolutionUnit["Hours"] = "HOURS";
    FortifiedMetricsResolutionUnit["Minutes"] = "MINUTES";
})(FortifiedMetricsResolutionUnit = exports.FortifiedMetricsResolutionUnit || (exports.FortifiedMetricsResolutionUnit = {}));
var FunctionTriggerType;
(function (FunctionTriggerType) {
    FunctionTriggerType["Frontend"] = "FRONTEND";
    FunctionTriggerType["Manual"] = "MANUAL";
    FunctionTriggerType["Product"] = "PRODUCT";
    FunctionTriggerType["Web"] = "WEB";
})(FunctionTriggerType = exports.FunctionTriggerType || (exports.FunctionTriggerType = {}));
var GlanceEnvironment;
(function (GlanceEnvironment) {
    GlanceEnvironment["Dev"] = "DEV";
    GlanceEnvironment["Prod"] = "PROD";
    GlanceEnvironment["Staging"] = "STAGING";
})(GlanceEnvironment = exports.GlanceEnvironment || (exports.GlanceEnvironment = {}));
var GrantCheckProduct;
(function (GrantCheckProduct) {
    GrantCheckProduct["Compass"] = "COMPASS";
    GrantCheckProduct["Confluence"] = "CONFLUENCE";
    GrantCheckProduct["Jira"] = "JIRA";
    GrantCheckProduct["JiraServicedesk"] = "JIRA_SERVICEDESK";
    GrantCheckProduct["Mercury"] = "MERCURY";
    GrantCheckProduct["NoGrantChecks"] = "NO_GRANT_CHECKS";
    GrantCheckProduct["Townsquare"] = "TOWNSQUARE";
})(GrantCheckProduct = exports.GrantCheckProduct || (exports.GrantCheckProduct = {}));
var GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum;
(function (GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum) {
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["Cancelled"] = "CANCELLED";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["Failed"] = "FAILED";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["InProgress"] = "IN_PROGRESS";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["Pending"] = "PENDING";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["Successful"] = "SUCCESSFUL";
    GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum = exports.GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum || (exports.GraphCreateMetadataProjectAssociatedBuildJiraBuildOutputBuildStateEnum = {}));
var GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum;
(function (GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum) {
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Cancelled"] = "CANCELLED";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Failed"] = "FAILED";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["InProgress"] = "IN_PROGRESS";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Pending"] = "PENDING";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["RolledBack"] = "ROLLED_BACK";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Successful"] = "SUCCESSFUL";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum || (exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = {}));
var GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum;
(function (GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum) {
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["Development"] = "DEVELOPMENT";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["Production"] = "PRODUCTION";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["Staging"] = "STAGING";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["Testing"] = "TESTING";
    GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum["Unmapped"] = "UNMAPPED";
})(GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum = exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum || (exports.GraphCreateMetadataProjectAssociatedDeploymentJiraDeploymentOutputEnvironmentTypeEnum = {}));
var GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum;
(function (GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum) {
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Declined"] = "DECLINED";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Merged"] = "MERGED";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Open"] = "OPEN";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum || (exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = {}));
var GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum;
(function (GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum) {
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Approved"] = "APPROVED";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Needswork"] = "NEEDSWORK";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Unapproved"] = "UNAPPROVED";
})(GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum || (exports.GraphCreateMetadataProjectAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = {}));
var GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum;
(function (GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum) {
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Critical"] = "CRITICAL";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["High"] = "HIGH";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Low"] = "LOW";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Medium"] = "MEDIUM";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum || (exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = {}));
var GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum;
(function (GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum) {
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Closed"] = "CLOSED";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Ignored"] = "IGNORED";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Open"] = "OPEN";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum || (exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = {}));
var GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum;
(function (GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum) {
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum["Dast"] = "DAST";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum["Sast"] = "SAST";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum["Sca"] = "SCA";
    GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum = exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum || (exports.GraphCreateMetadataProjectAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityTypeEnum = {}));
var GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum;
(function (GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum) {
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["Cancelled"] = "CANCELLED";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["Failed"] = "FAILED";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["InProgress"] = "IN_PROGRESS";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["Pending"] = "PENDING";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["Successful"] = "SUCCESSFUL";
    GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum = exports.GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum || (exports.GraphCreateMetadataSprintAssociatedBuildJiraBuildOutputBuildStateEnum = {}));
var GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum;
(function (GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum) {
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Cancelled"] = "CANCELLED";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Failed"] = "FAILED";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["InProgress"] = "IN_PROGRESS";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Pending"] = "PENDING";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["RolledBack"] = "ROLLED_BACK";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Successful"] = "SUCCESSFUL";
    GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = exports.GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum || (exports.GraphCreateMetadataSprintAssociatedDeploymentJiraDeploymentOutputDeploymentStateEnum = {}));
var GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum;
(function (GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum) {
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Declined"] = "DECLINED";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Merged"] = "MERGED";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Open"] = "OPEN";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum || (exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputPullRequestStatusEnum = {}));
var GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum;
(function (GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum) {
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Approved"] = "APPROVED";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Needswork"] = "NEEDSWORK";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum["Unapproved"] = "UNAPPROVED";
})(GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum || (exports.GraphCreateMetadataSprintAssociatedPrJiraPullRequestOutputReviewerReviewerStatusEnum = {}));
var GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum;
(function (GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum) {
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Critical"] = "CRITICAL";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["High"] = "HIGH";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Low"] = "LOW";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Medium"] = "MEDIUM";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum || (exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilitySeverityEnum = {}));
var GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum;
(function (GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum) {
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Closed"] = "CLOSED";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Ignored"] = "IGNORED";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["NotSet"] = "NOT_SET";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Open"] = "OPEN";
    GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum["Unknown"] = "UNKNOWN";
})(GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum || (exports.GraphCreateMetadataSprintAssociatedVulnerabilityJiraVulnerabilityOutputVulnerabilityStatusEnum = {}));
var GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum;
(function (GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum) {
    GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum["Done"] = "DONE";
    GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum["Indeterminate"] = "INDETERMINATE";
    GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum["New"] = "NEW";
    GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum["Undefined"] = "UNDEFINED";
})(GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum = exports.GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum || (exports.GraphCreateMetadataSprintAssociatedVulnerabilityOutputStatusCategoryEnum = {}));
var GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum;
(function (GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum) {
    GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum["Done"] = "DONE";
    GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum["Indeterminate"] = "INDETERMINATE";
    GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum["New"] = "NEW";
    GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum["Undefined"] = "UNDEFINED";
})(GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum = exports.GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum || (exports.GraphCreateMetadataSprintContainsIssueJiraIssueInputStatusCategoryEnum = {}));
var GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum;
(function (GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum) {
    GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum["Done"] = "DONE";
    GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum["Indeterminate"] = "INDETERMINATE";
    GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum["New"] = "NEW";
    GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum["Undefined"] = "UNDEFINED";
})(GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum = exports.GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum || (exports.GraphCreateMetadataSprintContainsIssueJiraIssueOutputStatusCategoryEnum = {}));
var GraphIntegrationDirectoryItemType;
(function (GraphIntegrationDirectoryItemType) {
    GraphIntegrationDirectoryItemType["Action"] = "ACTION";
    GraphIntegrationDirectoryItemType["McpServer"] = "MCP_SERVER";
    GraphIntegrationDirectoryItemType["McpTool"] = "MCP_TOOL";
})(GraphIntegrationDirectoryItemType = exports.GraphIntegrationDirectoryItemType || (exports.GraphIntegrationDirectoryItemType = {}));
var GraphIntegrationMcpAdminManagementMcpServerStatus;
(function (GraphIntegrationMcpAdminManagementMcpServerStatus) {
    GraphIntegrationMcpAdminManagementMcpServerStatus["Deleting"] = "DELETING";
    GraphIntegrationMcpAdminManagementMcpServerStatus["Provisioning"] = "PROVISIONING";
    GraphIntegrationMcpAdminManagementMcpServerStatus["Registered"] = "REGISTERED";
    GraphIntegrationMcpAdminManagementMcpServerStatus["Suspended"] = "SUSPENDED";
    GraphIntegrationMcpAdminManagementMcpServerStatus["ToolConfigurationPending"] = "TOOL_CONFIGURATION_PENDING";
})(GraphIntegrationMcpAdminManagementMcpServerStatus = exports.GraphIntegrationMcpAdminManagementMcpServerStatus || (exports.GraphIntegrationMcpAdminManagementMcpServerStatus = {}));
var GraphIntegrationMcpAdminManagementMcpServerType;
(function (GraphIntegrationMcpAdminManagementMcpServerType) {
    GraphIntegrationMcpAdminManagementMcpServerType["Http"] = "HTTP";
    GraphIntegrationMcpAdminManagementMcpServerType["Sse"] = "SSE";
})(GraphIntegrationMcpAdminManagementMcpServerType = exports.GraphIntegrationMcpAdminManagementMcpServerType || (exports.GraphIntegrationMcpAdminManagementMcpServerType = {}));
var GraphIntegrationMcpAdminManagementMcpToolStatus;
(function (GraphIntegrationMcpAdminManagementMcpToolStatus) {
    GraphIntegrationMcpAdminManagementMcpToolStatus["Allow"] = "ALLOW";
    GraphIntegrationMcpAdminManagementMcpToolStatus["Deny"] = "DENY";
    GraphIntegrationMcpAdminManagementMcpToolStatus["NewToolDeny"] = "NEW_TOOL_DENY";
})(GraphIntegrationMcpAdminManagementMcpToolStatus = exports.GraphIntegrationMcpAdminManagementMcpToolStatus || (exports.GraphIntegrationMcpAdminManagementMcpToolStatus = {}));
var GraphIntegrationStatus;
(function (GraphIntegrationStatus) {
    GraphIntegrationStatus["Disabled"] = "DISABLED";
    GraphIntegrationStatus["Enabled"] = "ENABLED";
})(GraphIntegrationStatus = exports.GraphIntegrationStatus || (exports.GraphIntegrationStatus = {}));
var GraphQlContentStatus;
(function (GraphQlContentStatus) {
    GraphQlContentStatus["Archived"] = "ARCHIVED";
    GraphQlContentStatus["Current"] = "CURRENT";
    GraphQlContentStatus["Deleted"] = "DELETED";
    GraphQlContentStatus["Draft"] = "DRAFT";
})(GraphQlContentStatus = exports.GraphQlContentStatus || (exports.GraphQlContentStatus = {}));
var GraphQlContentTemplateType;
(function (GraphQlContentTemplateType) {
    GraphQlContentTemplateType["Blueprint"] = "BLUEPRINT";
    GraphQlContentTemplateType["Page"] = "PAGE";
})(GraphQlContentTemplateType = exports.GraphQlContentTemplateType || (exports.GraphQlContentTemplateType = {}));
var GraphQlCoverPictureWidth;
(function (GraphQlCoverPictureWidth) {
    GraphQlCoverPictureWidth["Fixed"] = "FIXED";
    GraphQlCoverPictureWidth["Full"] = "FULL";
})(GraphQlCoverPictureWidth = exports.GraphQlCoverPictureWidth || (exports.GraphQlCoverPictureWidth = {}));
var GraphQlDateFormat;
(function (GraphQlDateFormat) {
    GraphQlDateFormat["Global"] = "GLOBAL";
    GraphQlDateFormat["Millis"] = "MILLIS";
    GraphQlDateFormat["User"] = "USER";
    GraphQlDateFormat["UserFriendly"] = "USER_FRIENDLY";
})(GraphQlDateFormat = exports.GraphQlDateFormat || (exports.GraphQlDateFormat = {}));
var GraphQlFrontCoverState;
(function (GraphQlFrontCoverState) {
    GraphQlFrontCoverState["Hidden"] = "HIDDEN";
    GraphQlFrontCoverState["Shown"] = "SHOWN";
    GraphQlFrontCoverState["Transition"] = "TRANSITION";
    GraphQlFrontCoverState["Unset"] = "UNSET";
})(GraphQlFrontCoverState = exports.GraphQlFrontCoverState || (exports.GraphQlFrontCoverState = {}));
var GraphQlLabelSortDirection;
(function (GraphQlLabelSortDirection) {
    GraphQlLabelSortDirection["Ascending"] = "ASCENDING";
    GraphQlLabelSortDirection["Descending"] = "DESCENDING";
})(GraphQlLabelSortDirection = exports.GraphQlLabelSortDirection || (exports.GraphQlLabelSortDirection = {}));
var GraphQlLabelSortField;
(function (GraphQlLabelSortField) {
    GraphQlLabelSortField["LabellingCreationdate"] = "LABELLING_CREATIONDATE";
    GraphQlLabelSortField["LabellingId"] = "LABELLING_ID";
})(GraphQlLabelSortField = exports.GraphQlLabelSortField || (exports.GraphQlLabelSortField = {}));
var GraphQlPageStatus;
(function (GraphQlPageStatus) {
    GraphQlPageStatus["Current"] = "CURRENT";
    GraphQlPageStatus["Draft"] = "DRAFT";
    GraphQlPageStatus["Historical"] = "HISTORICAL";
    GraphQlPageStatus["Trashed"] = "TRASHED";
})(GraphQlPageStatus = exports.GraphQlPageStatus || (exports.GraphQlPageStatus = {}));
var GraphQlReactionContentType;
(function (GraphQlReactionContentType) {
    GraphQlReactionContentType["Blogpost"] = "BLOGPOST";
    GraphQlReactionContentType["Comment"] = "COMMENT";
    GraphQlReactionContentType["Page"] = "PAGE";
})(GraphQlReactionContentType = exports.GraphQlReactionContentType || (exports.GraphQlReactionContentType = {}));
var GraphQlTemplateContentAppearance;
(function (GraphQlTemplateContentAppearance) {
    GraphQlTemplateContentAppearance["Default"] = "DEFAULT";
    GraphQlTemplateContentAppearance["FullWidth"] = "FULL_WIDTH";
})(GraphQlTemplateContentAppearance = exports.GraphQlTemplateContentAppearance || (exports.GraphQlTemplateContentAppearance = {}));
var GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum;
(function (GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum) {
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["Cancelled"] = "CANCELLED";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["Failed"] = "FAILED";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["InProgress"] = "IN_PROGRESS";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["Pending"] = "PENDING";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["Successful"] = "SUCCESSFUL";
    GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum = exports.GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum || (exports.GraphQueryMetadataProjectAssociatedBuildInputToBuildStateEnum = {}));
var GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum;
(function (GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum) {
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["Cancelled"] = "CANCELLED";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["Failed"] = "FAILED";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["InProgress"] = "IN_PROGRESS";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["Pending"] = "PENDING";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["RolledBack"] = "ROLLED_BACK";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["Successful"] = "SUCCESSFUL";
    GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum = exports.GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum || (exports.GraphQueryMetadataProjectAssociatedDeploymentInputToDeploymentStateEnum = {}));
var GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum;
(function (GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum) {
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["Development"] = "DEVELOPMENT";
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["Production"] = "PRODUCTION";
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["Staging"] = "STAGING";
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["Testing"] = "TESTING";
    GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum["Unmapped"] = "UNMAPPED";
})(GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum = exports.GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum || (exports.GraphQueryMetadataProjectAssociatedDeploymentInputToEnvironmentTypeEnum = {}));
var GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum;
(function (GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum) {
    GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum["Declined"] = "DECLINED";
    GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum["Merged"] = "MERGED";
    GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum["Open"] = "OPEN";
    GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum || (exports.GraphQueryMetadataProjectAssociatedPrInputToPullRequestStatusEnum = {}));
var GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum;
(function (GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum) {
    GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum["Approved"] = "APPROVED";
    GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum["Needswork"] = "NEEDSWORK";
    GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum["Unapproved"] = "UNAPPROVED";
})(GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum || (exports.GraphQueryMetadataProjectAssociatedPrInputToReviewerReviewerStatusEnum = {}));
var GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum;
(function (GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum) {
    GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum["All"] = "ALL";
    GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum["Any"] = "ANY";
    GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum["None"] = "NONE";
})(GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum = exports.GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum || (exports.GraphQueryMetadataProjectAssociatedPrInputToReviewermatchTypeEnum = {}));
var GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum;
(function (GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum) {
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Critical"] = "CRITICAL";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["High"] = "HIGH";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Low"] = "LOW";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Medium"] = "MEDIUM";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum || (exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = {}));
var GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum;
(function (GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum) {
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Closed"] = "CLOSED";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Ignored"] = "IGNORED";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Open"] = "OPEN";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum || (exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityStatusEnum = {}));
var GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum;
(function (GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum) {
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum["Dast"] = "DAST";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum["Sast"] = "SAST";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum["Sca"] = "SCA";
    GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum = exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum || (exports.GraphQueryMetadataProjectAssociatedVulnerabilityInputToVulnerabilityTypeEnum = {}));
var GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum;
(function (GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum) {
    GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum["All"] = "ALL";
    GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum["Any"] = "ANY";
    GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum["None"] = "NONE";
})(GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum = exports.GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum || (exports.GraphQueryMetadataProjectHasIssueInputRelationshipArimatchTypeEnum = {}));
var GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum;
(function (GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum) {
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["Critical"] = "CRITICAL";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["High"] = "HIGH";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["Low"] = "LOW";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["Medium"] = "MEDIUM";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum || (exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilitySeverityEnum = {}));
var GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum;
(function (GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum) {
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum["Closed"] = "CLOSED";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum["Ignored"] = "IGNORED";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum["Open"] = "OPEN";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum || (exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityStatusEnum = {}));
var GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum;
(function (GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum) {
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum["Dast"] = "DAST";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum["Sast"] = "SAST";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum["Sca"] = "SCA";
    GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum = exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum || (exports.GraphQueryMetadataSecurityContainerAssociatedToVulnerabilityInputToVulnerabilityTypeEnum = {}));
var GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum;
(function (GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum) {
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["P1"] = "P1";
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["P2"] = "P2";
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["P3"] = "P3";
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["P4"] = "P4";
    GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum["P5"] = "P5";
})(GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum = exports.GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum || (exports.GraphQueryMetadataServiceLinkedIncidentInputToJiraServiceManagementIncidentPriorityEnum = {}));
var GraphQueryMetadataSortEnum;
(function (GraphQueryMetadataSortEnum) {
    GraphQueryMetadataSortEnum["Asc"] = "ASC";
    GraphQueryMetadataSortEnum["Desc"] = "DESC";
})(GraphQueryMetadataSortEnum = exports.GraphQueryMetadataSortEnum || (exports.GraphQueryMetadataSortEnum = {}));
var GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum;
(function (GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum) {
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["Cancelled"] = "CANCELLED";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["Failed"] = "FAILED";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["InProgress"] = "IN_PROGRESS";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["Pending"] = "PENDING";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["Successful"] = "SUCCESSFUL";
    GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum = exports.GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum || (exports.GraphQueryMetadataSprintAssociatedBuildInputToBuildStateEnum = {}));
var GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum;
(function (GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum) {
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["Cancelled"] = "CANCELLED";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["Failed"] = "FAILED";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["InProgress"] = "IN_PROGRESS";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["Pending"] = "PENDING";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["RolledBack"] = "ROLLED_BACK";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["Successful"] = "SUCCESSFUL";
    GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum = exports.GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum || (exports.GraphQueryMetadataSprintAssociatedDeploymentInputToDeploymentStateEnum = {}));
var GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum;
(function (GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum) {
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["Development"] = "DEVELOPMENT";
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["Production"] = "PRODUCTION";
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["Staging"] = "STAGING";
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["Testing"] = "TESTING";
    GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum["Unmapped"] = "UNMAPPED";
})(GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum = exports.GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum || (exports.GraphQueryMetadataSprintAssociatedDeploymentInputToEnvironmentTypeEnum = {}));
var GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum;
(function (GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum) {
    GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum["Declined"] = "DECLINED";
    GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum["Merged"] = "MERGED";
    GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum["Open"] = "OPEN";
    GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum || (exports.GraphQueryMetadataSprintAssociatedPrInputToPullRequestStatusEnum = {}));
var GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum;
(function (GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum) {
    GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum["Approved"] = "APPROVED";
    GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum["Needswork"] = "NEEDSWORK";
    GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum["Unapproved"] = "UNAPPROVED";
})(GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum || (exports.GraphQueryMetadataSprintAssociatedPrInputToReviewerReviewerStatusEnum = {}));
var GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum;
(function (GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum) {
    GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum["All"] = "ALL";
    GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum["Any"] = "ANY";
    GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum["None"] = "NONE";
})(GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum = exports.GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum || (exports.GraphQueryMetadataSprintAssociatedPrInputToReviewermatchTypeEnum = {}));
var GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum;
(function (GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum) {
    GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum["Done"] = "DONE";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum["Indeterminate"] = "INDETERMINATE";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum["New"] = "NEW";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum["Undefined"] = "UNDEFINED";
})(GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum || (exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputRelationshipStatusCategoryEnum = {}));
var GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum;
(function (GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum) {
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Critical"] = "CRITICAL";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["High"] = "HIGH";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Low"] = "LOW";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Medium"] = "MEDIUM";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum || (exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilitySeverityEnum = {}));
var GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum;
(function (GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum) {
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Closed"] = "CLOSED";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Ignored"] = "IGNORED";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum["NotSet"] = "NOT_SET";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Open"] = "OPEN";
    GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum["Unknown"] = "UNKNOWN";
})(GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum = exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum || (exports.GraphQueryMetadataSprintAssociatedVulnerabilityInputToVulnerabilityStatusEnum = {}));
var GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum;
(function (GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum) {
    GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum["Done"] = "DONE";
    GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum["Indeterminate"] = "INDETERMINATE";
    GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum["New"] = "NEW";
    GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum["Undefined"] = "UNDEFINED";
})(GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum = exports.GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum || (exports.GraphQueryMetadataSprintContainsIssueInputToStatusCategoryEnum = {}));
var GraphStoreAtlasHomeRankingCriteriaEnum;
(function (GraphStoreAtlasHomeRankingCriteriaEnum) {
    GraphStoreAtlasHomeRankingCriteriaEnum["RoundRobinRandom"] = "ROUND_ROBIN_RANDOM";
})(GraphStoreAtlasHomeRankingCriteriaEnum = exports.GraphStoreAtlasHomeRankingCriteriaEnum || (exports.GraphStoreAtlasHomeRankingCriteriaEnum = {}));
var GraphStoreAtlasHomeSourcesEnum;
(function (GraphStoreAtlasHomeSourcesEnum) {
    GraphStoreAtlasHomeSourcesEnum["JiraEpicWithoutProject"] = "JIRA_EPIC_WITHOUT_PROJECT";
    GraphStoreAtlasHomeSourcesEnum["JiraIssueAssigned"] = "JIRA_ISSUE_ASSIGNED";
    GraphStoreAtlasHomeSourcesEnum["JiraIssueNearOverdue"] = "JIRA_ISSUE_NEAR_OVERDUE";
    GraphStoreAtlasHomeSourcesEnum["JiraIssueOverdue"] = "JIRA_ISSUE_OVERDUE";
    GraphStoreAtlasHomeSourcesEnum["UserJoinFirstTeam"] = "USER_JOIN_FIRST_TEAM";
    GraphStoreAtlasHomeSourcesEnum["UserPageNotViewedByOthers"] = "USER_PAGE_NOT_VIEWED_BY_OTHERS";
    GraphStoreAtlasHomeSourcesEnum["UserShouldFollowGoal"] = "USER_SHOULD_FOLLOW_GOAL";
    GraphStoreAtlasHomeSourcesEnum["UserShouldViewSharedPage"] = "USER_SHOULD_VIEW_SHARED_PAGE";
    GraphStoreAtlasHomeSourcesEnum["UserViewAssignedIssue"] = "USER_VIEW_ASSIGNED_ISSUE";
    GraphStoreAtlasHomeSourcesEnum["UserViewNegativeGoal"] = "USER_VIEW_NEGATIVE_GOAL";
    GraphStoreAtlasHomeSourcesEnum["UserViewNegativeProject"] = "USER_VIEW_NEGATIVE_PROJECT";
    GraphStoreAtlasHomeSourcesEnum["UserViewPageComments"] = "USER_VIEW_PAGE_COMMENTS";
    GraphStoreAtlasHomeSourcesEnum["UserViewSharedVideo"] = "USER_VIEW_SHARED_VIDEO";
    GraphStoreAtlasHomeSourcesEnum["UserViewTaggedVideoComment"] = "USER_VIEW_TAGGED_VIDEO_COMMENT";
    GraphStoreAtlasHomeSourcesEnum["UserViewUpdatedGoal"] = "USER_VIEW_UPDATED_GOAL";
    GraphStoreAtlasHomeSourcesEnum["UserViewUpdatedPriorityIssue"] = "USER_VIEW_UPDATED_PRIORITY_ISSUE";
    GraphStoreAtlasHomeSourcesEnum["UserViewUpdatedProject"] = "USER_VIEW_UPDATED_PROJECT";
})(GraphStoreAtlasHomeSourcesEnum = exports.GraphStoreAtlasHomeSourcesEnum || (exports.GraphStoreAtlasHomeSourcesEnum = {}));
var GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput;
(function (GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput) {
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["NotSet"] = "NOT_SET";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P1"] = "P1";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P2"] = "P2";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P3"] = "P3";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P4"] = "P4";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P5"] = "P5";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["Pending"] = "PENDING";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["Unknown"] = "UNKNOWN";
})(GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput || (exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = {}));
var GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput;
(function (GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput) {
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Done"] = "DONE";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Indeterminate"] = "INDETERMINATE";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["New"] = "NEW";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["NotSet"] = "NOT_SET";
    GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Undefined"] = "UNDEFINED";
})(GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput || (exports.GraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = {}));
var GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput;
(function (GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput) {
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["ExistingWorkItem"] = "EXISTING_WORK_ITEM";
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["NewWorkItem"] = "NEW_WORK_ITEM";
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["NotSet"] = "NOT_SET";
})(GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput || (exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = {}));
var GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput;
(function (GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput) {
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Accepted"] = "ACCEPTED";
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Open"] = "OPEN";
    GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Rejected"] = "REJECTED";
})(GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput || (exports.GraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = {}));
var GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput;
(function (GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput) {
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Critical"] = "CRITICAL";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["High"] = "HIGH";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Low"] = "LOW";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Medium"] = "MEDIUM";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["NotSet"] = "NOT_SET";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Unknown"] = "UNKNOWN";
})(GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput || (exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = {}));
var GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput;
(function (GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput) {
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Closed"] = "CLOSED";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Ignored"] = "IGNORED";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["NotSet"] = "NOT_SET";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Open"] = "OPEN";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Unknown"] = "UNKNOWN";
})(GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput || (exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = {}));
var GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput;
(function (GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput) {
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Dast"] = "DAST";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["NotSet"] = "NOT_SET";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Sast"] = "SAST";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Sca"] = "SCA";
    GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Unknown"] = "UNKNOWN";
})(GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput || (exports.GraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = {}));
var GraphStoreCypherQueryV2BatchVersionEnum;
(function (GraphStoreCypherQueryV2BatchVersionEnum) {
    GraphStoreCypherQueryV2BatchVersionEnum["V2"] = "V2";
    GraphStoreCypherQueryV2BatchVersionEnum["V3"] = "V3";
})(GraphStoreCypherQueryV2BatchVersionEnum = exports.GraphStoreCypherQueryV2BatchVersionEnum || (exports.GraphStoreCypherQueryV2BatchVersionEnum = {}));
var GraphStoreCypherQueryV2VersionEnum;
(function (GraphStoreCypherQueryV2VersionEnum) {
    GraphStoreCypherQueryV2VersionEnum["V2"] = "V2";
    GraphStoreCypherQueryV2VersionEnum["V3"] = "V3";
})(GraphStoreCypherQueryV2VersionEnum = exports.GraphStoreCypherQueryV2VersionEnum || (exports.GraphStoreCypherQueryV2VersionEnum = {}));
var GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput;
(function (GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput) {
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["P1"] = "P1";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["P2"] = "P2";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["P3"] = "P3";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["P4"] = "P4";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["P5"] = "P5";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["Pending"] = "PENDING";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput = exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput || (exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentPriorityOutput = {}));
var GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput;
(function (GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput) {
    GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput["Done"] = "DONE";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput["Indeterminate"] = "INDETERMINATE";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput["New"] = "NEW";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput["Undefined"] = "UNDEFINED";
})(GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput = exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput || (exports.GraphStoreFullComponentImpactedByIncidentJiraIncidentStatusOutput = {}));
var GraphStoreFullIssueAssociatedBuildBuildStateOutput;
(function (GraphStoreFullIssueAssociatedBuildBuildStateOutput) {
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["Cancelled"] = "CANCELLED";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["Failed"] = "FAILED";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["InProgress"] = "IN_PROGRESS";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["Pending"] = "PENDING";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["Successful"] = "SUCCESSFUL";
    GraphStoreFullIssueAssociatedBuildBuildStateOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullIssueAssociatedBuildBuildStateOutput = exports.GraphStoreFullIssueAssociatedBuildBuildStateOutput || (exports.GraphStoreFullIssueAssociatedBuildBuildStateOutput = {}));
var GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput;
(function (GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput) {
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["Cancelled"] = "CANCELLED";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["Failed"] = "FAILED";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["InProgress"] = "IN_PROGRESS";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["Pending"] = "PENDING";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["RolledBack"] = "ROLLED_BACK";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["Successful"] = "SUCCESSFUL";
    GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput || (exports.GraphStoreFullIssueAssociatedDeploymentDeploymentStateOutput = {}));
var GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput;
(function (GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput) {
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["Development"] = "DEVELOPMENT";
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["Production"] = "PRODUCTION";
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["Staging"] = "STAGING";
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["Testing"] = "TESTING";
    GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput["Unmapped"] = "UNMAPPED";
})(GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput || (exports.GraphStoreFullIssueAssociatedDeploymentEnvironmentTypeOutput = {}));
var GraphStoreFullIssueAssociatedDesignDesignStatusOutput;
(function (GraphStoreFullIssueAssociatedDesignDesignStatusOutput) {
    GraphStoreFullIssueAssociatedDesignDesignStatusOutput["None"] = "NONE";
    GraphStoreFullIssueAssociatedDesignDesignStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedDesignDesignStatusOutput["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    GraphStoreFullIssueAssociatedDesignDesignStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullIssueAssociatedDesignDesignStatusOutput = exports.GraphStoreFullIssueAssociatedDesignDesignStatusOutput || (exports.GraphStoreFullIssueAssociatedDesignDesignStatusOutput = {}));
var GraphStoreFullIssueAssociatedDesignDesignTypeOutput;
(function (GraphStoreFullIssueAssociatedDesignDesignTypeOutput) {
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["Canvas"] = "CANVAS";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["File"] = "FILE";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["Group"] = "GROUP";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["Node"] = "NODE";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["Other"] = "OTHER";
    GraphStoreFullIssueAssociatedDesignDesignTypeOutput["Prototype"] = "PROTOTYPE";
})(GraphStoreFullIssueAssociatedDesignDesignTypeOutput = exports.GraphStoreFullIssueAssociatedDesignDesignTypeOutput || (exports.GraphStoreFullIssueAssociatedDesignDesignTypeOutput = {}));
var GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput;
(function (GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput) {
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["Bamboo"] = "BAMBOO";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["BbPrComment"] = "BB_PR_COMMENT";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["ConfluencePage"] = "CONFLUENCE_PAGE";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["Jira"] = "JIRA";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["Snyk"] = "SNYK";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["Trello"] = "TRELLO";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput["WebLink"] = "WEB_LINK";
})(GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput = exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput || (exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkApplicationTypeOutput = {}));
var GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput;
(function (GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput) {
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["AddedToIdea"] = "ADDED_TO_IDEA";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Blocks"] = "BLOCKS";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Causes"] = "CAUSES";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Clones"] = "CLONES";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["CreatedFrom"] = "CREATED_FROM";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Duplicates"] = "DUPLICATES";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Implements"] = "IMPLEMENTS";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsBlockedBy"] = "IS_BLOCKED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsCausedBy"] = "IS_CAUSED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsClonedBy"] = "IS_CLONED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsDuplicatedBy"] = "IS_DUPLICATED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsIdeaFor"] = "IS_IDEA_FOR";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsImplementedBy"] = "IS_IMPLEMENTED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["IsReviewedBy"] = "IS_REVIEWED_BY";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["MentionedIn"] = "MENTIONED_IN";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["MergedFrom"] = "MERGED_FROM";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["MergedInto"] = "MERGED_INTO";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["RelatesTo"] = "RELATES_TO";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["Reviews"] = "REVIEWS";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["SplitFrom"] = "SPLIT_FROM";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["SplitTo"] = "SPLIT_TO";
    GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput["WikiPage"] = "WIKI_PAGE";
})(GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput = exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput || (exports.GraphStoreFullIssueAssociatedIssueRemoteLinkLinkRelationshipOutput = {}));
var GraphStoreFullIssueAssociatedPrPullRequestStatusOutput;
(function (GraphStoreFullIssueAssociatedPrPullRequestStatusOutput) {
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["Declined"] = "DECLINED";
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["Draft"] = "DRAFT";
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["Merged"] = "MERGED";
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["Open"] = "OPEN";
    GraphStoreFullIssueAssociatedPrPullRequestStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullIssueAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullIssueAssociatedPrPullRequestStatusOutput || (exports.GraphStoreFullIssueAssociatedPrPullRequestStatusOutput = {}));
var GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput;
(function (GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput) {
    GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput["Approved"] = "APPROVED";
    GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput["Needswork"] = "NEEDSWORK";
    GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput["Unapproved"] = "UNAPPROVED";
})(GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput || (exports.GraphStoreFullIssueAssociatedPrReviewerReviewerStatusOutput = {}));
var GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput;
(function (GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput) {
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["P1"] = "P1";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["P2"] = "P2";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["P3"] = "P3";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["P4"] = "P4";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["P5"] = "P5";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["Pending"] = "PENDING";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput = exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput || (exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentPriorityOutput = {}));
var GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput;
(function (GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput) {
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput["Done"] = "DONE";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput["Indeterminate"] = "INDETERMINATE";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput["New"] = "NEW";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput["Undefined"] = "UNDEFINED";
})(GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput = exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput || (exports.GraphStoreFullJswProjectAssociatedIncidentJiraIncidentStatusOutput = {}));
var GraphStoreFullParentDocumentHasChildDocumentCategoryOutput;
(function (GraphStoreFullParentDocumentHasChildDocumentCategoryOutput) {
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Archive"] = "ARCHIVE";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Audio"] = "AUDIO";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Blogpost"] = "BLOGPOST";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Code"] = "CODE";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Document"] = "DOCUMENT";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Folder"] = "FOLDER";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Form"] = "FORM";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Image"] = "IMAGE";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["NotSet"] = "NOT_SET";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Other"] = "OTHER";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Page"] = "PAGE";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Pdf"] = "PDF";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Presentation"] = "PRESENTATION";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Shortcut"] = "SHORTCUT";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Spreadsheet"] = "SPREADSHEET";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["Video"] = "VIDEO";
    GraphStoreFullParentDocumentHasChildDocumentCategoryOutput["WebPage"] = "WEB_PAGE";
})(GraphStoreFullParentDocumentHasChildDocumentCategoryOutput = exports.GraphStoreFullParentDocumentHasChildDocumentCategoryOutput || (exports.GraphStoreFullParentDocumentHasChildDocumentCategoryOutput = {}));
var GraphStoreFullPrInRepoPullRequestStatusOutput;
(function (GraphStoreFullPrInRepoPullRequestStatusOutput) {
    GraphStoreFullPrInRepoPullRequestStatusOutput["Declined"] = "DECLINED";
    GraphStoreFullPrInRepoPullRequestStatusOutput["Draft"] = "DRAFT";
    GraphStoreFullPrInRepoPullRequestStatusOutput["Merged"] = "MERGED";
    GraphStoreFullPrInRepoPullRequestStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullPrInRepoPullRequestStatusOutput["Open"] = "OPEN";
    GraphStoreFullPrInRepoPullRequestStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullPrInRepoPullRequestStatusOutput = exports.GraphStoreFullPrInRepoPullRequestStatusOutput || (exports.GraphStoreFullPrInRepoPullRequestStatusOutput = {}));
var GraphStoreFullPrInRepoReviewerReviewerStatusOutput;
(function (GraphStoreFullPrInRepoReviewerReviewerStatusOutput) {
    GraphStoreFullPrInRepoReviewerReviewerStatusOutput["Approved"] = "APPROVED";
    GraphStoreFullPrInRepoReviewerReviewerStatusOutput["Needswork"] = "NEEDSWORK";
    GraphStoreFullPrInRepoReviewerReviewerStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullPrInRepoReviewerReviewerStatusOutput["Unapproved"] = "UNAPPROVED";
})(GraphStoreFullPrInRepoReviewerReviewerStatusOutput = exports.GraphStoreFullPrInRepoReviewerReviewerStatusOutput || (exports.GraphStoreFullPrInRepoReviewerReviewerStatusOutput = {}));
var GraphStoreFullProjectAssociatedBuildBuildStateOutput;
(function (GraphStoreFullProjectAssociatedBuildBuildStateOutput) {
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["Cancelled"] = "CANCELLED";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["Failed"] = "FAILED";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["InProgress"] = "IN_PROGRESS";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["Pending"] = "PENDING";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["Successful"] = "SUCCESSFUL";
    GraphStoreFullProjectAssociatedBuildBuildStateOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedBuildBuildStateOutput = exports.GraphStoreFullProjectAssociatedBuildBuildStateOutput || (exports.GraphStoreFullProjectAssociatedBuildBuildStateOutput = {}));
var GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput;
(function (GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput) {
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["Cancelled"] = "CANCELLED";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["Failed"] = "FAILED";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["InProgress"] = "IN_PROGRESS";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["Pending"] = "PENDING";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["RolledBack"] = "ROLLED_BACK";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["Successful"] = "SUCCESSFUL";
    GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput || (exports.GraphStoreFullProjectAssociatedDeploymentDeploymentStateOutput = {}));
var GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput;
(function (GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput) {
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["Development"] = "DEVELOPMENT";
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["Production"] = "PRODUCTION";
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["Staging"] = "STAGING";
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["Testing"] = "TESTING";
    GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput["Unmapped"] = "UNMAPPED";
})(GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput || (exports.GraphStoreFullProjectAssociatedDeploymentEnvironmentTypeOutput = {}));
var GraphStoreFullProjectAssociatedPrPullRequestStatusOutput;
(function (GraphStoreFullProjectAssociatedPrPullRequestStatusOutput) {
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["Declined"] = "DECLINED";
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["Draft"] = "DRAFT";
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["Merged"] = "MERGED";
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["Open"] = "OPEN";
    GraphStoreFullProjectAssociatedPrPullRequestStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullProjectAssociatedPrPullRequestStatusOutput || (exports.GraphStoreFullProjectAssociatedPrPullRequestStatusOutput = {}));
var GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput;
(function (GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput) {
    GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput["Approved"] = "APPROVED";
    GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput["Needswork"] = "NEEDSWORK";
    GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput["Unapproved"] = "UNAPPROVED";
})(GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput || (exports.GraphStoreFullProjectAssociatedPrReviewerReviewerStatusOutput = {}));
var GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput;
(function (GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput) {
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["Critical"] = "CRITICAL";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["High"] = "HIGH";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["Low"] = "LOW";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["Medium"] = "MEDIUM";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput || (exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilitySeverityOutput = {}));
var GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput;
(function (GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput) {
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput["Closed"] = "CLOSED";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput["Ignored"] = "IGNORED";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput["Open"] = "OPEN";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput || (exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityStatusOutput = {}));
var GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput;
(function (GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput) {
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput["Dast"] = "DAST";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput["Sast"] = "SAST";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput["Sca"] = "SCA";
    GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput = exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput || (exports.GraphStoreFullProjectAssociatedVulnerabilityVulnerabilityTypeOutput = {}));
var GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput;
(function (GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput) {
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["Critical"] = "CRITICAL";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["High"] = "HIGH";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["Low"] = "LOW";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["Medium"] = "MEDIUM";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput || (exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilitySeverityOutput = {}));
var GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput;
(function (GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput) {
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput["Closed"] = "CLOSED";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput["Ignored"] = "IGNORED";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput["Open"] = "OPEN";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput || (exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityStatusOutput = {}));
var GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput;
(function (GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput) {
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput["Dast"] = "DAST";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput["Sast"] = "SAST";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput["Sca"] = "SCA";
    GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput = exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput || (exports.GraphStoreFullSecurityContainerAssociatedToVulnerabilityVulnerabilityTypeOutput = {}));
var GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput;
(function (GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput) {
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["P1"] = "P1";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["P2"] = "P2";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["P3"] = "P3";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["P4"] = "P4";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput["P5"] = "P5";
})(GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput = exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput || (exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentPriorityOutput = {}));
var GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput;
(function (GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput) {
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput["Done"] = "DONE";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput["Indeterminate"] = "INDETERMINATE";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput["New"] = "NEW";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput["Undefined"] = "UNDEFINED";
})(GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput = exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput || (exports.GraphStoreFullServiceLinkedIncidentJiraServiceManagementIncidentStatusOutput = {}));
var GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput;
(function (GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput) {
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["Cancelled"] = "CANCELLED";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["Failed"] = "FAILED";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["InProgress"] = "IN_PROGRESS";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["Pending"] = "PENDING";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["RolledBack"] = "ROLLED_BACK";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["Successful"] = "SUCCESSFUL";
    GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput = exports.GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput || (exports.GraphStoreFullSprintAssociatedDeploymentDeploymentStateOutput = {}));
var GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput;
(function (GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput) {
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["Development"] = "DEVELOPMENT";
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["Production"] = "PRODUCTION";
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["Staging"] = "STAGING";
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["Testing"] = "TESTING";
    GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput["Unmapped"] = "UNMAPPED";
})(GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput = exports.GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput || (exports.GraphStoreFullSprintAssociatedDeploymentEnvironmentTypeOutput = {}));
var GraphStoreFullSprintAssociatedPrPullRequestStatusOutput;
(function (GraphStoreFullSprintAssociatedPrPullRequestStatusOutput) {
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["Declined"] = "DECLINED";
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["Draft"] = "DRAFT";
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["Merged"] = "MERGED";
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["Open"] = "OPEN";
    GraphStoreFullSprintAssociatedPrPullRequestStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSprintAssociatedPrPullRequestStatusOutput = exports.GraphStoreFullSprintAssociatedPrPullRequestStatusOutput || (exports.GraphStoreFullSprintAssociatedPrPullRequestStatusOutput = {}));
var GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput;
(function (GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput) {
    GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput["Approved"] = "APPROVED";
    GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput["Needswork"] = "NEEDSWORK";
    GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput["Unapproved"] = "UNAPPROVED";
})(GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput = exports.GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput || (exports.GraphStoreFullSprintAssociatedPrReviewerReviewerStatusOutput = {}));
var GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput;
(function (GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput) {
    GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput["Done"] = "DONE";
    GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput["Indeterminate"] = "INDETERMINATE";
    GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput["New"] = "NEW";
    GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput["Undefined"] = "UNDEFINED";
})(GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput || (exports.GraphStoreFullSprintAssociatedVulnerabilityStatusCategoryOutput = {}));
var GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput;
(function (GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput) {
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["Critical"] = "CRITICAL";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["High"] = "HIGH";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["Low"] = "LOW";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["Medium"] = "MEDIUM";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput || (exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilitySeverityOutput = {}));
var GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput;
(function (GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput) {
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput["Closed"] = "CLOSED";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput["Ignored"] = "IGNORED";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput["Open"] = "OPEN";
    GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput = exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput || (exports.GraphStoreFullSprintAssociatedVulnerabilityVulnerabilityStatusOutput = {}));
var GraphStoreFullSprintContainsIssueStatusCategoryOutput;
(function (GraphStoreFullSprintContainsIssueStatusCategoryOutput) {
    GraphStoreFullSprintContainsIssueStatusCategoryOutput["Done"] = "DONE";
    GraphStoreFullSprintContainsIssueStatusCategoryOutput["Indeterminate"] = "INDETERMINATE";
    GraphStoreFullSprintContainsIssueStatusCategoryOutput["New"] = "NEW";
    GraphStoreFullSprintContainsIssueStatusCategoryOutput["Undefined"] = "UNDEFINED";
})(GraphStoreFullSprintContainsIssueStatusCategoryOutput = exports.GraphStoreFullSprintContainsIssueStatusCategoryOutput || (exports.GraphStoreFullSprintContainsIssueStatusCategoryOutput = {}));
var GraphStoreFullVersionAssociatedDesignDesignStatusOutput;
(function (GraphStoreFullVersionAssociatedDesignDesignStatusOutput) {
    GraphStoreFullVersionAssociatedDesignDesignStatusOutput["None"] = "NONE";
    GraphStoreFullVersionAssociatedDesignDesignStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullVersionAssociatedDesignDesignStatusOutput["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    GraphStoreFullVersionAssociatedDesignDesignStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullVersionAssociatedDesignDesignStatusOutput = exports.GraphStoreFullVersionAssociatedDesignDesignStatusOutput || (exports.GraphStoreFullVersionAssociatedDesignDesignStatusOutput = {}));
var GraphStoreFullVersionAssociatedDesignDesignTypeOutput;
(function (GraphStoreFullVersionAssociatedDesignDesignTypeOutput) {
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["Canvas"] = "CANVAS";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["File"] = "FILE";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["Group"] = "GROUP";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["Node"] = "NODE";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["Other"] = "OTHER";
    GraphStoreFullVersionAssociatedDesignDesignTypeOutput["Prototype"] = "PROTOTYPE";
})(GraphStoreFullVersionAssociatedDesignDesignTypeOutput = exports.GraphStoreFullVersionAssociatedDesignDesignTypeOutput || (exports.GraphStoreFullVersionAssociatedDesignDesignTypeOutput = {}));
var GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput;
(function (GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput) {
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["Critical"] = "CRITICAL";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["High"] = "HIGH";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["Low"] = "LOW";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["Medium"] = "MEDIUM";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["NotSet"] = "NOT_SET";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput || (exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilitySeverityOutput = {}));
var GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput;
(function (GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput) {
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput["Closed"] = "CLOSED";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput["Ignored"] = "IGNORED";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput["NotSet"] = "NOT_SET";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput["Open"] = "OPEN";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput || (exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityStatusOutput = {}));
var GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput;
(function (GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput) {
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput["Dast"] = "DAST";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput["NotSet"] = "NOT_SET";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput["Sast"] = "SAST";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput["Sca"] = "SCA";
    GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput["Unknown"] = "UNKNOWN";
})(GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput = exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput || (exports.GraphStoreFullVulnerabilityAssociatedIssueVulnerabilityTypeOutput = {}));
var GraphStoreIssueAssociatedDeploymentDeploymentState;
(function (GraphStoreIssueAssociatedDeploymentDeploymentState) {
    GraphStoreIssueAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    GraphStoreIssueAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    GraphStoreIssueAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    GraphStoreIssueAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    GraphStoreIssueAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    GraphStoreIssueAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    GraphStoreIssueAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    GraphStoreIssueAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(GraphStoreIssueAssociatedDeploymentDeploymentState = exports.GraphStoreIssueAssociatedDeploymentDeploymentState || (exports.GraphStoreIssueAssociatedDeploymentDeploymentState = {}));
var GraphStoreIssueAssociatedDeploymentEnvironmentType;
(function (GraphStoreIssueAssociatedDeploymentEnvironmentType) {
    GraphStoreIssueAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    GraphStoreIssueAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    GraphStoreIssueAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    GraphStoreIssueAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    GraphStoreIssueAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    GraphStoreIssueAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(GraphStoreIssueAssociatedDeploymentEnvironmentType = exports.GraphStoreIssueAssociatedDeploymentEnvironmentType || (exports.GraphStoreIssueAssociatedDeploymentEnvironmentType = {}));
var GraphStoreIssueHasAutodevJobAutodevJobStatus;
(function (GraphStoreIssueHasAutodevJobAutodevJobStatus) {
    GraphStoreIssueHasAutodevJobAutodevJobStatus["Cancelled"] = "CANCELLED";
    GraphStoreIssueHasAutodevJobAutodevJobStatus["Completed"] = "COMPLETED";
    GraphStoreIssueHasAutodevJobAutodevJobStatus["Failed"] = "FAILED";
    GraphStoreIssueHasAutodevJobAutodevJobStatus["InProgress"] = "IN_PROGRESS";
    GraphStoreIssueHasAutodevJobAutodevJobStatus["Pending"] = "PENDING";
    GraphStoreIssueHasAutodevJobAutodevJobStatus["Unknown"] = "UNKNOWN";
})(GraphStoreIssueHasAutodevJobAutodevJobStatus = exports.GraphStoreIssueHasAutodevJobAutodevJobStatus || (exports.GraphStoreIssueHasAutodevJobAutodevJobStatus = {}));
var GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType;
(function (GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType) {
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["ExistingWorkItem"] = "EXISTING_WORK_ITEM";
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["NewWorkItem"] = "NEW_WORK_ITEM";
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["NotSet"] = "NOT_SET";
})(GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType || (exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = {}));
var GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus;
(function (GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus) {
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Accepted"] = "ACCEPTED";
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Open"] = "OPEN";
    GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Rejected"] = "REJECTED";
})(GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus || (exports.GraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = {}));
var GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority;
(function (GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority) {
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["NotSet"] = "NOT_SET";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P1"] = "P1";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P2"] = "P2";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P3"] = "P3";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P4"] = "P4";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P5"] = "P5";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["Pending"] = "PENDING";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["Unknown"] = "UNKNOWN";
})(GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority || (exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = {}));
var GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus;
(function (GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus) {
    GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Done"] = "DONE";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Indeterminate"] = "INDETERMINATE";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["New"] = "NEW";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["NotSet"] = "NOT_SET";
    GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Undefined"] = "UNDEFINED";
})(GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus || (exports.GraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = {}));
var GraphStoreProjectAssociatedAutodevJobAutodevJobStatus;
(function (GraphStoreProjectAssociatedAutodevJobAutodevJobStatus) {
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Cancelled"] = "CANCELLED";
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Completed"] = "COMPLETED";
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Failed"] = "FAILED";
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["InProgress"] = "IN_PROGRESS";
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Pending"] = "PENDING";
    GraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedAutodevJobAutodevJobStatus = exports.GraphStoreProjectAssociatedAutodevJobAutodevJobStatus || (exports.GraphStoreProjectAssociatedAutodevJobAutodevJobStatus = {}));
var GraphStoreProjectAssociatedBuildBuildState;
(function (GraphStoreProjectAssociatedBuildBuildState) {
    GraphStoreProjectAssociatedBuildBuildState["Cancelled"] = "CANCELLED";
    GraphStoreProjectAssociatedBuildBuildState["Failed"] = "FAILED";
    GraphStoreProjectAssociatedBuildBuildState["InProgress"] = "IN_PROGRESS";
    GraphStoreProjectAssociatedBuildBuildState["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedBuildBuildState["Pending"] = "PENDING";
    GraphStoreProjectAssociatedBuildBuildState["Successful"] = "SUCCESSFUL";
    GraphStoreProjectAssociatedBuildBuildState["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedBuildBuildState = exports.GraphStoreProjectAssociatedBuildBuildState || (exports.GraphStoreProjectAssociatedBuildBuildState = {}));
var GraphStoreProjectAssociatedDeploymentDeploymentState;
(function (GraphStoreProjectAssociatedDeploymentDeploymentState) {
    GraphStoreProjectAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    GraphStoreProjectAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    GraphStoreProjectAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    GraphStoreProjectAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    GraphStoreProjectAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    GraphStoreProjectAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    GraphStoreProjectAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedDeploymentDeploymentState = exports.GraphStoreProjectAssociatedDeploymentDeploymentState || (exports.GraphStoreProjectAssociatedDeploymentDeploymentState = {}));
var GraphStoreProjectAssociatedDeploymentEnvironmentType;
(function (GraphStoreProjectAssociatedDeploymentEnvironmentType) {
    GraphStoreProjectAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    GraphStoreProjectAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    GraphStoreProjectAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    GraphStoreProjectAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    GraphStoreProjectAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(GraphStoreProjectAssociatedDeploymentEnvironmentType = exports.GraphStoreProjectAssociatedDeploymentEnvironmentType || (exports.GraphStoreProjectAssociatedDeploymentEnvironmentType = {}));
var GraphStoreProjectAssociatedPrPullRequestStatus;
(function (GraphStoreProjectAssociatedPrPullRequestStatus) {
    GraphStoreProjectAssociatedPrPullRequestStatus["Declined"] = "DECLINED";
    GraphStoreProjectAssociatedPrPullRequestStatus["Draft"] = "DRAFT";
    GraphStoreProjectAssociatedPrPullRequestStatus["Merged"] = "MERGED";
    GraphStoreProjectAssociatedPrPullRequestStatus["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedPrPullRequestStatus["Open"] = "OPEN";
    GraphStoreProjectAssociatedPrPullRequestStatus["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedPrPullRequestStatus = exports.GraphStoreProjectAssociatedPrPullRequestStatus || (exports.GraphStoreProjectAssociatedPrPullRequestStatus = {}));
var GraphStoreProjectAssociatedPrReviewerReviewerStatus;
(function (GraphStoreProjectAssociatedPrReviewerReviewerStatus) {
    GraphStoreProjectAssociatedPrReviewerReviewerStatus["Approved"] = "APPROVED";
    GraphStoreProjectAssociatedPrReviewerReviewerStatus["Needswork"] = "NEEDSWORK";
    GraphStoreProjectAssociatedPrReviewerReviewerStatus["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedPrReviewerReviewerStatus["Unapproved"] = "UNAPPROVED";
})(GraphStoreProjectAssociatedPrReviewerReviewerStatus = exports.GraphStoreProjectAssociatedPrReviewerReviewerStatus || (exports.GraphStoreProjectAssociatedPrReviewerReviewerStatus = {}));
var GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity;
(function (GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity) {
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Critical"] = "CRITICAL";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["High"] = "HIGH";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Low"] = "LOW";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Medium"] = "MEDIUM";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity || (exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = {}));
var GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus;
(function (GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus) {
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Closed"] = "CLOSED";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Ignored"] = "IGNORED";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Open"] = "OPEN";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus || (exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = {}));
var GraphStoreProjectAssociatedVulnerabilityVulnerabilityType;
(function (GraphStoreProjectAssociatedVulnerabilityVulnerabilityType) {
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Dast"] = "DAST";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityType["NotSet"] = "NOT_SET";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Sast"] = "SAST";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Sca"] = "SCA";
    GraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Unknown"] = "UNKNOWN";
})(GraphStoreProjectAssociatedVulnerabilityVulnerabilityType = exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityType || (exports.GraphStoreProjectAssociatedVulnerabilityVulnerabilityType = {}));
var GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority;
(function (GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority) {
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["NotSet"] = "NOT_SET";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P1"] = "P1";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P2"] = "P2";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P3"] = "P3";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P4"] = "P4";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P5"] = "P5";
})(GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority || (exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = {}));
var GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus;
(function (GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus) {
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Done"] = "DONE";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Indeterminate"] = "INDETERMINATE";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["New"] = "NEW";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["NotSet"] = "NOT_SET";
    GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Undefined"] = "UNDEFINED";
})(GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus || (exports.GraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = {}));
var GraphStoreSprintAssociatedDeploymentDeploymentState;
(function (GraphStoreSprintAssociatedDeploymentDeploymentState) {
    GraphStoreSprintAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    GraphStoreSprintAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    GraphStoreSprintAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    GraphStoreSprintAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    GraphStoreSprintAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    GraphStoreSprintAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    GraphStoreSprintAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(GraphStoreSprintAssociatedDeploymentDeploymentState = exports.GraphStoreSprintAssociatedDeploymentDeploymentState || (exports.GraphStoreSprintAssociatedDeploymentDeploymentState = {}));
var GraphStoreSprintAssociatedDeploymentEnvironmentType;
(function (GraphStoreSprintAssociatedDeploymentEnvironmentType) {
    GraphStoreSprintAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    GraphStoreSprintAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    GraphStoreSprintAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    GraphStoreSprintAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    GraphStoreSprintAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(GraphStoreSprintAssociatedDeploymentEnvironmentType = exports.GraphStoreSprintAssociatedDeploymentEnvironmentType || (exports.GraphStoreSprintAssociatedDeploymentEnvironmentType = {}));
var GraphStoreSprintAssociatedPrPullRequestStatus;
(function (GraphStoreSprintAssociatedPrPullRequestStatus) {
    GraphStoreSprintAssociatedPrPullRequestStatus["Declined"] = "DECLINED";
    GraphStoreSprintAssociatedPrPullRequestStatus["Draft"] = "DRAFT";
    GraphStoreSprintAssociatedPrPullRequestStatus["Merged"] = "MERGED";
    GraphStoreSprintAssociatedPrPullRequestStatus["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedPrPullRequestStatus["Open"] = "OPEN";
    GraphStoreSprintAssociatedPrPullRequestStatus["Unknown"] = "UNKNOWN";
})(GraphStoreSprintAssociatedPrPullRequestStatus = exports.GraphStoreSprintAssociatedPrPullRequestStatus || (exports.GraphStoreSprintAssociatedPrPullRequestStatus = {}));
var GraphStoreSprintAssociatedPrReviewerReviewerStatus;
(function (GraphStoreSprintAssociatedPrReviewerReviewerStatus) {
    GraphStoreSprintAssociatedPrReviewerReviewerStatus["Approved"] = "APPROVED";
    GraphStoreSprintAssociatedPrReviewerReviewerStatus["Needswork"] = "NEEDSWORK";
    GraphStoreSprintAssociatedPrReviewerReviewerStatus["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedPrReviewerReviewerStatus["Unapproved"] = "UNAPPROVED";
})(GraphStoreSprintAssociatedPrReviewerReviewerStatus = exports.GraphStoreSprintAssociatedPrReviewerReviewerStatus || (exports.GraphStoreSprintAssociatedPrReviewerReviewerStatus = {}));
var GraphStoreSprintAssociatedVulnerabilityStatusCategory;
(function (GraphStoreSprintAssociatedVulnerabilityStatusCategory) {
    GraphStoreSprintAssociatedVulnerabilityStatusCategory["Done"] = "DONE";
    GraphStoreSprintAssociatedVulnerabilityStatusCategory["Indeterminate"] = "INDETERMINATE";
    GraphStoreSprintAssociatedVulnerabilityStatusCategory["New"] = "NEW";
    GraphStoreSprintAssociatedVulnerabilityStatusCategory["Undefined"] = "UNDEFINED";
})(GraphStoreSprintAssociatedVulnerabilityStatusCategory = exports.GraphStoreSprintAssociatedVulnerabilityStatusCategory || (exports.GraphStoreSprintAssociatedVulnerabilityStatusCategory = {}));
var GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity;
(function (GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity) {
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Critical"] = "CRITICAL";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["High"] = "HIGH";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Low"] = "LOW";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Medium"] = "MEDIUM";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity || (exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = {}));
var GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus;
(function (GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus) {
    GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Closed"] = "CLOSED";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Ignored"] = "IGNORED";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["NotSet"] = "NOT_SET";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Open"] = "OPEN";
    GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus || (exports.GraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = {}));
var GraphStoreSprintContainsIssueStatusCategory;
(function (GraphStoreSprintContainsIssueStatusCategory) {
    GraphStoreSprintContainsIssueStatusCategory["Done"] = "DONE";
    GraphStoreSprintContainsIssueStatusCategory["Indeterminate"] = "INDETERMINATE";
    GraphStoreSprintContainsIssueStatusCategory["New"] = "NEW";
    GraphStoreSprintContainsIssueStatusCategory["Undefined"] = "UNDEFINED";
})(GraphStoreSprintContainsIssueStatusCategory = exports.GraphStoreSprintContainsIssueStatusCategory || (exports.GraphStoreSprintContainsIssueStatusCategory = {}));
var GraphStoreVersionAssociatedDesignDesignStatus;
(function (GraphStoreVersionAssociatedDesignDesignStatus) {
    GraphStoreVersionAssociatedDesignDesignStatus["None"] = "NONE";
    GraphStoreVersionAssociatedDesignDesignStatus["NotSet"] = "NOT_SET";
    GraphStoreVersionAssociatedDesignDesignStatus["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    GraphStoreVersionAssociatedDesignDesignStatus["Unknown"] = "UNKNOWN";
})(GraphStoreVersionAssociatedDesignDesignStatus = exports.GraphStoreVersionAssociatedDesignDesignStatus || (exports.GraphStoreVersionAssociatedDesignDesignStatus = {}));
var GraphStoreVersionAssociatedDesignDesignType;
(function (GraphStoreVersionAssociatedDesignDesignType) {
    GraphStoreVersionAssociatedDesignDesignType["Canvas"] = "CANVAS";
    GraphStoreVersionAssociatedDesignDesignType["File"] = "FILE";
    GraphStoreVersionAssociatedDesignDesignType["Group"] = "GROUP";
    GraphStoreVersionAssociatedDesignDesignType["Node"] = "NODE";
    GraphStoreVersionAssociatedDesignDesignType["NotSet"] = "NOT_SET";
    GraphStoreVersionAssociatedDesignDesignType["Other"] = "OTHER";
    GraphStoreVersionAssociatedDesignDesignType["Prototype"] = "PROTOTYPE";
})(GraphStoreVersionAssociatedDesignDesignType = exports.GraphStoreVersionAssociatedDesignDesignType || (exports.GraphStoreVersionAssociatedDesignDesignType = {}));
var GrowthUnifiedProfileAnchorType;
(function (GrowthUnifiedProfileAnchorType) {
    GrowthUnifiedProfileAnchorType["Pfm"] = "PFM";
    GrowthUnifiedProfileAnchorType["Seo"] = "SEO";
})(GrowthUnifiedProfileAnchorType = exports.GrowthUnifiedProfileAnchorType || (exports.GrowthUnifiedProfileAnchorType = {}));
var GrowthUnifiedProfileChannel;
(function (GrowthUnifiedProfileChannel) {
    GrowthUnifiedProfileChannel["PaidContent"] = "PAID_CONTENT";
    GrowthUnifiedProfileChannel["PaidDisplay"] = "PAID_DISPLAY";
    GrowthUnifiedProfileChannel["PaidReviewSites"] = "PAID_REVIEW_SITES";
    GrowthUnifiedProfileChannel["PaidSearch"] = "PAID_SEARCH";
    GrowthUnifiedProfileChannel["PaidSocial"] = "PAID_SOCIAL";
})(GrowthUnifiedProfileChannel = exports.GrowthUnifiedProfileChannel || (exports.GrowthUnifiedProfileChannel = {}));
var GrowthUnifiedProfileCompanySize;
(function (GrowthUnifiedProfileCompanySize) {
    GrowthUnifiedProfileCompanySize["Large"] = "LARGE";
    GrowthUnifiedProfileCompanySize["Medium"] = "MEDIUM";
    GrowthUnifiedProfileCompanySize["Small"] = "SMALL";
    GrowthUnifiedProfileCompanySize["Unknown"] = "UNKNOWN";
})(GrowthUnifiedProfileCompanySize = exports.GrowthUnifiedProfileCompanySize || (exports.GrowthUnifiedProfileCompanySize = {}));
var GrowthUnifiedProfileCompanyType;
(function (GrowthUnifiedProfileCompanyType) {
    GrowthUnifiedProfileCompanyType["Private"] = "PRIVATE";
    GrowthUnifiedProfileCompanyType["Public"] = "PUBLIC";
})(GrowthUnifiedProfileCompanyType = exports.GrowthUnifiedProfileCompanyType || (exports.GrowthUnifiedProfileCompanyType = {}));
var GrowthUnifiedProfileConfluenceFamiliarity;
(function (GrowthUnifiedProfileConfluenceFamiliarity) {
    GrowthUnifiedProfileConfluenceFamiliarity["Experience"] = "EXPERIENCE";
    GrowthUnifiedProfileConfluenceFamiliarity["Middle"] = "MIDDLE";
    GrowthUnifiedProfileConfluenceFamiliarity["New"] = "NEW";
})(GrowthUnifiedProfileConfluenceFamiliarity = exports.GrowthUnifiedProfileConfluenceFamiliarity || (exports.GrowthUnifiedProfileConfluenceFamiliarity = {}));
var GrowthUnifiedProfileDomainType;
(function (GrowthUnifiedProfileDomainType) {
    GrowthUnifiedProfileDomainType["Business"] = "BUSINESS";
    GrowthUnifiedProfileDomainType["Personal"] = "PERSONAL";
})(GrowthUnifiedProfileDomainType = exports.GrowthUnifiedProfileDomainType || (exports.GrowthUnifiedProfileDomainType = {}));
var GrowthUnifiedProfileEnrichmentStatus;
(function (GrowthUnifiedProfileEnrichmentStatus) {
    GrowthUnifiedProfileEnrichmentStatus["Complete"] = "COMPLETE";
    GrowthUnifiedProfileEnrichmentStatus["Error"] = "ERROR";
    GrowthUnifiedProfileEnrichmentStatus["InProgress"] = "IN_PROGRESS";
    GrowthUnifiedProfileEnrichmentStatus["Pending"] = "PENDING";
})(GrowthUnifiedProfileEnrichmentStatus = exports.GrowthUnifiedProfileEnrichmentStatus || (exports.GrowthUnifiedProfileEnrichmentStatus = {}));
var GrowthUnifiedProfileEnterpriseAccountStatus;
(function (GrowthUnifiedProfileEnterpriseAccountStatus) {
    GrowthUnifiedProfileEnterpriseAccountStatus["Bronze"] = "BRONZE";
    GrowthUnifiedProfileEnterpriseAccountStatus["Gam"] = "GAM";
    GrowthUnifiedProfileEnterpriseAccountStatus["Gold"] = "GOLD";
    GrowthUnifiedProfileEnterpriseAccountStatus["Platimun"] = "PLATIMUN";
    GrowthUnifiedProfileEnterpriseAccountStatus["Silver"] = "SILVER";
})(GrowthUnifiedProfileEnterpriseAccountStatus = exports.GrowthUnifiedProfileEnterpriseAccountStatus || (exports.GrowthUnifiedProfileEnterpriseAccountStatus = {}));
var GrowthUnifiedProfileEntityType;
(function (GrowthUnifiedProfileEntityType) {
    GrowthUnifiedProfileEntityType["AjsAnonymousUser"] = "AJS_ANONYMOUS_USER";
    GrowthUnifiedProfileEntityType["AtlassianAccount"] = "ATLASSIAN_ACCOUNT";
    GrowthUnifiedProfileEntityType["Org"] = "ORG";
    GrowthUnifiedProfileEntityType["Site"] = "SITE";
})(GrowthUnifiedProfileEntityType = exports.GrowthUnifiedProfileEntityType || (exports.GrowthUnifiedProfileEntityType = {}));
var GrowthUnifiedProfileEntryType;
(function (GrowthUnifiedProfileEntryType) {
    GrowthUnifiedProfileEntryType["Existing"] = "EXISTING";
    GrowthUnifiedProfileEntryType["New"] = "NEW";
})(GrowthUnifiedProfileEntryType = exports.GrowthUnifiedProfileEntryType || (exports.GrowthUnifiedProfileEntryType = {}));
var GrowthUnifiedProfileFeatureType;
(function (GrowthUnifiedProfileFeatureType) {
    GrowthUnifiedProfileFeatureType["Stateless"] = "STATELESS";
})(GrowthUnifiedProfileFeatureType = exports.GrowthUnifiedProfileFeatureType || (exports.GrowthUnifiedProfileFeatureType = {}));
var GrowthUnifiedProfileJtbd;
(function (GrowthUnifiedProfileJtbd) {
    GrowthUnifiedProfileJtbd["AdHocTaskAndIncidentManagement"] = "AD_HOC_TASK_AND_INCIDENT_MANAGEMENT";
    GrowthUnifiedProfileJtbd["Brainstorming"] = "BRAINSTORMING";
    GrowthUnifiedProfileJtbd["Budgets"] = "BUDGETS";
    GrowthUnifiedProfileJtbd["CampaignPlanning"] = "CAMPAIGN_PLANNING";
    GrowthUnifiedProfileJtbd["CdWrtng"] = "CD_WRTNG";
    GrowthUnifiedProfileJtbd["CentralizedDocumentation"] = "CENTRALIZED_DOCUMENTATION";
    GrowthUnifiedProfileJtbd["ComplianceAndRiskManagement"] = "COMPLIANCE_AND_RISK_MANAGEMENT";
    GrowthUnifiedProfileJtbd["CreativeBriefs"] = "CREATIVE_BRIEFS";
    GrowthUnifiedProfileJtbd["CustomerJourneys"] = "CUSTOMER_JOURNEYS";
    GrowthUnifiedProfileJtbd["EstimateTimeAndEffort"] = "ESTIMATE_TIME_AND_EFFORT";
    GrowthUnifiedProfileJtbd["FlowchartAndDiagrams"] = "FLOWCHART_AND_DIAGRAMS";
    GrowthUnifiedProfileJtbd["GanttChart"] = "GANTT_CHART";
    GrowthUnifiedProfileJtbd["ImproveTeamProcesses"] = "IMPROVE_TEAM_PROCESSES";
    GrowthUnifiedProfileJtbd["ImproveWorkflow"] = "IMPROVE_WORKFLOW";
    GrowthUnifiedProfileJtbd["KnowledgeHub"] = "KNOWLEDGE_HUB";
    GrowthUnifiedProfileJtbd["LaunchCampaigns"] = "LAUNCH_CAMPAIGNS";
    GrowthUnifiedProfileJtbd["ManageTasks"] = "MANAGE_TASKS";
    GrowthUnifiedProfileJtbd["ManagingClientAndVendorRelationships"] = "MANAGING_CLIENT_AND_VENDOR_RELATIONSHIPS";
    GrowthUnifiedProfileJtbd["MapWorkDependencies"] = "MAP_WORK_DEPENDENCIES";
    GrowthUnifiedProfileJtbd["MarketingContent"] = "MARKETING_CONTENT";
    GrowthUnifiedProfileJtbd["MeetingNotes"] = "MEETING_NOTES";
    GrowthUnifiedProfileJtbd["PlanAndManage"] = "PLAN_AND_MANAGE";
    GrowthUnifiedProfileJtbd["PrioritizeWork"] = "PRIORITIZE_WORK";
    GrowthUnifiedProfileJtbd["ProcessMapping"] = "PROCESS_MAPPING";
    GrowthUnifiedProfileJtbd["ProjectPlan"] = "PROJECT_PLAN";
    GrowthUnifiedProfileJtbd["ProjectPlanning"] = "PROJECT_PLANNING";
    GrowthUnifiedProfileJtbd["ProjectPlanningAndCoordination"] = "PROJECT_PLANNING_AND_COORDINATION";
    GrowthUnifiedProfileJtbd["ProjectProgress"] = "PROJECT_PROGRESS";
    GrowthUnifiedProfileJtbd["RequirementsDoc"] = "REQUIREMENTS_DOC";
    GrowthUnifiedProfileJtbd["RunSprints"] = "RUN_SPRINTS";
    GrowthUnifiedProfileJtbd["Stakeholders"] = "STAKEHOLDERS";
    GrowthUnifiedProfileJtbd["StrategiesAndGoals"] = "STRATEGIES_AND_GOALS";
    GrowthUnifiedProfileJtbd["SystemAndToolEvaluations"] = "SYSTEM_AND_TOOL_EVALUATIONS";
    GrowthUnifiedProfileJtbd["TaskTracking"] = "TASK_TRACKING";
    GrowthUnifiedProfileJtbd["TeamStatusUpdate"] = "TEAM_STATUS_UPDATE";
    GrowthUnifiedProfileJtbd["TrackingRprtng"] = "TRACKING_RPRTNG";
    GrowthUnifiedProfileJtbd["TrackBugs"] = "TRACK_BUGS";
    GrowthUnifiedProfileJtbd["UseKanbanBoard"] = "USE_KANBAN_BOARD";
    GrowthUnifiedProfileJtbd["WorkInScrum"] = "WORK_IN_SCRUM";
})(GrowthUnifiedProfileJtbd = exports.GrowthUnifiedProfileJtbd || (exports.GrowthUnifiedProfileJtbd = {}));
var GrowthUnifiedProfileJiraFamiliarity;
(function (GrowthUnifiedProfileJiraFamiliarity) {
    GrowthUnifiedProfileJiraFamiliarity["Experience"] = "EXPERIENCE";
    GrowthUnifiedProfileJiraFamiliarity["Middle"] = "MIDDLE";
    GrowthUnifiedProfileJiraFamiliarity["New"] = "NEW";
})(GrowthUnifiedProfileJiraFamiliarity = exports.GrowthUnifiedProfileJiraFamiliarity || (exports.GrowthUnifiedProfileJiraFamiliarity = {}));
var GrowthUnifiedProfileOnboardingContextProjectLandingSelection;
(function (GrowthUnifiedProfileOnboardingContextProjectLandingSelection) {
    GrowthUnifiedProfileOnboardingContextProjectLandingSelection["CreateProject"] = "CREATE_PROJECT";
    GrowthUnifiedProfileOnboardingContextProjectLandingSelection["SampleProject"] = "SAMPLE_PROJECT";
})(GrowthUnifiedProfileOnboardingContextProjectLandingSelection = exports.GrowthUnifiedProfileOnboardingContextProjectLandingSelection || (exports.GrowthUnifiedProfileOnboardingContextProjectLandingSelection = {}));
var GrowthUnifiedProfileProduct;
(function (GrowthUnifiedProfileProduct) {
    GrowthUnifiedProfileProduct["Compass"] = "compass";
    GrowthUnifiedProfileProduct["Confluence"] = "confluence";
    GrowthUnifiedProfileProduct["Jira"] = "jira";
    GrowthUnifiedProfileProduct["Jpd"] = "jpd";
    GrowthUnifiedProfileProduct["Jsm"] = "jsm";
    GrowthUnifiedProfileProduct["Jwm"] = "jwm";
    GrowthUnifiedProfileProduct["Trello"] = "trello";
})(GrowthUnifiedProfileProduct = exports.GrowthUnifiedProfileProduct || (exports.GrowthUnifiedProfileProduct = {}));
var GrowthUnifiedProfileProductEdition;
(function (GrowthUnifiedProfileProductEdition) {
    GrowthUnifiedProfileProductEdition["Enterprise"] = "ENTERPRISE";
    GrowthUnifiedProfileProductEdition["Free"] = "FREE";
    GrowthUnifiedProfileProductEdition["Premium"] = "PREMIUM";
    GrowthUnifiedProfileProductEdition["Standard"] = "STANDARD";
})(GrowthUnifiedProfileProductEdition = exports.GrowthUnifiedProfileProductEdition || (exports.GrowthUnifiedProfileProductEdition = {}));
var GrowthUnifiedProfileProductKey;
(function (GrowthUnifiedProfileProductKey) {
    GrowthUnifiedProfileProductKey["Confluence"] = "CONFLUENCE";
    GrowthUnifiedProfileProductKey["Jira"] = "JIRA";
    GrowthUnifiedProfileProductKey["JiraProductDiscovery"] = "JIRA_PRODUCT_DISCOVERY";
    GrowthUnifiedProfileProductKey["JiraServiceManagement"] = "JIRA_SERVICE_MANAGEMENT";
    GrowthUnifiedProfileProductKey["Loom"] = "LOOM";
})(GrowthUnifiedProfileProductKey = exports.GrowthUnifiedProfileProductKey || (exports.GrowthUnifiedProfileProductKey = {}));
var GrowthUnifiedProfileRollingDateIntervalInput;
(function (GrowthUnifiedProfileRollingDateIntervalInput) {
    GrowthUnifiedProfileRollingDateIntervalInput["Days_1"] = "DAYS_1";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_7"] = "DAYS_7";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_30"] = "DAYS_30";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_90"] = "DAYS_90";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_180"] = "DAYS_180";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_270"] = "DAYS_270";
    GrowthUnifiedProfileRollingDateIntervalInput["Days_365"] = "DAYS_365";
})(GrowthUnifiedProfileRollingDateIntervalInput = exports.GrowthUnifiedProfileRollingDateIntervalInput || (exports.GrowthUnifiedProfileRollingDateIntervalInput = {}));
var GrowthUnifiedProfileTeamType;
(function (GrowthUnifiedProfileTeamType) {
    GrowthUnifiedProfileTeamType["CustomerService"] = "CUSTOMER_SERVICE";
    GrowthUnifiedProfileTeamType["DataScience"] = "DATA_SCIENCE";
    GrowthUnifiedProfileTeamType["Design"] = "DESIGN";
    GrowthUnifiedProfileTeamType["Finance"] = "FINANCE";
    GrowthUnifiedProfileTeamType["HumanResources"] = "HUMAN_RESOURCES";
    GrowthUnifiedProfileTeamType["ItSupport"] = "IT_SUPPORT";
    GrowthUnifiedProfileTeamType["Legal"] = "LEGAL";
    GrowthUnifiedProfileTeamType["Marketing"] = "MARKETING";
    GrowthUnifiedProfileTeamType["Operations"] = "OPERATIONS";
    GrowthUnifiedProfileTeamType["Other"] = "OTHER";
    GrowthUnifiedProfileTeamType["ProductManagement"] = "PRODUCT_MANAGEMENT";
    GrowthUnifiedProfileTeamType["ProgramManagement"] = "PROGRAM_MANAGEMENT";
    GrowthUnifiedProfileTeamType["ProjectManagement"] = "PROJECT_MANAGEMENT";
    GrowthUnifiedProfileTeamType["Sales"] = "SALES";
    GrowthUnifiedProfileTeamType["SoftwareDevelopment"] = "SOFTWARE_DEVELOPMENT";
    GrowthUnifiedProfileTeamType["SoftwareEngineering"] = "SOFTWARE_ENGINEERING";
})(GrowthUnifiedProfileTeamType = exports.GrowthUnifiedProfileTeamType || (exports.GrowthUnifiedProfileTeamType = {}));
var GrowthUnifiedProfileTrialTrigger;
(function (GrowthUnifiedProfileTrialTrigger) {
    GrowthUnifiedProfileTrialTrigger["AutoUpgradeUserLimit"] = "AUTO_UPGRADE_USER_LIMIT";
    GrowthUnifiedProfileTrialTrigger["CrossflowUserLimit"] = "CROSSFLOW_USER_LIMIT";
    GrowthUnifiedProfileTrialTrigger["EditionParity"] = "EDITION_PARITY";
    GrowthUnifiedProfileTrialTrigger["Reactivation"] = "REACTIVATION";
    GrowthUnifiedProfileTrialTrigger["ReverseTrial"] = "REVERSE_TRIAL";
    GrowthUnifiedProfileTrialTrigger["Ui"] = "UI";
})(GrowthUnifiedProfileTrialTrigger = exports.GrowthUnifiedProfileTrialTrigger || (exports.GrowthUnifiedProfileTrialTrigger = {}));
var GrowthUnifiedProfileTrialType;
(function (GrowthUnifiedProfileTrialType) {
    GrowthUnifiedProfileTrialType["AutoUpgrade"] = "AUTO_UPGRADE";
    GrowthUnifiedProfileTrialType["DirectTrial"] = "DIRECT_TRIAL";
    GrowthUnifiedProfileTrialType["ManualTrial"] = "MANUAL_TRIAL";
    GrowthUnifiedProfileTrialType["ReverseTrial"] = "REVERSE_TRIAL";
})(GrowthUnifiedProfileTrialType = exports.GrowthUnifiedProfileTrialType || (exports.GrowthUnifiedProfileTrialType = {}));
var GrowthUnifiedProfileTwcCreatedFrom;
(function (GrowthUnifiedProfileTwcCreatedFrom) {
    GrowthUnifiedProfileTwcCreatedFrom["AdminHub"] = "ADMIN_HUB";
    GrowthUnifiedProfileTwcCreatedFrom["CrossFlow"] = "CROSS_FLOW";
    GrowthUnifiedProfileTwcCreatedFrom["SignUp"] = "SIGN_UP";
})(GrowthUnifiedProfileTwcCreatedFrom = exports.GrowthUnifiedProfileTwcCreatedFrom || (exports.GrowthUnifiedProfileTwcCreatedFrom = {}));
var GrowthUnifiedProfileTwcEdition;
(function (GrowthUnifiedProfileTwcEdition) {
    GrowthUnifiedProfileTwcEdition["Enterprise"] = "ENTERPRISE";
    GrowthUnifiedProfileTwcEdition["Free"] = "FREE";
    GrowthUnifiedProfileTwcEdition["Premium"] = "PREMIUM";
    GrowthUnifiedProfileTwcEdition["Standard"] = "STANDARD";
})(GrowthUnifiedProfileTwcEdition = exports.GrowthUnifiedProfileTwcEdition || (exports.GrowthUnifiedProfileTwcEdition = {}));
var GrowthUnifiedProfileUserIdType;
(function (GrowthUnifiedProfileUserIdType) {
    GrowthUnifiedProfileUserIdType["AccountId"] = "ACCOUNT_ID";
    GrowthUnifiedProfileUserIdType["AnonymousId"] = "ANONYMOUS_ID";
})(GrowthUnifiedProfileUserIdType = exports.GrowthUnifiedProfileUserIdType || (exports.GrowthUnifiedProfileUserIdType = {}));
var HelpCenterAccessControlType;
(function (HelpCenterAccessControlType) {
    HelpCenterAccessControlType["External"] = "EXTERNAL";
    HelpCenterAccessControlType["GroupBased"] = "GROUP_BASED";
    HelpCenterAccessControlType["Internal"] = "INTERNAL";
    HelpCenterAccessControlType["Public"] = "PUBLIC";
})(HelpCenterAccessControlType = exports.HelpCenterAccessControlType || (exports.HelpCenterAccessControlType = {}));
var HelpCenterDescriptionType;
(function (HelpCenterDescriptionType) {
    HelpCenterDescriptionType["PlainText"] = "PLAIN_TEXT";
    HelpCenterDescriptionType["RichText"] = "RICH_TEXT";
    HelpCenterDescriptionType["WikiMarkup"] = "WIKI_MARKUP";
})(HelpCenterDescriptionType = exports.HelpCenterDescriptionType || (exports.HelpCenterDescriptionType = {}));
var HelpCenterMediaConfigOperationType;
(function (HelpCenterMediaConfigOperationType) {
    HelpCenterMediaConfigOperationType["BannerUpload"] = "BANNER_UPLOAD";
    HelpCenterMediaConfigOperationType["LogoUpload"] = "LOGO_UPLOAD";
    HelpCenterMediaConfigOperationType["Read"] = "READ";
})(HelpCenterMediaConfigOperationType = exports.HelpCenterMediaConfigOperationType || (exports.HelpCenterMediaConfigOperationType = {}));
var HelpCenterPageType;
(function (HelpCenterPageType) {
    HelpCenterPageType["Custom"] = "CUSTOM";
})(HelpCenterPageType = exports.HelpCenterPageType || (exports.HelpCenterPageType = {}));
var HelpCenterPortalsSortOrder;
(function (HelpCenterPortalsSortOrder) {
    HelpCenterPortalsSortOrder["NameAscending"] = "NAME_ASCENDING";
    HelpCenterPortalsSortOrder["Popularity"] = "POPULARITY";
})(HelpCenterPortalsSortOrder = exports.HelpCenterPortalsSortOrder || (exports.HelpCenterPortalsSortOrder = {}));
var HelpCenterPortalsType;
(function (HelpCenterPortalsType) {
    HelpCenterPortalsType["Featured"] = "FEATURED";
    HelpCenterPortalsType["Hidden"] = "HIDDEN";
    HelpCenterPortalsType["Visible"] = "VISIBLE";
})(HelpCenterPortalsType = exports.HelpCenterPortalsType || (exports.HelpCenterPortalsType = {}));
var HelpCenterProductEntityType;
(function (HelpCenterProductEntityType) {
    HelpCenterProductEntityType["KnowledgeCards"] = "KNOWLEDGE_CARDS";
})(HelpCenterProductEntityType = exports.HelpCenterProductEntityType || (exports.HelpCenterProductEntityType = {}));
var HelpCenterProjectMappingOperationType;
(function (HelpCenterProjectMappingOperationType) {
    HelpCenterProjectMappingOperationType["MapProjects"] = "MAP_PROJECTS";
    HelpCenterProjectMappingOperationType["UnmapProjects"] = "UNMAP_PROJECTS";
})(HelpCenterProjectMappingOperationType = exports.HelpCenterProjectMappingOperationType || (exports.HelpCenterProjectMappingOperationType = {}));
var HelpCenterProjectType;
(function (HelpCenterProjectType) {
    HelpCenterProjectType["CustomerService"] = "CUSTOMER_SERVICE";
    HelpCenterProjectType["ServiceDesk"] = "SERVICE_DESK";
})(HelpCenterProjectType = exports.HelpCenterProjectType || (exports.HelpCenterProjectType = {}));
var HelpCenterSortOrder;
(function (HelpCenterSortOrder) {
    HelpCenterSortOrder["CreatedDateAscending"] = "CREATED_DATE_ASCENDING";
    HelpCenterSortOrder["CreatedDateDescending"] = "CREATED_DATE_DESCENDING";
})(HelpCenterSortOrder = exports.HelpCenterSortOrder || (exports.HelpCenterSortOrder = {}));
var HelpCenterType;
(function (HelpCenterType) {
    HelpCenterType["Advanced"] = "ADVANCED";
    HelpCenterType["Basic"] = "BASIC";
    HelpCenterType["CustomerService"] = "CUSTOMER_SERVICE";
    HelpCenterType["Unified"] = "UNIFIED";
})(HelpCenterType = exports.HelpCenterType || (exports.HelpCenterType = {}));
var HelpExternalResourceLinkResourceType;
(function (HelpExternalResourceLinkResourceType) {
    HelpExternalResourceLinkResourceType["Channel"] = "CHANNEL";
    HelpExternalResourceLinkResourceType["Knowledge"] = "KNOWLEDGE";
    HelpExternalResourceLinkResourceType["RequestForm"] = "REQUEST_FORM";
})(HelpExternalResourceLinkResourceType = exports.HelpExternalResourceLinkResourceType || (exports.HelpExternalResourceLinkResourceType = {}));
var HelpLayoutAtomicElementKey;
(function (HelpLayoutAtomicElementKey) {
    HelpLayoutAtomicElementKey["Announcement"] = "ANNOUNCEMENT";
    HelpLayoutAtomicElementKey["Breadcrumb"] = "BREADCRUMB";
    HelpLayoutAtomicElementKey["Connect"] = "CONNECT";
    HelpLayoutAtomicElementKey["Editor"] = "EDITOR";
    HelpLayoutAtomicElementKey["Forge"] = "FORGE";
    HelpLayoutAtomicElementKey["Heading"] = "HEADING";
    HelpLayoutAtomicElementKey["Hero"] = "HERO";
    HelpLayoutAtomicElementKey["Image"] = "IMAGE";
    HelpLayoutAtomicElementKey["KnowledgeCards"] = "KNOWLEDGE_CARDS";
    HelpLayoutAtomicElementKey["NoContent"] = "NO_CONTENT";
    HelpLayoutAtomicElementKey["Paragraph"] = "PARAGRAPH";
    HelpLayoutAtomicElementKey["PortalsList"] = "PORTALS_LIST";
    HelpLayoutAtomicElementKey["Search"] = "SEARCH";
    HelpLayoutAtomicElementKey["SuggestedRequestFormsList"] = "SUGGESTED_REQUEST_FORMS_LIST";
    HelpLayoutAtomicElementKey["TopicsList"] = "TOPICS_LIST";
})(HelpLayoutAtomicElementKey = exports.HelpLayoutAtomicElementKey || (exports.HelpLayoutAtomicElementKey = {}));
var HelpLayoutBackgroundImageObjectFit;
(function (HelpLayoutBackgroundImageObjectFit) {
    HelpLayoutBackgroundImageObjectFit["Contain"] = "CONTAIN";
    HelpLayoutBackgroundImageObjectFit["Cover"] = "COVER";
    HelpLayoutBackgroundImageObjectFit["Fill"] = "FILL";
})(HelpLayoutBackgroundImageObjectFit = exports.HelpLayoutBackgroundImageObjectFit || (exports.HelpLayoutBackgroundImageObjectFit = {}));
var HelpLayoutBackgroundType;
(function (HelpLayoutBackgroundType) {
    HelpLayoutBackgroundType["Color"] = "COLOR";
    HelpLayoutBackgroundType["Image"] = "IMAGE";
    HelpLayoutBackgroundType["Transparent"] = "TRANSPARENT";
})(HelpLayoutBackgroundType = exports.HelpLayoutBackgroundType || (exports.HelpLayoutBackgroundType = {}));
var HelpLayoutCompositeElementKey;
(function (HelpLayoutCompositeElementKey) {
    HelpLayoutCompositeElementKey["LinkCard"] = "LINK_CARD";
})(HelpLayoutCompositeElementKey = exports.HelpLayoutCompositeElementKey || (exports.HelpLayoutCompositeElementKey = {}));
var HelpLayoutConnectElementPages;
(function (HelpLayoutConnectElementPages) {
    HelpLayoutConnectElementPages["Approvals"] = "APPROVALS";
    HelpLayoutConnectElementPages["CreateRequest"] = "CREATE_REQUEST";
    HelpLayoutConnectElementPages["HelpCenter"] = "HELP_CENTER";
    HelpLayoutConnectElementPages["MyRequest"] = "MY_REQUEST";
    HelpLayoutConnectElementPages["Portal"] = "PORTAL";
    HelpLayoutConnectElementPages["Profile"] = "PROFILE";
    HelpLayoutConnectElementPages["ViewRequest"] = "VIEW_REQUEST";
})(HelpLayoutConnectElementPages = exports.HelpLayoutConnectElementPages || (exports.HelpLayoutConnectElementPages = {}));
var HelpLayoutConnectElementType;
(function (HelpLayoutConnectElementType) {
    HelpLayoutConnectElementType["DetailsPanels"] = "detailsPanels";
    HelpLayoutConnectElementType["FooterPanels"] = "footerPanels";
    HelpLayoutConnectElementType["HeaderAndSubheaderPanels"] = "headerAndSubheaderPanels";
    HelpLayoutConnectElementType["HeaderPanels"] = "headerPanels";
    HelpLayoutConnectElementType["OptionPanels"] = "optionPanels";
    HelpLayoutConnectElementType["ProfilePagePanel"] = "profilePagePanel";
    HelpLayoutConnectElementType["PropertyPanels"] = "propertyPanels";
    HelpLayoutConnectElementType["RequestCreatePanel"] = "requestCreatePanel";
    HelpLayoutConnectElementType["SubheaderPanels"] = "subheaderPanels";
})(HelpLayoutConnectElementType = exports.HelpLayoutConnectElementType || (exports.HelpLayoutConnectElementType = {}));
var HelpLayoutElementCategory;
(function (HelpLayoutElementCategory) {
    HelpLayoutElementCategory["Basic"] = "BASIC";
    HelpLayoutElementCategory["Navigation"] = "NAVIGATION";
})(HelpLayoutElementCategory = exports.HelpLayoutElementCategory || (exports.HelpLayoutElementCategory = {}));
var HelpLayoutElementKey;
(function (HelpLayoutElementKey) {
    HelpLayoutElementKey["Announcement"] = "ANNOUNCEMENT";
    HelpLayoutElementKey["Breadcrumb"] = "BREADCRUMB";
    HelpLayoutElementKey["Connect"] = "CONNECT";
    HelpLayoutElementKey["Editor"] = "EDITOR";
    HelpLayoutElementKey["Forge"] = "FORGE";
    HelpLayoutElementKey["Heading"] = "HEADING";
    HelpLayoutElementKey["Hero"] = "HERO";
    HelpLayoutElementKey["Image"] = "IMAGE";
    HelpLayoutElementKey["KnowledgeCards"] = "KNOWLEDGE_CARDS";
    HelpLayoutElementKey["LinkCard"] = "LINK_CARD";
    HelpLayoutElementKey["NoContent"] = "NO_CONTENT";
    HelpLayoutElementKey["Paragraph"] = "PARAGRAPH";
    HelpLayoutElementKey["PortalsList"] = "PORTALS_LIST";
    HelpLayoutElementKey["Search"] = "SEARCH";
    HelpLayoutElementKey["SuggestedRequestFormsList"] = "SUGGESTED_REQUEST_FORMS_LIST";
    HelpLayoutElementKey["TopicsList"] = "TOPICS_LIST";
})(HelpLayoutElementKey = exports.HelpLayoutElementKey || (exports.HelpLayoutElementKey = {}));
var HelpLayoutForgeElementPages;
(function (HelpLayoutForgeElementPages) {
    HelpLayoutForgeElementPages["Approvals"] = "approvals";
    HelpLayoutForgeElementPages["CreateRequest"] = "create_request";
    HelpLayoutForgeElementPages["HelpCenter"] = "help_center";
    HelpLayoutForgeElementPages["MyRequests"] = "my_requests";
    HelpLayoutForgeElementPages["Portal"] = "portal";
    HelpLayoutForgeElementPages["Profile"] = "profile";
    HelpLayoutForgeElementPages["ViewRequest"] = "view_request";
})(HelpLayoutForgeElementPages = exports.HelpLayoutForgeElementPages || (exports.HelpLayoutForgeElementPages = {}));
var HelpLayoutForgeElementType;
(function (HelpLayoutForgeElementType) {
    HelpLayoutForgeElementType["Footer"] = "FOOTER";
    HelpLayoutForgeElementType["HeaderAndSubheader"] = "HEADER_AND_SUBHEADER";
})(HelpLayoutForgeElementType = exports.HelpLayoutForgeElementType || (exports.HelpLayoutForgeElementType = {}));
var HelpLayoutHeadingType;
(function (HelpLayoutHeadingType) {
    HelpLayoutHeadingType["H1"] = "h1";
    HelpLayoutHeadingType["H2"] = "h2";
    HelpLayoutHeadingType["H3"] = "h3";
    HelpLayoutHeadingType["H4"] = "h4";
    HelpLayoutHeadingType["H5"] = "h5";
    HelpLayoutHeadingType["H6"] = "h6";
})(HelpLayoutHeadingType = exports.HelpLayoutHeadingType || (exports.HelpLayoutHeadingType = {}));
var HelpLayoutHorizontalAlignment;
(function (HelpLayoutHorizontalAlignment) {
    HelpLayoutHorizontalAlignment["Center"] = "CENTER";
    HelpLayoutHorizontalAlignment["Left"] = "LEFT";
    HelpLayoutHorizontalAlignment["Right"] = "RIGHT";
})(HelpLayoutHorizontalAlignment = exports.HelpLayoutHorizontalAlignment || (exports.HelpLayoutHorizontalAlignment = {}));
var HelpLayoutProjectType;
(function (HelpLayoutProjectType) {
    HelpLayoutProjectType["CustomerService"] = "CUSTOMER_SERVICE";
    HelpLayoutProjectType["ServiceDesk"] = "SERVICE_DESK";
})(HelpLayoutProjectType = exports.HelpLayoutProjectType || (exports.HelpLayoutProjectType = {}));
var HelpLayoutType;
(function (HelpLayoutType) {
    HelpLayoutType["CustomPage"] = "CUSTOM_PAGE";
    HelpLayoutType["HomePage"] = "HOME_PAGE";
})(HelpLayoutType = exports.HelpLayoutType || (exports.HelpLayoutType = {}));
var HelpLayoutVerticalAlignment;
(function (HelpLayoutVerticalAlignment) {
    HelpLayoutVerticalAlignment["Bottom"] = "BOTTOM";
    HelpLayoutVerticalAlignment["Middle"] = "MIDDLE";
    HelpLayoutVerticalAlignment["Top"] = "TOP";
})(HelpLayoutVerticalAlignment = exports.HelpLayoutVerticalAlignment || (exports.HelpLayoutVerticalAlignment = {}));
var HelpObjectStoreArticleContentType;
(function (HelpObjectStoreArticleContentType) {
    HelpObjectStoreArticleContentType["Folder"] = "FOLDER";
    HelpObjectStoreArticleContentType["Page"] = "PAGE";
})(HelpObjectStoreArticleContentType = exports.HelpObjectStoreArticleContentType || (exports.HelpObjectStoreArticleContentType = {}));
var HelpObjectStoreArticleSearchExpandType;
(function (HelpObjectStoreArticleSearchExpandType) {
    HelpObjectStoreArticleSearchExpandType["Ancestors"] = "ANCESTORS";
    HelpObjectStoreArticleSearchExpandType["ViewCount"] = "VIEW_COUNT";
})(HelpObjectStoreArticleSearchExpandType = exports.HelpObjectStoreArticleSearchExpandType || (exports.HelpObjectStoreArticleSearchExpandType = {}));
var HelpObjectStoreArticleSearchStrategy;
(function (HelpObjectStoreArticleSearchStrategy) {
    HelpObjectStoreArticleSearchStrategy["ContentSearch"] = "CONTENT_SEARCH";
    HelpObjectStoreArticleSearchStrategy["Cql"] = "CQL";
    HelpObjectStoreArticleSearchStrategy["Proxy"] = "PROXY";
})(HelpObjectStoreArticleSearchStrategy = exports.HelpObjectStoreArticleSearchStrategy || (exports.HelpObjectStoreArticleSearchStrategy = {}));
var HelpObjectStoreArticleSourceSystem;
(function (HelpObjectStoreArticleSourceSystem) {
    HelpObjectStoreArticleSourceSystem["Confluence"] = "CONFLUENCE";
    HelpObjectStoreArticleSourceSystem["CrossSiteConfluence"] = "CROSS_SITE_CONFLUENCE";
    HelpObjectStoreArticleSourceSystem["External"] = "EXTERNAL";
    HelpObjectStoreArticleSourceSystem["GoogleDrive"] = "GOOGLE_DRIVE";
    HelpObjectStoreArticleSourceSystem["Sharepoint"] = "SHAREPOINT";
})(HelpObjectStoreArticleSourceSystem = exports.HelpObjectStoreArticleSourceSystem || (exports.HelpObjectStoreArticleSourceSystem = {}));
var HelpObjectStoreHelpObjectType;
(function (HelpObjectStoreHelpObjectType) {
    HelpObjectStoreHelpObjectType["Article"] = "ARTICLE";
    HelpObjectStoreHelpObjectType["Channel"] = "CHANNEL";
    HelpObjectStoreHelpObjectType["Portal"] = "PORTAL";
    HelpObjectStoreHelpObjectType["RequestForm"] = "REQUEST_FORM";
})(HelpObjectStoreHelpObjectType = exports.HelpObjectStoreHelpObjectType || (exports.HelpObjectStoreHelpObjectType = {}));
var HelpObjectStoreJsmEntityType;
(function (HelpObjectStoreJsmEntityType) {
    HelpObjectStoreJsmEntityType["Article"] = "ARTICLE";
    HelpObjectStoreJsmEntityType["Channel"] = "CHANNEL";
    HelpObjectStoreJsmEntityType["Portal"] = "PORTAL";
    HelpObjectStoreJsmEntityType["RequestForm"] = "REQUEST_FORM";
})(HelpObjectStoreJsmEntityType = exports.HelpObjectStoreJsmEntityType || (exports.HelpObjectStoreJsmEntityType = {}));
var HelpObjectStorePortalSearchStrategy;
(function (HelpObjectStorePortalSearchStrategy) {
    HelpObjectStorePortalSearchStrategy["Jira"] = "JIRA";
    HelpObjectStorePortalSearchStrategy["SearchPlatform"] = "SEARCH_PLATFORM";
})(HelpObjectStorePortalSearchStrategy = exports.HelpObjectStorePortalSearchStrategy || (exports.HelpObjectStorePortalSearchStrategy = {}));
var HelpObjectStoreRequestTypeSearchStrategy;
(function (HelpObjectStoreRequestTypeSearchStrategy) {
    HelpObjectStoreRequestTypeSearchStrategy["JiraIssueBasedSearch"] = "JIRA_ISSUE_BASED_SEARCH";
    HelpObjectStoreRequestTypeSearchStrategy["JiraKeywordBased"] = "JIRA_KEYWORD_BASED";
    HelpObjectStoreRequestTypeSearchStrategy["SearchPlatformKeywordBased"] = "SEARCH_PLATFORM_KEYWORD_BASED";
    HelpObjectStoreRequestTypeSearchStrategy["SearchPlatformKeywordBasedEr"] = "SEARCH_PLATFORM_KEYWORD_BASED_ER";
})(HelpObjectStoreRequestTypeSearchStrategy = exports.HelpObjectStoreRequestTypeSearchStrategy || (exports.HelpObjectStoreRequestTypeSearchStrategy = {}));
var HelpObjectStoreSearchAlgorithm;
(function (HelpObjectStoreSearchAlgorithm) {
    HelpObjectStoreSearchAlgorithm["KeywordSearchOnIssues"] = "KEYWORD_SEARCH_ON_ISSUES";
    HelpObjectStoreSearchAlgorithm["KeywordSearchOnPortalsBm25"] = "KEYWORD_SEARCH_ON_PORTALS_BM25";
    HelpObjectStoreSearchAlgorithm["KeywordSearchOnPortalsExactMatch"] = "KEYWORD_SEARCH_ON_PORTALS_EXACT_MATCH";
    HelpObjectStoreSearchAlgorithm["KeywordSearchOnRequestTypesBm25"] = "KEYWORD_SEARCH_ON_REQUEST_TYPES_BM25";
    HelpObjectStoreSearchAlgorithm["KeywordSearchOnRequestTypesExactMatch"] = "KEYWORD_SEARCH_ON_REQUEST_TYPES_EXACT_MATCH";
})(HelpObjectStoreSearchAlgorithm = exports.HelpObjectStoreSearchAlgorithm || (exports.HelpObjectStoreSearchAlgorithm = {}));
var HelpObjectStoreSearchBackend;
(function (HelpObjectStoreSearchBackend) {
    HelpObjectStoreSearchBackend["Jira"] = "JIRA";
    HelpObjectStoreSearchBackend["SearchPlatform"] = "SEARCH_PLATFORM";
})(HelpObjectStoreSearchBackend = exports.HelpObjectStoreSearchBackend || (exports.HelpObjectStoreSearchBackend = {}));
var HelpObjectStoreSearchEntityType;
(function (HelpObjectStoreSearchEntityType) {
    HelpObjectStoreSearchEntityType["Article"] = "ARTICLE";
    HelpObjectStoreSearchEntityType["Channel"] = "CHANNEL";
    HelpObjectStoreSearchEntityType["Portal"] = "PORTAL";
    HelpObjectStoreSearchEntityType["RequestForm"] = "REQUEST_FORM";
})(HelpObjectStoreSearchEntityType = exports.HelpObjectStoreSearchEntityType || (exports.HelpObjectStoreSearchEntityType = {}));
var HelpObjectStoreSearchableEntityType;
(function (HelpObjectStoreSearchableEntityType) {
    HelpObjectStoreSearchableEntityType["Article"] = "ARTICLE";
    HelpObjectStoreSearchableEntityType["RequestForm"] = "REQUEST_FORM";
})(HelpObjectStoreSearchableEntityType = exports.HelpObjectStoreSearchableEntityType || (exports.HelpObjectStoreSearchableEntityType = {}));
var HomeWidgetState;
(function (HomeWidgetState) {
    HomeWidgetState["Collapsed"] = "COLLAPSED";
    HomeWidgetState["Expanded"] = "EXPANDED";
})(HomeWidgetState = exports.HomeWidgetState || (exports.HomeWidgetState = {}));
var InfluentsNotificationActorType;
(function (InfluentsNotificationActorType) {
    InfluentsNotificationActorType["Animated"] = "animated";
    InfluentsNotificationActorType["Url"] = "url";
})(InfluentsNotificationActorType = exports.InfluentsNotificationActorType || (exports.InfluentsNotificationActorType = {}));
var InfluentsNotificationAppearance;
(function (InfluentsNotificationAppearance) {
    InfluentsNotificationAppearance["Danger"] = "DANGER";
    InfluentsNotificationAppearance["Default"] = "DEFAULT";
    InfluentsNotificationAppearance["Link"] = "LINK";
    InfluentsNotificationAppearance["Primary"] = "PRIMARY";
    InfluentsNotificationAppearance["Subtle"] = "SUBTLE";
    InfluentsNotificationAppearance["Warning"] = "WARNING";
})(InfluentsNotificationAppearance = exports.InfluentsNotificationAppearance || (exports.InfluentsNotificationAppearance = {}));
var InfluentsNotificationCategory;
(function (InfluentsNotificationCategory) {
    InfluentsNotificationCategory["Direct"] = "direct";
    InfluentsNotificationCategory["Watching"] = "watching";
})(InfluentsNotificationCategory = exports.InfluentsNotificationCategory || (exports.InfluentsNotificationCategory = {}));
var InfluentsNotificationReadState;
(function (InfluentsNotificationReadState) {
    InfluentsNotificationReadState["Read"] = "read";
    InfluentsNotificationReadState["Unread"] = "unread";
})(InfluentsNotificationReadState = exports.InfluentsNotificationReadState || (exports.InfluentsNotificationReadState = {}));
var InitialPermissionOptions;
(function (InitialPermissionOptions) {
    InitialPermissionOptions["CopyFromSpace"] = "COPY_FROM_SPACE";
    InitialPermissionOptions["Default"] = "DEFAULT";
    InitialPermissionOptions["Private"] = "PRIVATE";
})(InitialPermissionOptions = exports.InitialPermissionOptions || (exports.InitialPermissionOptions = {}));
var InlineTasksQuerySortColumn;
(function (InlineTasksQuerySortColumn) {
    InlineTasksQuerySortColumn["Assignee"] = "ASSIGNEE";
    InlineTasksQuerySortColumn["DueDate"] = "DUE_DATE";
    InlineTasksQuerySortColumn["PageTitle"] = "PAGE_TITLE";
})(InlineTasksQuerySortColumn = exports.InlineTasksQuerySortColumn || (exports.InlineTasksQuerySortColumn = {}));
var InlineTasksQuerySortOrder;
(function (InlineTasksQuerySortOrder) {
    InlineTasksQuerySortOrder["Ascending"] = "ASCENDING";
    InlineTasksQuerySortOrder["Descending"] = "DESCENDING";
})(InlineTasksQuerySortOrder = exports.InlineTasksQuerySortOrder || (exports.InlineTasksQuerySortOrder = {}));
var InsightsNextBestTaskAction;
(function (InsightsNextBestTaskAction) {
    InsightsNextBestTaskAction["Remove"] = "REMOVE";
    InsightsNextBestTaskAction["Snooze"] = "SNOOZE";
})(InsightsNextBestTaskAction = exports.InsightsNextBestTaskAction || (exports.InsightsNextBestTaskAction = {}));
var InsightsRecommendationVisibility;
(function (InsightsRecommendationVisibility) {
    InsightsRecommendationVisibility["Hidden"] = "HIDDEN";
    InsightsRecommendationVisibility["Removed"] = "REMOVED";
    InsightsRecommendationVisibility["Snoozed"] = "SNOOZED";
    InsightsRecommendationVisibility["Visible"] = "VISIBLE";
})(InsightsRecommendationVisibility = exports.InsightsRecommendationVisibility || (exports.InsightsRecommendationVisibility = {}));
var InspectPermissions;
(function (InspectPermissions) {
    InspectPermissions["Comment"] = "COMMENT";
    InspectPermissions["Edit"] = "EDIT";
    InspectPermissions["View"] = "VIEW";
})(InspectPermissions = exports.InspectPermissions || (exports.InspectPermissions = {}));
var IntentDetectionSubType;
(function (IntentDetectionSubType) {
    IntentDetectionSubType["Command"] = "COMMAND";
    IntentDetectionSubType["Confluence"] = "CONFLUENCE";
    IntentDetectionSubType["Evaluate"] = "EVALUATE";
    IntentDetectionSubType["Jira"] = "JIRA";
    IntentDetectionSubType["JobTitle"] = "JOB_TITLE";
    IntentDetectionSubType["Llm"] = "LLM";
    IntentDetectionSubType["Question"] = "QUESTION";
})(IntentDetectionSubType = exports.IntentDetectionSubType || (exports.IntentDetectionSubType = {}));
var IntentDetectionTopLevelIntent;
(function (IntentDetectionTopLevelIntent) {
    IntentDetectionTopLevelIntent["JobTitle"] = "JOB_TITLE";
    IntentDetectionTopLevelIntent["KeywordOrAcronym"] = "KEYWORD_OR_ACRONYM";
    IntentDetectionTopLevelIntent["NaturalLanguageQuery"] = "NATURAL_LANGUAGE_QUERY";
    IntentDetectionTopLevelIntent["Navigational"] = "NAVIGATIONAL";
    IntentDetectionTopLevelIntent["None"] = "NONE";
    IntentDetectionTopLevelIntent["Person"] = "PERSON";
    IntentDetectionTopLevelIntent["Team"] = "TEAM";
})(IntentDetectionTopLevelIntent = exports.IntentDetectionTopLevelIntent || (exports.IntentDetectionTopLevelIntent = {}));
var InvitationUrlsStatus;
(function (InvitationUrlsStatus) {
    InvitationUrlsStatus["Active"] = "ACTIVE";
    InvitationUrlsStatus["Deleted"] = "DELETED";
    InvitationUrlsStatus["Expired"] = "EXPIRED";
})(InvitationUrlsStatus = exports.InvitationUrlsStatus || (exports.InvitationUrlsStatus = {}));
var IssueDevOpsCommitChangeType;
(function (IssueDevOpsCommitChangeType) {
    IssueDevOpsCommitChangeType["Added"] = "ADDED";
    IssueDevOpsCommitChangeType["Copied"] = "COPIED";
    IssueDevOpsCommitChangeType["Deleted"] = "DELETED";
    IssueDevOpsCommitChangeType["Modified"] = "MODIFIED";
    IssueDevOpsCommitChangeType["Modify"] = "MODIFY";
    IssueDevOpsCommitChangeType["Moved"] = "MOVED";
    IssueDevOpsCommitChangeType["Unknown"] = "UNKNOWN";
})(IssueDevOpsCommitChangeType = exports.IssueDevOpsCommitChangeType || (exports.IssueDevOpsCommitChangeType = {}));
var IssueDevOpsDeploymentEnvironmentType;
(function (IssueDevOpsDeploymentEnvironmentType) {
    IssueDevOpsDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    IssueDevOpsDeploymentEnvironmentType["Production"] = "PRODUCTION";
    IssueDevOpsDeploymentEnvironmentType["Staging"] = "STAGING";
    IssueDevOpsDeploymentEnvironmentType["Testing"] = "TESTING";
    IssueDevOpsDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(IssueDevOpsDeploymentEnvironmentType = exports.IssueDevOpsDeploymentEnvironmentType || (exports.IssueDevOpsDeploymentEnvironmentType = {}));
var IssueDevOpsDeploymentState;
(function (IssueDevOpsDeploymentState) {
    IssueDevOpsDeploymentState["Cancelled"] = "CANCELLED";
    IssueDevOpsDeploymentState["Failed"] = "FAILED";
    IssueDevOpsDeploymentState["InProgress"] = "IN_PROGRESS";
    IssueDevOpsDeploymentState["Pending"] = "PENDING";
    IssueDevOpsDeploymentState["RolledBack"] = "ROLLED_BACK";
    IssueDevOpsDeploymentState["Successful"] = "SUCCESSFUL";
    IssueDevOpsDeploymentState["Unknown"] = "UNKNOWN";
})(IssueDevOpsDeploymentState = exports.IssueDevOpsDeploymentState || (exports.IssueDevOpsDeploymentState = {}));
var IssueDevOpsPullRequestStatus;
(function (IssueDevOpsPullRequestStatus) {
    IssueDevOpsPullRequestStatus["Declined"] = "DECLINED";
    IssueDevOpsPullRequestStatus["Draft"] = "DRAFT";
    IssueDevOpsPullRequestStatus["Merged"] = "MERGED";
    IssueDevOpsPullRequestStatus["Open"] = "OPEN";
    IssueDevOpsPullRequestStatus["Unknown"] = "UNKNOWN";
})(IssueDevOpsPullRequestStatus = exports.IssueDevOpsPullRequestStatus || (exports.IssueDevOpsPullRequestStatus = {}));
var JiraActionType;
(function (JiraActionType) {
    JiraActionType["CreateCompanyManagedProject"] = "CREATE_COMPANY_MANAGED_PROJECT";
    JiraActionType["CreateProject"] = "CREATE_PROJECT";
    JiraActionType["CreateTeamManagedProject"] = "CREATE_TEAM_MANAGED_PROJECT";
    JiraActionType["ViewProjectCreationEntry"] = "VIEW_PROJECT_CREATION_ENTRY";
})(JiraActionType = exports.JiraActionType || (exports.JiraActionType = {}));
var JiraAddValueFieldOperations;
(function (JiraAddValueFieldOperations) {
    JiraAddValueFieldOperations["Add"] = "ADD";
})(JiraAddValueFieldOperations = exports.JiraAddValueFieldOperations || (exports.JiraAddValueFieldOperations = {}));
var JiraAlignAggProjectType;
(function (JiraAlignAggProjectType) {
    JiraAlignAggProjectType["Capability"] = "CAPABILITY";
    JiraAlignAggProjectType["Epic"] = "EPIC";
    JiraAlignAggProjectType["Theme"] = "THEME";
})(JiraAlignAggProjectType = exports.JiraAlignAggProjectType || (exports.JiraAlignAggProjectType = {}));
var JiraAllowedFieldFormatConfig;
(function (JiraAllowedFieldFormatConfig) {
    JiraAllowedFieldFormatConfig["NumberFieldFormatConfig"] = "NUMBER_FIELD_FORMAT_CONFIG";
})(JiraAllowedFieldFormatConfig = exports.JiraAllowedFieldFormatConfig || (exports.JiraAllowedFieldFormatConfig = {}));
var JiraAnnouncementBannerVisibility;
(function (JiraAnnouncementBannerVisibility) {
    JiraAnnouncementBannerVisibility["Private"] = "PRIVATE";
    JiraAnnouncementBannerVisibility["Public"] = "PUBLIC";
})(JiraAnnouncementBannerVisibility = exports.JiraAnnouncementBannerVisibility || (exports.JiraAnnouncementBannerVisibility = {}));
var JiraAppType;
(function (JiraAppType) {
    JiraAppType["Connect"] = "CONNECT";
    JiraAppType["Forge"] = "FORGE";
})(JiraAppType = exports.JiraAppType || (exports.JiraAppType = {}));
var JiraApplicationKey;
(function (JiraApplicationKey) {
    JiraApplicationKey["JiraCore"] = "JIRA_CORE";
    JiraApplicationKey["JiraProductDiscovery"] = "JIRA_PRODUCT_DISCOVERY";
    JiraApplicationKey["JiraServiceDesk"] = "JIRA_SERVICE_DESK";
    JiraApplicationKey["JiraSoftware"] = "JIRA_SOFTWARE";
})(JiraApplicationKey = exports.JiraApplicationKey || (exports.JiraApplicationKey = {}));
var JiraApplicationLinkTargetType;
(function (JiraApplicationLinkTargetType) {
    JiraApplicationLinkTargetType["Cloud"] = "CLOUD";
    JiraApplicationLinkTargetType["Dc"] = "DC";
})(JiraApplicationLinkTargetType = exports.JiraApplicationLinkTargetType || (exports.JiraApplicationLinkTargetType = {}));
var JiraApprovalDecision;
(function (JiraApprovalDecision) {
    JiraApprovalDecision["Approved"] = "APPROVED";
    JiraApprovalDecision["Rejected"] = "REJECTED";
})(JiraApprovalDecision = exports.JiraApprovalDecision || (exports.JiraApprovalDecision = {}));
var JiraAtlassianIntelligenceFeatureEnum;
(function (JiraAtlassianIntelligenceFeatureEnum) {
    JiraAtlassianIntelligenceFeatureEnum["AiMate"] = "AI_MATE";
    JiraAtlassianIntelligenceFeatureEnum["NaturalLanguageToJql"] = "NATURAL_LANGUAGE_TO_JQL";
})(JiraAtlassianIntelligenceFeatureEnum = exports.JiraAtlassianIntelligenceFeatureEnum || (exports.JiraAtlassianIntelligenceFeatureEnum = {}));
var JiraAttachmentOrderField;
(function (JiraAttachmentOrderField) {
    JiraAttachmentOrderField["Created"] = "CREATED";
    JiraAttachmentOrderField["Filename"] = "FILENAME";
    JiraAttachmentOrderField["Filesize"] = "FILESIZE";
    JiraAttachmentOrderField["Mimetype"] = "MIMETYPE";
})(JiraAttachmentOrderField = exports.JiraAttachmentOrderField || (exports.JiraAttachmentOrderField = {}));
var JiraAttachmentParentName;
(function (JiraAttachmentParentName) {
    JiraAttachmentParentName["Comment"] = "COMMENT";
    JiraAttachmentParentName["Customfield"] = "CUSTOMFIELD";
    JiraAttachmentParentName["Description"] = "DESCRIPTION";
    JiraAttachmentParentName["Environment"] = "ENVIRONMENT";
    JiraAttachmentParentName["Form"] = "FORM";
    JiraAttachmentParentName["Issue"] = "ISSUE";
    JiraAttachmentParentName["Worklog"] = "WORKLOG";
})(JiraAttachmentParentName = exports.JiraAttachmentParentName || (exports.JiraAttachmentParentName = {}));
var JiraAttachmentSortField;
(function (JiraAttachmentSortField) {
    JiraAttachmentSortField["Created"] = "CREATED";
})(JiraAttachmentSortField = exports.JiraAttachmentSortField || (exports.JiraAttachmentSortField = {}));
var JiraAttachmentsPermissions;
(function (JiraAttachmentsPermissions) {
    JiraAttachmentsPermissions["CreateAttachments"] = "CREATE_ATTACHMENTS";
    JiraAttachmentsPermissions["DeleteOwnAttachments"] = "DELETE_OWN_ATTACHMENTS";
})(JiraAttachmentsPermissions = exports.JiraAttachmentsPermissions || (exports.JiraAttachmentsPermissions = {}));
var JiraAutodevCodeChangeEnumType;
(function (JiraAutodevCodeChangeEnumType) {
    JiraAutodevCodeChangeEnumType["Add"] = "ADD";
    JiraAutodevCodeChangeEnumType["Delete"] = "DELETE";
    JiraAutodevCodeChangeEnumType["Edit"] = "EDIT";
    JiraAutodevCodeChangeEnumType["Other"] = "OTHER";
})(JiraAutodevCodeChangeEnumType = exports.JiraAutodevCodeChangeEnumType || (exports.JiraAutodevCodeChangeEnumType = {}));
var JiraAutodevCreatePullRequestOptionEnumType;
(function (JiraAutodevCreatePullRequestOptionEnumType) {
    JiraAutodevCreatePullRequestOptionEnumType["Always"] = "ALWAYS";
    JiraAutodevCreatePullRequestOptionEnumType["Draft"] = "DRAFT";
    JiraAutodevCreatePullRequestOptionEnumType["DraftOnBuildPass"] = "DRAFT_ON_BUILD_PASS";
    JiraAutodevCreatePullRequestOptionEnumType["Never"] = "NEVER";
    JiraAutodevCreatePullRequestOptionEnumType["OnBuildPass"] = "ON_BUILD_PASS";
})(JiraAutodevCreatePullRequestOptionEnumType = exports.JiraAutodevCreatePullRequestOptionEnumType || (exports.JiraAutodevCreatePullRequestOptionEnumType = {}));
var JiraAutodevPhase;
(function (JiraAutodevPhase) {
    JiraAutodevPhase["CodeGenerating"] = "CODE_GENERATING";
    JiraAutodevPhase["CodeReview"] = "CODE_REVIEW";
    JiraAutodevPhase["CodeReGenerating"] = "CODE_RE_GENERATING";
    JiraAutodevPhase["PlanGenerating"] = "PLAN_GENERATING";
    JiraAutodevPhase["PlanReview"] = "PLAN_REVIEW";
    JiraAutodevPhase["PlanReGenerating"] = "PLAN_RE_GENERATING";
})(JiraAutodevPhase = exports.JiraAutodevPhase || (exports.JiraAutodevPhase = {}));
var JiraAutodevState;
(function (JiraAutodevState) {
    JiraAutodevState["Cancelled"] = "CANCELLED";
    JiraAutodevState["CodeGenerating"] = "CODE_GENERATING";
    JiraAutodevState["CodeGenerationFail"] = "CODE_GENERATION_FAIL";
    JiraAutodevState["CodeGenerationReady"] = "CODE_GENERATION_READY";
    JiraAutodevState["CodeGenerationSuccess"] = "CODE_GENERATION_SUCCESS";
    JiraAutodevState["Created"] = "CREATED";
    JiraAutodevState["PlanGenerating"] = "PLAN_GENERATING";
    JiraAutodevState["PlanGenerationFail"] = "PLAN_GENERATION_FAIL";
    JiraAutodevState["PlanGenerationSuccess"] = "PLAN_GENERATION_SUCCESS";
    JiraAutodevState["PullrequestCreating"] = "PULLREQUEST_CREATING";
    JiraAutodevState["PullrequestCreationFail"] = "PULLREQUEST_CREATION_FAIL";
    JiraAutodevState["PullrequestCreationSuccess"] = "PULLREQUEST_CREATION_SUCCESS";
    JiraAutodevState["Unknown"] = "UNKNOWN";
})(JiraAutodevState = exports.JiraAutodevState || (exports.JiraAutodevState = {}));
var JiraAutodevStatus;
(function (JiraAutodevStatus) {
    JiraAutodevStatus["Cancelled"] = "CANCELLED";
    JiraAutodevStatus["Completed"] = "COMPLETED";
    JiraAutodevStatus["Failed"] = "FAILED";
    JiraAutodevStatus["InProgress"] = "IN_PROGRESS";
    JiraAutodevStatus["Pending"] = "PENDING";
})(JiraAutodevStatus = exports.JiraAutodevStatus || (exports.JiraAutodevStatus = {}));
var JiraBackgroundType;
(function (JiraBackgroundType) {
    JiraBackgroundType["Attachment"] = "ATTACHMENT";
    JiraBackgroundType["Color"] = "COLOR";
    JiraBackgroundType["Custom"] = "CUSTOM";
    JiraBackgroundType["Gradient"] = "GRADIENT";
    JiraBackgroundType["Unsplash"] = "UNSPLASH";
})(JiraBackgroundType = exports.JiraBackgroundType || (exports.JiraBackgroundType = {}));
var JiraBacklogCardDensity;
(function (JiraBacklogCardDensity) {
    JiraBacklogCardDensity["Compact"] = "COMPACT";
    JiraBacklogCardDensity["Default"] = "DEFAULT";
})(JiraBacklogCardDensity = exports.JiraBacklogCardDensity || (exports.JiraBacklogCardDensity = {}));
var JiraBacklogDestination;
(function (JiraBacklogDestination) {
    JiraBacklogDestination["Backlog"] = "BACKLOG";
    JiraBacklogDestination["Board"] = "BOARD";
    JiraBacklogDestination["Sprint"] = "SPRINT";
})(JiraBacklogDestination = exports.JiraBacklogDestination || (exports.JiraBacklogDestination = {}));
var JiraBacklogStrategy;
(function (JiraBacklogStrategy) {
    JiraBacklogStrategy["IssueList"] = "ISSUE_LIST";
    JiraBacklogStrategy["KanbanBacklog"] = "KANBAN_BACKLOG";
    JiraBacklogStrategy["None"] = "NONE";
    JiraBacklogStrategy["Sprint"] = "SPRINT";
})(JiraBacklogStrategy = exports.JiraBacklogStrategy || (exports.JiraBacklogStrategy = {}));
var JiraBatchWindowPreference;
(function (JiraBatchWindowPreference) {
    JiraBatchWindowPreference["DefaultBatching"] = "DEFAULT_BATCHING";
    JiraBatchWindowPreference["FifteenMinutes"] = "FIFTEEN_MINUTES";
    JiraBatchWindowPreference["FiveMinutes"] = "FIVE_MINUTES";
    JiraBatchWindowPreference["NoBatching"] = "NO_BATCHING";
    JiraBatchWindowPreference["OncePerDay"] = "ONCE_PER_DAY";
    JiraBatchWindowPreference["OneDay"] = "ONE_DAY";
    JiraBatchWindowPreference["OneHour"] = "ONE_HOUR";
    JiraBatchWindowPreference["TenMinutes"] = "TEN_MINUTES";
    JiraBatchWindowPreference["ThirtyMinutes"] = "THIRTY_MINUTES";
})(JiraBatchWindowPreference = exports.JiraBatchWindowPreference || (exports.JiraBatchWindowPreference = {}));
var JiraBitbucketWorkspaceApprovalState;
(function (JiraBitbucketWorkspaceApprovalState) {
    JiraBitbucketWorkspaceApprovalState["Approved"] = "APPROVED";
    JiraBitbucketWorkspaceApprovalState["PendingApproval"] = "PENDING_APPROVAL";
})(JiraBitbucketWorkspaceApprovalState = exports.JiraBitbucketWorkspaceApprovalState || (exports.JiraBitbucketWorkspaceApprovalState = {}));
var JiraBoardLocationType;
(function (JiraBoardLocationType) {
    JiraBoardLocationType["Project"] = "PROJECT";
    JiraBoardLocationType["User"] = "USER";
})(JiraBoardLocationType = exports.JiraBoardLocationType || (exports.JiraBoardLocationType = {}));
var JiraBoardSwimlaneStrategy;
(function (JiraBoardSwimlaneStrategy) {
    JiraBoardSwimlaneStrategy["AssigneeUnassignedFirst"] = "ASSIGNEE_UNASSIGNED_FIRST";
    JiraBoardSwimlaneStrategy["AssigneeUnassignedLast"] = "ASSIGNEE_UNASSIGNED_LAST";
    JiraBoardSwimlaneStrategy["Custom"] = "CUSTOM";
    JiraBoardSwimlaneStrategy["Epic"] = "EPIC";
    JiraBoardSwimlaneStrategy["IssueChildren"] = "ISSUE_CHILDREN";
    JiraBoardSwimlaneStrategy["IssueParent"] = "ISSUE_PARENT";
    JiraBoardSwimlaneStrategy["None"] = "NONE";
    JiraBoardSwimlaneStrategy["ParentChild"] = "PARENT_CHILD";
    JiraBoardSwimlaneStrategy["Project"] = "PROJECT";
    JiraBoardSwimlaneStrategy["RequestType"] = "REQUEST_TYPE";
})(JiraBoardSwimlaneStrategy = exports.JiraBoardSwimlaneStrategy || (exports.JiraBoardSwimlaneStrategy = {}));
var JiraBoardType;
(function (JiraBoardType) {
    JiraBoardType["Kanban"] = "KANBAN";
    JiraBoardType["Scrum"] = "SCRUM";
})(JiraBoardType = exports.JiraBoardType || (exports.JiraBoardType = {}));
var JiraBulkEditMultiSelectFieldOptions;
(function (JiraBulkEditMultiSelectFieldOptions) {
    JiraBulkEditMultiSelectFieldOptions["Add"] = "ADD";
    JiraBulkEditMultiSelectFieldOptions["Remove"] = "REMOVE";
    JiraBulkEditMultiSelectFieldOptions["RemoveAll"] = "REMOVE_ALL";
    JiraBulkEditMultiSelectFieldOptions["Replace"] = "REPLACE";
})(JiraBulkEditMultiSelectFieldOptions = exports.JiraBulkEditMultiSelectFieldOptions || (exports.JiraBulkEditMultiSelectFieldOptions = {}));
var JiraBulkOperationType;
(function (JiraBulkOperationType) {
    JiraBulkOperationType["BulkDelete"] = "BULK_DELETE";
    JiraBulkOperationType["BulkEdit"] = "BULK_EDIT";
    JiraBulkOperationType["BulkTransition"] = "BULK_TRANSITION";
    JiraBulkOperationType["BulkUnwatch"] = "BULK_UNWATCH";
    JiraBulkOperationType["BulkWatch"] = "BULK_WATCH";
})(JiraBulkOperationType = exports.JiraBulkOperationType || (exports.JiraBulkOperationType = {}));
var JiraCfoAggregationType;
(function (JiraCfoAggregationType) {
    JiraCfoAggregationType["Avg"] = "AVG";
    JiraCfoAggregationType["Count"] = "COUNT";
    JiraCfoAggregationType["CountDistinct"] = "COUNT_DISTINCT";
    JiraCfoAggregationType["Max"] = "MAX";
    JiraCfoAggregationType["Min"] = "MIN";
    JiraCfoAggregationType["Percentile"] = "PERCENTILE";
    JiraCfoAggregationType["Sum"] = "SUM";
})(JiraCfoAggregationType = exports.JiraCfoAggregationType || (exports.JiraCfoAggregationType = {}));
var JiraCfoBoardPerformanceStatus;
(function (JiraCfoBoardPerformanceStatus) {
    JiraCfoBoardPerformanceStatus["Fast"] = "FAST";
    JiraCfoBoardPerformanceStatus["Moderate"] = "MODERATE";
    JiraCfoBoardPerformanceStatus["Slow"] = "SLOW";
})(JiraCfoBoardPerformanceStatus = exports.JiraCfoBoardPerformanceStatus || (exports.JiraCfoBoardPerformanceStatus = {}));
var JiraCfoFilterOperator;
(function (JiraCfoFilterOperator) {
    JiraCfoFilterOperator["Equals"] = "EQUALS";
    JiraCfoFilterOperator["In"] = "IN";
})(JiraCfoFilterOperator = exports.JiraCfoFilterOperator || (exports.JiraCfoFilterOperator = {}));
var JiraCfoTimeGranularity;
(function (JiraCfoTimeGranularity) {
    JiraCfoTimeGranularity["Day"] = "DAY";
    JiraCfoTimeGranularity["Month"] = "MONTH";
    JiraCfoTimeGranularity["Week"] = "WEEK";
})(JiraCfoTimeGranularity = exports.JiraCfoTimeGranularity || (exports.JiraCfoTimeGranularity = {}));
var JiraCalendarMode;
(function (JiraCalendarMode) {
    JiraCalendarMode["Day"] = "DAY";
    JiraCalendarMode["Month"] = "MONTH";
    JiraCalendarMode["Week"] = "WEEK";
})(JiraCalendarMode = exports.JiraCalendarMode || (exports.JiraCalendarMode = {}));
var JiraCalendarPermissionKey;
(function (JiraCalendarPermissionKey) {
    JiraCalendarPermissionKey["ManageSprintsPermission"] = "MANAGE_SPRINTS_PERMISSION";
})(JiraCalendarPermissionKey = exports.JiraCalendarPermissionKey || (exports.JiraCalendarPermissionKey = {}));
var JiraCalendarWeekStart;
(function (JiraCalendarWeekStart) {
    JiraCalendarWeekStart["Monday"] = "MONDAY";
    JiraCalendarWeekStart["Saturday"] = "SATURDAY";
    JiraCalendarWeekStart["Sunday"] = "SUNDAY";
})(JiraCalendarWeekStart = exports.JiraCalendarWeekStart || (exports.JiraCalendarWeekStart = {}));
var JiraCannedResponseScope;
(function (JiraCannedResponseScope) {
    JiraCannedResponseScope["Personal"] = "PERSONAL";
    JiraCannedResponseScope["Project"] = "PROJECT";
})(JiraCannedResponseScope = exports.JiraCannedResponseScope || (exports.JiraCannedResponseScope = {}));
var JiraCannedResponseSortOrder;
(function (JiraCannedResponseSortOrder) {
    JiraCannedResponseSortOrder["Asc"] = "ASC";
    JiraCannedResponseSortOrder["Desc"] = "DESC";
})(JiraCannedResponseSortOrder = exports.JiraCannedResponseSortOrder || (exports.JiraCannedResponseSortOrder = {}));
var JiraCascadingSelectOptionType;
(function (JiraCascadingSelectOptionType) {
    JiraCascadingSelectOptionType["All"] = "ALL";
    JiraCascadingSelectOptionType["Child"] = "CHILD";
    JiraCascadingSelectOptionType["Parent"] = "PARENT";
})(JiraCascadingSelectOptionType = exports.JiraCascadingSelectOptionType || (exports.JiraCascadingSelectOptionType = {}));
var JiraClassificationLevelSource;
(function (JiraClassificationLevelSource) {
    JiraClassificationLevelSource["Issue"] = "ISSUE";
    JiraClassificationLevelSource["Organization"] = "ORGANIZATION";
    JiraClassificationLevelSource["Project"] = "PROJECT";
})(JiraClassificationLevelSource = exports.JiraClassificationLevelSource || (exports.JiraClassificationLevelSource = {}));
var JiraClassificationLevelStatus;
(function (JiraClassificationLevelStatus) {
    JiraClassificationLevelStatus["Archived"] = "ARCHIVED";
    JiraClassificationLevelStatus["Draft"] = "DRAFT";
    JiraClassificationLevelStatus["Published"] = "PUBLISHED";
})(JiraClassificationLevelStatus = exports.JiraClassificationLevelStatus || (exports.JiraClassificationLevelStatus = {}));
var JiraClassificationLevelType;
(function (JiraClassificationLevelType) {
    JiraClassificationLevelType["System"] = "SYSTEM";
    JiraClassificationLevelType["User"] = "USER";
})(JiraClassificationLevelType = exports.JiraClassificationLevelType || (exports.JiraClassificationLevelType = {}));
var JiraCmdbAttributeType;
(function (JiraCmdbAttributeType) {
    JiraCmdbAttributeType["BitbucketRepo"] = "BITBUCKET_REPO";
    JiraCmdbAttributeType["Confluence"] = "CONFLUENCE";
    JiraCmdbAttributeType["Default"] = "DEFAULT";
    JiraCmdbAttributeType["Group"] = "GROUP";
    JiraCmdbAttributeType["OpsgenieTeam"] = "OPSGENIE_TEAM";
    JiraCmdbAttributeType["Project"] = "PROJECT";
    JiraCmdbAttributeType["ReferencedObject"] = "REFERENCED_OBJECT";
    JiraCmdbAttributeType["Status"] = "STATUS";
    JiraCmdbAttributeType["User"] = "USER";
    JiraCmdbAttributeType["Version"] = "VERSION";
})(JiraCmdbAttributeType = exports.JiraCmdbAttributeType || (exports.JiraCmdbAttributeType = {}));
var JiraCollapsibleSection;
(function (JiraCollapsibleSection) {
    JiraCollapsibleSection["Activity"] = "ACTIVITY";
    JiraCollapsibleSection["Attachments"] = "ATTACHMENTS";
    JiraCollapsibleSection["ChildWorkItem"] = "CHILD_WORK_ITEM";
    JiraCollapsibleSection["Description"] = "DESCRIPTION";
    JiraCollapsibleSection["LinkedWorkItem"] = "LINKED_WORK_ITEM";
})(JiraCollapsibleSection = exports.JiraCollapsibleSection || (exports.JiraCollapsibleSection = {}));
var JiraColorSchemeThemeSetting;
(function (JiraColorSchemeThemeSetting) {
    JiraColorSchemeThemeSetting["Automatic"] = "AUTOMATIC";
    JiraColorSchemeThemeSetting["Dark"] = "DARK";
    JiraColorSchemeThemeSetting["Light"] = "LIGHT";
})(JiraColorSchemeThemeSetting = exports.JiraColorSchemeThemeSetting || (exports.JiraColorSchemeThemeSetting = {}));
var JiraCommentSortField;
(function (JiraCommentSortField) {
    JiraCommentSortField["Created"] = "CREATED";
})(JiraCommentSortField = exports.JiraCommentSortField || (exports.JiraCommentSortField = {}));
var JiraCommentThirdPartySource;
(function (JiraCommentThirdPartySource) {
    JiraCommentThirdPartySource["Slack"] = "SLACK";
})(JiraCommentThirdPartySource = exports.JiraCommentThirdPartySource || (exports.JiraCommentThirdPartySource = {}));
var JiraConfigFieldType;
(function (JiraConfigFieldType) {
    JiraConfigFieldType["ChartingFirstResponseDate"] = "CHARTING_FIRST_RESPONSE_DATE";
    JiraConfigFieldType["ChartingTimeInStatus"] = "CHARTING_TIME_IN_STATUS";
    JiraConfigFieldType["CustomAtlassianTeam"] = "CUSTOM_ATLASSIAN_TEAM";
    JiraConfigFieldType["CustomCascadingSelect"] = "CUSTOM_CASCADING_SELECT";
    JiraConfigFieldType["CustomDatetime"] = "CUSTOM_DATETIME";
    JiraConfigFieldType["CustomDatePicker"] = "CUSTOM_DATE_PICKER";
    JiraConfigFieldType["CustomFloat"] = "CUSTOM_FLOAT";
    JiraConfigFieldType["CustomFocusAreas"] = "CUSTOM_FOCUS_AREAS";
    JiraConfigFieldType["CustomGoals"] = "CUSTOM_GOALS";
    JiraConfigFieldType["CustomGroupPicker"] = "CUSTOM_GROUP_PICKER";
    JiraConfigFieldType["CustomImportId"] = "CUSTOM_IMPORT_ID";
    JiraConfigFieldType["CustomJwmCategory"] = "CUSTOM_JWM_CATEGORY";
    JiraConfigFieldType["CustomLabels"] = "CUSTOM_LABELS";
    JiraConfigFieldType["CustomMultiCheckboxes"] = "CUSTOM_MULTI_CHECKBOXES";
    JiraConfigFieldType["CustomMultiGroupPicker"] = "CUSTOM_MULTI_GROUP_PICKER";
    JiraConfigFieldType["CustomMultiSelect"] = "CUSTOM_MULTI_SELECT";
    JiraConfigFieldType["CustomMultiUserPicker"] = "CUSTOM_MULTI_USER_PICKER";
    JiraConfigFieldType["CustomMultiVersion"] = "CUSTOM_MULTI_VERSION";
    JiraConfigFieldType["CustomPeople"] = "CUSTOM_PEOPLE";
    JiraConfigFieldType["CustomProject"] = "CUSTOM_PROJECT";
    JiraConfigFieldType["CustomRadioButtons"] = "CUSTOM_RADIO_BUTTONS";
    JiraConfigFieldType["CustomReadonlyField"] = "CUSTOM_READONLY_FIELD";
    JiraConfigFieldType["CustomSelect"] = "CUSTOM_SELECT";
    JiraConfigFieldType["CustomTextarea"] = "CUSTOM_TEXTAREA";
    JiraConfigFieldType["CustomTextField"] = "CUSTOM_TEXT_FIELD";
    JiraConfigFieldType["CustomTownsquareProject"] = "CUSTOM_TOWNSQUARE_PROJECT";
    JiraConfigFieldType["CustomUrl"] = "CUSTOM_URL";
    JiraConfigFieldType["CustomUserPicker"] = "CUSTOM_USER_PICKER";
    JiraConfigFieldType["CustomVersion"] = "CUSTOM_VERSION";
    JiraConfigFieldType["JdiDesign"] = "JDI_DESIGN";
    JiraConfigFieldType["JdiDevSummary"] = "JDI_DEV_SUMMARY";
    JiraConfigFieldType["JdiVulnerability"] = "JDI_VULNERABILITY";
    JiraConfigFieldType["JimBugImportId"] = "JIM_BUG_IMPORT_ID";
    JiraConfigFieldType["JpdAtlassianProject"] = "JPD_ATLASSIAN_PROJECT";
    JiraConfigFieldType["JpdAtlassianProjectStatus"] = "JPD_ATLASSIAN_PROJECT_STATUS";
    JiraConfigFieldType["JpdBoolean"] = "JPD_BOOLEAN";
    JiraConfigFieldType["JpdConnection"] = "JPD_CONNECTION";
    JiraConfigFieldType["JpdCountInsights"] = "JPD_COUNT_INSIGHTS";
    JiraConfigFieldType["JpdCountIssueComments"] = "JPD_COUNT_ISSUE_COMMENTS";
    JiraConfigFieldType["JpdCountLinkedIssues"] = "JPD_COUNT_LINKED_ISSUES";
    JiraConfigFieldType["JpdDeliveryProgress"] = "JPD_DELIVERY_PROGRESS";
    JiraConfigFieldType["JpdDeliveryStatus"] = "JPD_DELIVERY_STATUS";
    JiraConfigFieldType["JpdExternalReference"] = "JPD_EXTERNAL_REFERENCE";
    JiraConfigFieldType["JpdFormula"] = "JPD_FORMULA";
    JiraConfigFieldType["JpdInterval"] = "JPD_INTERVAL";
    JiraConfigFieldType["JpdLocation"] = "JPD_LOCATION";
    JiraConfigFieldType["JpdRating"] = "JPD_RATING";
    JiraConfigFieldType["JpdReactions"] = "JPD_REACTIONS";
    JiraConfigFieldType["JpdSlider"] = "JPD_SLIDER";
    JiraConfigFieldType["JpdUuid"] = "JPD_UUID";
    JiraConfigFieldType["JpdVotes"] = "JPD_VOTES";
    JiraConfigFieldType["JpoParent"] = "JPO_PARENT";
    JiraConfigFieldType["JpoTargetEnd"] = "JPO_TARGET_END";
    JiraConfigFieldType["JpoTargetStart"] = "JPO_TARGET_START";
    JiraConfigFieldType["ProformaFormsLocked"] = "PROFORMA_FORMS_LOCKED";
    JiraConfigFieldType["ProformaFormsOpen"] = "PROFORMA_FORMS_OPEN";
    JiraConfigFieldType["ProformaFormsSubmitted"] = "PROFORMA_FORMS_SUBMITTED";
    JiraConfigFieldType["ProformaFormsTotal"] = "PROFORMA_FORMS_TOTAL";
    JiraConfigFieldType["ServicedeskApprovals"] = "SERVICEDESK_APPROVALS";
    JiraConfigFieldType["ServicedeskApproversList"] = "SERVICEDESK_APPROVERS_LIST";
    JiraConfigFieldType["ServicedeskAsset"] = "SERVICEDESK_ASSET";
    JiraConfigFieldType["ServicedeskCmdbField"] = "SERVICEDESK_CMDB_FIELD";
    JiraConfigFieldType["ServicedeskCustomer"] = "SERVICEDESK_CUSTOMER";
    JiraConfigFieldType["ServicedeskCustomerOrganizations"] = "SERVICEDESK_CUSTOMER_ORGANIZATIONS";
    JiraConfigFieldType["ServicedeskEntitlement"] = "SERVICEDESK_ENTITLEMENT";
    JiraConfigFieldType["ServicedeskMajorIncidentEntity"] = "SERVICEDESK_MAJOR_INCIDENT_ENTITY";
    JiraConfigFieldType["ServicedeskOrganization"] = "SERVICEDESK_ORGANIZATION";
    JiraConfigFieldType["ServicedeskRequestFeedback"] = "SERVICEDESK_REQUEST_FEEDBACK";
    JiraConfigFieldType["ServicedeskRequestFeedbackDate"] = "SERVICEDESK_REQUEST_FEEDBACK_DATE";
    JiraConfigFieldType["ServicedeskRequestLanguage"] = "SERVICEDESK_REQUEST_LANGUAGE";
    JiraConfigFieldType["ServicedeskRequestParticipants"] = "SERVICEDESK_REQUEST_PARTICIPANTS";
    JiraConfigFieldType["ServicedeskRespondersEntity"] = "SERVICEDESK_RESPONDERS_ENTITY";
    JiraConfigFieldType["ServicedeskSentiment"] = "SERVICEDESK_SENTIMENT";
    JiraConfigFieldType["ServicedeskServiceEntity"] = "SERVICEDESK_SERVICE_ENTITY";
    JiraConfigFieldType["ServicedeskSlaField"] = "SERVICEDESK_SLA_FIELD";
    JiraConfigFieldType["ServicedeskVpOrigin"] = "SERVICEDESK_VP_ORIGIN";
    JiraConfigFieldType["ServicedeskWorkCategory"] = "SERVICEDESK_WORK_CATEGORY";
    JiraConfigFieldType["SoftwareEpicColor"] = "SOFTWARE_EPIC_COLOR";
    JiraConfigFieldType["SoftwareEpicIssueColor"] = "SOFTWARE_EPIC_ISSUE_COLOR";
    JiraConfigFieldType["SoftwareEpicLabel"] = "SOFTWARE_EPIC_LABEL";
    JiraConfigFieldType["SoftwareEpicLexoRank"] = "SOFTWARE_EPIC_LEXO_RANK";
    JiraConfigFieldType["SoftwareEpicLink"] = "SOFTWARE_EPIC_LINK";
    JiraConfigFieldType["SoftwareEpicSprint"] = "SOFTWARE_EPIC_SPRINT";
    JiraConfigFieldType["SoftwareEpicStatus"] = "SOFTWARE_EPIC_STATUS";
    JiraConfigFieldType["SoftwareStoryPoints"] = "SOFTWARE_STORY_POINTS";
    JiraConfigFieldType["StandardAffectedVersions"] = "STANDARD_AFFECTED_VERSIONS";
    JiraConfigFieldType["StandardAggregateProgress"] = "STANDARD_AGGREGATE_PROGRESS";
    JiraConfigFieldType["StandardAggregateTimeEstimate"] = "STANDARD_AGGREGATE_TIME_ESTIMATE";
    JiraConfigFieldType["StandardAggregateTimeOriginalEstimate"] = "STANDARD_AGGREGATE_TIME_ORIGINAL_ESTIMATE";
    JiraConfigFieldType["StandardAggregateTimeSpent"] = "STANDARD_AGGREGATE_TIME_SPENT";
    JiraConfigFieldType["StandardAssignee"] = "STANDARD_ASSIGNEE";
    JiraConfigFieldType["StandardAttachment"] = "STANDARD_ATTACHMENT";
    JiraConfigFieldType["StandardComment"] = "STANDARD_COMMENT";
    JiraConfigFieldType["StandardComponents"] = "STANDARD_COMPONENTS";
    JiraConfigFieldType["StandardCreated"] = "STANDARD_CREATED";
    JiraConfigFieldType["StandardCreator"] = "STANDARD_CREATOR";
    JiraConfigFieldType["StandardDescription"] = "STANDARD_DESCRIPTION";
    JiraConfigFieldType["StandardDueDate"] = "STANDARD_DUE_DATE";
    JiraConfigFieldType["StandardEnvironment"] = "STANDARD_ENVIRONMENT";
    JiraConfigFieldType["StandardFixForVersions"] = "STANDARD_FIX_FOR_VERSIONS";
    JiraConfigFieldType["StandardFormToken"] = "STANDARD_FORM_TOKEN";
    JiraConfigFieldType["StandardIssueKey"] = "STANDARD_ISSUE_KEY";
    JiraConfigFieldType["StandardIssueLinks"] = "STANDARD_ISSUE_LINKS";
    JiraConfigFieldType["StandardIssueNumber"] = "STANDARD_ISSUE_NUMBER";
    JiraConfigFieldType["StandardIssueRestriction"] = "STANDARD_ISSUE_RESTRICTION";
    JiraConfigFieldType["StandardIssueType"] = "STANDARD_ISSUE_TYPE";
    JiraConfigFieldType["StandardLabels"] = "STANDARD_LABELS";
    JiraConfigFieldType["StandardLastViewed"] = "STANDARD_LAST_VIEWED";
    JiraConfigFieldType["StandardParent"] = "STANDARD_PARENT";
    JiraConfigFieldType["StandardPriority"] = "STANDARD_PRIORITY";
    JiraConfigFieldType["StandardProgress"] = "STANDARD_PROGRESS";
    JiraConfigFieldType["StandardProject"] = "STANDARD_PROJECT";
    JiraConfigFieldType["StandardProjectKey"] = "STANDARD_PROJECT_KEY";
    JiraConfigFieldType["StandardReporter"] = "STANDARD_REPORTER";
    JiraConfigFieldType["StandardResolution"] = "STANDARD_RESOLUTION";
    JiraConfigFieldType["StandardResolutionDate"] = "STANDARD_RESOLUTION_DATE";
    JiraConfigFieldType["StandardSecurity"] = "STANDARD_SECURITY";
    JiraConfigFieldType["StandardStatus"] = "STANDARD_STATUS";
    JiraConfigFieldType["StandardStatusCategory"] = "STANDARD_STATUS_CATEGORY";
    JiraConfigFieldType["StandardStatusCategoryChangeDate"] = "STANDARD_STATUS_CATEGORY_CHANGE_DATE";
    JiraConfigFieldType["StandardSubtasks"] = "STANDARD_SUBTASKS";
    JiraConfigFieldType["StandardSummary"] = "STANDARD_SUMMARY";
    JiraConfigFieldType["StandardThumbnail"] = "STANDARD_THUMBNAIL";
    JiraConfigFieldType["StandardTimetracking"] = "STANDARD_TIMETRACKING";
    JiraConfigFieldType["StandardTimeEstimate"] = "STANDARD_TIME_ESTIMATE";
    JiraConfigFieldType["StandardTimeOriginalEstimate"] = "STANDARD_TIME_ORIGINAL_ESTIMATE";
    JiraConfigFieldType["StandardTimeSpent"] = "STANDARD_TIME_SPENT";
    JiraConfigFieldType["StandardUpdated"] = "STANDARD_UPDATED";
    JiraConfigFieldType["StandardVoters"] = "STANDARD_VOTERS";
    JiraConfigFieldType["StandardVotes"] = "STANDARD_VOTES";
    JiraConfigFieldType["StandardWatchers"] = "STANDARD_WATCHERS";
    JiraConfigFieldType["StandardWatches"] = "STANDARD_WATCHES";
    JiraConfigFieldType["StandardWorklog"] = "STANDARD_WORKLOG";
    JiraConfigFieldType["StandardWorkratio"] = "STANDARD_WORKRATIO";
    JiraConfigFieldType["ToolkitAssigneeDomain"] = "TOOLKIT_ASSIGNEE_DOMAIN";
    JiraConfigFieldType["ToolkitAttachments"] = "TOOLKIT_ATTACHMENTS";
    JiraConfigFieldType["ToolkitComments"] = "TOOLKIT_COMMENTS";
    JiraConfigFieldType["ToolkitDaysLastCommented"] = "TOOLKIT_DAYS_LAST_COMMENTED";
    JiraConfigFieldType["ToolkitLastCommentDate"] = "TOOLKIT_LAST_COMMENT_DATE";
    JiraConfigFieldType["ToolkitLastUpdaterOrCommenter"] = "TOOLKIT_LAST_UPDATER_OR_COMMENTER";
    JiraConfigFieldType["ToolkitLastUserCommented"] = "TOOLKIT_LAST_USER_COMMENTED";
    JiraConfigFieldType["ToolkitMessage"] = "TOOLKIT_MESSAGE";
    JiraConfigFieldType["ToolkitParticipants"] = "TOOLKIT_PARTICIPANTS";
    JiraConfigFieldType["ToolkitReporterDomain"] = "TOOLKIT_REPORTER_DOMAIN";
    JiraConfigFieldType["ToolkitUserProperty"] = "TOOLKIT_USER_PROPERTY";
    JiraConfigFieldType["ToolkitViewMessage"] = "TOOLKIT_VIEW_MESSAGE";
    JiraConfigFieldType["Unsupported"] = "UNSUPPORTED";
})(JiraConfigFieldType = exports.JiraConfigFieldType || (exports.JiraConfigFieldType = {}));
var JiraConfigStateConfigurationStatus;
(function (JiraConfigStateConfigurationStatus) {
    JiraConfigStateConfigurationStatus["Configured"] = "CONFIGURED";
    JiraConfigStateConfigurationStatus["NotConfigured"] = "NOT_CONFIGURED";
    JiraConfigStateConfigurationStatus["NotInstalled"] = "NOT_INSTALLED";
    JiraConfigStateConfigurationStatus["NotSet"] = "NOT_SET";
    JiraConfigStateConfigurationStatus["PartiallyConfigured"] = "PARTIALLY_CONFIGURED";
    JiraConfigStateConfigurationStatus["ProviderActionConfigured"] = "PROVIDER_ACTION_CONFIGURED";
    JiraConfigStateConfigurationStatus["ProviderActionNotConfigured"] = "PROVIDER_ACTION_NOT_CONFIGURED";
})(JiraConfigStateConfigurationStatus = exports.JiraConfigStateConfigurationStatus || (exports.JiraConfigStateConfigurationStatus = {}));
var JiraConfigStateProviderType;
(function (JiraConfigStateProviderType) {
    JiraConfigStateProviderType["Builds"] = "BUILDS";
    JiraConfigStateProviderType["Deployments"] = "DEPLOYMENTS";
    JiraConfigStateProviderType["Designs"] = "DESIGNS";
    JiraConfigStateProviderType["DevelopmentInfo"] = "DEVELOPMENT_INFO";
    JiraConfigStateProviderType["FeatureFlags"] = "FEATURE_FLAGS";
    JiraConfigStateProviderType["RemoteLinks"] = "REMOTE_LINKS";
    JiraConfigStateProviderType["Security"] = "SECURITY";
    JiraConfigStateProviderType["Unknown"] = "UNKNOWN";
})(JiraConfigStateProviderType = exports.JiraConfigStateProviderType || (exports.JiraConfigStateProviderType = {}));
var JiraConfluenceContentRelationshipType;
(function (JiraConfluenceContentRelationshipType) {
    JiraConfluenceContentRelationshipType["Linked"] = "LINKED";
    JiraConfluenceContentRelationshipType["MentionedIn"] = "MENTIONED_IN";
})(JiraConfluenceContentRelationshipType = exports.JiraConfluenceContentRelationshipType || (exports.JiraConfluenceContentRelationshipType = {}));
var JiraConfluencePageContentErrorType;
(function (JiraConfluencePageContentErrorType) {
    JiraConfluencePageContentErrorType["ApplinkMissing"] = "APPLINK_MISSING";
    JiraConfluencePageContentErrorType["ApplinkReqAuth"] = "APPLINK_REQ_AUTH";
    JiraConfluencePageContentErrorType["RemoteError"] = "REMOTE_ERROR";
    JiraConfluencePageContentErrorType["RemoteLinkMissing"] = "REMOTE_LINK_MISSING";
})(JiraConfluencePageContentErrorType = exports.JiraConfluencePageContentErrorType || (exports.JiraConfluencePageContentErrorType = {}));
var JiraContactOrgAdminToEnableAtlassianIntelligenceState;
(function (JiraContactOrgAdminToEnableAtlassianIntelligenceState) {
    JiraContactOrgAdminToEnableAtlassianIntelligenceState["Available"] = "AVAILABLE";
    JiraContactOrgAdminToEnableAtlassianIntelligenceState["Unavailable"] = "UNAVAILABLE";
})(JiraContactOrgAdminToEnableAtlassianIntelligenceState = exports.JiraContactOrgAdminToEnableAtlassianIntelligenceState || (exports.JiraContactOrgAdminToEnableAtlassianIntelligenceState = {}));
var JiraCustomBackgroundBrightness;
(function (JiraCustomBackgroundBrightness) {
    JiraCustomBackgroundBrightness["Dark"] = "DARK";
    JiraCustomBackgroundBrightness["Light"] = "LIGHT";
})(JiraCustomBackgroundBrightness = exports.JiraCustomBackgroundBrightness || (exports.JiraCustomBackgroundBrightness = {}));
var JiraCustomFieldTypeCategory;
(function (JiraCustomFieldTypeCategory) {
    JiraCustomFieldTypeCategory["Advanced"] = "ADVANCED";
    JiraCustomFieldTypeCategory["Standard"] = "STANDARD";
})(JiraCustomFieldTypeCategory = exports.JiraCustomFieldTypeCategory || (exports.JiraCustomFieldTypeCategory = {}));
var JiraCustomIssueSearchErrorType;
(function (JiraCustomIssueSearchErrorType) {
    JiraCustomIssueSearchErrorType["CustomImplementationError"] = "CUSTOM_IMPLEMENTATION_ERROR";
    JiraCustomIssueSearchErrorType["CustomSearchDisabled"] = "CUSTOM_SEARCH_DISABLED";
    JiraCustomIssueSearchErrorType["InvalidAri"] = "INVALID_ARI";
    JiraCustomIssueSearchErrorType["UnsupportedAri"] = "UNSUPPORTED_ARI";
})(JiraCustomIssueSearchErrorType = exports.JiraCustomIssueSearchErrorType || (exports.JiraCustomIssueSearchErrorType = {}));
var JiraDeploymentsFeaturePrecondition;
(function (JiraDeploymentsFeaturePrecondition) {
    JiraDeploymentsFeaturePrecondition["AllSatisfied"] = "ALL_SATISFIED";
    JiraDeploymentsFeaturePrecondition["DeploymentsEmptyState"] = "DEPLOYMENTS_EMPTY_STATE";
    JiraDeploymentsFeaturePrecondition["NotAvailable"] = "NOT_AVAILABLE";
})(JiraDeploymentsFeaturePrecondition = exports.JiraDeploymentsFeaturePrecondition || (exports.JiraDeploymentsFeaturePrecondition = {}));
var JiraDevInfoConfigErrorType;
(function (JiraDevInfoConfigErrorType) {
    JiraDevInfoConfigErrorType["Incapable"] = "INCAPABLE";
    JiraDevInfoConfigErrorType["NotConfigured"] = "NOT_CONFIGURED";
    JiraDevInfoConfigErrorType["Unauthorized"] = "UNAUTHORIZED";
    JiraDevInfoConfigErrorType["UnknownConfigError"] = "UNKNOWN_CONFIG_ERROR";
})(JiraDevInfoConfigErrorType = exports.JiraDevInfoConfigErrorType || (exports.JiraDevInfoConfigErrorType = {}));
var JiraDevOpsCapability;
(function (JiraDevOpsCapability) {
    JiraDevOpsCapability["Branch"] = "BRANCH";
    JiraDevOpsCapability["Build"] = "BUILD";
    JiraDevOpsCapability["Commit"] = "COMMIT";
    JiraDevOpsCapability["Deployment"] = "DEPLOYMENT";
    JiraDevOpsCapability["FeatureFlag"] = "FEATURE_FLAG";
    JiraDevOpsCapability["PullRequest"] = "PULL_REQUEST";
    JiraDevOpsCapability["Review"] = "REVIEW";
})(JiraDevOpsCapability = exports.JiraDevOpsCapability || (exports.JiraDevOpsCapability = {}));
var JiraDevOpsInContextConfigPromptLocation;
(function (JiraDevOpsInContextConfigPromptLocation) {
    JiraDevOpsInContextConfigPromptLocation["DevelopmentPanel"] = "DEVELOPMENT_PANEL";
    JiraDevOpsInContextConfigPromptLocation["ReleasesPanel"] = "RELEASES_PANEL";
    JiraDevOpsInContextConfigPromptLocation["SecurityPanel"] = "SECURITY_PANEL";
})(JiraDevOpsInContextConfigPromptLocation = exports.JiraDevOpsInContextConfigPromptLocation || (exports.JiraDevOpsInContextConfigPromptLocation = {}));
var JiraDevOpsIssuePanelBannerType;
(function (JiraDevOpsIssuePanelBannerType) {
    JiraDevOpsIssuePanelBannerType["IssueKeyOnboarding"] = "ISSUE_KEY_ONBOARDING";
})(JiraDevOpsIssuePanelBannerType = exports.JiraDevOpsIssuePanelBannerType || (exports.JiraDevOpsIssuePanelBannerType = {}));
var JiraDevOpsIssuePanelState;
(function (JiraDevOpsIssuePanelState) {
    JiraDevOpsIssuePanelState["DevSummary"] = "DEV_SUMMARY";
    JiraDevOpsIssuePanelState["Hidden"] = "HIDDEN";
    JiraDevOpsIssuePanelState["NotConnected"] = "NOT_CONNECTED";
})(JiraDevOpsIssuePanelState = exports.JiraDevOpsIssuePanelState || (exports.JiraDevOpsIssuePanelState = {}));
var JiraDevOpsUpdateAssociationsEntityType;
(function (JiraDevOpsUpdateAssociationsEntityType) {
    JiraDevOpsUpdateAssociationsEntityType["Vulnerability"] = "VULNERABILITY";
})(JiraDevOpsUpdateAssociationsEntityType = exports.JiraDevOpsUpdateAssociationsEntityType || (exports.JiraDevOpsUpdateAssociationsEntityType = {}));
var JiraEmailMimeType;
(function (JiraEmailMimeType) {
    JiraEmailMimeType["Html"] = "HTML";
    JiraEmailMimeType["Text"] = "TEXT";
})(JiraEmailMimeType = exports.JiraEmailMimeType || (exports.JiraEmailMimeType = {}));
var JiraEntityScope;
(function (JiraEntityScope) {
    JiraEntityScope["Global"] = "GLOBAL";
    JiraEntityScope["Project"] = "PROJECT";
})(JiraEntityScope = exports.JiraEntityScope || (exports.JiraEntityScope = {}));
var JiraFavouriteType;
(function (JiraFavouriteType) {
    JiraFavouriteType["Board"] = "BOARD";
    JiraFavouriteType["Dashboard"] = "DASHBOARD";
    JiraFavouriteType["Filter"] = "FILTER";
    JiraFavouriteType["Plan"] = "PLAN";
    JiraFavouriteType["Project"] = "PROJECT";
    JiraFavouriteType["Queue"] = "QUEUE";
})(JiraFavouriteType = exports.JiraFavouriteType || (exports.JiraFavouriteType = {}));
var JiraFieldCategoryType;
(function (JiraFieldCategoryType) {
    JiraFieldCategoryType["Custom"] = "CUSTOM";
    JiraFieldCategoryType["System"] = "SYSTEM";
})(JiraFieldCategoryType = exports.JiraFieldCategoryType || (exports.JiraFieldCategoryType = {}));
var JiraFieldConfigOrderBy;
(function (JiraFieldConfigOrderBy) {
    JiraFieldConfigOrderBy["ContextCount"] = "CONTEXT_COUNT";
    JiraFieldConfigOrderBy["Description"] = "DESCRIPTION";
    JiraFieldConfigOrderBy["FieldType"] = "FIELD_TYPE";
    JiraFieldConfigOrderBy["Id"] = "ID";
    JiraFieldConfigOrderBy["LastUsed"] = "LAST_USED";
    JiraFieldConfigOrderBy["Name"] = "NAME";
    JiraFieldConfigOrderBy["PlannedDeleteDate"] = "PLANNED_DELETE_DATE";
    JiraFieldConfigOrderBy["ProjectCount"] = "PROJECT_COUNT";
    JiraFieldConfigOrderBy["ScreenCount"] = "SCREEN_COUNT";
    JiraFieldConfigOrderBy["TrashedDate"] = "TRASHED_DATE";
})(JiraFieldConfigOrderBy = exports.JiraFieldConfigOrderBy || (exports.JiraFieldConfigOrderBy = {}));
var JiraFieldConfigOrderDirection;
(function (JiraFieldConfigOrderDirection) {
    JiraFieldConfigOrderDirection["Asc"] = "ASC";
    JiraFieldConfigOrderDirection["Desc"] = "DESC";
})(JiraFieldConfigOrderDirection = exports.JiraFieldConfigOrderDirection || (exports.JiraFieldConfigOrderDirection = {}));
var JiraFieldOptionIdsFilterOperation;
(function (JiraFieldOptionIdsFilterOperation) {
    JiraFieldOptionIdsFilterOperation["Allow"] = "ALLOW";
    JiraFieldOptionIdsFilterOperation["Exclude"] = "EXCLUDE";
})(JiraFieldOptionIdsFilterOperation = exports.JiraFieldOptionIdsFilterOperation || (exports.JiraFieldOptionIdsFilterOperation = {}));
var JiraFieldScopeType;
(function (JiraFieldScopeType) {
    JiraFieldScopeType["All"] = "ALL";
    JiraFieldScopeType["Global"] = "GLOBAL";
    JiraFieldScopeType["Project"] = "PROJECT";
})(JiraFieldScopeType = exports.JiraFieldScopeType || (exports.JiraFieldScopeType = {}));
var JiraFieldStatusType;
(function (JiraFieldStatusType) {
    JiraFieldStatusType["Active"] = "ACTIVE";
    JiraFieldStatusType["Trashed"] = "TRASHED";
})(JiraFieldStatusType = exports.JiraFieldStatusType || (exports.JiraFieldStatusType = {}));
var JiraFlagOperations;
(function (JiraFlagOperations) {
    JiraFlagOperations["Add"] = "ADD";
    JiraFlagOperations["Remove"] = "REMOVE";
})(JiraFlagOperations = exports.JiraFlagOperations || (exports.JiraFlagOperations = {}));
var JiraForgeEnvironmentType;
(function (JiraForgeEnvironmentType) {
    JiraForgeEnvironmentType["Development"] = "DEVELOPMENT";
    JiraForgeEnvironmentType["Production"] = "PRODUCTION";
    JiraForgeEnvironmentType["Staging"] = "STAGING";
})(JiraForgeEnvironmentType = exports.JiraForgeEnvironmentType || (exports.JiraForgeEnvironmentType = {}));
var JiraForgeUpdatePanelActionType;
(function (JiraForgeUpdatePanelActionType) {
    JiraForgeUpdatePanelActionType["Collapse"] = "COLLAPSE";
    JiraForgeUpdatePanelActionType["Expand"] = "EXPAND";
    JiraForgeUpdatePanelActionType["PinToProject"] = "PIN_TO_PROJECT";
    JiraForgeUpdatePanelActionType["UnpinFromProject"] = "UNPIN_FROM_PROJECT";
})(JiraForgeUpdatePanelActionType = exports.JiraForgeUpdatePanelActionType || (exports.JiraForgeUpdatePanelActionType = {}));
var JiraForgeWorkItemPinnableEntityType;
(function (JiraForgeWorkItemPinnableEntityType) {
    JiraForgeWorkItemPinnableEntityType["Project"] = "PROJECT";
    JiraForgeWorkItemPinnableEntityType["WorkItem"] = "WORK_ITEM";
})(JiraForgeWorkItemPinnableEntityType = exports.JiraForgeWorkItemPinnableEntityType || (exports.JiraForgeWorkItemPinnableEntityType = {}));
var JiraFormattingArea;
(function (JiraFormattingArea) {
    JiraFormattingArea["Cell"] = "CELL";
    JiraFormattingArea["Row"] = "ROW";
})(JiraFormattingArea = exports.JiraFormattingArea || (exports.JiraFormattingArea = {}));
var JiraFormattingColor;
(function (JiraFormattingColor) {
    JiraFormattingColor["Blue"] = "BLUE";
    JiraFormattingColor["Green"] = "GREEN";
    JiraFormattingColor["Red"] = "RED";
})(JiraFormattingColor = exports.JiraFormattingColor || (exports.JiraFormattingColor = {}));
var JiraFormattingMultipleValueOperator;
(function (JiraFormattingMultipleValueOperator) {
    JiraFormattingMultipleValueOperator["Contains"] = "CONTAINS";
    JiraFormattingMultipleValueOperator["DoesNotContain"] = "DOES_NOT_CONTAIN";
    JiraFormattingMultipleValueOperator["HasAnyOf"] = "HAS_ANY_OF";
})(JiraFormattingMultipleValueOperator = exports.JiraFormattingMultipleValueOperator || (exports.JiraFormattingMultipleValueOperator = {}));
var JiraFormattingNoValueOperator;
(function (JiraFormattingNoValueOperator) {
    JiraFormattingNoValueOperator["IsEmpty"] = "IS_EMPTY";
    JiraFormattingNoValueOperator["IsNotEmpty"] = "IS_NOT_EMPTY";
})(JiraFormattingNoValueOperator = exports.JiraFormattingNoValueOperator || (exports.JiraFormattingNoValueOperator = {}));
var JiraFormattingSingleValueOperator;
(function (JiraFormattingSingleValueOperator) {
    JiraFormattingSingleValueOperator["Contains"] = "CONTAINS";
    JiraFormattingSingleValueOperator["DoesNotContain"] = "DOES_NOT_CONTAIN";
    JiraFormattingSingleValueOperator["DoesNotEqual"] = "DOES_NOT_EQUAL";
    JiraFormattingSingleValueOperator["Equals"] = "EQUALS";
    JiraFormattingSingleValueOperator["GreaterThan"] = "GREATER_THAN";
    JiraFormattingSingleValueOperator["GreaterThanOrEquals"] = "GREATER_THAN_OR_EQUALS";
    JiraFormattingSingleValueOperator["Is"] = "IS";
    JiraFormattingSingleValueOperator["IsAfter"] = "IS_AFTER";
    JiraFormattingSingleValueOperator["IsBefore"] = "IS_BEFORE";
    JiraFormattingSingleValueOperator["IsNot"] = "IS_NOT";
    JiraFormattingSingleValueOperator["IsOnOrAfter"] = "IS_ON_OR_AFTER";
    JiraFormattingSingleValueOperator["IsOnOrBefore"] = "IS_ON_OR_BEFORE";
    JiraFormattingSingleValueOperator["LessThan"] = "LESS_THAN";
    JiraFormattingSingleValueOperator["LessThanOrEquals"] = "LESS_THAN_OR_EQUALS";
})(JiraFormattingSingleValueOperator = exports.JiraFormattingSingleValueOperator || (exports.JiraFormattingSingleValueOperator = {}));
var JiraFormattingTwoValueOperator;
(function (JiraFormattingTwoValueOperator) {
    JiraFormattingTwoValueOperator["IsBetween"] = "IS_BETWEEN";
    JiraFormattingTwoValueOperator["IsNotBetween"] = "IS_NOT_BETWEEN";
})(JiraFormattingTwoValueOperator = exports.JiraFormattingTwoValueOperator || (exports.JiraFormattingTwoValueOperator = {}));
var JiraFormulaFieldType;
(function (JiraFormulaFieldType) {
    JiraFormulaFieldType["Datetime"] = "DATETIME";
    JiraFormulaFieldType["Number"] = "NUMBER";
    JiraFormulaFieldType["Text"] = "TEXT";
})(JiraFormulaFieldType = exports.JiraFormulaFieldType || (exports.JiraFormulaFieldType = {}));
var JiraGlobalIssueCreateView;
(function (JiraGlobalIssueCreateView) {
    JiraGlobalIssueCreateView["FullModal"] = "FULL_MODAL";
    JiraGlobalIssueCreateView["MiniModal"] = "MINI_MODAL";
})(JiraGlobalIssueCreateView = exports.JiraGlobalIssueCreateView || (exports.JiraGlobalIssueCreateView = {}));
var JiraGlobalPermissionType;
(function (JiraGlobalPermissionType) {
    JiraGlobalPermissionType["Administer"] = "ADMINISTER";
    JiraGlobalPermissionType["UserPicker"] = "USER_PICKER";
})(JiraGlobalPermissionType = exports.JiraGlobalPermissionType || (exports.JiraGlobalPermissionType = {}));
var JiraGoalStatus;
(function (JiraGoalStatus) {
    JiraGoalStatus["Archived"] = "ARCHIVED";
    JiraGoalStatus["AtRisk"] = "AT_RISK";
    JiraGoalStatus["Cancelled"] = "CANCELLED";
    JiraGoalStatus["Completed"] = "COMPLETED";
    JiraGoalStatus["Done"] = "DONE";
    JiraGoalStatus["OffTrack"] = "OFF_TRACK";
    JiraGoalStatus["OnTrack"] = "ON_TRACK";
    JiraGoalStatus["Paused"] = "PAUSED";
    JiraGoalStatus["Pending"] = "PENDING";
})(JiraGoalStatus = exports.JiraGoalStatus || (exports.JiraGoalStatus = {}));
var JiraGrantTypeKeyEnum;
(function (JiraGrantTypeKeyEnum) {
    JiraGrantTypeKeyEnum["AnonymousAccess"] = "ANONYMOUS_ACCESS";
    JiraGrantTypeKeyEnum["AnyLoggedinUserApplicationRole"] = "ANY_LOGGEDIN_USER_APPLICATION_ROLE";
    JiraGrantTypeKeyEnum["ApplicationRole"] = "APPLICATION_ROLE";
    JiraGrantTypeKeyEnum["Assignee"] = "ASSIGNEE";
    JiraGrantTypeKeyEnum["Group"] = "GROUP";
    JiraGrantTypeKeyEnum["MultiGroupPicker"] = "MULTI_GROUP_PICKER";
    JiraGrantTypeKeyEnum["MultiUserPicker"] = "MULTI_USER_PICKER";
    JiraGrantTypeKeyEnum["ProjectLead"] = "PROJECT_LEAD";
    JiraGrantTypeKeyEnum["ProjectRole"] = "PROJECT_ROLE";
    JiraGrantTypeKeyEnum["Reporter"] = "REPORTER";
    JiraGrantTypeKeyEnum["ServiceProjectCustomerPortalAccess"] = "SERVICE_PROJECT_CUSTOMER_PORTAL_ACCESS";
    JiraGrantTypeKeyEnum["User"] = "USER";
})(JiraGrantTypeKeyEnum = exports.JiraGrantTypeKeyEnum || (exports.JiraGrantTypeKeyEnum = {}));
var JiraGroupManagedBy;
(function (JiraGroupManagedBy) {
    JiraGroupManagedBy["Admins"] = "ADMINS";
    JiraGroupManagedBy["External"] = "EXTERNAL";
    JiraGroupManagedBy["Open"] = "OPEN";
    JiraGroupManagedBy["TeamMembers"] = "TEAM_MEMBERS";
})(JiraGroupManagedBy = exports.JiraGroupManagedBy || (exports.JiraGroupManagedBy = {}));
var JiraGroupUsageType;
(function (JiraGroupUsageType) {
    JiraGroupUsageType["TeamCollaboration"] = "TEAM_COLLABORATION";
    JiraGroupUsageType["UserbaseGroup"] = "USERBASE_GROUP";
})(JiraGroupUsageType = exports.JiraGroupUsageType || (exports.JiraGroupUsageType = {}));
var JiraGroupsContext;
(function (JiraGroupsContext) {
    JiraGroupsContext["Group"] = "GROUP";
    JiraGroupsContext["User"] = "USER";
})(JiraGroupsContext = exports.JiraGroupsContext || (exports.JiraGroupsContext = {}));
var JiraHomePageType;
(function (JiraHomePageType) {
    JiraHomePageType["Dashboards"] = "DASHBOARDS";
    JiraHomePageType["LoginRedirect"] = "LOGIN_REDIRECT";
    JiraHomePageType["ProjectsDirectory"] = "PROJECTS_DIRECTORY";
    JiraHomePageType["YourWork"] = "YOUR_WORK";
})(JiraHomePageType = exports.JiraHomePageType || (exports.JiraHomePageType = {}));
var JiraIncidentPriority;
(function (JiraIncidentPriority) {
    JiraIncidentPriority["P1"] = "P1";
    JiraIncidentPriority["P2"] = "P2";
    JiraIncidentPriority["P3"] = "P3";
    JiraIncidentPriority["P4"] = "P4";
    JiraIncidentPriority["P5"] = "P5";
})(JiraIncidentPriority = exports.JiraIncidentPriority || (exports.JiraIncidentPriority = {}));
var JiraInstallDeploymentsBannerPrecondition;
(function (JiraInstallDeploymentsBannerPrecondition) {
    JiraInstallDeploymentsBannerPrecondition["DeploymentsEmptyState"] = "DEPLOYMENTS_EMPTY_STATE";
    JiraInstallDeploymentsBannerPrecondition["FeatureNotEnabled"] = "FEATURE_NOT_ENABLED";
    JiraInstallDeploymentsBannerPrecondition["NotAvailable"] = "NOT_AVAILABLE";
})(JiraInstallDeploymentsBannerPrecondition = exports.JiraInstallDeploymentsBannerPrecondition || (exports.JiraInstallDeploymentsBannerPrecondition = {}));
var JiraIssueActivityType;
(function (JiraIssueActivityType) {
    JiraIssueActivityType["Created"] = "CREATED";
    JiraIssueActivityType["Updated"] = "UPDATED";
})(JiraIssueActivityType = exports.JiraIssueActivityType || (exports.JiraIssueActivityType = {}));
var JiraIssueCreateFieldValidationType;
(function (JiraIssueCreateFieldValidationType) {
    JiraIssueCreateFieldValidationType["Fieldrequiredvalidator"] = "FIELDREQUIREDVALIDATOR";
})(JiraIssueCreateFieldValidationType = exports.JiraIssueCreateFieldValidationType || (exports.JiraIssueCreateFieldValidationType = {}));
var JiraIssueDeploymentEnvironmentState;
(function (JiraIssueDeploymentEnvironmentState) {
    JiraIssueDeploymentEnvironmentState["Deployed"] = "DEPLOYED";
    JiraIssueDeploymentEnvironmentState["NotDeployed"] = "NOT_DEPLOYED";
})(JiraIssueDeploymentEnvironmentState = exports.JiraIssueDeploymentEnvironmentState || (exports.JiraIssueDeploymentEnvironmentState = {}));
var JiraIssueExportType;
(function (JiraIssueExportType) {
    JiraIssueExportType["CsvAllFields"] = "CSV_ALL_FIELDS";
    JiraIssueExportType["CsvCurrentFields"] = "CSV_CURRENT_FIELDS";
    JiraIssueExportType["CsvFilterDefaultFields"] = "CSV_FILTER_DEFAULT_FIELDS";
    JiraIssueExportType["CsvWithBomAllFields"] = "CSV_WITH_BOM_ALL_FIELDS";
    JiraIssueExportType["CsvWithBomCurrentFields"] = "CSV_WITH_BOM_CURRENT_FIELDS";
    JiraIssueExportType["CsvWithBomFilterDefaultFields"] = "CSV_WITH_BOM_FILTER_DEFAULT_FIELDS";
})(JiraIssueExportType = exports.JiraIssueExportType || (exports.JiraIssueExportType = {}));
var JiraIssueItemLayoutItemLocationRuleType;
(function (JiraIssueItemLayoutItemLocationRuleType) {
    JiraIssueItemLayoutItemLocationRuleType["Dates"] = "DATES";
    JiraIssueItemLayoutItemLocationRuleType["MultilineText"] = "MULTILINE_TEXT";
    JiraIssueItemLayoutItemLocationRuleType["Other"] = "OTHER";
    JiraIssueItemLayoutItemLocationRuleType["People"] = "PEOPLE";
    JiraIssueItemLayoutItemLocationRuleType["Timetracking"] = "TIMETRACKING";
})(JiraIssueItemLayoutItemLocationRuleType = exports.JiraIssueItemLayoutItemLocationRuleType || (exports.JiraIssueItemLayoutItemLocationRuleType = {}));
var JiraIssueItemSystemContainerType;
(function (JiraIssueItemSystemContainerType) {
    JiraIssueItemSystemContainerType["Content"] = "CONTENT";
    JiraIssueItemSystemContainerType["Context"] = "CONTEXT";
    JiraIssueItemSystemContainerType["CustomerContext"] = "CUSTOMER_CONTEXT";
    JiraIssueItemSystemContainerType["HiddenItems"] = "HIDDEN_ITEMS";
    JiraIssueItemSystemContainerType["Primary"] = "PRIMARY";
    JiraIssueItemSystemContainerType["Request"] = "REQUEST";
    JiraIssueItemSystemContainerType["RequestPortal"] = "REQUEST_PORTAL";
    JiraIssueItemSystemContainerType["Secondary"] = "SECONDARY";
})(JiraIssueItemSystemContainerType = exports.JiraIssueItemSystemContainerType || (exports.JiraIssueItemSystemContainerType = {}));
var JiraIssueLifecycleState;
(function (JiraIssueLifecycleState) {
    JiraIssueLifecycleState["Active"] = "ACTIVE";
    JiraIssueLifecycleState["Archived"] = "ARCHIVED";
})(JiraIssueLifecycleState = exports.JiraIssueLifecycleState || (exports.JiraIssueLifecycleState = {}));
var JiraIssueLinkDirection;
(function (JiraIssueLinkDirection) {
    JiraIssueLinkDirection["Both"] = "BOTH";
    JiraIssueLinkDirection["Inward"] = "INWARD";
    JiraIssueLinkDirection["Outward"] = "OUTWARD";
})(JiraIssueLinkDirection = exports.JiraIssueLinkDirection || (exports.JiraIssueLinkDirection = {}));
var JiraIssueModuleType;
(function (JiraIssueModuleType) {
    JiraIssueModuleType["IssueModule"] = "ISSUE_MODULE";
    JiraIssueModuleType["WebPanel"] = "WEB_PANEL";
})(JiraIssueModuleType = exports.JiraIssueModuleType || (exports.JiraIssueModuleType = {}));
var JiraIssueNavigatorSearchLayout;
(function (JiraIssueNavigatorSearchLayout) {
    JiraIssueNavigatorSearchLayout["Detail"] = "DETAIL";
    JiraIssueNavigatorSearchLayout["List"] = "LIST";
})(JiraIssueNavigatorSearchLayout = exports.JiraIssueNavigatorSearchLayout || (exports.JiraIssueNavigatorSearchLayout = {}));
var JiraIssueRemoteLinkOperations;
(function (JiraIssueRemoteLinkOperations) {
    JiraIssueRemoteLinkOperations["Add"] = "ADD";
    JiraIssueRemoteLinkOperations["Remove"] = "REMOVE";
    JiraIssueRemoteLinkOperations["Set"] = "SET";
})(JiraIssueRemoteLinkOperations = exports.JiraIssueRemoteLinkOperations || (exports.JiraIssueRemoteLinkOperations = {}));
var JiraIssueSearchAggregationFunction;
(function (JiraIssueSearchAggregationFunction) {
    JiraIssueSearchAggregationFunction["Rollup"] = "ROLLUP";
})(JiraIssueSearchAggregationFunction = exports.JiraIssueSearchAggregationFunction || (exports.JiraIssueSearchAggregationFunction = {}));
var JiraIssueSearchFieldSetSelectedState;
(function (JiraIssueSearchFieldSetSelectedState) {
    JiraIssueSearchFieldSetSelectedState["All"] = "ALL";
    JiraIssueSearchFieldSetSelectedState["NonSelected"] = "NON_SELECTED";
    JiraIssueSearchFieldSetSelectedState["Selected"] = "SELECTED";
})(JiraIssueSearchFieldSetSelectedState = exports.JiraIssueSearchFieldSetSelectedState || (exports.JiraIssueSearchFieldSetSelectedState = {}));
var JiraIssueSearchOperationScope;
(function (JiraIssueSearchOperationScope) {
    JiraIssueSearchOperationScope["NinGlobal"] = "NIN_GLOBAL";
    JiraIssueSearchOperationScope["NinGlobalSchemaRefactor"] = "NIN_GLOBAL_SCHEMA_REFACTOR";
    JiraIssueSearchOperationScope["NinGlobalShadowRequest"] = "NIN_GLOBAL_SHADOW_REQUEST";
    JiraIssueSearchOperationScope["NinProject"] = "NIN_PROJECT";
    JiraIssueSearchOperationScope["NinProjectSchemaRefactor"] = "NIN_PROJECT_SCHEMA_REFACTOR";
    JiraIssueSearchOperationScope["NinProjectShadowRequest"] = "NIN_PROJECT_SHADOW_REQUEST";
    JiraIssueSearchOperationScope["TimelineProject"] = "TIMELINE_PROJECT";
})(JiraIssueSearchOperationScope = exports.JiraIssueSearchOperationScope || (exports.JiraIssueSearchOperationScope = {}));
var JiraIssueSearchViewLayout;
(function (JiraIssueSearchViewLayout) {
    JiraIssueSearchViewLayout["Detail"] = "DETAIL";
    JiraIssueSearchViewLayout["List"] = "LIST";
})(JiraIssueSearchViewLayout = exports.JiraIssueSearchViewLayout || (exports.JiraIssueSearchViewLayout = {}));
var JiraIssueTownsquareProjectLinkType;
(function (JiraIssueTownsquareProjectLinkType) {
    JiraIssueTownsquareProjectLinkType["Explicit"] = "EXPLICIT";
    JiraIssueTownsquareProjectLinkType["Implicit"] = "IMPLICIT";
    JiraIssueTownsquareProjectLinkType["None"] = "NONE";
})(JiraIssueTownsquareProjectLinkType = exports.JiraIssueTownsquareProjectLinkType || (exports.JiraIssueTownsquareProjectLinkType = {}));
var JiraIssueTransitionCommentType;
(function (JiraIssueTransitionCommentType) {
    JiraIssueTransitionCommentType["InternalNote"] = "INTERNAL_NOTE";
    JiraIssueTransitionCommentType["ReplyToCustomer"] = "REPLY_TO_CUSTOMER";
})(JiraIssueTransitionCommentType = exports.JiraIssueTransitionCommentType || (exports.JiraIssueTransitionCommentType = {}));
var JiraIssueTransitionLayoutMessageType;
(function (JiraIssueTransitionLayoutMessageType) {
    JiraIssueTransitionLayoutMessageType["Error"] = "ERROR";
    JiraIssueTransitionLayoutMessageType["Info"] = "INFO";
    JiraIssueTransitionLayoutMessageType["Success"] = "SUCCESS";
    JiraIssueTransitionLayoutMessageType["Warn"] = "WARN";
})(JiraIssueTransitionLayoutMessageType = exports.JiraIssueTransitionLayoutMessageType || (exports.JiraIssueTransitionLayoutMessageType = {}));
var JiraIssueViewActivityFeedSortOrder;
(function (JiraIssueViewActivityFeedSortOrder) {
    JiraIssueViewActivityFeedSortOrder["NewestFirst"] = "NEWEST_FIRST";
    JiraIssueViewActivityFeedSortOrder["OldestFirst"] = "OLDEST_FIRST";
})(JiraIssueViewActivityFeedSortOrder = exports.JiraIssueViewActivityFeedSortOrder || (exports.JiraIssueViewActivityFeedSortOrder = {}));
var JiraIssueViewActivityLayout;
(function (JiraIssueViewActivityLayout) {
    JiraIssueViewActivityLayout["Horizontal"] = "HORIZONTAL";
    JiraIssueViewActivityLayout["Vertical"] = "VERTICAL";
})(JiraIssueViewActivityLayout = exports.JiraIssueViewActivityLayout || (exports.JiraIssueViewActivityLayout = {}));
var JiraIssueViewAttachmentPanelViewMode;
(function (JiraIssueViewAttachmentPanelViewMode) {
    JiraIssueViewAttachmentPanelViewMode["ListView"] = "LIST_VIEW";
    JiraIssueViewAttachmentPanelViewMode["StripView"] = "STRIP_VIEW";
})(JiraIssueViewAttachmentPanelViewMode = exports.JiraIssueViewAttachmentPanelViewMode || (exports.JiraIssueViewAttachmentPanelViewMode = {}));
var JiraIssueViewTimestampDisplayMode;
(function (JiraIssueViewTimestampDisplayMode) {
    JiraIssueViewTimestampDisplayMode["Absolute"] = "ABSOLUTE";
    JiraIssueViewTimestampDisplayMode["Relative"] = "RELATIVE";
})(JiraIssueViewTimestampDisplayMode = exports.JiraIssueViewTimestampDisplayMode || (exports.JiraIssueViewTimestampDisplayMode = {}));
var JiraIssueViewUserPreferenceLayoutType;
(function (JiraIssueViewUserPreferenceLayoutType) {
    JiraIssueViewUserPreferenceLayoutType["Custom"] = "CUSTOM";
    JiraIssueViewUserPreferenceLayoutType["Discussion"] = "DISCUSSION";
    JiraIssueViewUserPreferenceLayoutType["Standard"] = "STANDARD";
    JiraIssueViewUserPreferenceLayoutType["Tab"] = "TAB";
    JiraIssueViewUserPreferenceLayoutType["Wide"] = "WIDE";
})(JiraIssueViewUserPreferenceLayoutType = exports.JiraIssueViewUserPreferenceLayoutType || (exports.JiraIssueViewUserPreferenceLayoutType = {}));
var JiraIteration;
(function (JiraIteration) {
    JiraIteration["Iteration_1"] = "ITERATION_1";
    JiraIteration["Iteration_2"] = "ITERATION_2";
    JiraIteration["IterationDynamic"] = "ITERATION_DYNAMIC";
})(JiraIteration = exports.JiraIteration || (exports.JiraIteration = {}));
var JiraJqlBuilderSearchMode;
(function (JiraJqlBuilderSearchMode) {
    JiraJqlBuilderSearchMode["Advanced"] = "ADVANCED";
    JiraJqlBuilderSearchMode["Basic"] = "BASIC";
})(JiraJqlBuilderSearchMode = exports.JiraJqlBuilderSearchMode || (exports.JiraJqlBuilderSearchMode = {}));
var JiraJourneyActiveState;
(function (JiraJourneyActiveState) {
    JiraJourneyActiveState["Active"] = "ACTIVE";
    JiraJourneyActiveState["Inactive"] = "INACTIVE";
    JiraJourneyActiveState["None"] = "NONE";
})(JiraJourneyActiveState = exports.JiraJourneyActiveState || (exports.JiraJourneyActiveState = {}));
var JiraJourneyItemConditionComparator;
(function (JiraJourneyItemConditionComparator) {
    JiraJourneyItemConditionComparator["Contains"] = "CONTAINS";
    JiraJourneyItemConditionComparator["Equals"] = "EQUALS";
    JiraJourneyItemConditionComparator["GreaterThan"] = "GREATER_THAN";
    JiraJourneyItemConditionComparator["LessThan"] = "LESS_THAN";
    JiraJourneyItemConditionComparator["NotContains"] = "NOT_CONTAINS";
    JiraJourneyItemConditionComparator["NotEquals"] = "NOT_EQUALS";
    JiraJourneyItemConditionComparator["RegexContains"] = "REGEX_CONTAINS";
    JiraJourneyItemConditionComparator["RegexMatches"] = "REGEX_MATCHES";
    JiraJourneyItemConditionComparator["RegexNotMatches"] = "REGEX_NOT_MATCHES";
    JiraJourneyItemConditionComparator["StartsWith"] = "STARTS_WITH";
})(JiraJourneyItemConditionComparator = exports.JiraJourneyItemConditionComparator || (exports.JiraJourneyItemConditionComparator = {}));
var JiraJourneyParentIssueType;
(function (JiraJourneyParentIssueType) {
    JiraJourneyParentIssueType["Request"] = "REQUEST";
})(JiraJourneyParentIssueType = exports.JiraJourneyParentIssueType || (exports.JiraJourneyParentIssueType = {}));
var JiraJourneyRulesMigrationStatus;
(function (JiraJourneyRulesMigrationStatus) {
    JiraJourneyRulesMigrationStatus["Failure"] = "FAILURE";
    JiraJourneyRulesMigrationStatus["RollbackFailure"] = "ROLLBACK_FAILURE";
    JiraJourneyRulesMigrationStatus["RollbackSuccess"] = "ROLLBACK_SUCCESS";
    JiraJourneyRulesMigrationStatus["Success"] = "SUCCESS";
    JiraJourneyRulesMigrationStatus["ValidationFailure"] = "VALIDATION_FAILURE";
})(JiraJourneyRulesMigrationStatus = exports.JiraJourneyRulesMigrationStatus || (exports.JiraJourneyRulesMigrationStatus = {}));
var JiraJourneyStatus;
(function (JiraJourneyStatus) {
    JiraJourneyStatus["Archived"] = "ARCHIVED";
    JiraJourneyStatus["Disabled"] = "DISABLED";
    JiraJourneyStatus["Draft"] = "DRAFT";
    JiraJourneyStatus["Published"] = "PUBLISHED";
    JiraJourneyStatus["Superseded"] = "SUPERSEDED";
})(JiraJourneyStatus = exports.JiraJourneyStatus || (exports.JiraJourneyStatus = {}));
var JiraJourneyStatusDependencyType;
(function (JiraJourneyStatusDependencyType) {
    JiraJourneyStatusDependencyType["Status"] = "STATUS";
    JiraJourneyStatusDependencyType["StatusCategory"] = "STATUS_CATEGORY";
})(JiraJourneyStatusDependencyType = exports.JiraJourneyStatusDependencyType || (exports.JiraJourneyStatusDependencyType = {}));
var JiraJourneyTriggerType;
(function (JiraJourneyTriggerType) {
    JiraJourneyTriggerType["ParentIssueCreated"] = "PARENT_ISSUE_CREATED";
    JiraJourneyTriggerType["WorkdayIntegrationTriggered"] = "WORKDAY_INTEGRATION_TRIGGERED";
})(JiraJourneyTriggerType = exports.JiraJourneyTriggerType || (exports.JiraJourneyTriggerType = {}));
var JiraJqlAutocompleteType;
(function (JiraJqlAutocompleteType) {
    JiraJqlAutocompleteType["Basic"] = "BASIC";
    JiraJqlAutocompleteType["Cascadingoption"] = "CASCADINGOPTION";
    JiraJqlAutocompleteType["Component"] = "COMPONENT";
    JiraJqlAutocompleteType["Group"] = "GROUP";
    JiraJqlAutocompleteType["Issue"] = "ISSUE";
    JiraJqlAutocompleteType["Issuetype"] = "ISSUETYPE";
    JiraJqlAutocompleteType["JwmCategory"] = "JWM_CATEGORY";
    JiraJqlAutocompleteType["Labels"] = "LABELS";
    JiraJqlAutocompleteType["None"] = "NONE";
    JiraJqlAutocompleteType["Option"] = "OPTION";
    JiraJqlAutocompleteType["Organization"] = "ORGANIZATION";
    JiraJqlAutocompleteType["Priority"] = "PRIORITY";
    JiraJqlAutocompleteType["Project"] = "PROJECT";
    JiraJqlAutocompleteType["Requesttype"] = "REQUESTTYPE";
    JiraJqlAutocompleteType["Resolution"] = "RESOLUTION";
    JiraJqlAutocompleteType["Sprint"] = "SPRINT";
    JiraJqlAutocompleteType["Status"] = "STATUS";
    JiraJqlAutocompleteType["Statuscategory"] = "STATUSCATEGORY";
    JiraJqlAutocompleteType["TicketCategory"] = "TICKET_CATEGORY";
    JiraJqlAutocompleteType["User"] = "USER";
    JiraJqlAutocompleteType["Version"] = "VERSION";
})(JiraJqlAutocompleteType = exports.JiraJqlAutocompleteType || (exports.JiraJqlAutocompleteType = {}));
var JiraJqlBuilderMode;
(function (JiraJqlBuilderMode) {
    JiraJqlBuilderMode["Basic"] = "BASIC";
    JiraJqlBuilderMode["Jql"] = "JQL";
})(JiraJqlBuilderMode = exports.JiraJqlBuilderMode || (exports.JiraJqlBuilderMode = {}));
var JiraJqlClauseType;
(function (JiraJqlClauseType) {
    JiraJqlClauseType["Any"] = "ANY";
    JiraJqlClauseType["OrderBy"] = "ORDER_BY";
    JiraJqlClauseType["Where"] = "WHERE";
})(JiraJqlClauseType = exports.JiraJqlClauseType || (exports.JiraJqlClauseType = {}));
var JiraJqlFunctionStatus;
(function (JiraJqlFunctionStatus) {
    JiraJqlFunctionStatus["Finished"] = "FINISHED";
    JiraJqlFunctionStatus["Processing"] = "PROCESSING";
    JiraJqlFunctionStatus["Unknown"] = "UNKNOWN";
})(JiraJqlFunctionStatus = exports.JiraJqlFunctionStatus || (exports.JiraJqlFunctionStatus = {}));
var JiraJqlOperator;
(function (JiraJqlOperator) {
    JiraJqlOperator["Changed"] = "CHANGED";
    JiraJqlOperator["Contains"] = "CONTAINS";
    JiraJqlOperator["Equals"] = "EQUALS";
    JiraJqlOperator["GreaterThan"] = "GREATER_THAN";
    JiraJqlOperator["GreaterThanOrEqual"] = "GREATER_THAN_OR_EQUAL";
    JiraJqlOperator["In"] = "IN";
    JiraJqlOperator["Is"] = "IS";
    JiraJqlOperator["IsNot"] = "IS_NOT";
    JiraJqlOperator["LessThan"] = "LESS_THAN";
    JiraJqlOperator["LessThanOrEqual"] = "LESS_THAN_OR_EQUAL";
    JiraJqlOperator["NotContains"] = "NOT_CONTAINS";
    JiraJqlOperator["NotEquals"] = "NOT_EQUALS";
    JiraJqlOperator["NotIn"] = "NOT_IN";
    JiraJqlOperator["Was"] = "WAS";
    JiraJqlOperator["WasIn"] = "WAS_IN";
    JiraJqlOperator["WasNot"] = "WAS_NOT";
    JiraJqlOperator["WasNotIn"] = "WAS_NOT_IN";
})(JiraJqlOperator = exports.JiraJqlOperator || (exports.JiraJqlOperator = {}));
var JiraJqlSyntaxError;
(function (JiraJqlSyntaxError) {
    JiraJqlSyntaxError["BadFieldId"] = "BAD_FIELD_ID";
    JiraJqlSyntaxError["BadFunctionArgument"] = "BAD_FUNCTION_ARGUMENT";
    JiraJqlSyntaxError["BadOperator"] = "BAD_OPERATOR";
    JiraJqlSyntaxError["BadPropertyId"] = "BAD_PROPERTY_ID";
    JiraJqlSyntaxError["EmptyField"] = "EMPTY_FIELD";
    JiraJqlSyntaxError["EmptyFunction"] = "EMPTY_FUNCTION";
    JiraJqlSyntaxError["EmptyFunctionArgument"] = "EMPTY_FUNCTION_ARGUMENT";
    JiraJqlSyntaxError["IllegalCharacter"] = "ILLEGAL_CHARACTER";
    JiraJqlSyntaxError["IllegalEscape"] = "ILLEGAL_ESCAPE";
    JiraJqlSyntaxError["IllegalNumber"] = "ILLEGAL_NUMBER";
    JiraJqlSyntaxError["MissingFieldName"] = "MISSING_FIELD_NAME";
    JiraJqlSyntaxError["MissingLogicalOperator"] = "MISSING_LOGICAL_OPERATOR";
    JiraJqlSyntaxError["NoOperator"] = "NO_OPERATOR";
    JiraJqlSyntaxError["NoOrder"] = "NO_ORDER";
    JiraJqlSyntaxError["OperandUnsupported"] = "OPERAND_UNSUPPORTED";
    JiraJqlSyntaxError["PredicateUnsupported"] = "PREDICATE_UNSUPPORTED";
    JiraJqlSyntaxError["ReservedCharacter"] = "RESERVED_CHARACTER";
    JiraJqlSyntaxError["ReservedWord"] = "RESERVED_WORD";
    JiraJqlSyntaxError["UnexpectedText"] = "UNEXPECTED_TEXT";
    JiraJqlSyntaxError["UnfinishedString"] = "UNFINISHED_STRING";
    JiraJqlSyntaxError["Unknown"] = "UNKNOWN";
})(JiraJqlSyntaxError = exports.JiraJqlSyntaxError || (exports.JiraJqlSyntaxError = {}));
var JiraJqlViewContext;
(function (JiraJqlViewContext) {
    JiraJqlViewContext["JpdRoadmaps"] = "JPD_ROADMAPS";
    JiraJqlViewContext["JsmQueuePage"] = "JSM_QUEUE_PAGE";
    JiraJqlViewContext["JsmSummaryPage"] = "JSM_SUMMARY_PAGE";
    JiraJqlViewContext["JswPlans"] = "JSW_PLANS";
    JiraJqlViewContext["JswSummaryPage"] = "JSW_SUMMARY_PAGE";
    JiraJqlViewContext["Jwm"] = "JWM";
    JiraJqlViewContext["ShadowRequest"] = "SHADOW_REQUEST";
})(JiraJqlViewContext = exports.JiraJqlViewContext || (exports.JiraJqlViewContext = {}));
var JiraLinkIssuesToIncidentIssueLinkTypeName;
(function (JiraLinkIssuesToIncidentIssueLinkTypeName) {
    JiraLinkIssuesToIncidentIssueLinkTypeName["PostIncidentReviews"] = "POST_INCIDENT_REVIEWS";
    JiraLinkIssuesToIncidentIssueLinkTypeName["Relates"] = "RELATES";
})(JiraLinkIssuesToIncidentIssueLinkTypeName = exports.JiraLinkIssuesToIncidentIssueLinkTypeName || (exports.JiraLinkIssuesToIncidentIssueLinkTypeName = {}));
var JiraLongRunningTaskStatus;
(function (JiraLongRunningTaskStatus) {
    JiraLongRunningTaskStatus["Cancelled"] = "CANCELLED";
    JiraLongRunningTaskStatus["CancelRequested"] = "CANCEL_REQUESTED";
    JiraLongRunningTaskStatus["Complete"] = "COMPLETE";
    JiraLongRunningTaskStatus["Dead"] = "DEAD";
    JiraLongRunningTaskStatus["Enqueued"] = "ENQUEUED";
    JiraLongRunningTaskStatus["Failed"] = "FAILED";
    JiraLongRunningTaskStatus["Running"] = "RUNNING";
})(JiraLongRunningTaskStatus = exports.JiraLongRunningTaskStatus || (exports.JiraLongRunningTaskStatus = {}));
var JiraMoveBoardViewIssueToCellEnd;
(function (JiraMoveBoardViewIssueToCellEnd) {
    JiraMoveBoardViewIssueToCellEnd["Bottom"] = "BOTTOM";
    JiraMoveBoardViewIssueToCellEnd["Top"] = "TOP";
})(JiraMoveBoardViewIssueToCellEnd = exports.JiraMoveBoardViewIssueToCellEnd || (exports.JiraMoveBoardViewIssueToCellEnd = {}));
var JiraMultiValueFieldOperations;
(function (JiraMultiValueFieldOperations) {
    JiraMultiValueFieldOperations["Add"] = "ADD";
    JiraMultiValueFieldOperations["Remove"] = "REMOVE";
    JiraMultiValueFieldOperations["Set"] = "SET";
})(JiraMultiValueFieldOperations = exports.JiraMultiValueFieldOperations || (exports.JiraMultiValueFieldOperations = {}));
var JiraNavigationItemTypeKey;
(function (JiraNavigationItemTypeKey) {
    JiraNavigationItemTypeKey["App"] = "APP";
    JiraNavigationItemTypeKey["Approvals"] = "APPROVALS";
    JiraNavigationItemTypeKey["Apps"] = "APPS";
    JiraNavigationItemTypeKey["ArchivedIssues"] = "ARCHIVED_ISSUES";
    JiraNavigationItemTypeKey["Attachments"] = "ATTACHMENTS";
    JiraNavigationItemTypeKey["Backlog"] = "BACKLOG";
    JiraNavigationItemTypeKey["Board"] = "BOARD";
    JiraNavigationItemTypeKey["Calendar"] = "CALENDAR";
    JiraNavigationItemTypeKey["Capacity"] = "CAPACITY";
    JiraNavigationItemTypeKey["Code"] = "CODE";
    JiraNavigationItemTypeKey["Components"] = "COMPONENTS";
    JiraNavigationItemTypeKey["CustomerSupport"] = "CUSTOMER_SUPPORT";
    JiraNavigationItemTypeKey["Dependencies"] = "DEPENDENCIES";
    JiraNavigationItemTypeKey["Deployments"] = "DEPLOYMENTS";
    JiraNavigationItemTypeKey["Development"] = "DEVELOPMENT";
    JiraNavigationItemTypeKey["Forms"] = "FORMS";
    JiraNavigationItemTypeKey["GetStarted"] = "GET_STARTED";
    JiraNavigationItemTypeKey["Goals"] = "GOALS";
    JiraNavigationItemTypeKey["Inbox"] = "INBOX";
    JiraNavigationItemTypeKey["Incidents"] = "INCIDENTS";
    JiraNavigationItemTypeKey["Issues"] = "ISSUES";
    JiraNavigationItemTypeKey["List"] = "LIST";
    JiraNavigationItemTypeKey["OnCall"] = "ON_CALL";
    JiraNavigationItemTypeKey["Pages"] = "PAGES";
    JiraNavigationItemTypeKey["PlanCalendar"] = "PLAN_CALENDAR";
    JiraNavigationItemTypeKey["PlanDependencies"] = "PLAN_DEPENDENCIES";
    JiraNavigationItemTypeKey["PlanProgram"] = "PLAN_PROGRAM";
    JiraNavigationItemTypeKey["PlanReleases"] = "PLAN_RELEASES";
    JiraNavigationItemTypeKey["PlanSummary"] = "PLAN_SUMMARY";
    JiraNavigationItemTypeKey["PlanTeams"] = "PLAN_TEAMS";
    JiraNavigationItemTypeKey["PlanTimeline"] = "PLAN_TIMELINE";
    JiraNavigationItemTypeKey["Program"] = "PROGRAM";
    JiraNavigationItemTypeKey["Queue"] = "QUEUE";
    JiraNavigationItemTypeKey["Releases"] = "RELEASES";
    JiraNavigationItemTypeKey["Reports"] = "REPORTS";
    JiraNavigationItemTypeKey["Requests"] = "REQUESTS";
    JiraNavigationItemTypeKey["Security"] = "SECURITY";
    JiraNavigationItemTypeKey["Shortcuts"] = "SHORTCUTS";
    JiraNavigationItemTypeKey["Staffing"] = "STAFFING";
    JiraNavigationItemTypeKey["Summary"] = "SUMMARY";
    JiraNavigationItemTypeKey["Teams"] = "TEAMS";
    JiraNavigationItemTypeKey["Timeline"] = "TIMELINE";
})(JiraNavigationItemTypeKey = exports.JiraNavigationItemTypeKey || (exports.JiraNavigationItemTypeKey = {}));
var JiraNotificationCategoryType;
(function (JiraNotificationCategoryType) {
    JiraNotificationCategoryType["CommentChanges"] = "COMMENT_CHANGES";
    JiraNotificationCategoryType["IssueAssigned"] = "ISSUE_ASSIGNED";
    JiraNotificationCategoryType["IssueChanges"] = "ISSUE_CHANGES";
    JiraNotificationCategoryType["IssueMentioned"] = "ISSUE_MENTIONED";
    JiraNotificationCategoryType["IssueMiscellaneous"] = "ISSUE_MISCELLANEOUS";
    JiraNotificationCategoryType["IssueWorklogChanges"] = "ISSUE_WORKLOG_CHANGES";
    JiraNotificationCategoryType["Recurring"] = "RECURRING";
    JiraNotificationCategoryType["UserJoin"] = "USER_JOIN";
})(JiraNotificationCategoryType = exports.JiraNotificationCategoryType || (exports.JiraNotificationCategoryType = {}));
var JiraNotificationChannelType;
(function (JiraNotificationChannelType) {
    JiraNotificationChannelType["Email"] = "EMAIL";
    JiraNotificationChannelType["InProduct"] = "IN_PRODUCT";
    JiraNotificationChannelType["MobilePush"] = "MOBILE_PUSH";
    JiraNotificationChannelType["Slack"] = "SLACK";
})(JiraNotificationChannelType = exports.JiraNotificationChannelType || (exports.JiraNotificationChannelType = {}));
var JiraNotificationType;
(function (JiraNotificationType) {
    JiraNotificationType["CommentCreated"] = "COMMENT_CREATED";
    JiraNotificationType["CommentDeleted"] = "COMMENT_DELETED";
    JiraNotificationType["CommentEdited"] = "COMMENT_EDITED";
    JiraNotificationType["CommentMentionReminder"] = "COMMENT_MENTION_REMINDER";
    JiraNotificationType["DailyDueDateNotification"] = "DAILY_DUE_DATE_NOTIFICATION";
    JiraNotificationType["IssueAssigned"] = "ISSUE_ASSIGNED";
    JiraNotificationType["IssueCreated"] = "ISSUE_CREATED";
    JiraNotificationType["IssueDeleted"] = "ISSUE_DELETED";
    JiraNotificationType["IssueMoved"] = "ISSUE_MOVED";
    JiraNotificationType["IssueUpdated"] = "ISSUE_UPDATED";
    JiraNotificationType["MentionsCombined"] = "MENTIONS_COMBINED";
    JiraNotificationType["MiscellaneousIssueEventCombined"] = "MISCELLANEOUS_ISSUE_EVENT_COMBINED";
    JiraNotificationType["ProjectRecapNotification"] = "PROJECT_RECAP_NOTIFICATION";
    JiraNotificationType["WorklogCombined"] = "WORKLOG_COMBINED";
})(JiraNotificationType = exports.JiraNotificationType || (exports.JiraNotificationType = {}));
var JiraNumberFieldFormatStyle;
(function (JiraNumberFieldFormatStyle) {
    JiraNumberFieldFormatStyle["Currency"] = "CURRENCY";
    JiraNumberFieldFormatStyle["Decimal"] = "DECIMAL";
    JiraNumberFieldFormatStyle["Percent"] = "PERCENT";
    JiraNumberFieldFormatStyle["Unit"] = "UNIT";
})(JiraNumberFieldFormatStyle = exports.JiraNumberFieldFormatStyle || (exports.JiraNumberFieldFormatStyle = {}));
var JiraOAuthAppsInstallationStatus;
(function (JiraOAuthAppsInstallationStatus) {
    JiraOAuthAppsInstallationStatus["Complete"] = "COMPLETE";
    JiraOAuthAppsInstallationStatus["Failed"] = "FAILED";
    JiraOAuthAppsInstallationStatus["Pending"] = "PENDING";
    JiraOAuthAppsInstallationStatus["Running"] = "RUNNING";
})(JiraOAuthAppsInstallationStatus = exports.JiraOAuthAppsInstallationStatus || (exports.JiraOAuthAppsInstallationStatus = {}));
var JiraOnboardingMediaType;
(function (JiraOnboardingMediaType) {
    JiraOnboardingMediaType["Image"] = "IMAGE";
    JiraOnboardingMediaType["Video"] = "VIDEO";
})(JiraOnboardingMediaType = exports.JiraOnboardingMediaType || (exports.JiraOnboardingMediaType = {}));
var JiraOnboardingTargetType;
(function (JiraOnboardingTargetType) {
    JiraOnboardingTargetType["TeamType"] = "TEAM_TYPE";
})(JiraOnboardingTargetType = exports.JiraOnboardingTargetType || (exports.JiraOnboardingTargetType = {}));
var JiraOptionColorInput;
(function (JiraOptionColorInput) {
    JiraOptionColorInput["Blue"] = "BLUE";
    JiraOptionColorInput["BlueDarker"] = "BLUE_DARKER";
    JiraOptionColorInput["BlueDarkest"] = "BLUE_DARKEST";
    JiraOptionColorInput["BlueLighter"] = "BLUE_LIGHTER";
    JiraOptionColorInput["BlueLightest"] = "BLUE_LIGHTEST";
    JiraOptionColorInput["Green"] = "GREEN";
    JiraOptionColorInput["GreenDarker"] = "GREEN_DARKER";
    JiraOptionColorInput["GreenDarkest"] = "GREEN_DARKEST";
    JiraOptionColorInput["GreenLighter"] = "GREEN_LIGHTER";
    JiraOptionColorInput["GreenLightest"] = "GREEN_LIGHTEST";
    JiraOptionColorInput["Grey"] = "GREY";
    JiraOptionColorInput["GreyDarker"] = "GREY_DARKER";
    JiraOptionColorInput["GreyDarkest"] = "GREY_DARKEST";
    JiraOptionColorInput["GreyLighter"] = "GREY_LIGHTER";
    JiraOptionColorInput["GreyLightest"] = "GREY_LIGHTEST";
    JiraOptionColorInput["Lime"] = "LIME";
    JiraOptionColorInput["LimeDarker"] = "LIME_DARKER";
    JiraOptionColorInput["LimeDarkest"] = "LIME_DARKEST";
    JiraOptionColorInput["LimeLighter"] = "LIME_LIGHTER";
    JiraOptionColorInput["LimeLightest"] = "LIME_LIGHTEST";
    JiraOptionColorInput["Magenta"] = "MAGENTA";
    JiraOptionColorInput["MagentaDarker"] = "MAGENTA_DARKER";
    JiraOptionColorInput["MagentaDarkest"] = "MAGENTA_DARKEST";
    JiraOptionColorInput["MagentaLighter"] = "MAGENTA_LIGHTER";
    JiraOptionColorInput["MagentaLightest"] = "MAGENTA_LIGHTEST";
    JiraOptionColorInput["Orange"] = "ORANGE";
    JiraOptionColorInput["OrangeDarker"] = "ORANGE_DARKER";
    JiraOptionColorInput["OrangeDarkest"] = "ORANGE_DARKEST";
    JiraOptionColorInput["OrangeLighter"] = "ORANGE_LIGHTER";
    JiraOptionColorInput["OrangeLightest"] = "ORANGE_LIGHTEST";
    JiraOptionColorInput["Purple"] = "PURPLE";
    JiraOptionColorInput["PurpleDarker"] = "PURPLE_DARKER";
    JiraOptionColorInput["PurpleDarkest"] = "PURPLE_DARKEST";
    JiraOptionColorInput["PurpleLighter"] = "PURPLE_LIGHTER";
    JiraOptionColorInput["PurpleLightest"] = "PURPLE_LIGHTEST";
    JiraOptionColorInput["Red"] = "RED";
    JiraOptionColorInput["RedDarker"] = "RED_DARKER";
    JiraOptionColorInput["RedDarkest"] = "RED_DARKEST";
    JiraOptionColorInput["RedLighter"] = "RED_LIGHTER";
    JiraOptionColorInput["RedLightest"] = "RED_LIGHTEST";
    JiraOptionColorInput["Teal"] = "TEAL";
    JiraOptionColorInput["TealDarker"] = "TEAL_DARKER";
    JiraOptionColorInput["TealDarkest"] = "TEAL_DARKEST";
    JiraOptionColorInput["TealLighter"] = "TEAL_LIGHTER";
    JiraOptionColorInput["TealLightest"] = "TEAL_LIGHTEST";
    JiraOptionColorInput["Yellow"] = "YELLOW";
    JiraOptionColorInput["YellowDarker"] = "YELLOW_DARKER";
    JiraOptionColorInput["YellowDarkest"] = "YELLOW_DARKEST";
    JiraOptionColorInput["YellowLighter"] = "YELLOW_LIGHTER";
    JiraOptionColorInput["YellowLightest"] = "YELLOW_LIGHTEST";
})(JiraOptionColorInput = exports.JiraOptionColorInput || (exports.JiraOptionColorInput = {}));
var JiraOrganizationApprovalLocation;
(function (JiraOrganizationApprovalLocation) {
    JiraOrganizationApprovalLocation["DuringInstallationFlow"] = "DURING_INSTALLATION_FLOW";
    JiraOrganizationApprovalLocation["DuringProvisioning"] = "DURING_PROVISIONING";
    JiraOrganizationApprovalLocation["OnAdminScreen"] = "ON_ADMIN_SCREEN";
    JiraOrganizationApprovalLocation["RemindBitbucketApprovalBanner"] = "REMIND_BITBUCKET_APPROVAL_BANNER";
    JiraOrganizationApprovalLocation["Unknown"] = "UNKNOWN";
})(JiraOrganizationApprovalLocation = exports.JiraOrganizationApprovalLocation || (exports.JiraOrganizationApprovalLocation = {}));
var JiraOverviewPlanMigrationChangeboardingStatus;
(function (JiraOverviewPlanMigrationChangeboardingStatus) {
    JiraOverviewPlanMigrationChangeboardingStatus["Completed"] = "COMPLETED";
    JiraOverviewPlanMigrationChangeboardingStatus["Triggered"] = "TRIGGERED";
})(JiraOverviewPlanMigrationChangeboardingStatus = exports.JiraOverviewPlanMigrationChangeboardingStatus || (exports.JiraOverviewPlanMigrationChangeboardingStatus = {}));
var JiraPermissionMessageTypeEnum;
(function (JiraPermissionMessageTypeEnum) {
    JiraPermissionMessageTypeEnum["Information"] = "INFORMATION";
    JiraPermissionMessageTypeEnum["Warning"] = "WARNING";
})(JiraPermissionMessageTypeEnum = exports.JiraPermissionMessageTypeEnum || (exports.JiraPermissionMessageTypeEnum = {}));
var JiraPermissionTagEnum;
(function (JiraPermissionTagEnum) {
    JiraPermissionTagEnum["Deprecated"] = "DEPRECATED";
    JiraPermissionTagEnum["Enterprise"] = "ENTERPRISE";
    JiraPermissionTagEnum["New"] = "NEW";
})(JiraPermissionTagEnum = exports.JiraPermissionTagEnum || (exports.JiraPermissionTagEnum = {}));
var JiraPermissionType;
(function (JiraPermissionType) {
    JiraPermissionType["BrowseProjects"] = "BROWSE_PROJECTS";
    JiraPermissionType["BulkChange"] = "BULK_CHANGE";
})(JiraPermissionType = exports.JiraPermissionType || (exports.JiraPermissionType = {}));
var JiraPlanStatus;
(function (JiraPlanStatus) {
    JiraPlanStatus["Active"] = "ACTIVE";
    JiraPlanStatus["Archived"] = "ARCHIVED";
    JiraPlanStatus["Trashed"] = "TRASHED";
})(JiraPlanStatus = exports.JiraPlanStatus || (exports.JiraPlanStatus = {}));
var JiraPlaybookIssueFilterType;
(function (JiraPlaybookIssueFilterType) {
    JiraPlaybookIssueFilterType["Groups"] = "GROUPS";
    JiraPlaybookIssueFilterType["IssueTypes"] = "ISSUE_TYPES";
    JiraPlaybookIssueFilterType["RequestTypes"] = "REQUEST_TYPES";
})(JiraPlaybookIssueFilterType = exports.JiraPlaybookIssueFilterType || (exports.JiraPlaybookIssueFilterType = {}));
var JiraPlaybookScopeType;
(function (JiraPlaybookScopeType) {
    JiraPlaybookScopeType["Global"] = "GLOBAL";
    JiraPlaybookScopeType["Project"] = "PROJECT";
    JiraPlaybookScopeType["Team"] = "TEAM";
})(JiraPlaybookScopeType = exports.JiraPlaybookScopeType || (exports.JiraPlaybookScopeType = {}));
var JiraPlaybookStateField;
(function (JiraPlaybookStateField) {
    JiraPlaybookStateField["Disabled"] = "DISABLED";
    JiraPlaybookStateField["Draft"] = "DRAFT";
    JiraPlaybookStateField["Enabled"] = "ENABLED";
})(JiraPlaybookStateField = exports.JiraPlaybookStateField || (exports.JiraPlaybookStateField = {}));
var JiraPlaybookStepRunStatus;
(function (JiraPlaybookStepRunStatus) {
    JiraPlaybookStepRunStatus["Aborted"] = "ABORTED";
    JiraPlaybookStepRunStatus["ConfigChange"] = "CONFIG_CHANGE";
    JiraPlaybookStepRunStatus["Failed"] = "FAILED";
    JiraPlaybookStepRunStatus["Failure"] = "FAILURE";
    JiraPlaybookStepRunStatus["InProgress"] = "IN_PROGRESS";
    JiraPlaybookStepRunStatus["Loop"] = "LOOP";
    JiraPlaybookStepRunStatus["NoActionsPerformed"] = "NO_ACTIONS_PERFORMED";
    JiraPlaybookStepRunStatus["QueuedForRetry"] = "QUEUED_FOR_RETRY";
    JiraPlaybookStepRunStatus["SomeErrors"] = "SOME_ERRORS";
    JiraPlaybookStepRunStatus["Success"] = "SUCCESS";
    JiraPlaybookStepRunStatus["SuccessUndone"] = "SUCCESS_UNDONE";
    JiraPlaybookStepRunStatus["Throttled"] = "THROTTLED";
    JiraPlaybookStepRunStatus["Waiting"] = "WAITING";
})(JiraPlaybookStepRunStatus = exports.JiraPlaybookStepRunStatus || (exports.JiraPlaybookStepRunStatus = {}));
var JiraPlaybookStepType;
(function (JiraPlaybookStepType) {
    JiraPlaybookStepType["AutomationRule"] = "AUTOMATION_RULE";
    JiraPlaybookStepType["InstructionalRule"] = "INSTRUCTIONAL_RULE";
})(JiraPlaybookStepType = exports.JiraPlaybookStepType || (exports.JiraPlaybookStepType = {}));
var JiraPlaybooksSortBy;
(function (JiraPlaybooksSortBy) {
    JiraPlaybooksSortBy["Name"] = "NAME";
})(JiraPlaybooksSortBy = exports.JiraPlaybooksSortBy || (exports.JiraPlaybooksSortBy = {}));
var JiraProductEnum;
(function (JiraProductEnum) {
    JiraProductEnum["JiraProductDiscovery"] = "JIRA_PRODUCT_DISCOVERY";
    JiraProductEnum["JiraServiceManagement"] = "JIRA_SERVICE_MANAGEMENT";
    JiraProductEnum["JiraSoftware"] = "JIRA_SOFTWARE";
    JiraProductEnum["JiraWorkManagement"] = "JIRA_WORK_MANAGEMENT";
})(JiraProductEnum = exports.JiraProductEnum || (exports.JiraProductEnum = {}));
var JiraProjectAccessLevelType;
(function (JiraProjectAccessLevelType) {
    JiraProjectAccessLevelType["Free"] = "FREE";
    JiraProjectAccessLevelType["Limited"] = "LIMITED";
    JiraProjectAccessLevelType["Open"] = "OPEN";
    JiraProjectAccessLevelType["Private"] = "PRIVATE";
})(JiraProjectAccessLevelType = exports.JiraProjectAccessLevelType || (exports.JiraProjectAccessLevelType = {}));
var JiraProjectActionType;
(function (JiraProjectActionType) {
    JiraProjectActionType["AssignIssues"] = "ASSIGN_ISSUES";
    JiraProjectActionType["CreateIssues"] = "CREATE_ISSUES";
    JiraProjectActionType["DeleteIssues"] = "DELETE_ISSUES";
    JiraProjectActionType["EditIssues"] = "EDIT_ISSUES";
    JiraProjectActionType["EditProjectConfig"] = "EDIT_PROJECT_CONFIG";
    JiraProjectActionType["LinkIssues"] = "LINK_ISSUES";
    JiraProjectActionType["ManageVersions"] = "MANAGE_VERSIONS";
    JiraProjectActionType["ScheduleIssues"] = "SCHEDULE_ISSUES";
    JiraProjectActionType["TransitionIssues"] = "TRANSITION_ISSUES";
    JiraProjectActionType["ViewIssues"] = "VIEW_ISSUES";
    JiraProjectActionType["ViewProjectConfig"] = "VIEW_PROJECT_CONFIG";
})(JiraProjectActionType = exports.JiraProjectActionType || (exports.JiraProjectActionType = {}));
var JiraProjectCleanupRecommendationAction;
(function (JiraProjectCleanupRecommendationAction) {
    JiraProjectCleanupRecommendationAction["Archive"] = "ARCHIVE";
    JiraProjectCleanupRecommendationAction["Trash"] = "TRASH";
})(JiraProjectCleanupRecommendationAction = exports.JiraProjectCleanupRecommendationAction || (exports.JiraProjectCleanupRecommendationAction = {}));
var JiraProjectCleanupRecommendationStaleSince;
(function (JiraProjectCleanupRecommendationStaleSince) {
    JiraProjectCleanupRecommendationStaleSince["OneYear"] = "ONE_YEAR";
    JiraProjectCleanupRecommendationStaleSince["SixMonths"] = "SIX_MONTHS";
    JiraProjectCleanupRecommendationStaleSince["TwoYears"] = "TWO_YEARS";
})(JiraProjectCleanupRecommendationStaleSince = exports.JiraProjectCleanupRecommendationStaleSince || (exports.JiraProjectCleanupRecommendationStaleSince = {}));
var JiraProjectCleanupTaskStatusType;
(function (JiraProjectCleanupTaskStatusType) {
    JiraProjectCleanupTaskStatusType["Complete"] = "COMPLETE";
    JiraProjectCleanupTaskStatusType["Error"] = "ERROR";
    JiraProjectCleanupTaskStatusType["InProgress"] = "IN_PROGRESS";
    JiraProjectCleanupTaskStatusType["Pending"] = "PENDING";
    JiraProjectCleanupTaskStatusType["TerminalError"] = "TERMINAL_ERROR";
})(JiraProjectCleanupTaskStatusType = exports.JiraProjectCleanupTaskStatusType || (exports.JiraProjectCleanupTaskStatusType = {}));
var JiraProjectDateTimeFormat;
(function (JiraProjectDateTimeFormat) {
    JiraProjectDateTimeFormat["CompleteDatetimeFormat"] = "COMPLETE_DATETIME_FORMAT";
    JiraProjectDateTimeFormat["DayFormat"] = "DAY_FORMAT";
    JiraProjectDateTimeFormat["DayMonthYearFormat"] = "DAY_MONTH_YEAR_FORMAT";
    JiraProjectDateTimeFormat["Relative"] = "RELATIVE";
    JiraProjectDateTimeFormat["TimeFormat"] = "TIME_FORMAT";
})(JiraProjectDateTimeFormat = exports.JiraProjectDateTimeFormat || (exports.JiraProjectDateTimeFormat = {}));
var JiraProjectListRightPanelState;
(function (JiraProjectListRightPanelState) {
    JiraProjectListRightPanelState["Closed"] = "CLOSED";
    JiraProjectListRightPanelState["Open"] = "OPEN";
})(JiraProjectListRightPanelState = exports.JiraProjectListRightPanelState || (exports.JiraProjectListRightPanelState = {}));
var JiraProjectNotificationConfigurationState;
(function (JiraProjectNotificationConfigurationState) {
    JiraProjectNotificationConfigurationState["Configured"] = "CONFIGURED";
    JiraProjectNotificationConfigurationState["Default"] = "DEFAULT";
})(JiraProjectNotificationConfigurationState = exports.JiraProjectNotificationConfigurationState || (exports.JiraProjectNotificationConfigurationState = {}));
var JiraProjectPermissionCategoryEnum;
(function (JiraProjectPermissionCategoryEnum) {
    JiraProjectPermissionCategoryEnum["Attachments"] = "ATTACHMENTS";
    JiraProjectPermissionCategoryEnum["Comments"] = "COMMENTS";
    JiraProjectPermissionCategoryEnum["Issues"] = "ISSUES";
    JiraProjectPermissionCategoryEnum["Other"] = "OTHER";
    JiraProjectPermissionCategoryEnum["Projects"] = "PROJECTS";
    JiraProjectPermissionCategoryEnum["TimeTracking"] = "TIME_TRACKING";
    JiraProjectPermissionCategoryEnum["VotersAndWatchers"] = "VOTERS_AND_WATCHERS";
})(JiraProjectPermissionCategoryEnum = exports.JiraProjectPermissionCategoryEnum || (exports.JiraProjectPermissionCategoryEnum = {}));
var JiraProjectPermissionContext;
(function (JiraProjectPermissionContext) {
    JiraProjectPermissionContext["CreateIssue"] = "CREATE_ISSUE";
    JiraProjectPermissionContext["ViewIssue"] = "VIEW_ISSUE";
})(JiraProjectPermissionContext = exports.JiraProjectPermissionContext || (exports.JiraProjectPermissionContext = {}));
var JiraProjectPermissionType;
(function (JiraProjectPermissionType) {
    JiraProjectPermissionType["AddComments"] = "ADD_COMMENTS";
    JiraProjectPermissionType["AdministerProjects"] = "ADMINISTER_PROJECTS";
    JiraProjectPermissionType["ArchiveIssues"] = "ARCHIVE_ISSUES";
    JiraProjectPermissionType["AssignableUser"] = "ASSIGNABLE_USER";
    JiraProjectPermissionType["AssignIssues"] = "ASSIGN_ISSUES";
    JiraProjectPermissionType["BrowseProjects"] = "BROWSE_PROJECTS";
    JiraProjectPermissionType["CloseIssues"] = "CLOSE_ISSUES";
    JiraProjectPermissionType["CreateAttachments"] = "CREATE_ATTACHMENTS";
    JiraProjectPermissionType["CreateIssues"] = "CREATE_ISSUES";
    JiraProjectPermissionType["DeleteAllAttachments"] = "DELETE_ALL_ATTACHMENTS";
    JiraProjectPermissionType["DeleteAllComments"] = "DELETE_ALL_COMMENTS";
    JiraProjectPermissionType["DeleteAllWorklogs"] = "DELETE_ALL_WORKLOGS";
    JiraProjectPermissionType["DeleteIssues"] = "DELETE_ISSUES";
    JiraProjectPermissionType["DeleteOwnAttachments"] = "DELETE_OWN_ATTACHMENTS";
    JiraProjectPermissionType["DeleteOwnComments"] = "DELETE_OWN_COMMENTS";
    JiraProjectPermissionType["DeleteOwnWorklogs"] = "DELETE_OWN_WORKLOGS";
    JiraProjectPermissionType["EditAllComments"] = "EDIT_ALL_COMMENTS";
    JiraProjectPermissionType["EditAllWorklogs"] = "EDIT_ALL_WORKLOGS";
    JiraProjectPermissionType["EditIssues"] = "EDIT_ISSUES";
    JiraProjectPermissionType["EditIssueLayout"] = "EDIT_ISSUE_LAYOUT";
    JiraProjectPermissionType["EditOwnComments"] = "EDIT_OWN_COMMENTS";
    JiraProjectPermissionType["EditOwnWorklogs"] = "EDIT_OWN_WORKLOGS";
    JiraProjectPermissionType["EditWorkflow"] = "EDIT_WORKFLOW";
    JiraProjectPermissionType["LinkIssues"] = "LINK_ISSUES";
    JiraProjectPermissionType["ManageWatchers"] = "MANAGE_WATCHERS";
    JiraProjectPermissionType["ModifyReporter"] = "MODIFY_REPORTER";
    JiraProjectPermissionType["MoveIssues"] = "MOVE_ISSUES";
    JiraProjectPermissionType["ResolveIssues"] = "RESOLVE_ISSUES";
    JiraProjectPermissionType["ScheduleIssues"] = "SCHEDULE_ISSUES";
    JiraProjectPermissionType["SetIssueSecurity"] = "SET_ISSUE_SECURITY";
    JiraProjectPermissionType["TransitionIssues"] = "TRANSITION_ISSUES";
    JiraProjectPermissionType["UnarchiveIssues"] = "UNARCHIVE_ISSUES";
    JiraProjectPermissionType["ViewDevTools"] = "VIEW_DEV_TOOLS";
    JiraProjectPermissionType["ViewReadonlyWorkflow"] = "VIEW_READONLY_WORKFLOW";
    JiraProjectPermissionType["ViewVotersAndWatchers"] = "VIEW_VOTERS_AND_WATCHERS";
    JiraProjectPermissionType["WorkOnIssues"] = "WORK_ON_ISSUES";
})(JiraProjectPermissionType = exports.JiraProjectPermissionType || (exports.JiraProjectPermissionType = {}));
var JiraProjectRecommendationType;
(function (JiraProjectRecommendationType) {
    JiraProjectRecommendationType["InviterActivity"] = "INVITER_ACTIVITY";
    JiraProjectRecommendationType["TenantActivity"] = "TENANT_ACTIVITY";
})(JiraProjectRecommendationType = exports.JiraProjectRecommendationType || (exports.JiraProjectRecommendationType = {}));
var JiraProjectRoleActorRecommendationAction;
(function (JiraProjectRoleActorRecommendationAction) {
    JiraProjectRoleActorRecommendationAction["Trash"] = "TRASH";
})(JiraProjectRoleActorRecommendationAction = exports.JiraProjectRoleActorRecommendationAction || (exports.JiraProjectRoleActorRecommendationAction = {}));
var JiraProjectRoleActorUserStatus;
(function (JiraProjectRoleActorUserStatus) {
    JiraProjectRoleActorUserStatus["Deleted"] = "DELETED";
    JiraProjectRoleActorUserStatus["Inactive"] = "INACTIVE";
})(JiraProjectRoleActorUserStatus = exports.JiraProjectRoleActorUserStatus || (exports.JiraProjectRoleActorUserStatus = {}));
var JiraProjectShortcutType;
(function (JiraProjectShortcutType) {
    JiraProjectShortcutType["Repository"] = "REPOSITORY";
    JiraProjectShortcutType["ShortcutLink"] = "SHORTCUT_LINK";
    JiraProjectShortcutType["Unknown"] = "UNKNOWN";
})(JiraProjectShortcutType = exports.JiraProjectShortcutType || (exports.JiraProjectShortcutType = {}));
var JiraProjectSortField;
(function (JiraProjectSortField) {
    JiraProjectSortField["Category"] = "CATEGORY";
    JiraProjectSortField["Favourite"] = "FAVOURITE";
    JiraProjectSortField["Key"] = "KEY";
    JiraProjectSortField["LastIssueUpdatedTime"] = "LAST_ISSUE_UPDATED_TIME";
    JiraProjectSortField["Lead"] = "LEAD";
    JiraProjectSortField["Name"] = "NAME";
})(JiraProjectSortField = exports.JiraProjectSortField || (exports.JiraProjectSortField = {}));
var JiraProjectStatus;
(function (JiraProjectStatus) {
    JiraProjectStatus["Active"] = "ACTIVE";
    JiraProjectStatus["Archived"] = "ARCHIVED";
    JiraProjectStatus["Deleted"] = "DELETED";
})(JiraProjectStatus = exports.JiraProjectStatus || (exports.JiraProjectStatus = {}));
var JiraProjectStyle;
(function (JiraProjectStyle) {
    JiraProjectStyle["CompanyManagedProject"] = "COMPANY_MANAGED_PROJECT";
    JiraProjectStyle["TeamManagedProject"] = "TEAM_MANAGED_PROJECT";
})(JiraProjectStyle = exports.JiraProjectStyle || (exports.JiraProjectStyle = {}));
var JiraProjectType;
(function (JiraProjectType) {
    JiraProjectType["Business"] = "BUSINESS";
    JiraProjectType["CustomerService"] = "CUSTOMER_SERVICE";
    JiraProjectType["ProductDiscovery"] = "PRODUCT_DISCOVERY";
    JiraProjectType["ServiceDesk"] = "SERVICE_DESK";
    JiraProjectType["Software"] = "SOFTWARE";
})(JiraProjectType = exports.JiraProjectType || (exports.JiraProjectType = {}));
var JiraProjectsHelpCenterMappingStatus;
(function (JiraProjectsHelpCenterMappingStatus) {
    JiraProjectsHelpCenterMappingStatus["All"] = "ALL";
    JiraProjectsHelpCenterMappingStatus["Linked"] = "LINKED";
    JiraProjectsHelpCenterMappingStatus["Unlinked"] = "UNLINKED";
})(JiraProjectsHelpCenterMappingStatus = exports.JiraProjectsHelpCenterMappingStatus || (exports.JiraProjectsHelpCenterMappingStatus = {}));
var JiraPullRequestState;
(function (JiraPullRequestState) {
    JiraPullRequestState["Declined"] = "DECLINED";
    JiraPullRequestState["Draft"] = "DRAFT";
    JiraPullRequestState["Merged"] = "MERGED";
    JiraPullRequestState["Open"] = "OPEN";
})(JiraPullRequestState = exports.JiraPullRequestState || (exports.JiraPullRequestState = {}));
var JiraRankMutationEdge;
(function (JiraRankMutationEdge) {
    JiraRankMutationEdge["Bottom"] = "BOTTOM";
    JiraRankMutationEdge["Top"] = "TOP";
})(JiraRankMutationEdge = exports.JiraRankMutationEdge || (exports.JiraRankMutationEdge = {}));
var JiraRecommendationCategory;
(function (JiraRecommendationCategory) {
    JiraRecommendationCategory["CustomField"] = "CUSTOM_FIELD";
    JiraRecommendationCategory["IssueArchival"] = "ISSUE_ARCHIVAL";
    JiraRecommendationCategory["ProjectCleanup"] = "PROJECT_CLEANUP";
    JiraRecommendationCategory["ProjectRoleActor"] = "PROJECT_ROLE_ACTOR";
})(JiraRecommendationCategory = exports.JiraRecommendationCategory || (exports.JiraRecommendationCategory = {}));
var JiraRedactionSortField;
(function (JiraRedactionSortField) {
    JiraRedactionSortField["Created"] = "CREATED";
    JiraRedactionSortField["Field"] = "FIELD";
    JiraRedactionSortField["Reason"] = "REASON";
    JiraRedactionSortField["RedactedBy"] = "REDACTED_BY";
    JiraRedactionSortField["Updated"] = "UPDATED";
})(JiraRedactionSortField = exports.JiraRedactionSortField || (exports.JiraRedactionSortField = {}));
var JiraReleaseNotesIssueKeyConfig;
(function (JiraReleaseNotesIssueKeyConfig) {
    JiraReleaseNotesIssueKeyConfig["Linked"] = "LINKED";
    JiraReleaseNotesIssueKeyConfig["None"] = "NONE";
    JiraReleaseNotesIssueKeyConfig["Unlinked"] = "UNLINKED";
})(JiraReleaseNotesIssueKeyConfig = exports.JiraReleaseNotesIssueKeyConfig || (exports.JiraReleaseNotesIssueKeyConfig = {}));
var JiraReleasesEpicReleaseStatusFilter;
(function (JiraReleasesEpicReleaseStatusFilter) {
    JiraReleasesEpicReleaseStatusFilter["Released"] = "RELEASED";
    JiraReleasesEpicReleaseStatusFilter["ReleasedAndUnreleased"] = "RELEASED_AND_UNRELEASED";
})(JiraReleasesEpicReleaseStatusFilter = exports.JiraReleasesEpicReleaseStatusFilter || (exports.JiraReleasesEpicReleaseStatusFilter = {}));
var JiraReleasesIssueReleaseStatusFilter;
(function (JiraReleasesIssueReleaseStatusFilter) {
    JiraReleasesIssueReleaseStatusFilter["Released"] = "RELEASED";
    JiraReleasesIssueReleaseStatusFilter["ReleasedAndUnreleased"] = "RELEASED_AND_UNRELEASED";
    JiraReleasesIssueReleaseStatusFilter["Unreleased"] = "UNRELEASED";
})(JiraReleasesIssueReleaseStatusFilter = exports.JiraReleasesIssueReleaseStatusFilter || (exports.JiraReleasesIssueReleaseStatusFilter = {}));
var JiraRemoteLinkedIssueErrorType;
(function (JiraRemoteLinkedIssueErrorType) {
    JiraRemoteLinkedIssueErrorType["ApplinkMissing"] = "APPLINK_MISSING";
    JiraRemoteLinkedIssueErrorType["ApplinkReqAuth"] = "APPLINK_REQ_AUTH";
})(JiraRemoteLinkedIssueErrorType = exports.JiraRemoteLinkedIssueErrorType || (exports.JiraRemoteLinkedIssueErrorType = {}));
var JiraReorderBoardViewColumnPosition;
(function (JiraReorderBoardViewColumnPosition) {
    JiraReorderBoardViewColumnPosition["After"] = "AFTER";
    JiraReorderBoardViewColumnPosition["Before"] = "BEFORE";
})(JiraReorderBoardViewColumnPosition = exports.JiraReorderBoardViewColumnPosition || (exports.JiraReorderBoardViewColumnPosition = {}));
var JiraResourceUsageCustomFieldRecommendationAction;
(function (JiraResourceUsageCustomFieldRecommendationAction) {
    JiraResourceUsageCustomFieldRecommendationAction["Trash"] = "TRASH";
})(JiraResourceUsageCustomFieldRecommendationAction = exports.JiraResourceUsageCustomFieldRecommendationAction || (exports.JiraResourceUsageCustomFieldRecommendationAction = {}));
var JiraResourceUsageRecommendationStatus;
(function (JiraResourceUsageRecommendationStatus) {
    JiraResourceUsageRecommendationStatus["Archived"] = "ARCHIVED";
    JiraResourceUsageRecommendationStatus["Executed"] = "EXECUTED";
    JiraResourceUsageRecommendationStatus["New"] = "NEW";
    JiraResourceUsageRecommendationStatus["Obsolete"] = "OBSOLETE";
    JiraResourceUsageRecommendationStatus["Trashed"] = "TRASHED";
})(JiraResourceUsageRecommendationStatus = exports.JiraResourceUsageRecommendationStatus || (exports.JiraResourceUsageRecommendationStatus = {}));
var JiraReviewState;
(function (JiraReviewState) {
    JiraReviewState["Approval"] = "APPROVAL";
    JiraReviewState["Closed"] = "CLOSED";
    JiraReviewState["Dead"] = "DEAD";
    JiraReviewState["Draft"] = "DRAFT";
    JiraReviewState["Rejected"] = "REJECTED";
    JiraReviewState["Review"] = "REVIEW";
    JiraReviewState["Summarize"] = "SUMMARIZE";
    JiraReviewState["Unknown"] = "UNKNOWN";
})(JiraReviewState = exports.JiraReviewState || (exports.JiraReviewState = {}));
var JiraScenarioType;
(function (JiraScenarioType) {
    JiraScenarioType["Added"] = "ADDED";
    JiraScenarioType["Deleted"] = "DELETED";
    JiraScenarioType["Deletedfromjira"] = "DELETEDFROMJIRA";
    JiraScenarioType["Updated"] = "UPDATED";
})(JiraScenarioType = exports.JiraScenarioType || (exports.JiraScenarioType = {}));
var JiraScheduleTimelineItemOperation;
(function (JiraScheduleTimelineItemOperation) {
    JiraScheduleTimelineItemOperation["Drag"] = "DRAG";
    JiraScheduleTimelineItemOperation["Set"] = "SET";
})(JiraScheduleTimelineItemOperation = exports.JiraScheduleTimelineItemOperation || (exports.JiraScheduleTimelineItemOperation = {}));
var JiraSearchableEntityType;
(function (JiraSearchableEntityType) {
    JiraSearchableEntityType["Board"] = "BOARD";
    JiraSearchableEntityType["Dashboard"] = "DASHBOARD";
    JiraSearchableEntityType["Filter"] = "FILTER";
    JiraSearchableEntityType["Issue"] = "ISSUE";
    JiraSearchableEntityType["Plan"] = "PLAN";
    JiraSearchableEntityType["Project"] = "PROJECT";
    JiraSearchableEntityType["Queue"] = "QUEUE";
})(JiraSearchableEntityType = exports.JiraSearchableEntityType || (exports.JiraSearchableEntityType = {}));
var JiraServiceManagementApprovalDecisionResponseType;
(function (JiraServiceManagementApprovalDecisionResponseType) {
    JiraServiceManagementApprovalDecisionResponseType["Approved"] = "approved";
    JiraServiceManagementApprovalDecisionResponseType["Declined"] = "declined";
    JiraServiceManagementApprovalDecisionResponseType["Pending"] = "pending";
})(JiraServiceManagementApprovalDecisionResponseType = exports.JiraServiceManagementApprovalDecisionResponseType || (exports.JiraServiceManagementApprovalDecisionResponseType = {}));
var JiraServiceManagementApprovalState;
(function (JiraServiceManagementApprovalState) {
    JiraServiceManagementApprovalState["InsufficientApprovers"] = "INSUFFICIENT_APPROVERS";
    JiraServiceManagementApprovalState["Ok"] = "OK";
})(JiraServiceManagementApprovalState = exports.JiraServiceManagementApprovalState || (exports.JiraServiceManagementApprovalState = {}));
var JiraServiceManagementCommentVisibility;
(function (JiraServiceManagementCommentVisibility) {
    JiraServiceManagementCommentVisibility["Internal"] = "INTERNAL";
    JiraServiceManagementCommentVisibility["VisibleToHelpseeker"] = "VISIBLE_TO_HELPSEEKER";
})(JiraServiceManagementCommentVisibility = exports.JiraServiceManagementCommentVisibility || (exports.JiraServiceManagementCommentVisibility = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType;
(function (JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType) {
    JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType["FormTemplateReference"] = "FORM_TEMPLATE_REFERENCE";
    JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType["RequestTypeTemplateReference"] = "REQUEST_TYPE_TEMPLATE_REFERENCE";
})(JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType || (exports.JiraServiceManagementCreateRequestTypeFromTemplateRequestFormInputType = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction;
(function (JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction) {
    JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction["Share"] = "SHARE";
})(JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction || (exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowAction = {}));
var JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType;
(function (JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType) {
    JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType["ReferenceThroughIssueType"] = "REFERENCE_THROUGH_ISSUE_TYPE";
})(JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType || (exports.JiraServiceManagementCreateRequestTypeFromTemplateWorkflowInputType = {}));
var JiraServiceManagementIssueViewDefaultCommentBehavior;
(function (JiraServiceManagementIssueViewDefaultCommentBehavior) {
    JiraServiceManagementIssueViewDefaultCommentBehavior["InternalNote"] = "INTERNAL_NOTE";
    JiraServiceManagementIssueViewDefaultCommentBehavior["ReplyToCustomer"] = "REPLY_TO_CUSTOMER";
})(JiraServiceManagementIssueViewDefaultCommentBehavior = exports.JiraServiceManagementIssueViewDefaultCommentBehavior || (exports.JiraServiceManagementIssueViewDefaultCommentBehavior = {}));
var JiraServiceManagementMajorIncident;
(function (JiraServiceManagementMajorIncident) {
    JiraServiceManagementMajorIncident["MajorIncident"] = "MAJOR_INCIDENT";
})(JiraServiceManagementMajorIncident = exports.JiraServiceManagementMajorIncident || (exports.JiraServiceManagementMajorIncident = {}));
var JiraServiceManagementPractice;
(function (JiraServiceManagementPractice) {
    JiraServiceManagementPractice["ChangeManagement"] = "CHANGE_MANAGEMENT";
    JiraServiceManagementPractice["DeveloperEscalation"] = "DEVELOPER_ESCALATION";
    JiraServiceManagementPractice["IncidentManagement"] = "INCIDENT_MANAGEMENT";
    JiraServiceManagementPractice["PostIncidentReview"] = "POST_INCIDENT_REVIEW";
    JiraServiceManagementPractice["ProblemManagement"] = "PROBLEM_MANAGEMENT";
    JiraServiceManagementPractice["ServiceRequest"] = "SERVICE_REQUEST";
})(JiraServiceManagementPractice = exports.JiraServiceManagementPractice || (exports.JiraServiceManagementPractice = {}));
var JiraServiceManagementRendererType;
(function (JiraServiceManagementRendererType) {
    JiraServiceManagementRendererType["AtlassianWikiRendererType"] = "ATLASSIAN_WIKI_RENDERER_TYPE";
    JiraServiceManagementRendererType["JiraTextRendererType"] = "JIRA_TEXT_RENDERER_TYPE";
})(JiraServiceManagementRendererType = exports.JiraServiceManagementRendererType || (exports.JiraServiceManagementRendererType = {}));
var JiraServiceManagementRequestTypeCategoryRestriction;
(function (JiraServiceManagementRequestTypeCategoryRestriction) {
    JiraServiceManagementRequestTypeCategoryRestriction["Open"] = "OPEN";
    JiraServiceManagementRequestTypeCategoryRestriction["Restricted"] = "RESTRICTED";
})(JiraServiceManagementRequestTypeCategoryRestriction = exports.JiraServiceManagementRequestTypeCategoryRestriction || (exports.JiraServiceManagementRequestTypeCategoryRestriction = {}));
var JiraServiceManagementRequestTypeCategoryStatus;
(function (JiraServiceManagementRequestTypeCategoryStatus) {
    JiraServiceManagementRequestTypeCategoryStatus["Active"] = "ACTIVE";
    JiraServiceManagementRequestTypeCategoryStatus["Draft"] = "DRAFT";
    JiraServiceManagementRequestTypeCategoryStatus["Inactive"] = "INACTIVE";
})(JiraServiceManagementRequestTypeCategoryStatus = exports.JiraServiceManagementRequestTypeCategoryStatus || (exports.JiraServiceManagementRequestTypeCategoryStatus = {}));
var JiraShareableEntityGrant;
(function (JiraShareableEntityGrant) {
    JiraShareableEntityGrant["AnonymousAccess"] = "ANONYMOUS_ACCESS";
    JiraShareableEntityGrant["AnyLoggedinUserApplicationRole"] = "ANY_LOGGEDIN_USER_APPLICATION_ROLE";
    JiraShareableEntityGrant["Group"] = "GROUP";
    JiraShareableEntityGrant["Project"] = "PROJECT";
    JiraShareableEntityGrant["ProjectRole"] = "PROJECT_ROLE";
    JiraShareableEntityGrant["ProjectUnknown"] = "PROJECT_UNKNOWN";
    JiraShareableEntityGrant["User"] = "USER";
})(JiraShareableEntityGrant = exports.JiraShareableEntityGrant || (exports.JiraShareableEntityGrant = {}));
var JiraSidebarMenuDisplayMode;
(function (JiraSidebarMenuDisplayMode) {
    JiraSidebarMenuDisplayMode["MostRecentOnly"] = "MOST_RECENT_ONLY";
    JiraSidebarMenuDisplayMode["Starred"] = "STARRED";
    JiraSidebarMenuDisplayMode["StarredAndRecent"] = "STARRED_AND_RECENT";
})(JiraSidebarMenuDisplayMode = exports.JiraSidebarMenuDisplayMode || (exports.JiraSidebarMenuDisplayMode = {}));
var JiraSidebarMenuItemReorderOperation;
(function (JiraSidebarMenuItemReorderOperation) {
    JiraSidebarMenuItemReorderOperation["After"] = "AFTER";
    JiraSidebarMenuItemReorderOperation["Before"] = "BEFORE";
    JiraSidebarMenuItemReorderOperation["MoveDown"] = "MOVE_DOWN";
    JiraSidebarMenuItemReorderOperation["MoveToBottom"] = "MOVE_TO_BOTTOM";
    JiraSidebarMenuItemReorderOperation["MoveToTop"] = "MOVE_TO_TOP";
    JiraSidebarMenuItemReorderOperation["MoveUp"] = "MOVE_UP";
})(JiraSidebarMenuItemReorderOperation = exports.JiraSidebarMenuItemReorderOperation || (exports.JiraSidebarMenuItemReorderOperation = {}));
var JiraSingleValueFieldOperations;
(function (JiraSingleValueFieldOperations) {
    JiraSingleValueFieldOperations["Set"] = "SET";
})(JiraSingleValueFieldOperations = exports.JiraSingleValueFieldOperations || (exports.JiraSingleValueFieldOperations = {}));
var JiraSoftwareIssueSearchCustomInputContext;
(function (JiraSoftwareIssueSearchCustomInputContext) {
    JiraSoftwareIssueSearchCustomInputContext["Backlog"] = "BACKLOG";
    JiraSoftwareIssueSearchCustomInputContext["Board"] = "BOARD";
    JiraSoftwareIssueSearchCustomInputContext["None"] = "NONE";
})(JiraSoftwareIssueSearchCustomInputContext = exports.JiraSoftwareIssueSearchCustomInputContext || (exports.JiraSoftwareIssueSearchCustomInputContext = {}));
var JiraSprintState;
(function (JiraSprintState) {
    JiraSprintState["Active"] = "ACTIVE";
    JiraSprintState["Closed"] = "CLOSED";
    JiraSprintState["Future"] = "FUTURE";
})(JiraSprintState = exports.JiraSprintState || (exports.JiraSprintState = {}));
var JiraStatusCategoryColor;
(function (JiraStatusCategoryColor) {
    JiraStatusCategoryColor["BlueGray"] = "BLUE_GRAY";
    JiraStatusCategoryColor["Brown"] = "BROWN";
    JiraStatusCategoryColor["Green"] = "GREEN";
    JiraStatusCategoryColor["MediumGray"] = "MEDIUM_GRAY";
    JiraStatusCategoryColor["WarmRed"] = "WARM_RED";
    JiraStatusCategoryColor["Yellow"] = "YELLOW";
})(JiraStatusCategoryColor = exports.JiraStatusCategoryColor || (exports.JiraStatusCategoryColor = {}));
var JiraSuggestedChildIssueStatusType;
(function (JiraSuggestedChildIssueStatusType) {
    JiraSuggestedChildIssueStatusType["Complete"] = "COMPLETE";
    JiraSuggestedChildIssueStatusType["RefiningSuggestedIssues"] = "REFINING_SUGGESTED_ISSUES";
    JiraSuggestedChildIssueStatusType["ReformattingIssues"] = "REFORMATTING_ISSUES";
    JiraSuggestedChildIssueStatusType["RemovingDuplicateIssues"] = "REMOVING_DUPLICATE_ISSUES";
    JiraSuggestedChildIssueStatusType["RetrievingSourceContext"] = "RETRIEVING_SOURCE_CONTEXT";
    JiraSuggestedChildIssueStatusType["SuggestingInitialIssues"] = "SUGGESTING_INITIAL_ISSUES";
})(JiraSuggestedChildIssueStatusType = exports.JiraSuggestedChildIssueStatusType || (exports.JiraSuggestedChildIssueStatusType = {}));
var JiraSuggestedIssueErrorType;
(function (JiraSuggestedIssueErrorType) {
    JiraSuggestedIssueErrorType["CommunicationsError"] = "COMMUNICATIONS_ERROR";
    JiraSuggestedIssueErrorType["NotEnoughInformation"] = "NOT_ENOUGH_INFORMATION";
    JiraSuggestedIssueErrorType["NoFurtherSuggestions"] = "NO_FURTHER_SUGGESTIONS";
    JiraSuggestedIssueErrorType["Unclassified"] = "UNCLASSIFIED";
    JiraSuggestedIssueErrorType["UnethicalContent"] = "UNETHICAL_CONTENT";
})(JiraSuggestedIssueErrorType = exports.JiraSuggestedIssueErrorType || (exports.JiraSuggestedIssueErrorType = {}));
var JiraSuggestedIssueFieldValueError;
(function (JiraSuggestedIssueFieldValueError) {
    JiraSuggestedIssueFieldValueError["HaveRequiredField"] = "HAVE_REQUIRED_FIELD";
    JiraSuggestedIssueFieldValueError["IsSubTask"] = "IS_SUB_TASK";
    JiraSuggestedIssueFieldValueError["NotEnoughInformation"] = "NOT_ENOUGH_INFORMATION";
    JiraSuggestedIssueFieldValueError["NoFurtherSuggestions"] = "NO_FURTHER_SUGGESTIONS";
    JiraSuggestedIssueFieldValueError["SuggestionIsNotEnabled"] = "SUGGESTION_IS_NOT_ENABLED";
    JiraSuggestedIssueFieldValueError["Unclassified"] = "UNCLASSIFIED";
})(JiraSuggestedIssueFieldValueError = exports.JiraSuggestedIssueFieldValueError || (exports.JiraSuggestedIssueFieldValueError = {}));
var JiraSuggestionActionType;
(function (JiraSuggestionActionType) {
    JiraSuggestionActionType["ArchiveWorkItem"] = "ARCHIVE_WORK_ITEM";
    JiraSuggestionActionType["ChangeDuplicateWorkItemStatus"] = "CHANGE_DUPLICATE_WORK_ITEM_STATUS";
    JiraSuggestionActionType["ChangeStaleWorkItemStatus"] = "CHANGE_STALE_WORK_ITEM_STATUS";
    JiraSuggestionActionType["ChangeWorkItemStatus"] = "CHANGE_WORK_ITEM_STATUS";
    JiraSuggestionActionType["LinkDuplicateWorkItems"] = "LINK_DUPLICATE_WORK_ITEMS";
})(JiraSuggestionActionType = exports.JiraSuggestionActionType || (exports.JiraSuggestionActionType = {}));
var JiraSuggestionStatus;
(function (JiraSuggestionStatus) {
    JiraSuggestionStatus["Dismissed"] = "DISMISSED";
    JiraSuggestionStatus["Done"] = "DONE";
    JiraSuggestionStatus["Pending"] = "PENDING";
})(JiraSuggestionStatus = exports.JiraSuggestionStatus || (exports.JiraSuggestionStatus = {}));
var JiraSuggestionType;
(function (JiraSuggestionType) {
    JiraSuggestionType["DuplicateWorkItems"] = "DUPLICATE_WORK_ITEMS";
    JiraSuggestionType["StaleWorkItems"] = "STALE_WORK_ITEMS";
})(JiraSuggestionType = exports.JiraSuggestionType || (exports.JiraSuggestionType = {}));
var JiraSyntheticFieldCardOptionType;
(function (JiraSyntheticFieldCardOptionType) {
    JiraSyntheticFieldCardOptionType["CardCover"] = "CARD_COVER";
    JiraSyntheticFieldCardOptionType["Pages"] = "PAGES";
})(JiraSyntheticFieldCardOptionType = exports.JiraSyntheticFieldCardOptionType || (exports.JiraSyntheticFieldCardOptionType = {}));
var JiraTimeFormat;
(function (JiraTimeFormat) {
    JiraTimeFormat["Days"] = "DAYS";
    JiraTimeFormat["Hours"] = "HOURS";
    JiraTimeFormat["Pretty"] = "PRETTY";
})(JiraTimeFormat = exports.JiraTimeFormat || (exports.JiraTimeFormat = {}));
var JiraTimeUnit;
(function (JiraTimeUnit) {
    JiraTimeUnit["Day"] = "DAY";
    JiraTimeUnit["Hour"] = "HOUR";
    JiraTimeUnit["Minute"] = "MINUTE";
    JiraTimeUnit["Week"] = "WEEK";
})(JiraTimeUnit = exports.JiraTimeUnit || (exports.JiraTimeUnit = {}));
var JiraTransitionSortOption;
(function (JiraTransitionSortOption) {
    JiraTransitionSortOption["OpsBar"] = "OPS_BAR";
    JiraTransitionSortOption["OpsBarThenStatusCategory"] = "OPS_BAR_THEN_STATUS_CATEGORY";
})(JiraTransitionSortOption = exports.JiraTransitionSortOption || (exports.JiraTransitionSortOption = {}));
var JiraUiModificationsViewType;
(function (JiraUiModificationsViewType) {
    JiraUiModificationsViewType["Gic"] = "GIC";
    JiraUiModificationsViewType["GicAgentView"] = "GICAgentView";
    JiraUiModificationsViewType["IssueTransition"] = "IssueTransition";
    JiraUiModificationsViewType["IssueTransitionAgentView"] = "IssueTransitionAgentView";
    JiraUiModificationsViewType["IssueView"] = "IssueView";
    JiraUiModificationsViewType["IssueViewAgentView"] = "IssueViewAgentView";
    JiraUiModificationsViewType["JsmRequestCreate"] = "JSMRequestCreate";
})(JiraUiModificationsViewType = exports.JiraUiModificationsViewType || (exports.JiraUiModificationsViewType = {}));
var JiraVersionApproverStatus;
(function (JiraVersionApproverStatus) {
    JiraVersionApproverStatus["Approved"] = "APPROVED";
    JiraVersionApproverStatus["Declined"] = "DECLINED";
    JiraVersionApproverStatus["Pending"] = "PENDING";
})(JiraVersionApproverStatus = exports.JiraVersionApproverStatus || (exports.JiraVersionApproverStatus = {}));
var JiraVersionDetailsCollapsedUi;
(function (JiraVersionDetailsCollapsedUi) {
    JiraVersionDetailsCollapsedUi["Description"] = "DESCRIPTION";
    JiraVersionDetailsCollapsedUi["Issues"] = "ISSUES";
    JiraVersionDetailsCollapsedUi["IssueAssociatedDesigns"] = "ISSUE_ASSOCIATED_DESIGNS";
    JiraVersionDetailsCollapsedUi["ProgressCard"] = "PROGRESS_CARD";
    JiraVersionDetailsCollapsedUi["RelatedWork"] = "RELATED_WORK";
    JiraVersionDetailsCollapsedUi["RichTextSection"] = "RICH_TEXT_SECTION";
    JiraVersionDetailsCollapsedUi["RightSidebar"] = "RIGHT_SIDEBAR";
})(JiraVersionDetailsCollapsedUi = exports.JiraVersionDetailsCollapsedUi || (exports.JiraVersionDetailsCollapsedUi = {}));
var JiraVersionIssueTableColumn;
(function (JiraVersionIssueTableColumn) {
    JiraVersionIssueTableColumn["BuildStatus"] = "BUILD_STATUS";
    JiraVersionIssueTableColumn["DeploymentStatus"] = "DEPLOYMENT_STATUS";
    JiraVersionIssueTableColumn["DevelopmentStatus"] = "DEVELOPMENT_STATUS";
    JiraVersionIssueTableColumn["FeatureFlagStatus"] = "FEATURE_FLAG_STATUS";
    JiraVersionIssueTableColumn["IssueAssignee"] = "ISSUE_ASSIGNEE";
    JiraVersionIssueTableColumn["IssuePriority"] = "ISSUE_PRIORITY";
    JiraVersionIssueTableColumn["IssueStatus"] = "ISSUE_STATUS";
    JiraVersionIssueTableColumn["MoreAction"] = "MORE_ACTION";
    JiraVersionIssueTableColumn["Warnings"] = "WARNINGS";
})(JiraVersionIssueTableColumn = exports.JiraVersionIssueTableColumn || (exports.JiraVersionIssueTableColumn = {}));
var JiraVersionIssuesFilter;
(function (JiraVersionIssuesFilter) {
    JiraVersionIssuesFilter["All"] = "ALL";
    JiraVersionIssuesFilter["Done"] = "DONE";
    JiraVersionIssuesFilter["FailingBuild"] = "FAILING_BUILD";
    JiraVersionIssuesFilter["InProgress"] = "IN_PROGRESS";
    JiraVersionIssuesFilter["OpenPullRequest"] = "OPEN_PULL_REQUEST";
    JiraVersionIssuesFilter["OpenReview"] = "OPEN_REVIEW";
    JiraVersionIssuesFilter["Todo"] = "TODO";
    JiraVersionIssuesFilter["UnreviewedCode"] = "UNREVIEWED_CODE";
})(JiraVersionIssuesFilter = exports.JiraVersionIssuesFilter || (exports.JiraVersionIssuesFilter = {}));
var JiraVersionIssuesSortField;
(function (JiraVersionIssuesSortField) {
    JiraVersionIssuesSortField["Assignee"] = "ASSIGNEE";
    JiraVersionIssuesSortField["Created"] = "CREATED";
    JiraVersionIssuesSortField["Key"] = "KEY";
    JiraVersionIssuesSortField["Priority"] = "PRIORITY";
    JiraVersionIssuesSortField["Status"] = "STATUS";
    JiraVersionIssuesSortField["Type"] = "TYPE";
})(JiraVersionIssuesSortField = exports.JiraVersionIssuesSortField || (exports.JiraVersionIssuesSortField = {}));
var JiraVersionIssuesStatusCategories;
(function (JiraVersionIssuesStatusCategories) {
    JiraVersionIssuesStatusCategories["Done"] = "DONE";
    JiraVersionIssuesStatusCategories["InProgress"] = "IN_PROGRESS";
    JiraVersionIssuesStatusCategories["Todo"] = "TODO";
})(JiraVersionIssuesStatusCategories = exports.JiraVersionIssuesStatusCategories || (exports.JiraVersionIssuesStatusCategories = {}));
var JiraVersionRelatedWorkType;
(function (JiraVersionRelatedWorkType) {
    JiraVersionRelatedWorkType["ConfluenceReleaseNotes"] = "CONFLUENCE_RELEASE_NOTES";
    JiraVersionRelatedWorkType["GenericLink"] = "GENERIC_LINK";
    JiraVersionRelatedWorkType["NativeReleaseNotes"] = "NATIVE_RELEASE_NOTES";
})(JiraVersionRelatedWorkType = exports.JiraVersionRelatedWorkType || (exports.JiraVersionRelatedWorkType = {}));
var JiraVersionReleaseNotesType;
(function (JiraVersionReleaseNotesType) {
    JiraVersionReleaseNotesType["ConfluenceReleaseNote"] = "CONFLUENCE_RELEASE_NOTE";
    JiraVersionReleaseNotesType["NativeReleaseNote"] = "NATIVE_RELEASE_NOTE";
})(JiraVersionReleaseNotesType = exports.JiraVersionReleaseNotesType || (exports.JiraVersionReleaseNotesType = {}));
var JiraVersionSortField;
(function (JiraVersionSortField) {
    JiraVersionSortField["Description"] = "DESCRIPTION";
    JiraVersionSortField["Name"] = "NAME";
    JiraVersionSortField["ReleaseDate"] = "RELEASE_DATE";
    JiraVersionSortField["Sequence"] = "SEQUENCE";
    JiraVersionSortField["StartDate"] = "START_DATE";
})(JiraVersionSortField = exports.JiraVersionSortField || (exports.JiraVersionSortField = {}));
var JiraVersionStatus;
(function (JiraVersionStatus) {
    JiraVersionStatus["Archived"] = "ARCHIVED";
    JiraVersionStatus["Released"] = "RELEASED";
    JiraVersionStatus["Unreleased"] = "UNRELEASED";
})(JiraVersionStatus = exports.JiraVersionStatus || (exports.JiraVersionStatus = {}));
var JiraVersionWarningCategories;
(function (JiraVersionWarningCategories) {
    JiraVersionWarningCategories["FailingBuild"] = "FAILING_BUILD";
    JiraVersionWarningCategories["OpenPullRequest"] = "OPEN_PULL_REQUEST";
    JiraVersionWarningCategories["OpenReview"] = "OPEN_REVIEW";
    JiraVersionWarningCategories["UnreviewedCode"] = "UNREVIEWED_CODE";
})(JiraVersionWarningCategories = exports.JiraVersionWarningCategories || (exports.JiraVersionWarningCategories = {}));
var JiraVersionWarningConfigState;
(function (JiraVersionWarningConfigState) {
    JiraVersionWarningConfigState["Disabled"] = "DISABLED";
    JiraVersionWarningConfigState["Enabled"] = "ENABLED";
    JiraVersionWarningConfigState["NotApplicable"] = "NOT_APPLICABLE";
})(JiraVersionWarningConfigState = exports.JiraVersionWarningConfigState || (exports.JiraVersionWarningConfigState = {}));
var JiraVisibilityControlMechanism;
(function (JiraVisibilityControlMechanism) {
    JiraVisibilityControlMechanism["AppAccessRules"] = "AppAccessRules";
    JiraVisibilityControlMechanism["DisplayConditions"] = "DisplayConditions";
    JiraVisibilityControlMechanism["UnlicensedAccess"] = "UnlicensedAccess";
})(JiraVisibilityControlMechanism = exports.JiraVisibilityControlMechanism || (exports.JiraVisibilityControlMechanism = {}));
var JiraVotesOperations;
(function (JiraVotesOperations) {
    JiraVotesOperations["Add"] = "ADD";
    JiraVotesOperations["Remove"] = "REMOVE";
})(JiraVotesOperations = exports.JiraVotesOperations || (exports.JiraVotesOperations = {}));
var JiraWatchesOperations;
(function (JiraWatchesOperations) {
    JiraWatchesOperations["Add"] = "ADD";
    JiraWatchesOperations["Remove"] = "REMOVE";
})(JiraWatchesOperations = exports.JiraWatchesOperations || (exports.JiraWatchesOperations = {}));
var JiraWorkManagementBackgroundType;
(function (JiraWorkManagementBackgroundType) {
    JiraWorkManagementBackgroundType["Attachment"] = "ATTACHMENT";
    JiraWorkManagementBackgroundType["Color"] = "COLOR";
    JiraWorkManagementBackgroundType["Custom"] = "CUSTOM";
    JiraWorkManagementBackgroundType["Gradient"] = "GRADIENT";
})(JiraWorkManagementBackgroundType = exports.JiraWorkManagementBackgroundType || (exports.JiraWorkManagementBackgroundType = {}));
var JiraWorkManagementUserLicenseSeatEdition;
(function (JiraWorkManagementUserLicenseSeatEdition) {
    JiraWorkManagementUserLicenseSeatEdition["Free"] = "FREE";
    JiraWorkManagementUserLicenseSeatEdition["Premium"] = "PREMIUM";
    JiraWorkManagementUserLicenseSeatEdition["Standard"] = "STANDARD";
})(JiraWorkManagementUserLicenseSeatEdition = exports.JiraWorkManagementUserLicenseSeatEdition || (exports.JiraWorkManagementUserLicenseSeatEdition = {}));
var JiraWorklogAdjustmentEstimateOperation;
(function (JiraWorklogAdjustmentEstimateOperation) {
    JiraWorklogAdjustmentEstimateOperation["Auto"] = "AUTO";
    JiraWorklogAdjustmentEstimateOperation["Leave"] = "LEAVE";
    JiraWorklogAdjustmentEstimateOperation["Manual"] = "MANUAL";
    JiraWorklogAdjustmentEstimateOperation["New"] = "NEW";
})(JiraWorklogAdjustmentEstimateOperation = exports.JiraWorklogAdjustmentEstimateOperation || (exports.JiraWorklogAdjustmentEstimateOperation = {}));
var JsmChannelsExperience;
(function (JsmChannelsExperience) {
    JsmChannelsExperience["EmployeeOnboardingAgent"] = "EMPLOYEE_ONBOARDING_AGENT";
    JsmChannelsExperience["EmployeeServiceAgent"] = "EMPLOYEE_SERVICE_AGENT";
})(JsmChannelsExperience = exports.JsmChannelsExperience || (exports.JsmChannelsExperience = {}));
var JsmChannelsOrchestratorConversationActionType;
(function (JsmChannelsOrchestratorConversationActionType) {
    JsmChannelsOrchestratorConversationActionType["AiAnswered"] = "AI_ANSWERED";
    JsmChannelsOrchestratorConversationActionType["Matched"] = "MATCHED";
    JsmChannelsOrchestratorConversationActionType["Unhandled"] = "UNHANDLED";
})(JsmChannelsOrchestratorConversationActionType = exports.JsmChannelsOrchestratorConversationActionType || (exports.JsmChannelsOrchestratorConversationActionType = {}));
var JsmChannelsOrchestratorConversationChannel;
(function (JsmChannelsOrchestratorConversationChannel) {
    JsmChannelsOrchestratorConversationChannel["HelpCenter"] = "HELP_CENTER";
    JsmChannelsOrchestratorConversationChannel["JsmPortal"] = "JSM_PORTAL";
    JsmChannelsOrchestratorConversationChannel["JsmWidget"] = "JSM_WIDGET";
    JsmChannelsOrchestratorConversationChannel["MsTeams"] = "MS_TEAMS";
    JsmChannelsOrchestratorConversationChannel["Slack"] = "SLACK";
})(JsmChannelsOrchestratorConversationChannel = exports.JsmChannelsOrchestratorConversationChannel || (exports.JsmChannelsOrchestratorConversationChannel = {}));
var JsmChannelsOrchestratorConversationCsatOptionType;
(function (JsmChannelsOrchestratorConversationCsatOptionType) {
    JsmChannelsOrchestratorConversationCsatOptionType["CsatOption_1"] = "CSAT_OPTION_1";
    JsmChannelsOrchestratorConversationCsatOptionType["CsatOption_2"] = "CSAT_OPTION_2";
    JsmChannelsOrchestratorConversationCsatOptionType["CsatOption_3"] = "CSAT_OPTION_3";
    JsmChannelsOrchestratorConversationCsatOptionType["CsatOption_4"] = "CSAT_OPTION_4";
    JsmChannelsOrchestratorConversationCsatOptionType["CsatOption_5"] = "CSAT_OPTION_5";
})(JsmChannelsOrchestratorConversationCsatOptionType = exports.JsmChannelsOrchestratorConversationCsatOptionType || (exports.JsmChannelsOrchestratorConversationCsatOptionType = {}));
var JsmChannelsOrchestratorConversationState;
(function (JsmChannelsOrchestratorConversationState) {
    JsmChannelsOrchestratorConversationState["Closed"] = "CLOSED";
    JsmChannelsOrchestratorConversationState["Escalated"] = "ESCALATED";
    JsmChannelsOrchestratorConversationState["Open"] = "OPEN";
    JsmChannelsOrchestratorConversationState["Resolved"] = "RESOLVED";
})(JsmChannelsOrchestratorConversationState = exports.JsmChannelsOrchestratorConversationState || (exports.JsmChannelsOrchestratorConversationState = {}));
var JsmChatChannelExperienceId;
(function (JsmChatChannelExperienceId) {
    JsmChatChannelExperienceId["Helpcenter"] = "HELPCENTER";
    JsmChatChannelExperienceId["Widget"] = "WIDGET";
})(JsmChatChannelExperienceId = exports.JsmChatChannelExperienceId || (exports.JsmChatChannelExperienceId = {}));
var JsmChatChannelType;
(function (JsmChatChannelType) {
    JsmChatChannelType["Agent"] = "AGENT";
    JsmChatChannelType["Request"] = "REQUEST";
})(JsmChatChannelType = exports.JsmChatChannelType || (exports.JsmChatChannelType = {}));
var JsmChatConnectedApps;
(function (JsmChatConnectedApps) {
    JsmChatConnectedApps["Slack"] = "SLACK";
    JsmChatConnectedApps["Teams"] = "TEAMS";
})(JsmChatConnectedApps = exports.JsmChatConnectedApps || (exports.JsmChatConnectedApps = {}));
var JsmChatConversationAnalyticsEvent;
(function (JsmChatConversationAnalyticsEvent) {
    JsmChatConversationAnalyticsEvent["UserClearedChat"] = "USER_CLEARED_CHAT";
    JsmChatConversationAnalyticsEvent["UserMarkedAsNotResolved"] = "USER_MARKED_AS_NOT_RESOLVED";
    JsmChatConversationAnalyticsEvent["UserMarkedAsResolved"] = "USER_MARKED_AS_RESOLVED";
    JsmChatConversationAnalyticsEvent["UserSharedCsat"] = "USER_SHARED_CSAT";
    JsmChatConversationAnalyticsEvent["VaRespondedWithKnowledgeAnswer"] = "VA_RESPONDED_WITH_KNOWLEDGE_ANSWER";
    JsmChatConversationAnalyticsEvent["VaRespondedWithNonKnowledgeAnswer"] = "VA_RESPONDED_WITH_NON_KNOWLEDGE_ANSWER";
})(JsmChatConversationAnalyticsEvent = exports.JsmChatConversationAnalyticsEvent || (exports.JsmChatConversationAnalyticsEvent = {}));
var JsmChatConversationChannelType;
(function (JsmChatConversationChannelType) {
    JsmChatConversationChannelType["Email"] = "EMAIL";
    JsmChatConversationChannelType["HelpCenter"] = "HELP_CENTER";
    JsmChatConversationChannelType["Portal"] = "PORTAL";
    JsmChatConversationChannelType["Slack"] = "SLACK";
    JsmChatConversationChannelType["Widget"] = "WIDGET";
})(JsmChatConversationChannelType = exports.JsmChatConversationChannelType || (exports.JsmChatConversationChannelType = {}));
var JsmChatCreateWebConversationMessageContentType;
(function (JsmChatCreateWebConversationMessageContentType) {
    JsmChatCreateWebConversationMessageContentType["Adf"] = "ADF";
})(JsmChatCreateWebConversationMessageContentType = exports.JsmChatCreateWebConversationMessageContentType || (exports.JsmChatCreateWebConversationMessageContentType = {}));
var JsmChatCreateWebConversationUserRole;
(function (JsmChatCreateWebConversationUserRole) {
    JsmChatCreateWebConversationUserRole["Acknowledgment"] = "Acknowledgment";
    JsmChatCreateWebConversationUserRole["Init"] = "Init";
    JsmChatCreateWebConversationUserRole["JsmAgent"] = "JSM_Agent";
    JsmChatCreateWebConversationUserRole["Participant"] = "Participant";
    JsmChatCreateWebConversationUserRole["Reporter"] = "Reporter";
    JsmChatCreateWebConversationUserRole["VirtualAgent"] = "VirtualAgent";
})(JsmChatCreateWebConversationUserRole = exports.JsmChatCreateWebConversationUserRole || (exports.JsmChatCreateWebConversationUserRole = {}));
var JsmChatMessageSource;
(function (JsmChatMessageSource) {
    JsmChatMessageSource["Email"] = "EMAIL";
})(JsmChatMessageSource = exports.JsmChatMessageSource || (exports.JsmChatMessageSource = {}));
var JsmChatMessageType;
(function (JsmChatMessageType) {
    JsmChatMessageType["Adf"] = "ADF";
})(JsmChatMessageType = exports.JsmChatMessageType || (exports.JsmChatMessageType = {}));
var JsmChatMode;
(function (JsmChatMode) {
    JsmChatMode["Preview"] = "PREVIEW";
})(JsmChatMode = exports.JsmChatMode || (exports.JsmChatMode = {}));
var JsmChatWebChannelExperienceId;
(function (JsmChatWebChannelExperienceId) {
    JsmChatWebChannelExperienceId["Helpcenter"] = "HELPCENTER";
})(JsmChatWebChannelExperienceId = exports.JsmChatWebChannelExperienceId || (exports.JsmChatWebChannelExperienceId = {}));
var JsmChatWebConversationActions;
(function (JsmChatWebConversationActions) {
    JsmChatWebConversationActions["CloseConversation"] = "CLOSE_CONVERSATION";
    JsmChatWebConversationActions["DisableInput"] = "DISABLE_INPUT";
    JsmChatWebConversationActions["GreetingMessage"] = "GREETING_MESSAGE";
    JsmChatWebConversationActions["RedirectToSearch"] = "REDIRECT_TO_SEARCH";
})(JsmChatWebConversationActions = exports.JsmChatWebConversationActions || (exports.JsmChatWebConversationActions = {}));
var JsmChatWebConversationMessageContentType;
(function (JsmChatWebConversationMessageContentType) {
    JsmChatWebConversationMessageContentType["Adf"] = "ADF";
})(JsmChatWebConversationMessageContentType = exports.JsmChatWebConversationMessageContentType || (exports.JsmChatWebConversationMessageContentType = {}));
var JsmChatWebConversationUserRole;
(function (JsmChatWebConversationUserRole) {
    JsmChatWebConversationUserRole["JsmAgent"] = "JSM_Agent";
    JsmChatWebConversationUserRole["Participant"] = "Participant";
    JsmChatWebConversationUserRole["Reporter"] = "Reporter";
    JsmChatWebConversationUserRole["VirtualAgent"] = "VirtualAgent";
})(JsmChatWebConversationUserRole = exports.JsmChatWebConversationUserRole || (exports.JsmChatWebConversationUserRole = {}));
var JsmChatWebInteractionType;
(function (JsmChatWebInteractionType) {
    JsmChatWebInteractionType["Buttons"] = "BUTTONS";
    JsmChatWebInteractionType["Dropdown"] = "DROPDOWN";
    JsmChatWebInteractionType["JiraField"] = "JIRA_FIELD";
})(JsmChatWebInteractionType = exports.JsmChatWebInteractionType || (exports.JsmChatWebInteractionType = {}));
var KnowledgeBaseArticleSearchSortByKey;
(function (KnowledgeBaseArticleSearchSortByKey) {
    KnowledgeBaseArticleSearchSortByKey["LastModified"] = "LAST_MODIFIED";
    KnowledgeBaseArticleSearchSortByKey["Title"] = "TITLE";
})(KnowledgeBaseArticleSearchSortByKey = exports.KnowledgeBaseArticleSearchSortByKey || (exports.KnowledgeBaseArticleSearchSortByKey = {}));
var KnowledgeBaseArticleSearchSortOrder;
(function (KnowledgeBaseArticleSearchSortOrder) {
    KnowledgeBaseArticleSearchSortOrder["Asc"] = "ASC";
    KnowledgeBaseArticleSearchSortOrder["Desc"] = "DESC";
})(KnowledgeBaseArticleSearchSortOrder = exports.KnowledgeBaseArticleSearchSortOrder || (exports.KnowledgeBaseArticleSearchSortOrder = {}));
var KnowledgeBaseSpacePermissionType;
(function (KnowledgeBaseSpacePermissionType) {
    KnowledgeBaseSpacePermissionType["AnonymousUsers"] = "ANONYMOUS_USERS";
    KnowledgeBaseSpacePermissionType["ConfluenceLicensedUsers"] = "CONFLUENCE_LICENSED_USERS";
    KnowledgeBaseSpacePermissionType["ConfluenceUnlicensedUsers"] = "CONFLUENCE_UNLICENSED_USERS";
})(KnowledgeBaseSpacePermissionType = exports.KnowledgeBaseSpacePermissionType || (exports.KnowledgeBaseSpacePermissionType = {}));
var KnowledgeDiscoveryBookmarkState;
(function (KnowledgeDiscoveryBookmarkState) {
    KnowledgeDiscoveryBookmarkState["Active"] = "ACTIVE";
    KnowledgeDiscoveryBookmarkState["Suggested"] = "SUGGESTED";
})(KnowledgeDiscoveryBookmarkState = exports.KnowledgeDiscoveryBookmarkState || (exports.KnowledgeDiscoveryBookmarkState = {}));
var KnowledgeDiscoveryDefinitionScope;
(function (KnowledgeDiscoveryDefinitionScope) {
    KnowledgeDiscoveryDefinitionScope["Blogpost"] = "BLOGPOST";
    KnowledgeDiscoveryDefinitionScope["Goal"] = "GOAL";
    KnowledgeDiscoveryDefinitionScope["Organization"] = "ORGANIZATION";
    KnowledgeDiscoveryDefinitionScope["Page"] = "PAGE";
    KnowledgeDiscoveryDefinitionScope["Project"] = "PROJECT";
    KnowledgeDiscoveryDefinitionScope["Space"] = "SPACE";
})(KnowledgeDiscoveryDefinitionScope = exports.KnowledgeDiscoveryDefinitionScope || (exports.KnowledgeDiscoveryDefinitionScope = {}));
var KnowledgeDiscoveryDetectionType;
(function (KnowledgeDiscoveryDetectionType) {
    KnowledgeDiscoveryDetectionType["EntityRecognition"] = "ENTITY_RECOGNITION";
    KnowledgeDiscoveryDetectionType["Heuristic"] = "HEURISTIC";
    KnowledgeDiscoveryDetectionType["Llm"] = "LLM";
})(KnowledgeDiscoveryDetectionType = exports.KnowledgeDiscoveryDetectionType || (exports.KnowledgeDiscoveryDetectionType = {}));
var KnowledgeDiscoveryEntityType;
(function (KnowledgeDiscoveryEntityType) {
    KnowledgeDiscoveryEntityType["ConfluenceBlogpost"] = "CONFLUENCE_BLOGPOST";
    KnowledgeDiscoveryEntityType["ConfluenceDocument"] = "CONFLUENCE_DOCUMENT";
    KnowledgeDiscoveryEntityType["ConfluencePage"] = "CONFLUENCE_PAGE";
    KnowledgeDiscoveryEntityType["ConfluenceSpace"] = "CONFLUENCE_SPACE";
    KnowledgeDiscoveryEntityType["JiraProject"] = "JIRA_PROJECT";
    KnowledgeDiscoveryEntityType["KeyPhrase"] = "KEY_PHRASE";
    KnowledgeDiscoveryEntityType["Topic"] = "TOPIC";
    KnowledgeDiscoveryEntityType["User"] = "USER";
})(KnowledgeDiscoveryEntityType = exports.KnowledgeDiscoveryEntityType || (exports.KnowledgeDiscoveryEntityType = {}));
var KnowledgeDiscoveryKeyPhraseCategory;
(function (KnowledgeDiscoveryKeyPhraseCategory) {
    KnowledgeDiscoveryKeyPhraseCategory["Acronym"] = "ACRONYM";
    KnowledgeDiscoveryKeyPhraseCategory["Auto"] = "AUTO";
    KnowledgeDiscoveryKeyPhraseCategory["Other"] = "OTHER";
    KnowledgeDiscoveryKeyPhraseCategory["Project"] = "PROJECT";
    KnowledgeDiscoveryKeyPhraseCategory["Team"] = "TEAM";
})(KnowledgeDiscoveryKeyPhraseCategory = exports.KnowledgeDiscoveryKeyPhraseCategory || (exports.KnowledgeDiscoveryKeyPhraseCategory = {}));
var KnowledgeDiscoveryKeyPhraseInputTextFormat;
(function (KnowledgeDiscoveryKeyPhraseInputTextFormat) {
    KnowledgeDiscoveryKeyPhraseInputTextFormat["Adf"] = "ADF";
    KnowledgeDiscoveryKeyPhraseInputTextFormat["Plain"] = "PLAIN";
})(KnowledgeDiscoveryKeyPhraseInputTextFormat = exports.KnowledgeDiscoveryKeyPhraseInputTextFormat || (exports.KnowledgeDiscoveryKeyPhraseInputTextFormat = {}));
var KnowledgeDiscoveryProduct;
(function (KnowledgeDiscoveryProduct) {
    KnowledgeDiscoveryProduct["Confluence"] = "CONFLUENCE";
    KnowledgeDiscoveryProduct["Jira"] = "JIRA";
})(KnowledgeDiscoveryProduct = exports.KnowledgeDiscoveryProduct || (exports.KnowledgeDiscoveryProduct = {}));
var KnowledgeDiscoveryQueryClassification;
(function (KnowledgeDiscoveryQueryClassification) {
    KnowledgeDiscoveryQueryClassification["JiraNaturalLanguageQuery"] = "JIRA_NATURAL_LANGUAGE_QUERY";
    KnowledgeDiscoveryQueryClassification["JobTitle"] = "JOB_TITLE";
    KnowledgeDiscoveryQueryClassification["KeywordOrAcronym"] = "KEYWORD_OR_ACRONYM";
    KnowledgeDiscoveryQueryClassification["NaturalLanguageQuery"] = "NATURAL_LANGUAGE_QUERY";
    KnowledgeDiscoveryQueryClassification["Navigational"] = "NAVIGATIONAL";
    KnowledgeDiscoveryQueryClassification["None"] = "NONE";
    KnowledgeDiscoveryQueryClassification["Person"] = "PERSON";
    KnowledgeDiscoveryQueryClassification["Team"] = "TEAM";
    KnowledgeDiscoveryQueryClassification["Topic"] = "TOPIC";
})(KnowledgeDiscoveryQueryClassification = exports.KnowledgeDiscoveryQueryClassification || (exports.KnowledgeDiscoveryQueryClassification = {}));
var KnowledgeDiscoveryQuerySubType;
(function (KnowledgeDiscoveryQuerySubType) {
    KnowledgeDiscoveryQuerySubType["Command"] = "COMMAND";
    KnowledgeDiscoveryQuerySubType["Confluence"] = "CONFLUENCE";
    KnowledgeDiscoveryQuerySubType["Evaluate"] = "EVALUATE";
    KnowledgeDiscoveryQuerySubType["Jira"] = "JIRA";
    KnowledgeDiscoveryQuerySubType["JobTitle"] = "JOB_TITLE";
    KnowledgeDiscoveryQuerySubType["Llm"] = "LLM";
    KnowledgeDiscoveryQuerySubType["Question"] = "QUESTION";
})(KnowledgeDiscoveryQuerySubType = exports.KnowledgeDiscoveryQuerySubType || (exports.KnowledgeDiscoveryQuerySubType = {}));
var KnowledgeDiscoveryQuerySuggestionType;
(function (KnowledgeDiscoveryQuerySuggestionType) {
    KnowledgeDiscoveryQuerySuggestionType["AssignedItems"] = "ASSIGNED_ITEMS";
    KnowledgeDiscoveryQuerySuggestionType["TicketAssignee"] = "TICKET_ASSIGNEE";
    KnowledgeDiscoveryQuerySuggestionType["TicketDueDate"] = "TICKET_DUE_DATE";
    KnowledgeDiscoveryQuerySuggestionType["TicketStatus"] = "TICKET_STATUS";
})(KnowledgeDiscoveryQuerySuggestionType = exports.KnowledgeDiscoveryQuerySuggestionType || (exports.KnowledgeDiscoveryQuerySuggestionType = {}));
var KnowledgeDiscoveryRelatedEntityActionType;
(function (KnowledgeDiscoveryRelatedEntityActionType) {
    KnowledgeDiscoveryRelatedEntityActionType["Delete"] = "DELETE";
    KnowledgeDiscoveryRelatedEntityActionType["Persist"] = "PERSIST";
})(KnowledgeDiscoveryRelatedEntityActionType = exports.KnowledgeDiscoveryRelatedEntityActionType || (exports.KnowledgeDiscoveryRelatedEntityActionType = {}));
var KnowledgeDiscoverySearchQueryClassification;
(function (KnowledgeDiscoverySearchQueryClassification) {
    KnowledgeDiscoverySearchQueryClassification["KeywordOrAcronym"] = "KEYWORD_OR_ACRONYM";
    KnowledgeDiscoverySearchQueryClassification["NaturalLanguageQuery"] = "NATURAL_LANGUAGE_QUERY";
    KnowledgeDiscoverySearchQueryClassification["Navigational"] = "NAVIGATIONAL";
    KnowledgeDiscoverySearchQueryClassification["None"] = "NONE";
    KnowledgeDiscoverySearchQueryClassification["Person"] = "PERSON";
    KnowledgeDiscoverySearchQueryClassification["Team"] = "TEAM";
    KnowledgeDiscoverySearchQueryClassification["Topic"] = "TOPIC";
})(KnowledgeDiscoverySearchQueryClassification = exports.KnowledgeDiscoverySearchQueryClassification || (exports.KnowledgeDiscoverySearchQueryClassification = {}));
var KnowledgeDiscoverySearchQueryClassificationSubtype;
(function (KnowledgeDiscoverySearchQueryClassificationSubtype) {
    KnowledgeDiscoverySearchQueryClassificationSubtype["Command"] = "COMMAND";
    KnowledgeDiscoverySearchQueryClassificationSubtype["Confluence"] = "CONFLUENCE";
    KnowledgeDiscoverySearchQueryClassificationSubtype["Evaluate"] = "EVALUATE";
    KnowledgeDiscoverySearchQueryClassificationSubtype["Jira"] = "JIRA";
    KnowledgeDiscoverySearchQueryClassificationSubtype["JobTitle"] = "JOB_TITLE";
    KnowledgeDiscoverySearchQueryClassificationSubtype["Llm"] = "LLM";
    KnowledgeDiscoverySearchQueryClassificationSubtype["Question"] = "QUESTION";
})(KnowledgeDiscoverySearchQueryClassificationSubtype = exports.KnowledgeDiscoverySearchQueryClassificationSubtype || (exports.KnowledgeDiscoverySearchQueryClassificationSubtype = {}));
var KnowledgeDiscoveryTopicType;
(function (KnowledgeDiscoveryTopicType) {
    KnowledgeDiscoveryTopicType["Area"] = "AREA";
    KnowledgeDiscoveryTopicType["Company"] = "COMPANY";
    KnowledgeDiscoveryTopicType["Event"] = "EVENT";
    KnowledgeDiscoveryTopicType["Process"] = "PROCESS";
    KnowledgeDiscoveryTopicType["Program"] = "PROGRAM";
    KnowledgeDiscoveryTopicType["Team"] = "TEAM";
})(KnowledgeDiscoveryTopicType = exports.KnowledgeDiscoveryTopicType || (exports.KnowledgeDiscoveryTopicType = {}));
var KnowledgeDiscoveryZeroQueryType;
(function (KnowledgeDiscoveryZeroQueryType) {
    KnowledgeDiscoveryZeroQueryType["JiraNlq"] = "JIRA_NLQ";
    KnowledgeDiscoveryZeroQueryType["JiraNlqCollaborator"] = "JIRA_NLQ_COLLABORATOR";
    KnowledgeDiscoveryZeroQueryType["RelatedQuestion"] = "RELATED_QUESTION";
    KnowledgeDiscoveryZeroQueryType["WhoIs"] = "WHO_IS";
})(KnowledgeDiscoveryZeroQueryType = exports.KnowledgeDiscoveryZeroQueryType || (exports.KnowledgeDiscoveryZeroQueryType = {}));
var KnowledgeGraphContentType;
(function (KnowledgeGraphContentType) {
    KnowledgeGraphContentType["Blogpost"] = "BLOGPOST";
    KnowledgeGraphContentType["Page"] = "PAGE";
})(KnowledgeGraphContentType = exports.KnowledgeGraphContentType || (exports.KnowledgeGraphContentType = {}));
var KnowledgeGraphObjectType;
(function (KnowledgeGraphObjectType) {
    KnowledgeGraphObjectType["SnippetV1"] = "snippet_v1";
    KnowledgeGraphObjectType["SnippetV2"] = "snippet_v2";
    KnowledgeGraphObjectType["SnippetV2_180"] = "snippet_v2_180";
    KnowledgeGraphObjectType["SnippetV2_300"] = "snippet_v2_300";
})(KnowledgeGraphObjectType = exports.KnowledgeGraphObjectType || (exports.KnowledgeGraphObjectType = {}));
var LicenseOverrideState;
(function (LicenseOverrideState) {
    LicenseOverrideState["Active"] = "ACTIVE";
    LicenseOverrideState["Advanced"] = "ADVANCED";
    LicenseOverrideState["Inactive"] = "INACTIVE";
    LicenseOverrideState["Standard"] = "STANDARD";
    LicenseOverrideState["Trial"] = "TRIAL";
})(LicenseOverrideState = exports.LicenseOverrideState || (exports.LicenseOverrideState = {}));
var LicenseStatus;
(function (LicenseStatus) {
    LicenseStatus["Active"] = "ACTIVE";
    LicenseStatus["Suspended"] = "SUSPENDED";
    LicenseStatus["Unlicensed"] = "UNLICENSED";
})(LicenseStatus = exports.LicenseStatus || (exports.LicenseStatus = {}));
var LicenseValue;
(function (LicenseValue) {
    LicenseValue["Active"] = "ACTIVE";
    LicenseValue["Inactive"] = "INACTIVE";
    LicenseValue["Trial"] = "TRIAL";
})(LicenseValue = exports.LicenseValue || (exports.LicenseValue = {}));
var LifecycleStage;
(function (LifecycleStage) {
    LifecycleStage["Beta"] = "BETA";
    LifecycleStage["Experimental"] = "EXPERIMENTAL";
    LifecycleStage["Production"] = "PRODUCTION";
    LifecycleStage["Staging"] = "STAGING";
})(LifecycleStage = exports.LifecycleStage || (exports.LifecycleStage = {}));
var LoomMeetingSource;
(function (LoomMeetingSource) {
    LoomMeetingSource["GoogleCalendar"] = "GOOGLE_CALENDAR";
    LoomMeetingSource["MicrosoftOutlook"] = "MICROSOFT_OUTLOOK";
    LoomMeetingSource["Zoom"] = "ZOOM";
})(LoomMeetingSource = exports.LoomMeetingSource || (exports.LoomMeetingSource = {}));
var LoomPhraseRangeType;
(function (LoomPhraseRangeType) {
    LoomPhraseRangeType["Punct"] = "punct";
    LoomPhraseRangeType["Text"] = "text";
})(LoomPhraseRangeType = exports.LoomPhraseRangeType || (exports.LoomPhraseRangeType = {}));
var LoomSpacePrivacyType;
(function (LoomSpacePrivacyType) {
    LoomSpacePrivacyType["Private"] = "private";
    LoomSpacePrivacyType["Workspace"] = "workspace";
})(LoomSpacePrivacyType = exports.LoomSpacePrivacyType || (exports.LoomSpacePrivacyType = {}));
var LoomTranscriptLanguage;
(function (LoomTranscriptLanguage) {
    LoomTranscriptLanguage["Af"] = "af";
    LoomTranscriptLanguage["Am"] = "am";
    LoomTranscriptLanguage["As"] = "as";
    LoomTranscriptLanguage["Ba"] = "ba";
    LoomTranscriptLanguage["Be"] = "be";
    LoomTranscriptLanguage["Bg"] = "bg";
    LoomTranscriptLanguage["Bn"] = "bn";
    LoomTranscriptLanguage["Bo"] = "bo";
    LoomTranscriptLanguage["Br"] = "br";
    LoomTranscriptLanguage["Bs"] = "bs";
    LoomTranscriptLanguage["Ca"] = "ca";
    LoomTranscriptLanguage["Cs"] = "cs";
    LoomTranscriptLanguage["Cy"] = "cy";
    LoomTranscriptLanguage["Da"] = "da";
    LoomTranscriptLanguage["De"] = "de";
    LoomTranscriptLanguage["El"] = "el";
    LoomTranscriptLanguage["En"] = "en";
    LoomTranscriptLanguage["Es"] = "es";
    LoomTranscriptLanguage["Et"] = "et";
    LoomTranscriptLanguage["Eu"] = "eu";
    LoomTranscriptLanguage["Fi"] = "fi";
    LoomTranscriptLanguage["Fo"] = "fo";
    LoomTranscriptLanguage["Fr"] = "fr";
    LoomTranscriptLanguage["Gl"] = "gl";
    LoomTranscriptLanguage["Gu"] = "gu";
    LoomTranscriptLanguage["Ha"] = "ha";
    LoomTranscriptLanguage["Haw"] = "haw";
    LoomTranscriptLanguage["Hi"] = "hi";
    LoomTranscriptLanguage["Hr"] = "hr";
    LoomTranscriptLanguage["Ht"] = "ht";
    LoomTranscriptLanguage["Hu"] = "hu";
    LoomTranscriptLanguage["Hy"] = "hy";
    LoomTranscriptLanguage["Id"] = "id";
    LoomTranscriptLanguage["Is"] = "is";
    LoomTranscriptLanguage["It"] = "it";
    LoomTranscriptLanguage["Ja"] = "ja";
    LoomTranscriptLanguage["Jw"] = "jw";
    LoomTranscriptLanguage["Ka"] = "ka";
    LoomTranscriptLanguage["Kk"] = "kk";
    LoomTranscriptLanguage["Km"] = "km";
    LoomTranscriptLanguage["Kn"] = "kn";
    LoomTranscriptLanguage["Ko"] = "ko";
    LoomTranscriptLanguage["La"] = "la";
    LoomTranscriptLanguage["Lb"] = "lb";
    LoomTranscriptLanguage["Ln"] = "ln";
    LoomTranscriptLanguage["Lo"] = "lo";
    LoomTranscriptLanguage["Lt"] = "lt";
    LoomTranscriptLanguage["Lv"] = "lv";
    LoomTranscriptLanguage["Mg"] = "mg";
    LoomTranscriptLanguage["Mi"] = "mi";
    LoomTranscriptLanguage["Mk"] = "mk";
    LoomTranscriptLanguage["Ml"] = "ml";
    LoomTranscriptLanguage["Mn"] = "mn";
    LoomTranscriptLanguage["Mr"] = "mr";
    LoomTranscriptLanguage["Ms"] = "ms";
    LoomTranscriptLanguage["Mt"] = "mt";
    LoomTranscriptLanguage["My"] = "my";
    LoomTranscriptLanguage["Ne"] = "ne";
    LoomTranscriptLanguage["Nl"] = "nl";
    LoomTranscriptLanguage["Nn"] = "nn";
    LoomTranscriptLanguage["No"] = "no";
    LoomTranscriptLanguage["Oc"] = "oc";
    LoomTranscriptLanguage["Pa"] = "pa";
    LoomTranscriptLanguage["Pl"] = "pl";
    LoomTranscriptLanguage["Ps"] = "ps";
    LoomTranscriptLanguage["Pt"] = "pt";
    LoomTranscriptLanguage["Ro"] = "ro";
    LoomTranscriptLanguage["Ru"] = "ru";
    LoomTranscriptLanguage["Sa"] = "sa";
    LoomTranscriptLanguage["Sd"] = "sd";
    LoomTranscriptLanguage["Si"] = "si";
    LoomTranscriptLanguage["Sk"] = "sk";
    LoomTranscriptLanguage["Sl"] = "sl";
    LoomTranscriptLanguage["Sn"] = "sn";
    LoomTranscriptLanguage["So"] = "so";
    LoomTranscriptLanguage["Sq"] = "sq";
    LoomTranscriptLanguage["Sr"] = "sr";
    LoomTranscriptLanguage["Su"] = "su";
    LoomTranscriptLanguage["Sv"] = "sv";
    LoomTranscriptLanguage["Sw"] = "sw";
    LoomTranscriptLanguage["Ta"] = "ta";
    LoomTranscriptLanguage["Te"] = "te";
    LoomTranscriptLanguage["Tg"] = "tg";
    LoomTranscriptLanguage["Th"] = "th";
    LoomTranscriptLanguage["Tk"] = "tk";
    LoomTranscriptLanguage["Tl"] = "tl";
    LoomTranscriptLanguage["Tr"] = "tr";
    LoomTranscriptLanguage["Tt"] = "tt";
    LoomTranscriptLanguage["Uk"] = "uk";
    LoomTranscriptLanguage["Unknown"] = "unknown";
    LoomTranscriptLanguage["Uz"] = "uz";
    LoomTranscriptLanguage["Vi"] = "vi";
    LoomTranscriptLanguage["Yi"] = "yi";
    LoomTranscriptLanguage["Yo"] = "yo";
    LoomTranscriptLanguage["Zh"] = "zh";
})(LoomTranscriptLanguage = exports.LoomTranscriptLanguage || (exports.LoomTranscriptLanguage = {}));
var LoomUserStatus;
(function (LoomUserStatus) {
    LoomUserStatus["Linked"] = "LINKED";
    LoomUserStatus["LinkedEnterprise"] = "LINKED_ENTERPRISE";
    LoomUserStatus["Mastered"] = "MASTERED";
    LoomUserStatus["NotFound"] = "NOT_FOUND";
})(LoomUserStatus = exports.LoomUserStatus || (exports.LoomUserStatus = {}));
var LpCertSortField;
(function (LpCertSortField) {
    LpCertSortField["ActiveDate"] = "ACTIVE_DATE";
    LpCertSortField["ExpireDate"] = "EXPIRE_DATE";
    LpCertSortField["Id"] = "ID";
    LpCertSortField["ImageUrl"] = "IMAGE_URL";
    LpCertSortField["Name"] = "NAME";
    LpCertSortField["NameAbbr"] = "NAME_ABBR";
    LpCertSortField["PublicUrl"] = "PUBLIC_URL";
    LpCertSortField["Status"] = "STATUS";
    LpCertSortField["Type"] = "TYPE";
})(LpCertSortField = exports.LpCertSortField || (exports.LpCertSortField = {}));
var LpCertStatus;
(function (LpCertStatus) {
    LpCertStatus["Active"] = "ACTIVE";
    LpCertStatus["Expired"] = "EXPIRED";
})(LpCertStatus = exports.LpCertStatus || (exports.LpCertStatus = {}));
var LpCertType;
(function (LpCertType) {
    LpCertType["Badge"] = "BADGE";
    LpCertType["Certification"] = "CERTIFICATION";
    LpCertType["Standing"] = "STANDING";
})(LpCertType = exports.LpCertType || (exports.LpCertType = {}));
var LpCourseSortField;
(function (LpCourseSortField) {
    LpCourseSortField["CompletedDate"] = "COMPLETED_DATE";
    LpCourseSortField["CourseId"] = "COURSE_ID";
    LpCourseSortField["Id"] = "ID";
    LpCourseSortField["Status"] = "STATUS";
    LpCourseSortField["Title"] = "TITLE";
    LpCourseSortField["Url"] = "URL";
})(LpCourseSortField = exports.LpCourseSortField || (exports.LpCourseSortField = {}));
var LpCourseStatus;
(function (LpCourseStatus) {
    LpCourseStatus["Completed"] = "COMPLETED";
    LpCourseStatus["InProgress"] = "IN_PROGRESS";
})(LpCourseStatus = exports.LpCourseStatus || (exports.LpCourseStatus = {}));
var MacroRendererMode;
(function (MacroRendererMode) {
    MacroRendererMode["Editor"] = "EDITOR";
    MacroRendererMode["Pdf"] = "PDF";
    MacroRendererMode["Renderer"] = "RENDERER";
})(MacroRendererMode = exports.MacroRendererMode || (exports.MacroRendererMode = {}));
var MarketplaceAppPaymentModel;
(function (MarketplaceAppPaymentModel) {
    MarketplaceAppPaymentModel["Free"] = "FREE";
    MarketplaceAppPaymentModel["PaidViaAtlassian"] = "PAID_VIA_ATLASSIAN";
    MarketplaceAppPaymentModel["PaidViaPartner"] = "PAID_VIA_PARTNER";
})(MarketplaceAppPaymentModel = exports.MarketplaceAppPaymentModel || (exports.MarketplaceAppPaymentModel = {}));
var MarketplaceAppVersionVisibility;
(function (MarketplaceAppVersionVisibility) {
    MarketplaceAppVersionVisibility["Private"] = "PRIVATE";
    MarketplaceAppVersionVisibility["Public"] = "PUBLIC";
})(MarketplaceAppVersionVisibility = exports.MarketplaceAppVersionVisibility || (exports.MarketplaceAppVersionVisibility = {}));
var MarketplaceBillingCycle;
(function (MarketplaceBillingCycle) {
    MarketplaceBillingCycle["Annual"] = "ANNUAL";
    MarketplaceBillingCycle["Monthly"] = "MONTHLY";
})(MarketplaceBillingCycle = exports.MarketplaceBillingCycle || (exports.MarketplaceBillingCycle = {}));
var MarketplaceCloudFortifiedStatus;
(function (MarketplaceCloudFortifiedStatus) {
    MarketplaceCloudFortifiedStatus["Applied"] = "APPLIED";
    MarketplaceCloudFortifiedStatus["Approved"] = "APPROVED";
    MarketplaceCloudFortifiedStatus["NotAParticipant"] = "NOT_A_PARTICIPANT";
    MarketplaceCloudFortifiedStatus["Rejected"] = "REJECTED";
})(MarketplaceCloudFortifiedStatus = exports.MarketplaceCloudFortifiedStatus || (exports.MarketplaceCloudFortifiedStatus = {}));
var MarketplaceConsoleAsvlLegacyVersionApprovalStatus;
(function (MarketplaceConsoleAsvlLegacyVersionApprovalStatus) {
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Approved"] = "APPROVED";
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Archived"] = "ARCHIVED";
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Deleted"] = "DELETED";
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Rejected"] = "REJECTED";
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Submitted"] = "SUBMITTED";
    MarketplaceConsoleAsvlLegacyVersionApprovalStatus["Uninitiated"] = "UNINITIATED";
})(MarketplaceConsoleAsvlLegacyVersionApprovalStatus = exports.MarketplaceConsoleAsvlLegacyVersionApprovalStatus || (exports.MarketplaceConsoleAsvlLegacyVersionApprovalStatus = {}));
var MarketplaceConsoleAsvlLegacyVersionStatus;
(function (MarketplaceConsoleAsvlLegacyVersionStatus) {
    MarketplaceConsoleAsvlLegacyVersionStatus["Private"] = "PRIVATE";
    MarketplaceConsoleAsvlLegacyVersionStatus["Public"] = "PUBLIC";
})(MarketplaceConsoleAsvlLegacyVersionStatus = exports.MarketplaceConsoleAsvlLegacyVersionStatus || (exports.MarketplaceConsoleAsvlLegacyVersionStatus = {}));
var MarketplaceConsoleAppSoftwareVersionLicenseTypeId;
(function (MarketplaceConsoleAppSoftwareVersionLicenseTypeId) {
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Asl"] = "ASL";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["AtlassianClosedSource"] = "ATLASSIAN_CLOSED_SOURCE";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Bsd"] = "BSD";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Commercial"] = "COMMERCIAL";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["CommercialFree"] = "COMMERCIAL_FREE";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Epl"] = "EPL";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Gpl"] = "GPL";
    MarketplaceConsoleAppSoftwareVersionLicenseTypeId["Lgpl"] = "LGPL";
})(MarketplaceConsoleAppSoftwareVersionLicenseTypeId = exports.MarketplaceConsoleAppSoftwareVersionLicenseTypeId || (exports.MarketplaceConsoleAppSoftwareVersionLicenseTypeId = {}));
var MarketplaceConsoleAppSoftwareVersionState;
(function (MarketplaceConsoleAppSoftwareVersionState) {
    MarketplaceConsoleAppSoftwareVersionState["Active"] = "ACTIVE";
    MarketplaceConsoleAppSoftwareVersionState["Approved"] = "APPROVED";
    MarketplaceConsoleAppSoftwareVersionState["Archived"] = "ARCHIVED";
    MarketplaceConsoleAppSoftwareVersionState["AutoApproved"] = "AUTO_APPROVED";
    MarketplaceConsoleAppSoftwareVersionState["Draft"] = "DRAFT";
    MarketplaceConsoleAppSoftwareVersionState["Rejected"] = "REJECTED";
    MarketplaceConsoleAppSoftwareVersionState["Submitted"] = "SUBMITTED";
})(MarketplaceConsoleAppSoftwareVersionState = exports.MarketplaceConsoleAppSoftwareVersionState || (exports.MarketplaceConsoleAppSoftwareVersionState = {}));
var MarketplaceConsoleCloudComplianceBoundary;
(function (MarketplaceConsoleCloudComplianceBoundary) {
    MarketplaceConsoleCloudComplianceBoundary["Commercial"] = "COMMERCIAL";
    MarketplaceConsoleCloudComplianceBoundary["FedrampModerate"] = "FEDRAMP_MODERATE";
})(MarketplaceConsoleCloudComplianceBoundary = exports.MarketplaceConsoleCloudComplianceBoundary || (exports.MarketplaceConsoleCloudComplianceBoundary = {}));
var MarketplaceConsoleDevSpaceProgram;
(function (MarketplaceConsoleDevSpaceProgram) {
    MarketplaceConsoleDevSpaceProgram["AtlassianParter"] = "ATLASSIAN_PARTER";
    MarketplaceConsoleDevSpaceProgram["FreeLicense"] = "FREE_LICENSE";
    MarketplaceConsoleDevSpaceProgram["MarketplacePartner"] = "MARKETPLACE_PARTNER";
    MarketplaceConsoleDevSpaceProgram["SolutionPartner"] = "SOLUTION_PARTNER";
})(MarketplaceConsoleDevSpaceProgram = exports.MarketplaceConsoleDevSpaceProgram || (exports.MarketplaceConsoleDevSpaceProgram = {}));
var MarketplaceConsoleDevSpaceTier;
(function (MarketplaceConsoleDevSpaceTier) {
    MarketplaceConsoleDevSpaceTier["Gold"] = "GOLD";
    MarketplaceConsoleDevSpaceTier["Platinum"] = "PLATINUM";
    MarketplaceConsoleDevSpaceTier["Silver"] = "SILVER";
})(MarketplaceConsoleDevSpaceTier = exports.MarketplaceConsoleDevSpaceTier || (exports.MarketplaceConsoleDevSpaceTier = {}));
var MarketplaceConsoleEditionType;
(function (MarketplaceConsoleEditionType) {
    MarketplaceConsoleEditionType["Advanced"] = "ADVANCED";
    MarketplaceConsoleEditionType["AdvancedMultiInstance"] = "ADVANCED_MULTI_INSTANCE";
    MarketplaceConsoleEditionType["Standard"] = "STANDARD";
    MarketplaceConsoleEditionType["StandardMultiInstance"] = "STANDARD_MULTI_INSTANCE";
})(MarketplaceConsoleEditionType = exports.MarketplaceConsoleEditionType || (exports.MarketplaceConsoleEditionType = {}));
var MarketplaceConsoleEditionsActivationStatus;
(function (MarketplaceConsoleEditionsActivationStatus) {
    MarketplaceConsoleEditionsActivationStatus["Approved"] = "APPROVED";
    MarketplaceConsoleEditionsActivationStatus["Pending"] = "PENDING";
    MarketplaceConsoleEditionsActivationStatus["Rejected"] = "REJECTED";
    MarketplaceConsoleEditionsActivationStatus["Uninitiated"] = "UNINITIATED";
})(MarketplaceConsoleEditionsActivationStatus = exports.MarketplaceConsoleEditionsActivationStatus || (exports.MarketplaceConsoleEditionsActivationStatus = {}));
var MarketplaceConsoleEditionsGroup;
(function (MarketplaceConsoleEditionsGroup) {
    MarketplaceConsoleEditionsGroup["Default"] = "DEFAULT";
    MarketplaceConsoleEditionsGroup["FedrampModerate"] = "FEDRAMP_MODERATE";
})(MarketplaceConsoleEditionsGroup = exports.MarketplaceConsoleEditionsGroup || (exports.MarketplaceConsoleEditionsGroup = {}));
var MarketplaceConsoleHosting;
(function (MarketplaceConsoleHosting) {
    MarketplaceConsoleHosting["Cloud"] = "CLOUD";
    MarketplaceConsoleHosting["DataCenter"] = "DATA_CENTER";
    MarketplaceConsoleHosting["Server"] = "SERVER";
})(MarketplaceConsoleHosting = exports.MarketplaceConsoleHosting || (exports.MarketplaceConsoleHosting = {}));
var MarketplaceConsoleLegacyMongoPluginHiddenIn;
(function (MarketplaceConsoleLegacyMongoPluginHiddenIn) {
    MarketplaceConsoleLegacyMongoPluginHiddenIn["HiddenInSiteAndAppMarketplace"] = "HIDDEN_IN_SITE_AND_APP_MARKETPLACE";
    MarketplaceConsoleLegacyMongoPluginHiddenIn["HiddenInSiteOnly"] = "HIDDEN_IN_SITE_ONLY";
})(MarketplaceConsoleLegacyMongoPluginHiddenIn = exports.MarketplaceConsoleLegacyMongoPluginHiddenIn || (exports.MarketplaceConsoleLegacyMongoPluginHiddenIn = {}));
var MarketplaceConsoleLegacyMongoStatus;
(function (MarketplaceConsoleLegacyMongoStatus) {
    MarketplaceConsoleLegacyMongoStatus["Notassigned"] = "NOTASSIGNED";
    MarketplaceConsoleLegacyMongoStatus["Private"] = "PRIVATE";
    MarketplaceConsoleLegacyMongoStatus["Public"] = "PUBLIC";
    MarketplaceConsoleLegacyMongoStatus["Readytolaunch"] = "READYTOLAUNCH";
    MarketplaceConsoleLegacyMongoStatus["Rejected"] = "REJECTED";
    MarketplaceConsoleLegacyMongoStatus["Submitted"] = "SUBMITTED";
})(MarketplaceConsoleLegacyMongoStatus = exports.MarketplaceConsoleLegacyMongoStatus || (exports.MarketplaceConsoleLegacyMongoStatus = {}));
var MarketplaceConsoleOfferingStatus;
(function (MarketplaceConsoleOfferingStatus) {
    MarketplaceConsoleOfferingStatus["Active"] = "ACTIVE";
    MarketplaceConsoleOfferingStatus["AtNotice"] = "AT_NOTICE";
    MarketplaceConsoleOfferingStatus["Draft"] = "DRAFT";
    MarketplaceConsoleOfferingStatus["Expired"] = "EXPIRED";
})(MarketplaceConsoleOfferingStatus = exports.MarketplaceConsoleOfferingStatus || (exports.MarketplaceConsoleOfferingStatus = {}));
var MarketplaceConsoleParentSoftwareState;
(function (MarketplaceConsoleParentSoftwareState) {
    MarketplaceConsoleParentSoftwareState["Active"] = "ACTIVE";
    MarketplaceConsoleParentSoftwareState["Archived"] = "ARCHIVED";
    MarketplaceConsoleParentSoftwareState["Draft"] = "DRAFT";
})(MarketplaceConsoleParentSoftwareState = exports.MarketplaceConsoleParentSoftwareState || (exports.MarketplaceConsoleParentSoftwareState = {}));
var MarketplaceConsolePaymentModel;
(function (MarketplaceConsolePaymentModel) {
    MarketplaceConsolePaymentModel["Free"] = "FREE";
    MarketplaceConsolePaymentModel["PaidViaAtlassian"] = "PAID_VIA_ATLASSIAN";
    MarketplaceConsolePaymentModel["PaidViaVendor"] = "PAID_VIA_VENDOR";
})(MarketplaceConsolePaymentModel = exports.MarketplaceConsolePaymentModel || (exports.MarketplaceConsolePaymentModel = {}));
var MarketplaceConsolePluginFrameworkType;
(function (MarketplaceConsolePluginFrameworkType) {
    MarketplaceConsolePluginFrameworkType["P1"] = "P1";
    MarketplaceConsolePluginFrameworkType["P2"] = "P2";
})(MarketplaceConsolePluginFrameworkType = exports.MarketplaceConsolePluginFrameworkType || (exports.MarketplaceConsolePluginFrameworkType = {}));
var MarketplaceConsolePricingCurrency;
(function (MarketplaceConsolePricingCurrency) {
    MarketplaceConsolePricingCurrency["Jpy"] = "JPY";
    MarketplaceConsolePricingCurrency["Usd"] = "USD";
})(MarketplaceConsolePricingCurrency = exports.MarketplaceConsolePricingCurrency || (exports.MarketplaceConsolePricingCurrency = {}));
var MarketplaceConsolePricingPlanStatus;
(function (MarketplaceConsolePricingPlanStatus) {
    MarketplaceConsolePricingPlanStatus["AtNotice"] = "AT_NOTICE";
    MarketplaceConsolePricingPlanStatus["Draft"] = "DRAFT";
    MarketplaceConsolePricingPlanStatus["Live"] = "LIVE";
    MarketplaceConsolePricingPlanStatus["Pending"] = "PENDING";
})(MarketplaceConsolePricingPlanStatus = exports.MarketplaceConsolePricingPlanStatus || (exports.MarketplaceConsolePricingPlanStatus = {}));
var MarketplaceConsoleVersionType;
(function (MarketplaceConsoleVersionType) {
    MarketplaceConsoleVersionType["Private"] = "PRIVATE";
    MarketplaceConsoleVersionType["Public"] = "PUBLIC";
})(MarketplaceConsoleVersionType = exports.MarketplaceConsoleVersionType || (exports.MarketplaceConsoleVersionType = {}));
var MarketplaceEntityStatus;
(function (MarketplaceEntityStatus) {
    MarketplaceEntityStatus["Active"] = "ACTIVE";
    MarketplaceEntityStatus["Archived"] = "ARCHIVED";
})(MarketplaceEntityStatus = exports.MarketplaceEntityStatus || (exports.MarketplaceEntityStatus = {}));
var MarketplaceListingStatus;
(function (MarketplaceListingStatus) {
    MarketplaceListingStatus["Private"] = "PRIVATE";
    MarketplaceListingStatus["Public"] = "PUBLIC";
    MarketplaceListingStatus["ReadyToLaunch"] = "READY_TO_LAUNCH";
    MarketplaceListingStatus["Rejected"] = "REJECTED";
    MarketplaceListingStatus["Submitted"] = "SUBMITTED";
})(MarketplaceListingStatus = exports.MarketplaceListingStatus || (exports.MarketplaceListingStatus = {}));
var MarketplaceLocation;
(function (MarketplaceLocation) {
    MarketplaceLocation["InProduct"] = "IN_PRODUCT";
    MarketplaceLocation["Website"] = "WEBSITE";
})(MarketplaceLocation = exports.MarketplaceLocation || (exports.MarketplaceLocation = {}));
var MarketplacePartnerSupportHolidayFrequency;
(function (MarketplacePartnerSupportHolidayFrequency) {
    MarketplacePartnerSupportHolidayFrequency["Annual"] = "ANNUAL";
    MarketplacePartnerSupportHolidayFrequency["OneTime"] = "ONE_TIME";
})(MarketplacePartnerSupportHolidayFrequency = exports.MarketplacePartnerSupportHolidayFrequency || (exports.MarketplacePartnerSupportHolidayFrequency = {}));
var MarketplacePartnerTierType;
(function (MarketplacePartnerTierType) {
    MarketplacePartnerTierType["Gold"] = "GOLD";
    MarketplacePartnerTierType["Platinum"] = "PLATINUM";
    MarketplacePartnerTierType["Silver"] = "SILVER";
})(MarketplacePartnerTierType = exports.MarketplacePartnerTierType || (exports.MarketplacePartnerTierType = {}));
var MarketplacePartnerType;
(function (MarketplacePartnerType) {
    MarketplacePartnerType["AtlassianInternal"] = "ATLASSIAN_INTERNAL";
})(MarketplacePartnerType = exports.MarketplacePartnerType || (exports.MarketplacePartnerType = {}));
var MarketplacePricingPlanStatus;
(function (MarketplacePricingPlanStatus) {
    MarketplacePricingPlanStatus["Draft"] = "DRAFT";
    MarketplacePricingPlanStatus["Live"] = "LIVE";
    MarketplacePricingPlanStatus["Pending"] = "PENDING";
})(MarketplacePricingPlanStatus = exports.MarketplacePricingPlanStatus || (exports.MarketplacePricingPlanStatus = {}));
var MarketplacePricingTierMode;
(function (MarketplacePricingTierMode) {
    MarketplacePricingTierMode["Graduated"] = "GRADUATED";
    MarketplacePricingTierMode["Volume"] = "VOLUME";
})(MarketplacePricingTierMode = exports.MarketplacePricingTierMode || (exports.MarketplacePricingTierMode = {}));
var MarketplacePricingTierPolicy;
(function (MarketplacePricingTierPolicy) {
    MarketplacePricingTierPolicy["Block"] = "BLOCK";
    MarketplacePricingTierPolicy["PerUnit"] = "PER_UNIT";
})(MarketplacePricingTierPolicy = exports.MarketplacePricingTierPolicy || (exports.MarketplacePricingTierPolicy = {}));
var MarketplacePricingTierType;
(function (MarketplacePricingTierType) {
    MarketplacePricingTierType["RemoteAgentTiered"] = "REMOTE_AGENT_TIERED";
    MarketplacePricingTierType["UserTiered"] = "USER_TIERED";
})(MarketplacePricingTierType = exports.MarketplacePricingTierType || (exports.MarketplacePricingTierType = {}));
var MarketplaceProgramStatus;
(function (MarketplaceProgramStatus) {
    MarketplaceProgramStatus["Applied"] = "APPLIED";
    MarketplaceProgramStatus["Approved"] = "APPROVED";
    MarketplaceProgramStatus["NotAParticipant"] = "NOT_A_PARTICIPANT";
    MarketplaceProgramStatus["Rejected"] = "REJECTED";
})(MarketplaceProgramStatus = exports.MarketplaceProgramStatus || (exports.MarketplaceProgramStatus = {}));
var MarketplaceStoreAtlassianProductHostingType;
(function (MarketplaceStoreAtlassianProductHostingType) {
    MarketplaceStoreAtlassianProductHostingType["Cloud"] = "CLOUD";
    MarketplaceStoreAtlassianProductHostingType["Datacenter"] = "DATACENTER";
    MarketplaceStoreAtlassianProductHostingType["Server"] = "SERVER";
})(MarketplaceStoreAtlassianProductHostingType = exports.MarketplaceStoreAtlassianProductHostingType || (exports.MarketplaceStoreAtlassianProductHostingType = {}));
var MarketplaceStoreBillingSystem;
(function (MarketplaceStoreBillingSystem) {
    MarketplaceStoreBillingSystem["Ccp"] = "CCP";
    MarketplaceStoreBillingSystem["Hams"] = "HAMS";
})(MarketplaceStoreBillingSystem = exports.MarketplaceStoreBillingSystem || (exports.MarketplaceStoreBillingSystem = {}));
var MarketplaceStoreDeveloperSpaceStatus;
(function (MarketplaceStoreDeveloperSpaceStatus) {
    MarketplaceStoreDeveloperSpaceStatus["Active"] = "ACTIVE";
    MarketplaceStoreDeveloperSpaceStatus["Archived"] = "ARCHIVED";
    MarketplaceStoreDeveloperSpaceStatus["Inactive"] = "INACTIVE";
})(MarketplaceStoreDeveloperSpaceStatus = exports.MarketplaceStoreDeveloperSpaceStatus || (exports.MarketplaceStoreDeveloperSpaceStatus = {}));
var MarketplaceStoreEditionType;
(function (MarketplaceStoreEditionType) {
    MarketplaceStoreEditionType["Advanced"] = "ADVANCED";
    MarketplaceStoreEditionType["Free"] = "FREE";
    MarketplaceStoreEditionType["Standard"] = "STANDARD";
})(MarketplaceStoreEditionType = exports.MarketplaceStoreEditionType || (exports.MarketplaceStoreEditionType = {}));
var MarketplaceStoreEnterpriseProduct;
(function (MarketplaceStoreEnterpriseProduct) {
    MarketplaceStoreEnterpriseProduct["Confluence"] = "CONFLUENCE";
    MarketplaceStoreEnterpriseProduct["Jira"] = "JIRA";
})(MarketplaceStoreEnterpriseProduct = exports.MarketplaceStoreEnterpriseProduct || (exports.MarketplaceStoreEnterpriseProduct = {}));
var MarketplaceStoreHomePageHighlightedSectionVariation;
(function (MarketplaceStoreHomePageHighlightedSectionVariation) {
    MarketplaceStoreHomePageHighlightedSectionVariation["Prominent"] = "PROMINENT";
})(MarketplaceStoreHomePageHighlightedSectionVariation = exports.MarketplaceStoreHomePageHighlightedSectionVariation || (exports.MarketplaceStoreHomePageHighlightedSectionVariation = {}));
var MarketplaceStoreHostInstanceType;
(function (MarketplaceStoreHostInstanceType) {
    MarketplaceStoreHostInstanceType["Production"] = "PRODUCTION";
    MarketplaceStoreHostInstanceType["Sandbox"] = "SANDBOX";
})(MarketplaceStoreHostInstanceType = exports.MarketplaceStoreHostInstanceType || (exports.MarketplaceStoreHostInstanceType = {}));
var MarketplaceStoreInstallAppStatus;
(function (MarketplaceStoreInstallAppStatus) {
    MarketplaceStoreInstallAppStatus["InProgress"] = "IN_PROGRESS";
    MarketplaceStoreInstallAppStatus["Pending"] = "PENDING";
    MarketplaceStoreInstallAppStatus["ProvisioningFailure"] = "PROVISIONING_FAILURE";
    MarketplaceStoreInstallAppStatus["ProvisioningSuccessInstallPending"] = "PROVISIONING_SUCCESS_INSTALL_PENDING";
    MarketplaceStoreInstallAppStatus["Success"] = "SUCCESS";
    MarketplaceStoreInstallAppStatus["TimedOut"] = "TIMED_OUT";
})(MarketplaceStoreInstallAppStatus = exports.MarketplaceStoreInstallAppStatus || (exports.MarketplaceStoreInstallAppStatus = {}));
var MarketplaceStoreInstallationTargetProduct;
(function (MarketplaceStoreInstallationTargetProduct) {
    MarketplaceStoreInstallationTargetProduct["Compass"] = "COMPASS";
    MarketplaceStoreInstallationTargetProduct["Confluence"] = "CONFLUENCE";
    MarketplaceStoreInstallationTargetProduct["Jira"] = "JIRA";
})(MarketplaceStoreInstallationTargetProduct = exports.MarketplaceStoreInstallationTargetProduct || (exports.MarketplaceStoreInstallationTargetProduct = {}));
var MarketplaceStoreInstalledAppManageLinkType;
(function (MarketplaceStoreInstalledAppManageLinkType) {
    MarketplaceStoreInstalledAppManageLinkType["Configure"] = "CONFIGURE";
    MarketplaceStoreInstalledAppManageLinkType["GetStarted"] = "GET_STARTED";
    MarketplaceStoreInstalledAppManageLinkType["Manage"] = "MANAGE";
})(MarketplaceStoreInstalledAppManageLinkType = exports.MarketplaceStoreInstalledAppManageLinkType || (exports.MarketplaceStoreInstalledAppManageLinkType = {}));
var MarketplaceStorePartnerEnrollmentProgram;
(function (MarketplaceStorePartnerEnrollmentProgram) {
    MarketplaceStorePartnerEnrollmentProgram["MarketplacePartner"] = "MARKETPLACE_PARTNER";
    MarketplaceStorePartnerEnrollmentProgram["SolutionPartner"] = "SOLUTION_PARTNER";
})(MarketplaceStorePartnerEnrollmentProgram = exports.MarketplaceStorePartnerEnrollmentProgram || (exports.MarketplaceStorePartnerEnrollmentProgram = {}));
var MarketplaceStorePartnerEnrollmentProgramValue;
(function (MarketplaceStorePartnerEnrollmentProgramValue) {
    MarketplaceStorePartnerEnrollmentProgramValue["Gold"] = "GOLD";
    MarketplaceStorePartnerEnrollmentProgramValue["Platinum"] = "PLATINUM";
    MarketplaceStorePartnerEnrollmentProgramValue["Silver"] = "SILVER";
})(MarketplaceStorePartnerEnrollmentProgramValue = exports.MarketplaceStorePartnerEnrollmentProgramValue || (exports.MarketplaceStorePartnerEnrollmentProgramValue = {}));
var MarketplaceStorePartnerSupportAvailabilityDay;
(function (MarketplaceStorePartnerSupportAvailabilityDay) {
    MarketplaceStorePartnerSupportAvailabilityDay["Friday"] = "FRIDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Monday"] = "MONDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Saturday"] = "SATURDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Sunday"] = "SUNDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Thursday"] = "THURSDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Tuesday"] = "TUESDAY";
    MarketplaceStorePartnerSupportAvailabilityDay["Wednesday"] = "WEDNESDAY";
})(MarketplaceStorePartnerSupportAvailabilityDay = exports.MarketplaceStorePartnerSupportAvailabilityDay || (exports.MarketplaceStorePartnerSupportAvailabilityDay = {}));
var MarketplaceStorePricingCurrency;
(function (MarketplaceStorePricingCurrency) {
    MarketplaceStorePricingCurrency["Jpy"] = "JPY";
    MarketplaceStorePricingCurrency["Usd"] = "USD";
})(MarketplaceStorePricingCurrency = exports.MarketplaceStorePricingCurrency || (exports.MarketplaceStorePricingCurrency = {}));
var MarketplaceStoreReviewsSorting;
(function (MarketplaceStoreReviewsSorting) {
    MarketplaceStoreReviewsSorting["Helpful"] = "HELPFUL";
    MarketplaceStoreReviewsSorting["Recent"] = "RECENT";
})(MarketplaceStoreReviewsSorting = exports.MarketplaceStoreReviewsSorting || (exports.MarketplaceStoreReviewsSorting = {}));
var MembershipRole;
(function (MembershipRole) {
    MembershipRole["Admin"] = "ADMIN";
    MembershipRole["Regular"] = "REGULAR";
})(MembershipRole = exports.MembershipRole || (exports.MembershipRole = {}));
var MembershipSetting;
(function (MembershipSetting) {
    MembershipSetting["MemberInvite"] = "MEMBER_INVITE";
    MembershipSetting["Open"] = "OPEN";
})(MembershipSetting = exports.MembershipSetting || (exports.MembershipSetting = {}));
var MembershipState;
(function (MembershipState) {
    MembershipState["Alumni"] = "ALUMNI";
    MembershipState["FullMember"] = "FULL_MEMBER";
    MembershipState["Invited"] = "INVITED";
    MembershipState["RequestingToJoin"] = "REQUESTING_TO_JOIN";
})(MembershipState = exports.MembershipState || (exports.MembershipState = {}));
var MercuryChangeProposalSortField;
(function (MercuryChangeProposalSortField) {
    MercuryChangeProposalSortField["Name"] = "NAME";
})(MercuryChangeProposalSortField = exports.MercuryChangeProposalSortField || (exports.MercuryChangeProposalSortField = {}));
var MercuryChangeProposalsViewSortField;
(function (MercuryChangeProposalsViewSortField) {
    MercuryChangeProposalsViewSortField["Name"] = "NAME";
    MercuryChangeProposalsViewSortField["UpdatedDate"] = "UPDATED_DATE";
})(MercuryChangeProposalsViewSortField = exports.MercuryChangeProposalsViewSortField || (exports.MercuryChangeProposalsViewSortField = {}));
var MercuryChangeSortField;
(function (MercuryChangeSortField) {
    MercuryChangeSortField["Type"] = "TYPE";
})(MercuryChangeSortField = exports.MercuryChangeSortField || (exports.MercuryChangeSortField = {}));
var MercuryChangeType;
(function (MercuryChangeType) {
    MercuryChangeType["ArchiveFocusArea"] = "ARCHIVE_FOCUS_AREA";
    MercuryChangeType["ChangeParentFocusArea"] = "CHANGE_PARENT_FOCUS_AREA";
    MercuryChangeType["CreateFocusArea"] = "CREATE_FOCUS_AREA";
    MercuryChangeType["MoveFunds"] = "MOVE_FUNDS";
    MercuryChangeType["MovePositions"] = "MOVE_POSITIONS";
    MercuryChangeType["PositionAllocation"] = "POSITION_ALLOCATION";
    MercuryChangeType["RenameFocusArea"] = "RENAME_FOCUS_AREA";
    MercuryChangeType["RequestFunds"] = "REQUEST_FUNDS";
    MercuryChangeType["RequestPositions"] = "REQUEST_POSITIONS";
})(MercuryChangeType = exports.MercuryChangeType || (exports.MercuryChangeType = {}));
var MercuryCostSubtypeSortField;
(function (MercuryCostSubtypeSortField) {
    MercuryCostSubtypeSortField["Key"] = "KEY";
    MercuryCostSubtypeSortField["Name"] = "NAME";
})(MercuryCostSubtypeSortField = exports.MercuryCostSubtypeSortField || (exports.MercuryCostSubtypeSortField = {}));
var MercuryCostType;
(function (MercuryCostType) {
    MercuryCostType["Labor"] = "LABOR";
    MercuryCostType["NonLabor"] = "NON_LABOR";
})(MercuryCostType = exports.MercuryCostType || (exports.MercuryCostType = {}));
var MercuryEntityType;
(function (MercuryEntityType) {
    MercuryEntityType["ChangeProposal"] = "CHANGE_PROPOSAL";
    MercuryEntityType["Comment"] = "COMMENT";
    MercuryEntityType["FocusArea"] = "FOCUS_AREA";
    MercuryEntityType["FocusAreaStatusUpdate"] = "FOCUS_AREA_STATUS_UPDATE";
    MercuryEntityType["Program"] = "PROGRAM";
    MercuryEntityType["ProgramStatusUpdate"] = "PROGRAM_STATUS_UPDATE";
    MercuryEntityType["StrategicEvent"] = "STRATEGIC_EVENT";
})(MercuryEntityType = exports.MercuryEntityType || (exports.MercuryEntityType = {}));
var MercuryEventType;
(function (MercuryEventType) {
    MercuryEventType["Archive"] = "ARCHIVE";
    MercuryEventType["Create"] = "CREATE";
    MercuryEventType["CreateUpdate"] = "CREATE_UPDATE";
    MercuryEventType["Delete"] = "DELETE";
    MercuryEventType["DeleteUpdate"] = "DELETE_UPDATE";
    MercuryEventType["EditUpdate"] = "EDIT_UPDATE";
    MercuryEventType["Export"] = "EXPORT";
    MercuryEventType["Import"] = "IMPORT";
    MercuryEventType["Link"] = "LINK";
    MercuryEventType["Unarchive"] = "UNARCHIVE";
    MercuryEventType["Unlink"] = "UNLINK";
    MercuryEventType["Update"] = "UPDATE";
})(MercuryEventType = exports.MercuryEventType || (exports.MercuryEventType = {}));
var MercuryFocusAreaHealthColor;
(function (MercuryFocusAreaHealthColor) {
    MercuryFocusAreaHealthColor["Green"] = "GREEN";
    MercuryFocusAreaHealthColor["Red"] = "RED";
    MercuryFocusAreaHealthColor["Yellow"] = "YELLOW";
})(MercuryFocusAreaHealthColor = exports.MercuryFocusAreaHealthColor || (exports.MercuryFocusAreaHealthColor = {}));
var MercuryFocusAreaHierarchySortField;
(function (MercuryFocusAreaHierarchySortField) {
    MercuryFocusAreaHierarchySortField["HierarchyLevel"] = "HIERARCHY_LEVEL";
    MercuryFocusAreaHierarchySortField["Name"] = "NAME";
})(MercuryFocusAreaHierarchySortField = exports.MercuryFocusAreaHierarchySortField || (exports.MercuryFocusAreaHierarchySortField = {}));
var MercuryFocusAreaRankingValidationErrorCode;
(function (MercuryFocusAreaRankingValidationErrorCode) {
    MercuryFocusAreaRankingValidationErrorCode["FaRanked"] = "FA_RANKED";
    MercuryFocusAreaRankingValidationErrorCode["FaTypeMismatch"] = "FA_TYPE_MISMATCH";
})(MercuryFocusAreaRankingValidationErrorCode = exports.MercuryFocusAreaRankingValidationErrorCode || (exports.MercuryFocusAreaRankingValidationErrorCode = {}));
var MercuryFocusAreaSortField;
(function (MercuryFocusAreaSortField) {
    MercuryFocusAreaSortField["Budget"] = "BUDGET";
    MercuryFocusAreaSortField["FocusAreaType"] = "FOCUS_AREA_TYPE";
    MercuryFocusAreaSortField["HasParent"] = "HAS_PARENT";
    MercuryFocusAreaSortField["Health"] = "HEALTH";
    MercuryFocusAreaSortField["HierarchyLevel"] = "HIERARCHY_LEVEL";
    MercuryFocusAreaSortField["LastUpdated"] = "LAST_UPDATED";
    MercuryFocusAreaSortField["Name"] = "NAME";
    MercuryFocusAreaSortField["Rank"] = "RANK";
    MercuryFocusAreaSortField["Spend"] = "SPEND";
    MercuryFocusAreaSortField["Starred"] = "STARRED";
    MercuryFocusAreaSortField["Status"] = "STATUS";
    MercuryFocusAreaSortField["TargetDate"] = "TARGET_DATE";
    MercuryFocusAreaSortField["Watching"] = "WATCHING";
})(MercuryFocusAreaSortField = exports.MercuryFocusAreaSortField || (exports.MercuryFocusAreaSortField = {}));
var MercuryJiraAlignProjectTypeKey;
(function (MercuryJiraAlignProjectTypeKey) {
    MercuryJiraAlignProjectTypeKey["JiraAlignCapability"] = "JIRA_ALIGN_CAPABILITY";
    MercuryJiraAlignProjectTypeKey["JiraAlignEpic"] = "JIRA_ALIGN_EPIC";
    MercuryJiraAlignProjectTypeKey["JiraAlignTheme"] = "JIRA_ALIGN_THEME";
})(MercuryJiraAlignProjectTypeKey = exports.MercuryJiraAlignProjectTypeKey || (exports.MercuryJiraAlignProjectTypeKey = {}));
var MercuryProjectStatusColor;
(function (MercuryProjectStatusColor) {
    MercuryProjectStatusColor["Blue"] = "BLUE";
    MercuryProjectStatusColor["Gray"] = "GRAY";
    MercuryProjectStatusColor["Green"] = "GREEN";
    MercuryProjectStatusColor["Red"] = "RED";
    MercuryProjectStatusColor["Yellow"] = "YELLOW";
})(MercuryProjectStatusColor = exports.MercuryProjectStatusColor || (exports.MercuryProjectStatusColor = {}));
var MercuryProjectTargetDateType;
(function (MercuryProjectTargetDateType) {
    MercuryProjectTargetDateType["Day"] = "DAY";
    MercuryProjectTargetDateType["Month"] = "MONTH";
    MercuryProjectTargetDateType["Quarter"] = "QUARTER";
})(MercuryProjectTargetDateType = exports.MercuryProjectTargetDateType || (exports.MercuryProjectTargetDateType = {}));
var MercuryProviderConfigurationStatus;
(function (MercuryProviderConfigurationStatus) {
    MercuryProviderConfigurationStatus["Connected"] = "CONNECTED";
    MercuryProviderConfigurationStatus["SignUp"] = "SIGN_UP";
})(MercuryProviderConfigurationStatus = exports.MercuryProviderConfigurationStatus || (exports.MercuryProviderConfigurationStatus = {}));
var MercuryProviderWorkErrorType;
(function (MercuryProviderWorkErrorType) {
    MercuryProviderWorkErrorType["Invalid"] = "INVALID";
    MercuryProviderWorkErrorType["NotFound"] = "NOT_FOUND";
    MercuryProviderWorkErrorType["NoPermissions"] = "NO_PERMISSIONS";
})(MercuryProviderWorkErrorType = exports.MercuryProviderWorkErrorType || (exports.MercuryProviderWorkErrorType = {}));
var MercuryProviderWorkStatusColor;
(function (MercuryProviderWorkStatusColor) {
    MercuryProviderWorkStatusColor["Blue"] = "BLUE";
    MercuryProviderWorkStatusColor["Gray"] = "GRAY";
    MercuryProviderWorkStatusColor["Green"] = "GREEN";
    MercuryProviderWorkStatusColor["Red"] = "RED";
    MercuryProviderWorkStatusColor["Yellow"] = "YELLOW";
})(MercuryProviderWorkStatusColor = exports.MercuryProviderWorkStatusColor || (exports.MercuryProviderWorkStatusColor = {}));
var MercuryProviderWorkTargetDateType;
(function (MercuryProviderWorkTargetDateType) {
    MercuryProviderWorkTargetDateType["Day"] = "DAY";
    MercuryProviderWorkTargetDateType["Month"] = "MONTH";
    MercuryProviderWorkTargetDateType["Quarter"] = "QUARTER";
})(MercuryProviderWorkTargetDateType = exports.MercuryProviderWorkTargetDateType || (exports.MercuryProviderWorkTargetDateType = {}));
var MercuryStatusColor;
(function (MercuryStatusColor) {
    MercuryStatusColor["Blue"] = "BLUE";
    MercuryStatusColor["Gray"] = "GRAY";
    MercuryStatusColor["Green"] = "GREEN";
    MercuryStatusColor["Red"] = "RED";
    MercuryStatusColor["Yellow"] = "YELLOW";
})(MercuryStatusColor = exports.MercuryStatusColor || (exports.MercuryStatusColor = {}));
var MercuryStrategicEventSortField;
(function (MercuryStrategicEventSortField) {
    MercuryStrategicEventSortField["Name"] = "NAME";
    MercuryStrategicEventSortField["Status"] = "STATUS";
    MercuryStrategicEventSortField["TargetDate"] = "TARGET_DATE";
})(MercuryStrategicEventSortField = exports.MercuryStrategicEventSortField || (exports.MercuryStrategicEventSortField = {}));
var MercuryTargetDateType;
(function (MercuryTargetDateType) {
    MercuryTargetDateType["Day"] = "DAY";
    MercuryTargetDateType["Month"] = "MONTH";
    MercuryTargetDateType["Quarter"] = "QUARTER";
})(MercuryTargetDateType = exports.MercuryTargetDateType || (exports.MercuryTargetDateType = {}));
var MercuryViewType;
(function (MercuryViewType) {
    MercuryViewType["HierarchyView"] = "HIERARCHY_VIEW";
    MercuryViewType["RankingView"] = "RANKING_VIEW";
})(MercuryViewType = exports.MercuryViewType || (exports.MercuryViewType = {}));
var MercuryWorkTargetDateType;
(function (MercuryWorkTargetDateType) {
    MercuryWorkTargetDateType["Day"] = "DAY";
    MercuryWorkTargetDateType["Month"] = "MONTH";
    MercuryWorkTargetDateType["Quarter"] = "QUARTER";
})(MercuryWorkTargetDateType = exports.MercuryWorkTargetDateType || (exports.MercuryWorkTargetDateType = {}));
var MigrationEventStatus;
(function (MigrationEventStatus) {
    MigrationEventStatus["Cancelled"] = "CANCELLED";
    MigrationEventStatus["Cancelling"] = "CANCELLING";
    MigrationEventStatus["Failed"] = "FAILED";
    MigrationEventStatus["Incomplete"] = "INCOMPLETE";
    MigrationEventStatus["InProgress"] = "IN_PROGRESS";
    MigrationEventStatus["Paused"] = "PAUSED";
    MigrationEventStatus["Ready"] = "READY";
    MigrationEventStatus["Skipped"] = "SKIPPED";
    MigrationEventStatus["Success"] = "SUCCESS";
    MigrationEventStatus["TimedOut"] = "TIMED_OUT";
})(MigrationEventStatus = exports.MigrationEventStatus || (exports.MigrationEventStatus = {}));
var MigrationEventType;
(function (MigrationEventType) {
    MigrationEventType["Container"] = "CONTAINER";
    MigrationEventType["Migration"] = "MIGRATION";
    MigrationEventType["Transfer"] = "TRANSFER";
})(MigrationEventType = exports.MigrationEventType || (exports.MigrationEventType = {}));
var MissionControlFeatureDiscoverySuggestion;
(function (MissionControlFeatureDiscoverySuggestion) {
    MissionControlFeatureDiscoverySuggestion["SpaceManager"] = "SPACE_MANAGER";
    MissionControlFeatureDiscoverySuggestion["SpaceReports"] = "SPACE_REPORTS";
    MissionControlFeatureDiscoverySuggestion["UserAccess"] = "USER_ACCESS";
})(MissionControlFeatureDiscoverySuggestion = exports.MissionControlFeatureDiscoverySuggestion || (exports.MissionControlFeatureDiscoverySuggestion = {}));
var MissionControlMetricSuggestion;
(function (MissionControlMetricSuggestion) {
    MissionControlMetricSuggestion["DeactivatedPageOwners"] = "DEACTIVATED_PAGE_OWNERS";
    MissionControlMetricSuggestion["InactivePages"] = "INACTIVE_PAGES";
    MissionControlMetricSuggestion["UnassignedGuests"] = "UNASSIGNED_GUESTS";
})(MissionControlMetricSuggestion = exports.MissionControlMetricSuggestion || (exports.MissionControlMetricSuggestion = {}));
var MobilePlatform;
(function (MobilePlatform) {
    MobilePlatform["Android"] = "ANDROID";
    MobilePlatform["Ios"] = "IOS";
})(MobilePlatform = exports.MobilePlatform || (exports.MobilePlatform = {}));
var NadelHydrationTemplate;
(function (NadelHydrationTemplate) {
    NadelHydrationTemplate["NadelPlaceholder"] = "NADEL_PLACEHOLDER";
})(NadelHydrationTemplate = exports.NadelHydrationTemplate || (exports.NadelHydrationTemplate = {}));
var NlpDisclaimer;
(function (NlpDisclaimer) {
    NlpDisclaimer["WhoQuestion"] = "WHO_QUESTION";
})(NlpDisclaimer = exports.NlpDisclaimer || (exports.NlpDisclaimer = {}));
var NlpErrorState;
(function (NlpErrorState) {
    NlpErrorState["AcceptableUseViolations"] = "ACCEPTABLE_USE_VIOLATIONS";
    NlpErrorState["AiDisabled"] = "AI_DISABLED";
    NlpErrorState["NoAnswer"] = "NO_ANSWER";
    NlpErrorState["NoAnswerHydration"] = "NO_ANSWER_HYDRATION";
    NlpErrorState["NoAnswerKeywords"] = "NO_ANSWER_KEYWORDS";
    NlpErrorState["NoAnswerOpenAiResponseErr"] = "NO_ANSWER_OPEN_AI_RESPONSE_ERR";
    NlpErrorState["NoAnswerRelevantContent"] = "NO_ANSWER_RELEVANT_CONTENT";
    NlpErrorState["NoAnswerSearchResults"] = "NO_ANSWER_SEARCH_RESULTS";
    NlpErrorState["NoAnswerWhoQuestion"] = "NO_ANSWER_WHO_QUESTION";
    NlpErrorState["OpenaiRateLimitUserAbuse"] = "OPENAI_RATE_LIMIT_USER_ABUSE";
    NlpErrorState["SubjectiveQuery"] = "SUBJECTIVE_QUERY";
})(NlpErrorState = exports.NlpErrorState || (exports.NlpErrorState = {}));
var NlpGetKeywordsTextFormat;
(function (NlpGetKeywordsTextFormat) {
    NlpGetKeywordsTextFormat["Adf"] = "ADF";
    NlpGetKeywordsTextFormat["PlainText"] = "PLAIN_TEXT";
})(NlpGetKeywordsTextFormat = exports.NlpGetKeywordsTextFormat || (exports.NlpGetKeywordsTextFormat = {}));
var NlpSearchResultFormat;
(function (NlpSearchResultFormat) {
    NlpSearchResultFormat["Adf"] = "ADF";
    NlpSearchResultFormat["Json"] = "JSON";
    NlpSearchResultFormat["Markdown"] = "MARKDOWN";
    NlpSearchResultFormat["PlainText"] = "PLAIN_TEXT";
})(NlpSearchResultFormat = exports.NlpSearchResultFormat || (exports.NlpSearchResultFormat = {}));
var NlpSearchResultType;
(function (NlpSearchResultType) {
    NlpSearchResultType["Blogpost"] = "blogpost";
    NlpSearchResultType["Page"] = "page";
    NlpSearchResultType["User"] = "user";
})(NlpSearchResultType = exports.NlpSearchResultType || (exports.NlpSearchResultType = {}));
var NotesByDateLastModifiedOrder;
(function (NotesByDateLastModifiedOrder) {
    NotesByDateLastModifiedOrder["DateLastModified"] = "DATE_LAST_MODIFIED";
})(NotesByDateLastModifiedOrder = exports.NotesByDateLastModifiedOrder || (exports.NotesByDateLastModifiedOrder = {}));
var NotesContentType;
(function (NotesContentType) {
    NotesContentType["Livedoc"] = "LIVEDOC";
    NotesContentType["Page"] = "PAGE";
})(NotesContentType = exports.NotesContentType || (exports.NotesContentType = {}));
var NotesProduct;
(function (NotesProduct) {
    NotesProduct["Confluence"] = "CONFLUENCE";
})(NotesProduct = exports.NotesProduct || (exports.NotesProduct = {}));
var NotificationAction;
(function (NotificationAction) {
    NotificationAction["DontNotify"] = "DONT_NOTIFY";
    NotificationAction["Notify"] = "NOTIFY";
})(NotificationAction = exports.NotificationAction || (exports.NotificationAction = {}));
var NumberUserInputType;
(function (NumberUserInputType) {
    NumberUserInputType["Number"] = "NUMBER";
})(NumberUserInputType = exports.NumberUserInputType || (exports.NumberUserInputType = {}));
var Operation;
(function (Operation) {
    Operation["Assigned"] = "ASSIGNED";
    Operation["Complete"] = "COMPLETE";
    Operation["Deleted"] = "DELETED";
    Operation["InComplete"] = "IN_COMPLETE";
    Operation["Reworded"] = "REWORDED";
    Operation["Unassigned"] = "UNASSIGNED";
})(Operation = exports.Operation || (exports.Operation = {}));
var OutputDeviceType;
(function (OutputDeviceType) {
    OutputDeviceType["Desktop"] = "DESKTOP";
    OutputDeviceType["Email"] = "EMAIL";
    OutputDeviceType["Mobile"] = "MOBILE";
})(OutputDeviceType = exports.OutputDeviceType || (exports.OutputDeviceType = {}));
var PeapProgramStatus;
(function (PeapProgramStatus) {
    PeapProgramStatus["Abandoned"] = "ABANDONED";
    PeapProgramStatus["Active"] = "ACTIVE";
    PeapProgramStatus["Ended"] = "ENDED";
    PeapProgramStatus["New"] = "NEW";
})(PeapProgramStatus = exports.PeapProgramStatus || (exports.PeapProgramStatus = {}));
var PtGraphQlPageStatus;
(function (PtGraphQlPageStatus) {
    PtGraphQlPageStatus["Current"] = "CURRENT";
    PtGraphQlPageStatus["Draft"] = "DRAFT";
    PtGraphQlPageStatus["Historical"] = "HISTORICAL";
    PtGraphQlPageStatus["Trashed"] = "TRASHED";
})(PtGraphQlPageStatus = exports.PtGraphQlPageStatus || (exports.PtGraphQlPageStatus = {}));
var PageActivityAction;
(function (PageActivityAction) {
    PageActivityAction["Created"] = "created";
    PageActivityAction["Published"] = "published";
    PageActivityAction["Snapshotted"] = "snapshotted";
    PageActivityAction["Started"] = "started";
    PageActivityAction["Updated"] = "updated";
})(PageActivityAction = exports.PageActivityAction || (exports.PageActivityAction = {}));
var PageActivityActionSubject;
(function (PageActivityActionSubject) {
    PageActivityActionSubject["Comment"] = "comment";
    PageActivityActionSubject["Page"] = "page";
})(PageActivityActionSubject = exports.PageActivityActionSubject || (exports.PageActivityActionSubject = {}));
var PageAnalyticsCountType;
(function (PageAnalyticsCountType) {
    PageAnalyticsCountType["All"] = "ALL";
    PageAnalyticsCountType["User"] = "USER";
})(PageAnalyticsCountType = exports.PageAnalyticsCountType || (exports.PageAnalyticsCountType = {}));
var PageAnalyticsTimeseriesCountType;
(function (PageAnalyticsTimeseriesCountType) {
    PageAnalyticsTimeseriesCountType["All"] = "ALL";
})(PageAnalyticsTimeseriesCountType = exports.PageAnalyticsTimeseriesCountType || (exports.PageAnalyticsTimeseriesCountType = {}));
var PageCardInPageTreeHoverPreference;
(function (PageCardInPageTreeHoverPreference) {
    PageCardInPageTreeHoverPreference["NoOptionSelected"] = "NO_OPTION_SELECTED";
    PageCardInPageTreeHoverPreference["NoShowPagecard"] = "NO_SHOW_PAGECARD";
    PageCardInPageTreeHoverPreference["ShowPagecard"] = "SHOW_PAGECARD";
})(PageCardInPageTreeHoverPreference = exports.PageCardInPageTreeHoverPreference || (exports.PageCardInPageTreeHoverPreference = {}));
var PageCopyRestrictionValidationStatus;
(function (PageCopyRestrictionValidationStatus) {
    PageCopyRestrictionValidationStatus["InvalidMultiple"] = "INVALID_MULTIPLE";
    PageCopyRestrictionValidationStatus["InvalidSingle"] = "INVALID_SINGLE";
    PageCopyRestrictionValidationStatus["Valid"] = "VALID";
})(PageCopyRestrictionValidationStatus = exports.PageCopyRestrictionValidationStatus || (exports.PageCopyRestrictionValidationStatus = {}));
var PageLoadType;
(function (PageLoadType) {
    PageLoadType["Combined"] = "COMBINED";
    PageLoadType["Initial"] = "INITIAL";
    PageLoadType["Transition"] = "TRANSITION";
})(PageLoadType = exports.PageLoadType || (exports.PageLoadType = {}));
var PageStatusInput;
(function (PageStatusInput) {
    PageStatusInput["Current"] = "CURRENT";
    PageStatusInput["Draft"] = "DRAFT";
})(PageStatusInput = exports.PageStatusInput || (exports.PageStatusInput = {}));
var PageUpdateTrigger;
(function (PageUpdateTrigger) {
    PageUpdateTrigger["CreatePage"] = "CREATE_PAGE";
    PageUpdateTrigger["DiscardChanges"] = "DISCARD_CHANGES";
    PageUpdateTrigger["EditPage"] = "EDIT_PAGE";
    PageUpdateTrigger["LinkRefactoring"] = "LINK_REFACTORING";
    PageUpdateTrigger["MigratePageCollab"] = "MIGRATE_PAGE_COLLAB";
    PageUpdateTrigger["OwnerChange"] = "OWNER_CHANGE";
    PageUpdateTrigger["PageRename"] = "PAGE_RENAME";
    PageUpdateTrigger["PersonalTasklist"] = "PERSONAL_TASKLIST";
    PageUpdateTrigger["Revert"] = "REVERT";
    PageUpdateTrigger["SpaceCreate"] = "SPACE_CREATE";
    PageUpdateTrigger["Unknown"] = "UNKNOWN";
    PageUpdateTrigger["ViewPage"] = "VIEW_PAGE";
})(PageUpdateTrigger = exports.PageUpdateTrigger || (exports.PageUpdateTrigger = {}));
var PagesDisplayPersistenceOption;
(function (PagesDisplayPersistenceOption) {
    PagesDisplayPersistenceOption["Cards"] = "CARDS";
    PagesDisplayPersistenceOption["CompactList"] = "COMPACT_LIST";
    PagesDisplayPersistenceOption["List"] = "LIST";
})(PagesDisplayPersistenceOption = exports.PagesDisplayPersistenceOption || (exports.PagesDisplayPersistenceOption = {}));
var PagesSortField;
(function (PagesSortField) {
    PagesSortField["LastModifiedDate"] = "LAST_MODIFIED_DATE";
    PagesSortField["Relevant"] = "RELEVANT";
    PagesSortField["Title"] = "TITLE";
})(PagesSortField = exports.PagesSortField || (exports.PagesSortField = {}));
var PagesSortOrder;
(function (PagesSortOrder) {
    PagesSortOrder["Asc"] = "ASC";
    PagesSortOrder["Desc"] = "DESC";
})(PagesSortOrder = exports.PagesSortOrder || (exports.PagesSortOrder = {}));
var PartnerBtfLicenseType;
(function (PartnerBtfLicenseType) {
    PartnerBtfLicenseType["Academic"] = "ACADEMIC";
    PartnerBtfLicenseType["Commercial"] = "COMMERCIAL";
    PartnerBtfLicenseType["Evaluation"] = "EVALUATION";
    PartnerBtfLicenseType["Starter"] = "STARTER";
})(PartnerBtfLicenseType = exports.PartnerBtfLicenseType || (exports.PartnerBtfLicenseType = {}));
var PartnerCloudLicenseType;
(function (PartnerCloudLicenseType) {
    PartnerCloudLicenseType["Academic"] = "ACADEMIC";
    PartnerCloudLicenseType["Commercial"] = "COMMERCIAL";
    PartnerCloudLicenseType["Community"] = "COMMUNITY";
    PartnerCloudLicenseType["Demonstration"] = "DEMONSTRATION";
    PartnerCloudLicenseType["Developer"] = "DEVELOPER";
    PartnerCloudLicenseType["Evaluation"] = "EVALUATION";
    PartnerCloudLicenseType["Free"] = "FREE";
    PartnerCloudLicenseType["OpenSource"] = "OPEN_SOURCE";
    PartnerCloudLicenseType["Starter"] = "STARTER";
})(PartnerCloudLicenseType = exports.PartnerCloudLicenseType || (exports.PartnerCloudLicenseType = {}));
var PartnerCurrency;
(function (PartnerCurrency) {
    PartnerCurrency["Jpy"] = "JPY";
    PartnerCurrency["Usd"] = "USD";
})(PartnerCurrency = exports.PartnerCurrency || (exports.PartnerCurrency = {}));
var PartnerInvoiceJsonCurrency;
(function (PartnerInvoiceJsonCurrency) {
    PartnerInvoiceJsonCurrency["Aud"] = "AUD";
    PartnerInvoiceJsonCurrency["Eur"] = "EUR";
    PartnerInvoiceJsonCurrency["Gbp"] = "GBP";
    PartnerInvoiceJsonCurrency["Jpy"] = "JPY";
    PartnerInvoiceJsonCurrency["Usd"] = "USD";
})(PartnerInvoiceJsonCurrency = exports.PartnerInvoiceJsonCurrency || (exports.PartnerInvoiceJsonCurrency = {}));
var PathType;
(function (PathType) {
    PathType["Absolute"] = "ABSOLUTE";
    PathType["Relative"] = "RELATIVE";
    PathType["RelativeNoContext"] = "RELATIVE_NO_CONTEXT";
})(PathType = exports.PathType || (exports.PathType = {}));
var PaywallStatus;
(function (PaywallStatus) {
    PaywallStatus["Active"] = "ACTIVE";
    PaywallStatus["Deactivated"] = "DEACTIVATED";
    PaywallStatus["Unset"] = "UNSET";
})(PaywallStatus = exports.PaywallStatus || (exports.PaywallStatus = {}));
var PermissionDisplayType;
(function (PermissionDisplayType) {
    PermissionDisplayType["Anonymous"] = "ANONYMOUS";
    PermissionDisplayType["Group"] = "GROUP";
    PermissionDisplayType["GuestUser"] = "GUEST_USER";
    PermissionDisplayType["LicensedUser"] = "LICENSED_USER";
})(PermissionDisplayType = exports.PermissionDisplayType || (exports.PermissionDisplayType = {}));
var PermsReportTargetType;
(function (PermsReportTargetType) {
    PermsReportTargetType["Group"] = "GROUP";
    PermsReportTargetType["User"] = "USER";
})(PermsReportTargetType = exports.PermsReportTargetType || (exports.PermsReportTargetType = {}));
var PlanModeDestination;
(function (PlanModeDestination) {
    PlanModeDestination["Backlog"] = "BACKLOG";
    PlanModeDestination["Board"] = "BOARD";
    PlanModeDestination["Sprint"] = "SPRINT";
})(PlanModeDestination = exports.PlanModeDestination || (exports.PlanModeDestination = {}));
var Platform;
(function (Platform) {
    Platform["Android"] = "ANDROID";
    Platform["Ios"] = "IOS";
    Platform["Web"] = "WEB";
})(Platform = exports.Platform || (exports.Platform = {}));
var PlaybookTemplateCategory;
(function (PlaybookTemplateCategory) {
    PlaybookTemplateCategory["Hrsm"] = "HRSM";
    PlaybookTemplateCategory["Itsm"] = "ITSM";
    PlaybookTemplateCategory["ItOperations"] = "IT_OPERATIONS";
})(PlaybookTemplateCategory = exports.PlaybookTemplateCategory || (exports.PlaybookTemplateCategory = {}));
var PlaybookTemplateColor;
(function (PlaybookTemplateColor) {
    PlaybookTemplateColor["Blue"] = "BLUE";
    PlaybookTemplateColor["Gray"] = "GRAY";
    PlaybookTemplateColor["Green"] = "GREEN";
    PlaybookTemplateColor["Lime"] = "LIME";
    PlaybookTemplateColor["Magenta"] = "MAGENTA";
    PlaybookTemplateColor["Orange"] = "ORANGE";
    PlaybookTemplateColor["Purple"] = "PURPLE";
    PlaybookTemplateColor["Teal"] = "TEAL";
    PlaybookTemplateColor["Yellow"] = "YELLOW";
})(PlaybookTemplateColor = exports.PlaybookTemplateColor || (exports.PlaybookTemplateColor = {}));
var PlaybookTemplateIcon;
(function (PlaybookTemplateIcon) {
    PlaybookTemplateIcon["ChangeManagement_4Icon"] = "CHANGE_MANAGEMENT_4_ICON";
    PlaybookTemplateIcon["Chat_5Icon"] = "CHAT_5_ICON";
    PlaybookTemplateIcon["DataPrivacyIcon"] = "DATA_PRIVACY_ICON";
    PlaybookTemplateIcon["OnboardingIcon"] = "ONBOARDING_ICON";
    PlaybookTemplateIcon["RainstormIncidentIcon"] = "RAINSTORM_INCIDENT_ICON";
    PlaybookTemplateIcon["RefreshUpdateIcon"] = "REFRESH_UPDATE_ICON";
})(PlaybookTemplateIcon = exports.PlaybookTemplateIcon || (exports.PlaybookTemplateIcon = {}));
var PolarisCommentKind;
(function (PolarisCommentKind) {
    PolarisCommentKind["PlayContribution"] = "PLAY_CONTRIBUTION";
    PolarisCommentKind["View"] = "VIEW";
})(PolarisCommentKind = exports.PolarisCommentKind || (exports.PolarisCommentKind = {}));
var PolarisFieldType;
(function (PolarisFieldType) {
    PolarisFieldType["PolarisIdeaPlayField"] = "PolarisIdeaPlayField";
    PolarisFieldType["PolarisJiraField"] = "PolarisJiraField";
})(PolarisFieldType = exports.PolarisFieldType || (exports.PolarisFieldType = {}));
var PolarisFilterEnumType;
(function (PolarisFilterEnumType) {
    PolarisFilterEnumType["BoardColumn"] = "BOARD_COLUMN";
    PolarisFilterEnumType["ViewGroup"] = "VIEW_GROUP";
})(PolarisFilterEnumType = exports.PolarisFilterEnumType || (exports.PolarisFilterEnumType = {}));
var PolarisPlayKind;
(function (PolarisPlayKind) {
    PolarisPlayKind["PolarisBudgetAllocationPlay"] = "PolarisBudgetAllocationPlay";
})(PolarisPlayKind = exports.PolarisPlayKind || (exports.PolarisPlayKind = {}));
var PolarisRefreshError;
(function (PolarisRefreshError) {
    PolarisRefreshError["InternalError"] = "INTERNAL_ERROR";
    PolarisRefreshError["InvalidSnippet"] = "INVALID_SNIPPET";
    PolarisRefreshError["NeedAuth"] = "NEED_AUTH";
    PolarisRefreshError["NotFound"] = "NOT_FOUND";
})(PolarisRefreshError = exports.PolarisRefreshError || (exports.PolarisRefreshError = {}));
var PolarisResolvedObjectAuthType;
(function (PolarisResolvedObjectAuthType) {
    PolarisResolvedObjectAuthType["ApiKey"] = "API_KEY";
    PolarisResolvedObjectAuthType["Oauth2"] = "OAUTH2";
})(PolarisResolvedObjectAuthType = exports.PolarisResolvedObjectAuthType || (exports.PolarisResolvedObjectAuthType = {}));
var PolarisSnippetPropertyKind;
(function (PolarisSnippetPropertyKind) {
    PolarisSnippetPropertyKind["Labels"] = "LABELS";
    PolarisSnippetPropertyKind["Number"] = "NUMBER";
    PolarisSnippetPropertyKind["Rating"] = "RATING";
})(PolarisSnippetPropertyKind = exports.PolarisSnippetPropertyKind || (exports.PolarisSnippetPropertyKind = {}));
var PolarisSortOrder;
(function (PolarisSortOrder) {
    PolarisSortOrder["Asc"] = "ASC";
    PolarisSortOrder["Desc"] = "DESC";
})(PolarisSortOrder = exports.PolarisSortOrder || (exports.PolarisSortOrder = {}));
var PolarisTimelineMode;
(function (PolarisTimelineMode) {
    PolarisTimelineMode["Months"] = "MONTHS";
    PolarisTimelineMode["Quarters"] = "QUARTERS";
    PolarisTimelineMode["Years"] = "YEARS";
})(PolarisTimelineMode = exports.PolarisTimelineMode || (exports.PolarisTimelineMode = {}));
var PolarisTimelineTodayMarker;
(function (PolarisTimelineTodayMarker) {
    PolarisTimelineTodayMarker["Disabled"] = "DISABLED";
    PolarisTimelineTodayMarker["Enabled"] = "ENABLED";
})(PolarisTimelineTodayMarker = exports.PolarisTimelineTodayMarker || (exports.PolarisTimelineTodayMarker = {}));
var PolarisValueOperator;
(function (PolarisValueOperator) {
    PolarisValueOperator["Eq"] = "EQ";
    PolarisValueOperator["Gt"] = "GT";
    PolarisValueOperator["Gte"] = "GTE";
    PolarisValueOperator["Lt"] = "LT";
    PolarisValueOperator["Lte"] = "LTE";
})(PolarisValueOperator = exports.PolarisValueOperator || (exports.PolarisValueOperator = {}));
var PolarisViewFieldRollupType;
(function (PolarisViewFieldRollupType) {
    PolarisViewFieldRollupType["Avg"] = "AVG";
    PolarisViewFieldRollupType["Count"] = "COUNT";
    PolarisViewFieldRollupType["Empty"] = "EMPTY";
    PolarisViewFieldRollupType["Filled"] = "FILLED";
    PolarisViewFieldRollupType["Max"] = "MAX";
    PolarisViewFieldRollupType["Median"] = "MEDIAN";
    PolarisViewFieldRollupType["Min"] = "MIN";
    PolarisViewFieldRollupType["Range"] = "RANGE";
    PolarisViewFieldRollupType["Sum"] = "SUM";
})(PolarisViewFieldRollupType = exports.PolarisViewFieldRollupType || (exports.PolarisViewFieldRollupType = {}));
var PolarisViewFilterKind;
(function (PolarisViewFilterKind) {
    PolarisViewFilterKind["ConnectionFieldIdentity"] = "CONNECTION_FIELD_IDENTITY";
    PolarisViewFilterKind["FieldHasValue"] = "FIELD_HAS_VALUE";
    PolarisViewFilterKind["FieldIdentity"] = "FIELD_IDENTITY";
    PolarisViewFilterKind["FieldNumeric"] = "FIELD_NUMERIC";
    PolarisViewFilterKind["Interval"] = "INTERVAL";
    PolarisViewFilterKind["Text"] = "TEXT";
})(PolarisViewFilterKind = exports.PolarisViewFilterKind || (exports.PolarisViewFilterKind = {}));
var PolarisViewFilterOperator;
(function (PolarisViewFilterOperator) {
    PolarisViewFilterOperator["EndAfterNow"] = "END_AFTER_NOW";
    PolarisViewFilterOperator["EndBeforeNow"] = "END_BEFORE_NOW";
    PolarisViewFilterOperator["Eq"] = "EQ";
    PolarisViewFilterOperator["Gt"] = "GT";
    PolarisViewFilterOperator["Gte"] = "GTE";
    PolarisViewFilterOperator["ItemEndsAfter"] = "ITEM_ENDS_AFTER";
    PolarisViewFilterOperator["ItemEndsAfterPast"] = "ITEM_ENDS_AFTER_PAST";
    PolarisViewFilterOperator["ItemStartsBefore"] = "ITEM_STARTS_BEFORE";
    PolarisViewFilterOperator["ItemStartsBeforeNext"] = "ITEM_STARTS_BEFORE_NEXT";
    PolarisViewFilterOperator["Lt"] = "LT";
    PolarisViewFilterOperator["Lte"] = "LTE";
    PolarisViewFilterOperator["Neq"] = "NEQ";
    PolarisViewFilterOperator["StartAfterNow"] = "START_AFTER_NOW";
    PolarisViewFilterOperator["StartBeforeNow"] = "START_BEFORE_NOW";
})(PolarisViewFilterOperator = exports.PolarisViewFilterOperator || (exports.PolarisViewFilterOperator = {}));
var PolarisViewLayoutType;
(function (PolarisViewLayoutType) {
    PolarisViewLayoutType["Compact"] = "COMPACT";
    PolarisViewLayoutType["Detailed"] = "DETAILED";
    PolarisViewLayoutType["Summary"] = "SUMMARY";
})(PolarisViewLayoutType = exports.PolarisViewLayoutType || (exports.PolarisViewLayoutType = {}));
var PolarisViewSetType;
(function (PolarisViewSetType) {
    PolarisViewSetType["Capture"] = "CAPTURE";
    PolarisViewSetType["Custom"] = "CUSTOM";
    PolarisViewSetType["Deliver"] = "DELIVER";
    PolarisViewSetType["Prioritize"] = "PRIORITIZE";
    PolarisViewSetType["Section"] = "SECTION";
    PolarisViewSetType["Single"] = "SINGLE";
    PolarisViewSetType["System"] = "SYSTEM";
})(PolarisViewSetType = exports.PolarisViewSetType || (exports.PolarisViewSetType = {}));
var PolarisViewSortMode;
(function (PolarisViewSortMode) {
    PolarisViewSortMode["FieldsSort"] = "FIELDS_SORT";
    PolarisViewSortMode["ProjectRank"] = "PROJECT_RANK";
    PolarisViewSortMode["ViewRank"] = "VIEW_RANK";
})(PolarisViewSortMode = exports.PolarisViewSortMode || (exports.PolarisViewSortMode = {}));
var PolarisVisualizationType;
(function (PolarisVisualizationType) {
    PolarisVisualizationType["Board"] = "BOARD";
    PolarisVisualizationType["Collection"] = "COLLECTION";
    PolarisVisualizationType["Matrix"] = "MATRIX";
    PolarisVisualizationType["Section"] = "SECTION";
    PolarisVisualizationType["Table"] = "TABLE";
    PolarisVisualizationType["Timeline"] = "TIMELINE";
    PolarisVisualizationType["Twoxtwo"] = "TWOXTWO";
})(PolarisVisualizationType = exports.PolarisVisualizationType || (exports.PolarisVisualizationType = {}));
var PrincipalFilterType;
(function (PrincipalFilterType) {
    PrincipalFilterType["App"] = "APP";
    PrincipalFilterType["Group"] = "GROUP";
    PrincipalFilterType["Guest"] = "GUEST";
    PrincipalFilterType["User"] = "USER";
    PrincipalFilterType["UserClass"] = "USER_CLASS";
})(PrincipalFilterType = exports.PrincipalFilterType || (exports.PrincipalFilterType = {}));
var PrincipalType;
(function (PrincipalType) {
    PrincipalType["Anonymous"] = "ANONYMOUS";
    PrincipalType["Customer"] = "CUSTOMER";
    PrincipalType["Unlicensed"] = "UNLICENSED";
})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));
var Product;
(function (Product) {
    Product["Confluence"] = "CONFLUENCE";
})(Product = exports.Product || (exports.Product = {}));
var PublicLinkAdminAction;
(function (PublicLinkAdminAction) {
    PublicLinkAdminAction["Block"] = "BLOCK";
    PublicLinkAdminAction["Off"] = "OFF";
    PublicLinkAdminAction["On"] = "ON";
    PublicLinkAdminAction["Unblock"] = "UNBLOCK";
})(PublicLinkAdminAction = exports.PublicLinkAdminAction || (exports.PublicLinkAdminAction = {}));
var PublicLinkContentType;
(function (PublicLinkContentType) {
    PublicLinkContentType["Page"] = "page";
    PublicLinkContentType["Whiteboard"] = "whiteboard";
})(PublicLinkContentType = exports.PublicLinkContentType || (exports.PublicLinkContentType = {}));
var PublicLinkDefaultSpaceStatus;
(function (PublicLinkDefaultSpaceStatus) {
    PublicLinkDefaultSpaceStatus["Off"] = "OFF";
    PublicLinkDefaultSpaceStatus["On"] = "ON";
})(PublicLinkDefaultSpaceStatus = exports.PublicLinkDefaultSpaceStatus || (exports.PublicLinkDefaultSpaceStatus = {}));
var PublicLinkPageStatus;
(function (PublicLinkPageStatus) {
    PublicLinkPageStatus["BlockedByClassificationLevel"] = "BLOCKED_BY_CLASSIFICATION_LEVEL";
    PublicLinkPageStatus["BlockedByContainerPolicy"] = "BLOCKED_BY_CONTAINER_POLICY";
    PublicLinkPageStatus["BlockedByOrg"] = "BLOCKED_BY_ORG";
    PublicLinkPageStatus["BlockedByProduct"] = "BLOCKED_BY_PRODUCT";
    PublicLinkPageStatus["BlockedBySpace"] = "BLOCKED_BY_SPACE";
    PublicLinkPageStatus["Off"] = "OFF";
    PublicLinkPageStatus["On"] = "ON";
    PublicLinkPageStatus["SiteBlocked"] = "SITE_BLOCKED";
    PublicLinkPageStatus["SiteDisabled"] = "SITE_DISABLED";
    PublicLinkPageStatus["SpaceBlocked"] = "SPACE_BLOCKED";
    PublicLinkPageStatus["SpaceDisabled"] = "SPACE_DISABLED";
})(PublicLinkPageStatus = exports.PublicLinkPageStatus || (exports.PublicLinkPageStatus = {}));
var PublicLinkPermissionsObjectType;
(function (PublicLinkPermissionsObjectType) {
    PublicLinkPermissionsObjectType["Content"] = "CONTENT";
})(PublicLinkPermissionsObjectType = exports.PublicLinkPermissionsObjectType || (exports.PublicLinkPermissionsObjectType = {}));
var PublicLinkPermissionsType;
(function (PublicLinkPermissionsType) {
    PublicLinkPermissionsType["Edit"] = "EDIT";
})(PublicLinkPermissionsType = exports.PublicLinkPermissionsType || (exports.PublicLinkPermissionsType = {}));
var PublicLinkSiteStatus;
(function (PublicLinkSiteStatus) {
    PublicLinkSiteStatus["BlockedByOrg"] = "BLOCKED_BY_ORG";
    PublicLinkSiteStatus["Off"] = "OFF";
    PublicLinkSiteStatus["On"] = "ON";
})(PublicLinkSiteStatus = exports.PublicLinkSiteStatus || (exports.PublicLinkSiteStatus = {}));
var PublicLinkSpaceStatus;
(function (PublicLinkSpaceStatus) {
    PublicLinkSpaceStatus["BlockedByContainerPolicy"] = "BLOCKED_BY_CONTAINER_POLICY";
    PublicLinkSpaceStatus["BlockedByOrg"] = "BLOCKED_BY_ORG";
    PublicLinkSpaceStatus["BlockedByProduct"] = "BLOCKED_BY_PRODUCT";
    PublicLinkSpaceStatus["Off"] = "OFF";
    PublicLinkSpaceStatus["On"] = "ON";
})(PublicLinkSpaceStatus = exports.PublicLinkSpaceStatus || (exports.PublicLinkSpaceStatus = {}));
var PublicLinkSpacesByCriteriaOrder;
(function (PublicLinkSpacesByCriteriaOrder) {
    PublicLinkSpacesByCriteriaOrder["ActiveLinks"] = "ACTIVE_LINKS";
    PublicLinkSpacesByCriteriaOrder["Name"] = "NAME";
    PublicLinkSpacesByCriteriaOrder["Status"] = "STATUS";
})(PublicLinkSpacesByCriteriaOrder = exports.PublicLinkSpacesByCriteriaOrder || (exports.PublicLinkSpacesByCriteriaOrder = {}));
var PublicLinkStatus;
(function (PublicLinkStatus) {
    PublicLinkStatus["BlockedByClassificationLevel"] = "BLOCKED_BY_CLASSIFICATION_LEVEL";
    PublicLinkStatus["BlockedByContainerPolicy"] = "BLOCKED_BY_CONTAINER_POLICY";
    PublicLinkStatus["BlockedByOrg"] = "BLOCKED_BY_ORG";
    PublicLinkStatus["BlockedByProduct"] = "BLOCKED_BY_PRODUCT";
    PublicLinkStatus["BlockedBySpace"] = "BLOCKED_BY_SPACE";
    PublicLinkStatus["Off"] = "OFF";
    PublicLinkStatus["On"] = "ON";
    PublicLinkStatus["SiteBlocked"] = "SITE_BLOCKED";
    PublicLinkStatus["SiteDisabled"] = "SITE_DISABLED";
    PublicLinkStatus["SpaceBlocked"] = "SPACE_BLOCKED";
    PublicLinkStatus["SpaceDisabled"] = "SPACE_DISABLED";
})(PublicLinkStatus = exports.PublicLinkStatus || (exports.PublicLinkStatus = {}));
var PublicLinksByCriteriaOrder;
(function (PublicLinksByCriteriaOrder) {
    PublicLinksByCriteriaOrder["DateEnabled"] = "DATE_ENABLED";
    PublicLinksByCriteriaOrder["Status"] = "STATUS";
    PublicLinksByCriteriaOrder["Title"] = "TITLE";
})(PublicLinksByCriteriaOrder = exports.PublicLinksByCriteriaOrder || (exports.PublicLinksByCriteriaOrder = {}));
var PushNotificationGroupInputType;
(function (PushNotificationGroupInputType) {
    PushNotificationGroupInputType["None"] = "NONE";
    PushNotificationGroupInputType["Quiet"] = "QUIET";
    PushNotificationGroupInputType["Standard"] = "STANDARD";
})(PushNotificationGroupInputType = exports.PushNotificationGroupInputType || (exports.PushNotificationGroupInputType = {}));
var PushNotificationSettingGroup;
(function (PushNotificationSettingGroup) {
    PushNotificationSettingGroup["Custom"] = "CUSTOM";
    PushNotificationSettingGroup["None"] = "NONE";
    PushNotificationSettingGroup["Quiet"] = "QUIET";
    PushNotificationSettingGroup["Standard"] = "STANDARD";
})(PushNotificationSettingGroup = exports.PushNotificationSettingGroup || (exports.PushNotificationSettingGroup = {}));
var QueryType;
(function (QueryType) {
    QueryType["All"] = "ALL";
    QueryType["Delete"] = "DELETE";
    QueryType["Insert"] = "INSERT";
    QueryType["Other"] = "OTHER";
    QueryType["Select"] = "SELECT";
    QueryType["Update"] = "UPDATE";
})(QueryType = exports.QueryType || (exports.QueryType = {}));
var RadarConnectorType;
(function (RadarConnectorType) {
    RadarConnectorType["Csv"] = "CSV";
    RadarConnectorType["Workday"] = "WORKDAY";
})(RadarConnectorType = exports.RadarConnectorType || (exports.RadarConnectorType = {}));
var RadarCustomFieldSyncStatus;
(function (RadarCustomFieldSyncStatus) {
    RadarCustomFieldSyncStatus["Found"] = "FOUND";
    RadarCustomFieldSyncStatus["NotFound"] = "NOT_FOUND";
    RadarCustomFieldSyncStatus["Pending"] = "PENDING";
})(RadarCustomFieldSyncStatus = exports.RadarCustomFieldSyncStatus || (exports.RadarCustomFieldSyncStatus = {}));
var RadarEntityType;
(function (RadarEntityType) {
    RadarEntityType["FocusArea"] = "focusArea";
    RadarEntityType["Position"] = "position";
    RadarEntityType["Proposal"] = "proposal";
    RadarEntityType["ProposedMovement"] = "proposedMovement";
    RadarEntityType["Team"] = "team";
    RadarEntityType["Worker"] = "worker";
})(RadarEntityType = exports.RadarEntityType || (exports.RadarEntityType = {}));
var RadarFieldType;
(function (RadarFieldType) {
    RadarFieldType["Ari"] = "ARI";
    RadarFieldType["Boolean"] = "BOOLEAN";
    RadarFieldType["Date"] = "DATE";
    RadarFieldType["Datetime"] = "DATETIME";
    RadarFieldType["Keyword"] = "KEYWORD";
    RadarFieldType["Money"] = "MONEY";
    RadarFieldType["Number"] = "NUMBER";
    RadarFieldType["Status"] = "STATUS";
    RadarFieldType["String"] = "STRING";
    RadarFieldType["Url"] = "URL";
})(RadarFieldType = exports.RadarFieldType || (exports.RadarFieldType = {}));
var RadarFilterInputType;
(function (RadarFilterInputType) {
    RadarFilterInputType["Checkbox"] = "CHECKBOX";
    RadarFilterInputType["Radio"] = "RADIO";
    RadarFilterInputType["Range"] = "RANGE";
    RadarFilterInputType["Textfield"] = "TEXTFIELD";
})(RadarFilterInputType = exports.RadarFilterInputType || (exports.RadarFilterInputType = {}));
var RadarFilterOperators;
(function (RadarFilterOperators) {
    RadarFilterOperators["Equals"] = "EQUALS";
    RadarFilterOperators["GreaterThan"] = "GREATER_THAN";
    RadarFilterOperators["GreaterThanOrEqual"] = "GREATER_THAN_OR_EQUAL";
    RadarFilterOperators["In"] = "IN";
    RadarFilterOperators["Is"] = "IS";
    RadarFilterOperators["IsNot"] = "IS_NOT";
    RadarFilterOperators["LessThan"] = "LESS_THAN";
    RadarFilterOperators["LessThanOrEqual"] = "LESS_THAN_OR_EQUAL";
    RadarFilterOperators["Like"] = "LIKE";
    RadarFilterOperators["NotEquals"] = "NOT_EQUALS";
    RadarFilterOperators["NotIn"] = "NOT_IN";
    RadarFilterOperators["NotLike"] = "NOT_LIKE";
})(RadarFilterOperators = exports.RadarFilterOperators || (exports.RadarFilterOperators = {}));
var RadarFunctionId;
(function (RadarFunctionId) {
    RadarFunctionId["Under"] = "UNDER";
})(RadarFunctionId = exports.RadarFunctionId || (exports.RadarFunctionId = {}));
var RadarNumericAppearance;
(function (RadarNumericAppearance) {
    RadarNumericAppearance["Duration"] = "DURATION";
    RadarNumericAppearance["Number"] = "NUMBER";
})(RadarNumericAppearance = exports.RadarNumericAppearance || (exports.RadarNumericAppearance = {}));
var RadarPositionRole;
(function (RadarPositionRole) {
    RadarPositionRole["IndividualContributor"] = "INDIVIDUAL_CONTRIBUTOR";
    RadarPositionRole["Manager"] = "MANAGER";
})(RadarPositionRole = exports.RadarPositionRole || (exports.RadarPositionRole = {}));
var RadarPositionsByEntityType;
(function (RadarPositionsByEntityType) {
    RadarPositionsByEntityType["FocusArea"] = "focusArea";
    RadarPositionsByEntityType["Position"] = "position";
})(RadarPositionsByEntityType = exports.RadarPositionsByEntityType || (exports.RadarPositionsByEntityType = {}));
var RadarSensitivityLevel;
(function (RadarSensitivityLevel) {
    RadarSensitivityLevel["Open"] = "OPEN";
    RadarSensitivityLevel["Private"] = "PRIVATE";
    RadarSensitivityLevel["Restricted"] = "RESTRICTED";
})(RadarSensitivityLevel = exports.RadarSensitivityLevel || (exports.RadarSensitivityLevel = {}));
var RadarStatusAppearance;
(function (RadarStatusAppearance) {
    RadarStatusAppearance["Default"] = "default";
    RadarStatusAppearance["Inprogress"] = "inprogress";
    RadarStatusAppearance["Moved"] = "moved";
    RadarStatusAppearance["New"] = "new";
    RadarStatusAppearance["Removed"] = "removed";
    RadarStatusAppearance["Success"] = "success";
})(RadarStatusAppearance = exports.RadarStatusAppearance || (exports.RadarStatusAppearance = {}));
var RadarUserFieldPermission;
(function (RadarUserFieldPermission) {
    RadarUserFieldPermission["Full"] = "Full";
    RadarUserFieldPermission["None"] = "None";
    RadarUserFieldPermission["PartialBelowReportingLine"] = "PartialBelowReportingLine";
    RadarUserFieldPermission["PartialOnSelfOrBelowReportingLine"] = "PartialOnSelfOrBelowReportingLine";
    RadarUserFieldPermission["PartialOnlySelf"] = "PartialOnlySelf";
})(RadarUserFieldPermission = exports.RadarUserFieldPermission || (exports.RadarUserFieldPermission = {}));
var RateLimitingCurrency;
(function (RateLimitingCurrency) {
    RateLimitingCurrency["CannedResponseMutationCurrency"] = "CANNED_RESPONSE_MUTATION_CURRENCY";
    RateLimitingCurrency["CannedResponseQueryCurrency"] = "CANNED_RESPONSE_QUERY_CURRENCY";
    RateLimitingCurrency["CompassSynchronizeLinkAssociationsCurrency"] = "COMPASS_SYNCHRONIZE_LINK_ASSOCIATIONS_CURRENCY";
    RateLimitingCurrency["DevopsContainerRelationshipsReadCurrency"] = "DEVOPS_CONTAINER_RELATIONSHIPS_READ_CURRENCY";
    RateLimitingCurrency["DevopsContainerRelationshipsWriteCurrency"] = "DEVOPS_CONTAINER_RELATIONSHIPS_WRITE_CURRENCY";
    RateLimitingCurrency["DevopsServiceReadCurrency"] = "DEVOPS_SERVICE_READ_CURRENCY";
    RateLimitingCurrency["DevopsServiceWriteCurrency"] = "DEVOPS_SERVICE_WRITE_CURRENCY";
    RateLimitingCurrency["DevConsoleMutationCurrency"] = "DEV_CONSOLE_MUTATION_CURRENCY";
    RateLimitingCurrency["DevConsoleQueryCurrency"] = "DEV_CONSOLE_QUERY_CURRENCY";
    RateLimitingCurrency["ExportMetricsCurrency"] = "EXPORT_METRICS_CURRENCY";
    RateLimitingCurrency["ForgeAlertsCurrency"] = "FORGE_ALERTS_CURRENCY";
    RateLimitingCurrency["ForgeAppContributorCurrency"] = "FORGE_APP_CONTRIBUTOR_CURRENCY";
    RateLimitingCurrency["ForgeAuditLogsCurrency"] = "FORGE_AUDIT_LOGS_CURRENCY";
    RateLimitingCurrency["ForgeCustomMetricsCurrency"] = "FORGE_CUSTOM_METRICS_CURRENCY";
    RateLimitingCurrency["ForgeMetricsCurrency"] = "FORGE_METRICS_CURRENCY";
    RateLimitingCurrency["HelpCenterCurrency"] = "HELP_CENTER_CURRENCY";
    RateLimitingCurrency["HelpLayoutCurrency"] = "HELP_LAYOUT_CURRENCY";
    RateLimitingCurrency["HelpObjectStoreCurrency"] = "HELP_OBJECT_STORE_CURRENCY";
    RateLimitingCurrency["KnowledgeBaseCurrency"] = "KNOWLEDGE_BASE_CURRENCY";
    RateLimitingCurrency["PolarisBetaUserCurrency"] = "POLARIS_BETA_USER_CURRENCY";
    RateLimitingCurrency["PolarisCollabTokenQueryCurrency"] = "POLARIS_COLLAB_TOKEN_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisCommentCurrency"] = "POLARIS_COMMENT_CURRENCY";
    RateLimitingCurrency["PolarisCurrency"] = "POLARIS_CURRENCY";
    RateLimitingCurrency["PolarisFieldCurrency"] = "POLARIS_FIELD_CURRENCY";
    RateLimitingCurrency["PolarisIdeaCurrency"] = "POLARIS_IDEA_CURRENCY";
    RateLimitingCurrency["PolarisIdeaTemplatesQueryCurrency"] = "POLARIS_IDEA_TEMPLATES_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisIdeaTemplateCurrency"] = "POLARIS_IDEA_TEMPLATE_CURRENCY";
    RateLimitingCurrency["PolarisInsightsQueryCurrency"] = "POLARIS_INSIGHTS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisInsightsWithErrorsQueryCurrency"] = "POLARIS_INSIGHTS_WITH_ERRORS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisInsightCurrency"] = "POLARIS_INSIGHT_CURRENCY";
    RateLimitingCurrency["PolarisInsightQueryCurrency"] = "POLARIS_INSIGHT_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisLabelsQueryCurrency"] = "POLARIS_LABELS_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisOnboardingCurrency"] = "POLARIS_ONBOARDING_CURRENCY";
    RateLimitingCurrency["PolarisPlayCurrency"] = "POLARIS_PLAY_CURRENCY";
    RateLimitingCurrency["PolarisProjectConfigCurrency"] = "POLARIS_PROJECT_CONFIG_CURRENCY";
    RateLimitingCurrency["PolarisProjectQueryCurrency"] = "POLARIS_PROJECT_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisRankingCurrency"] = "POLARIS_RANKING_CURRENCY";
    RateLimitingCurrency["PolarisReactionCurrency"] = "POLARIS_REACTION_CURRENCY";
    RateLimitingCurrency["PolarisSnippetCurrency"] = "POLARIS_SNIPPET_CURRENCY";
    RateLimitingCurrency["PolarisSnippetPropertiesConfigQueryCurrency"] = "POLARIS_SNIPPET_PROPERTIES_CONFIG_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisUnfurlCurrency"] = "POLARIS_UNFURL_CURRENCY";
    RateLimitingCurrency["PolarisViewsetCurrency"] = "POLARIS_VIEWSET_CURRENCY";
    RateLimitingCurrency["PolarisViewArrangementInfoQueryCurrency"] = "POLARIS_VIEW_ARRANGEMENT_INFO_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisViewCurrency"] = "POLARIS_VIEW_CURRENCY";
    RateLimitingCurrency["PolarisViewQueryCurrency"] = "POLARIS_VIEW_QUERY_CURRENCY";
    RateLimitingCurrency["PolarisWriteCurrency"] = "POLARIS_WRITE_CURRENCY";
    RateLimitingCurrency["TeamsCurrency"] = "TEAMS_CURRENCY";
    RateLimitingCurrency["TeamMembersCurrency"] = "TEAM_MEMBERS_CURRENCY";
    RateLimitingCurrency["TeamMembersV2Currency"] = "TEAM_MEMBERS_V2_CURRENCY";
    RateLimitingCurrency["TeamRoleGrantsMutatePrincipalsCurrency"] = "TEAM_ROLE_GRANTS_MUTATE_PRINCIPALS_CURRENCY";
    RateLimitingCurrency["TeamRoleGrantsQueryPrincipalsCurrency"] = "TEAM_ROLE_GRANTS_QUERY_PRINCIPALS_CURRENCY";
    RateLimitingCurrency["TeamSearchCurrency"] = "TEAM_SEARCH_CURRENCY";
    RateLimitingCurrency["TeamSearchV2Currency"] = "TEAM_SEARCH_V2_CURRENCY";
    RateLimitingCurrency["TeamV2Currency"] = "TEAM_V2_CURRENCY";
    RateLimitingCurrency["TestingService"] = "TESTING_SERVICE";
    RateLimitingCurrency["TrelloCurrency"] = "TRELLO_CURRENCY";
    RateLimitingCurrency["TrelloMutationCurrency"] = "TRELLO_MUTATION_CURRENCY";
})(RateLimitingCurrency = exports.RateLimitingCurrency || (exports.RateLimitingCurrency = {}));
var RecentFilter;
(function (RecentFilter) {
    RecentFilter["All"] = "ALL";
    RecentFilter["CollaboratedOn"] = "COLLABORATED_ON";
    RecentFilter["Created"] = "CREATED";
    RecentFilter["WorkedOn"] = "WORKED_ON";
})(RecentFilter = exports.RecentFilter || (exports.RecentFilter = {}));
var ReclassificationFilterScope;
(function (ReclassificationFilterScope) {
    ReclassificationFilterScope["Content"] = "CONTENT";
    ReclassificationFilterScope["Space"] = "SPACE";
    ReclassificationFilterScope["Workspace"] = "WORKSPACE";
})(ReclassificationFilterScope = exports.ReclassificationFilterScope || (exports.ReclassificationFilterScope = {}));
var RecommendedPagesSpaceBehavior;
(function (RecommendedPagesSpaceBehavior) {
    RecommendedPagesSpaceBehavior["Hidden"] = "HIDDEN";
    RecommendedPagesSpaceBehavior["Shown"] = "SHOWN";
})(RecommendedPagesSpaceBehavior = exports.RecommendedPagesSpaceBehavior || (exports.RecommendedPagesSpaceBehavior = {}));
var RelationSourceType;
(function (RelationSourceType) {
    RelationSourceType["User"] = "user";
})(RelationSourceType = exports.RelationSourceType || (exports.RelationSourceType = {}));
var RelationTargetType;
(function (RelationTargetType) {
    RelationTargetType["Content"] = "content";
    RelationTargetType["Space"] = "space";
})(RelationTargetType = exports.RelationTargetType || (exports.RelationTargetType = {}));
var RelationType;
(function (RelationType) {
    RelationType["Collaborator"] = "collaborator";
    RelationType["Favourite"] = "favourite";
    RelationType["Touched"] = "touched";
})(RelationType = exports.RelationType || (exports.RelationType = {}));
var RelevantUserFilter;
(function (RelevantUserFilter) {
    RelevantUserFilter["Collaborators"] = "collaborators";
})(RelevantUserFilter = exports.RelevantUserFilter || (exports.RelevantUserFilter = {}));
var RelevantUsersSortOrder;
(function (RelevantUsersSortOrder) {
    RelevantUsersSortOrder["Asc"] = "asc";
    RelevantUsersSortOrder["Desc"] = "desc";
})(RelevantUsersSortOrder = exports.RelevantUsersSortOrder || (exports.RelevantUsersSortOrder = {}));
var ResourceAccessType;
(function (ResourceAccessType) {
    ResourceAccessType["Edit"] = "EDIT";
    ResourceAccessType["View"] = "VIEW";
})(ResourceAccessType = exports.ResourceAccessType || (exports.ResourceAccessType = {}));
var ResourceType;
(function (ResourceType) {
    ResourceType["Database"] = "DATABASE";
    ResourceType["Folder"] = "FOLDER";
    ResourceType["Page"] = "PAGE";
    ResourceType["Space"] = "SPACE";
    ResourceType["Whiteboard"] = "WHITEBOARD";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
var ResponseType;
(function (ResponseType) {
    ResponseType["BulletListAdf"] = "BULLET_LIST_ADF";
    ResponseType["BulletListMarkdown"] = "BULLET_LIST_MARKDOWN";
    ResponseType["ParagraphPlaintext"] = "PARAGRAPH_PLAINTEXT";
})(ResponseType = exports.ResponseType || (exports.ResponseType = {}));
var ReverseTrialCohort;
(function (ReverseTrialCohort) {
    ReverseTrialCohort["Control"] = "CONTROL";
    ReverseTrialCohort["Enrolled"] = "ENROLLED";
    ReverseTrialCohort["NotEnrolled"] = "NOT_ENROLLED";
    ReverseTrialCohort["Unassigned"] = "UNASSIGNED";
    ReverseTrialCohort["Unknown"] = "UNKNOWN";
    ReverseTrialCohort["Variant"] = "VARIANT";
})(ReverseTrialCohort = exports.ReverseTrialCohort || (exports.ReverseTrialCohort = {}));
var RevertToLegacyEditorResult;
(function (RevertToLegacyEditorResult) {
    RevertToLegacyEditorResult["NotReverted"] = "NOT_REVERTED";
    RevertToLegacyEditorResult["Reverted"] = "REVERTED";
})(RevertToLegacyEditorResult = exports.RevertToLegacyEditorResult || (exports.RevertToLegacyEditorResult = {}));
var RoadmapChildIssuePlanningMode;
(function (RoadmapChildIssuePlanningMode) {
    RoadmapChildIssuePlanningMode["Date"] = "DATE";
    RoadmapChildIssuePlanningMode["Disabled"] = "DISABLED";
    RoadmapChildIssuePlanningMode["Sprint"] = "SPRINT";
})(RoadmapChildIssuePlanningMode = exports.RoadmapChildIssuePlanningMode || (exports.RoadmapChildIssuePlanningMode = {}));
var RoadmapEpicView;
(function (RoadmapEpicView) {
    RoadmapEpicView["All"] = "ALL";
    RoadmapEpicView["Completed"] = "COMPLETED";
    RoadmapEpicView["Incomplete"] = "INCOMPLETE";
})(RoadmapEpicView = exports.RoadmapEpicView || (exports.RoadmapEpicView = {}));
var RoadmapLevelOneView;
(function (RoadmapLevelOneView) {
    RoadmapLevelOneView["Complete1M"] = "COMPLETE1M";
    RoadmapLevelOneView["Complete3M"] = "COMPLETE3M";
    RoadmapLevelOneView["Complete6M"] = "COMPLETE6M";
    RoadmapLevelOneView["Complete9M"] = "COMPLETE9M";
    RoadmapLevelOneView["Complete12M"] = "COMPLETE12M";
    RoadmapLevelOneView["Incomplete"] = "INCOMPLETE";
})(RoadmapLevelOneView = exports.RoadmapLevelOneView || (exports.RoadmapLevelOneView = {}));
var RoadmapPaletteColor;
(function (RoadmapPaletteColor) {
    RoadmapPaletteColor["Blue"] = "BLUE";
    RoadmapPaletteColor["DarkBlue"] = "DARK_BLUE";
    RoadmapPaletteColor["DarkGreen"] = "DARK_GREEN";
    RoadmapPaletteColor["DarkGrey"] = "DARK_GREY";
    RoadmapPaletteColor["DarkOrange"] = "DARK_ORANGE";
    RoadmapPaletteColor["DarkPurple"] = "DARK_PURPLE";
    RoadmapPaletteColor["DarkTeal"] = "DARK_TEAL";
    RoadmapPaletteColor["DarkYellow"] = "DARK_YELLOW";
    RoadmapPaletteColor["Green"] = "GREEN";
    RoadmapPaletteColor["Grey"] = "GREY";
    RoadmapPaletteColor["Orange"] = "ORANGE";
    RoadmapPaletteColor["Purple"] = "PURPLE";
    RoadmapPaletteColor["Teal"] = "TEAL";
    RoadmapPaletteColor["Yellow"] = "YELLOW";
})(RoadmapPaletteColor = exports.RoadmapPaletteColor || (exports.RoadmapPaletteColor = {}));
var RoadmapRankPosition;
(function (RoadmapRankPosition) {
    RoadmapRankPosition["After"] = "AFTER";
    RoadmapRankPosition["Before"] = "BEFORE";
})(RoadmapRankPosition = exports.RoadmapRankPosition || (exports.RoadmapRankPosition = {}));
var RoadmapSprintState;
(function (RoadmapSprintState) {
    RoadmapSprintState["Active"] = "ACTIVE";
    RoadmapSprintState["Closed"] = "CLOSED";
    RoadmapSprintState["Future"] = "FUTURE";
})(RoadmapSprintState = exports.RoadmapSprintState || (exports.RoadmapSprintState = {}));
var RoadmapTimelineMode;
(function (RoadmapTimelineMode) {
    RoadmapTimelineMode["Months"] = "MONTHS";
    RoadmapTimelineMode["Quarters"] = "QUARTERS";
    RoadmapTimelineMode["Weeks"] = "WEEKS";
})(RoadmapTimelineMode = exports.RoadmapTimelineMode || (exports.RoadmapTimelineMode = {}));
var RoadmapVersionStatus;
(function (RoadmapVersionStatus) {
    RoadmapVersionStatus["Archived"] = "ARCHIVED";
    RoadmapVersionStatus["Released"] = "RELEASED";
    RoadmapVersionStatus["Unreleased"] = "UNRELEASED";
})(RoadmapVersionStatus = exports.RoadmapVersionStatus || (exports.RoadmapVersionStatus = {}));
var RoleAssignmentPrincipalType;
(function (RoleAssignmentPrincipalType) {
    RoleAssignmentPrincipalType["AccessClass"] = "ACCESS_CLASS";
    RoleAssignmentPrincipalType["App"] = "APP";
    RoleAssignmentPrincipalType["Group"] = "GROUP";
    RoleAssignmentPrincipalType["User"] = "USER";
})(RoleAssignmentPrincipalType = exports.RoleAssignmentPrincipalType || (exports.RoleAssignmentPrincipalType = {}));
var SandboxEventResult;
(function (SandboxEventResult) {
    SandboxEventResult["Failed"] = "failed";
    SandboxEventResult["Incomplete"] = "incomplete";
    SandboxEventResult["Successful"] = "successful";
    SandboxEventResult["Unknown"] = "unknown";
})(SandboxEventResult = exports.SandboxEventResult || (exports.SandboxEventResult = {}));
var SandboxEventSource;
(function (SandboxEventSource) {
    SandboxEventSource["Admin"] = "admin";
    SandboxEventSource["System"] = "system";
    SandboxEventSource["User"] = "user";
})(SandboxEventSource = exports.SandboxEventSource || (exports.SandboxEventSource = {}));
var SandboxEventStatus;
(function (SandboxEventStatus) {
    SandboxEventStatus["AwaitingReplay"] = "awaiting_replay";
    SandboxEventStatus["Cancelled"] = "cancelled";
    SandboxEventStatus["Completed"] = "completed";
    SandboxEventStatus["Started"] = "started";
})(SandboxEventStatus = exports.SandboxEventStatus || (exports.SandboxEventStatus = {}));
var SandboxEventType;
(function (SandboxEventType) {
    SandboxEventType["Create"] = "create";
    SandboxEventType["DataClone"] = "data_clone";
    SandboxEventType["DataCloneSelective"] = "data_clone_selective";
    SandboxEventType["HardDelete"] = "hard_delete";
    SandboxEventType["Reset"] = "reset";
    SandboxEventType["Reshard"] = "reshard";
    SandboxEventType["Rollback"] = "rollback";
    SandboxEventType["SoftDelete"] = "soft_delete";
})(SandboxEventType = exports.SandboxEventType || (exports.SandboxEventType = {}));
var Scope;
(function (Scope) {
    Scope["AdminContainer"] = "ADMIN_CONTAINER";
    Scope["ApiAccess"] = "API_ACCESS";
    Scope["ApplicationRoleRead"] = "APPLICATION_ROLE_READ";
    Scope["AsyncTaskDelete"] = "ASYNC_TASK_DELETE";
    Scope["AttachmentDelete"] = "ATTACHMENT_DELETE";
    Scope["AttachmentRead"] = "ATTACHMENT_READ";
    Scope["AttachmentWrite"] = "ATTACHMENT_WRITE";
    Scope["AuditLogRead"] = "AUDIT_LOG_READ";
    Scope["AuthConfluenceUser"] = "AUTH_CONFLUENCE_USER";
    Scope["AvatarDelete"] = "AVATAR_DELETE";
    Scope["AvatarRead"] = "AVATAR_READ";
    Scope["AvatarWrite"] = "AVATAR_WRITE";
    Scope["CatalogRead"] = "CATALOG_READ";
    Scope["CommentDelete"] = "COMMENT_DELETE";
    Scope["CommentPropertyDelete"] = "COMMENT_PROPERTY_DELETE";
    Scope["CommentPropertyRead"] = "COMMENT_PROPERTY_READ";
    Scope["CommentPropertyWrite"] = "COMMENT_PROPERTY_WRITE";
    Scope["CommentRead"] = "COMMENT_READ";
    Scope["CommentWrite"] = "COMMENT_WRITE";
    Scope["CompassAtlassianExternal"] = "COMPASS_ATLASSIAN_EXTERNAL";
    Scope["ConfluenceAtlassianExternal"] = "CONFLUENCE_ATLASSIAN_EXTERNAL";
    Scope["CustomFieldContextualConfigurationRead"] = "CUSTOM_FIELD_CONTEXTUAL_CONFIGURATION_READ";
    Scope["CustomFieldContextualConfigurationWrite"] = "CUSTOM_FIELD_CONTEXTUAL_CONFIGURATION_WRITE";
    Scope["DashboardDelete"] = "DASHBOARD_DELETE";
    Scope["DashboardPropertyDelete"] = "DASHBOARD_PROPERTY_DELETE";
    Scope["DashboardPropertyRead"] = "DASHBOARD_PROPERTY_READ";
    Scope["DashboardPropertyWrite"] = "DASHBOARD_PROPERTY_WRITE";
    Scope["DashboardRead"] = "DASHBOARD_READ";
    Scope["DashboardWrite"] = "DASHBOARD_WRITE";
    Scope["DeleteConfluenceAttachment"] = "DELETE_CONFLUENCE_ATTACHMENT";
    Scope["DeleteConfluenceBlogpost"] = "DELETE_CONFLUENCE_BLOGPOST";
    Scope["DeleteConfluenceComment"] = "DELETE_CONFLUENCE_COMMENT";
    Scope["DeleteConfluenceCustomContent"] = "DELETE_CONFLUENCE_CUSTOM_CONTENT";
    Scope["DeleteConfluenceDatabase"] = "DELETE_CONFLUENCE_DATABASE";
    Scope["DeleteConfluenceFolder"] = "DELETE_CONFLUENCE_FOLDER";
    Scope["DeleteConfluencePage"] = "DELETE_CONFLUENCE_PAGE";
    Scope["DeleteConfluenceSpace"] = "DELETE_CONFLUENCE_SPACE";
    Scope["DeleteConfluenceWhiteboard"] = "DELETE_CONFLUENCE_WHITEBOARD";
    Scope["DeleteJswBoardScopeAdmin"] = "DELETE_JSW_BOARD_SCOPE_ADMIN";
    Scope["DeleteJswSprint"] = "DELETE_JSW_SPRINT";
    Scope["DeleteOrganization"] = "DELETE_ORGANIZATION";
    Scope["DeleteOrganizationProperty"] = "DELETE_ORGANIZATION_PROPERTY";
    Scope["DeleteOrganizationUser"] = "DELETE_ORGANIZATION_USER";
    Scope["DeleteRequesttypeProperty"] = "DELETE_REQUESTTYPE_PROPERTY";
    Scope["DeleteRequestFeedback"] = "DELETE_REQUEST_FEEDBACK";
    Scope["DeleteRequestNotification"] = "DELETE_REQUEST_NOTIFICATION";
    Scope["DeleteRequestParticipant"] = "DELETE_REQUEST_PARTICIPANT";
    Scope["DeleteServicedeskCustomer"] = "DELETE_SERVICEDESK_CUSTOMER";
    Scope["DeleteServicedeskOrganization"] = "DELETE_SERVICEDESK_ORGANIZATION";
    Scope["DeleteServicedeskProperty"] = "DELETE_SERVICEDESK_PROPERTY";
    Scope["FieldConfigurationDelete"] = "FIELD_CONFIGURATION_DELETE";
    Scope["FieldConfigurationRead"] = "FIELD_CONFIGURATION_READ";
    Scope["FieldConfigurationSchemeDelete"] = "FIELD_CONFIGURATION_SCHEME_DELETE";
    Scope["FieldConfigurationSchemeRead"] = "FIELD_CONFIGURATION_SCHEME_READ";
    Scope["FieldConfigurationSchemeWrite"] = "FIELD_CONFIGURATION_SCHEME_WRITE";
    Scope["FieldConfigurationWrite"] = "FIELD_CONFIGURATION_WRITE";
    Scope["FieldDefaultValueRead"] = "FIELD_DEFAULT_VALUE_READ";
    Scope["FieldDefaultValueWrite"] = "FIELD_DEFAULT_VALUE_WRITE";
    Scope["FieldDelete"] = "FIELD_DELETE";
    Scope["FieldOptionsRead"] = "FIELD_OPTIONS_READ";
    Scope["FieldOptionDelete"] = "FIELD_OPTION_DELETE";
    Scope["FieldOptionRead"] = "FIELD_OPTION_READ";
    Scope["FieldOptionWrite"] = "FIELD_OPTION_WRITE";
    Scope["FieldRead"] = "FIELD_READ";
    Scope["FieldWrite"] = "FIELD_WRITE";
    Scope["FilterColumnDelete"] = "FILTER_COLUMN_DELETE";
    Scope["FilterColumnRead"] = "FILTER_COLUMN_READ";
    Scope["FilterColumnWrite"] = "FILTER_COLUMN_WRITE";
    Scope["FilterDefaultShareScopeRead"] = "FILTER_DEFAULT_SHARE_SCOPE_READ";
    Scope["FilterDefaultShareScopeWrite"] = "FILTER_DEFAULT_SHARE_SCOPE_WRITE";
    Scope["FilterDelete"] = "FILTER_DELETE";
    Scope["FilterRead"] = "FILTER_READ";
    Scope["FilterWrite"] = "FILTER_WRITE";
    Scope["GroupDelete"] = "GROUP_DELETE";
    Scope["GroupRead"] = "GROUP_READ";
    Scope["GroupWrite"] = "GROUP_WRITE";
    Scope["IdentityAtlassianExternal"] = "IDENTITY_ATLASSIAN_EXTERNAL";
    Scope["InstanceConfigurationRead"] = "INSTANCE_CONFIGURATION_READ";
    Scope["InstanceConfigurationWrite"] = "INSTANCE_CONFIGURATION_WRITE";
    Scope["IssueAdjustmentsDelete"] = "ISSUE_ADJUSTMENTS_DELETE";
    Scope["IssueAdjustmentsRead"] = "ISSUE_ADJUSTMENTS_READ";
    Scope["IssueAdjustmentsWrite"] = "ISSUE_ADJUSTMENTS_WRITE";
    Scope["IssueChangelogRead"] = "ISSUE_CHANGELOG_READ";
    Scope["IssueDelete"] = "ISSUE_DELETE";
    Scope["IssueDetailsRead"] = "ISSUE_DETAILS_READ";
    Scope["IssueEventRead"] = "ISSUE_EVENT_READ";
    Scope["IssueFieldValuesRead"] = "ISSUE_FIELD_VALUES_READ";
    Scope["IssueLinkDelete"] = "ISSUE_LINK_DELETE";
    Scope["IssueLinkRead"] = "ISSUE_LINK_READ";
    Scope["IssueLinkTypeDelete"] = "ISSUE_LINK_TYPE_DELETE";
    Scope["IssueLinkTypeRead"] = "ISSUE_LINK_TYPE_READ";
    Scope["IssueLinkTypeWrite"] = "ISSUE_LINK_TYPE_WRITE";
    Scope["IssueLinkWrite"] = "ISSUE_LINK_WRITE";
    Scope["IssueMetaRead"] = "ISSUE_META_READ";
    Scope["IssuePropertyDelete"] = "ISSUE_PROPERTY_DELETE";
    Scope["IssuePropertyRead"] = "ISSUE_PROPERTY_READ";
    Scope["IssuePropertyWrite"] = "ISSUE_PROPERTY_WRITE";
    Scope["IssueRead"] = "ISSUE_READ";
    Scope["IssueRemoteLinkDelete"] = "ISSUE_REMOTE_LINK_DELETE";
    Scope["IssueRemoteLinkRead"] = "ISSUE_REMOTE_LINK_READ";
    Scope["IssueRemoteLinkWrite"] = "ISSUE_REMOTE_LINK_WRITE";
    Scope["IssueSecurityLevelRead"] = "ISSUE_SECURITY_LEVEL_READ";
    Scope["IssueSecuritySchemeRead"] = "ISSUE_SECURITY_SCHEME_READ";
    Scope["IssueStatusRead"] = "ISSUE_STATUS_READ";
    Scope["IssueTimeTrackingRead"] = "ISSUE_TIME_TRACKING_READ";
    Scope["IssueTimeTrackingWrite"] = "ISSUE_TIME_TRACKING_WRITE";
    Scope["IssueTransitionRead"] = "ISSUE_TRANSITION_READ";
    Scope["IssueTypeDelete"] = "ISSUE_TYPE_DELETE";
    Scope["IssueTypeHierarchyRead"] = "ISSUE_TYPE_HIERARCHY_READ";
    Scope["IssueTypePropertyDelete"] = "ISSUE_TYPE_PROPERTY_DELETE";
    Scope["IssueTypePropertyRead"] = "ISSUE_TYPE_PROPERTY_READ";
    Scope["IssueTypePropertyWrite"] = "ISSUE_TYPE_PROPERTY_WRITE";
    Scope["IssueTypeRead"] = "ISSUE_TYPE_READ";
    Scope["IssueTypeSchemeDelete"] = "ISSUE_TYPE_SCHEME_DELETE";
    Scope["IssueTypeSchemeRead"] = "ISSUE_TYPE_SCHEME_READ";
    Scope["IssueTypeSchemeWrite"] = "ISSUE_TYPE_SCHEME_WRITE";
    Scope["IssueTypeScreenSchemeDelete"] = "ISSUE_TYPE_SCREEN_SCHEME_DELETE";
    Scope["IssueTypeScreenSchemeRead"] = "ISSUE_TYPE_SCREEN_SCHEME_READ";
    Scope["IssueTypeScreenSchemeWrite"] = "ISSUE_TYPE_SCREEN_SCHEME_WRITE";
    Scope["IssueTypeWrite"] = "ISSUE_TYPE_WRITE";
    Scope["IssueVotesRead"] = "ISSUE_VOTES_READ";
    Scope["IssueVoteRead"] = "ISSUE_VOTE_READ";
    Scope["IssueVoteWrite"] = "ISSUE_VOTE_WRITE";
    Scope["IssueWatcherRead"] = "ISSUE_WATCHER_READ";
    Scope["IssueWatcherWrite"] = "ISSUE_WATCHER_WRITE";
    Scope["IssueWorklogDelete"] = "ISSUE_WORKLOG_DELETE";
    Scope["IssueWorklogPropertyDelete"] = "ISSUE_WORKLOG_PROPERTY_DELETE";
    Scope["IssueWorklogPropertyRead"] = "ISSUE_WORKLOG_PROPERTY_READ";
    Scope["IssueWorklogPropertyWrite"] = "ISSUE_WORKLOG_PROPERTY_WRITE";
    Scope["IssueWorklogRead"] = "ISSUE_WORKLOG_READ";
    Scope["IssueWorklogWrite"] = "ISSUE_WORKLOG_WRITE";
    Scope["IssueWrite"] = "ISSUE_WRITE";
    Scope["JiraAtlassianExternal"] = "JIRA_ATLASSIAN_EXTERNAL";
    Scope["JiraExpressionsRead"] = "JIRA_EXPRESSIONS_READ";
    Scope["JqlRead"] = "JQL_READ";
    Scope["JqlValidate"] = "JQL_VALIDATE";
    Scope["LabelRead"] = "LABEL_READ";
    Scope["LicenseRead"] = "LICENSE_READ";
    Scope["ManageApp"] = "MANAGE_APP";
    Scope["ManageDirectory"] = "MANAGE_DIRECTORY";
    Scope["ManageJiraConfiguration"] = "MANAGE_JIRA_CONFIGURATION";
    Scope["ManageJiraDataProvider"] = "MANAGE_JIRA_DATA_PROVIDER";
    Scope["ManageJiraProject"] = "MANAGE_JIRA_PROJECT";
    Scope["ManageJiraWebhook"] = "MANAGE_JIRA_WEBHOOK";
    Scope["ManageOrg"] = "MANAGE_ORG";
    Scope["ManageOrgPublicApis"] = "MANAGE_ORG_PUBLIC_APIS";
    Scope["ManageServicedeskCustomer"] = "MANAGE_SERVICEDESK_CUSTOMER";
    Scope["MigrateConfluence"] = "MIGRATE_CONFLUENCE";
    Scope["NotificationSchemeRead"] = "NOTIFICATION_SCHEME_READ";
    Scope["NotificationSend"] = "NOTIFICATION_SEND";
    Scope["PermissionDelete"] = "PERMISSION_DELETE";
    Scope["PermissionRead"] = "PERMISSION_READ";
    Scope["PermissionSchemeDelete"] = "PERMISSION_SCHEME_DELETE";
    Scope["PermissionSchemeRead"] = "PERMISSION_SCHEME_READ";
    Scope["PermissionSchemeWrite"] = "PERMISSION_SCHEME_WRITE";
    Scope["PermissionWrite"] = "PERMISSION_WRITE";
    Scope["PriorityRead"] = "PRIORITY_READ";
    Scope["ProjectAvatarDelete"] = "PROJECT_AVATAR_DELETE";
    Scope["ProjectAvatarRead"] = "PROJECT_AVATAR_READ";
    Scope["ProjectAvatarWrite"] = "PROJECT_AVATAR_WRITE";
    Scope["ProjectCategoryDelete"] = "PROJECT_CATEGORY_DELETE";
    Scope["ProjectCategoryRead"] = "PROJECT_CATEGORY_READ";
    Scope["ProjectCategoryWrite"] = "PROJECT_CATEGORY_WRITE";
    Scope["ProjectComponentDelete"] = "PROJECT_COMPONENT_DELETE";
    Scope["ProjectComponentRead"] = "PROJECT_COMPONENT_READ";
    Scope["ProjectComponentWrite"] = "PROJECT_COMPONENT_WRITE";
    Scope["ProjectDelete"] = "PROJECT_DELETE";
    Scope["ProjectEmailRead"] = "PROJECT_EMAIL_READ";
    Scope["ProjectEmailWrite"] = "PROJECT_EMAIL_WRITE";
    Scope["ProjectFeatureRead"] = "PROJECT_FEATURE_READ";
    Scope["ProjectFeatureWrite"] = "PROJECT_FEATURE_WRITE";
    Scope["ProjectPropertyDelete"] = "PROJECT_PROPERTY_DELETE";
    Scope["ProjectPropertyRead"] = "PROJECT_PROPERTY_READ";
    Scope["ProjectPropertyWrite"] = "PROJECT_PROPERTY_WRITE";
    Scope["ProjectRead"] = "PROJECT_READ";
    Scope["ProjectRoleDelete"] = "PROJECT_ROLE_DELETE";
    Scope["ProjectRoleRead"] = "PROJECT_ROLE_READ";
    Scope["ProjectRoleWrite"] = "PROJECT_ROLE_WRITE";
    Scope["ProjectTypeRead"] = "PROJECT_TYPE_READ";
    Scope["ProjectVersionDelete"] = "PROJECT_VERSION_DELETE";
    Scope["ProjectVersionRead"] = "PROJECT_VERSION_READ";
    Scope["ProjectVersionWrite"] = "PROJECT_VERSION_WRITE";
    Scope["ProjectWrite"] = "PROJECT_WRITE";
    Scope["PullRequest"] = "PULL_REQUEST";
    Scope["PullRequestWrite"] = "PULL_REQUEST_WRITE";
    Scope["ReadAccount"] = "READ_ACCOUNT";
    Scope["ReadAppSystemToken"] = "READ_APP_SYSTEM_TOKEN";
    Scope["ReadCompassAttentionItem"] = "READ_COMPASS_ATTENTION_ITEM";
    Scope["ReadCompassComponent"] = "READ_COMPASS_COMPONENT";
    Scope["ReadCompassEvent"] = "READ_COMPASS_EVENT";
    Scope["ReadCompassMetric"] = "READ_COMPASS_METRIC";
    Scope["ReadCompassScorecard"] = "READ_COMPASS_SCORECARD";
    Scope["ReadConfluenceAttachment"] = "READ_CONFLUENCE_ATTACHMENT";
    Scope["ReadConfluenceAuditLog"] = "READ_CONFLUENCE_AUDIT_LOG";
    Scope["ReadConfluenceBlogpost"] = "READ_CONFLUENCE_BLOGPOST";
    Scope["ReadConfluenceComment"] = "READ_CONFLUENCE_COMMENT";
    Scope["ReadConfluenceConfiguration"] = "READ_CONFLUENCE_CONFIGURATION";
    Scope["ReadConfluenceContentAnalytics"] = "READ_CONFLUENCE_CONTENT_ANALYTICS";
    Scope["ReadConfluenceContentMetadata"] = "READ_CONFLUENCE_CONTENT_METADATA";
    Scope["ReadConfluenceContentPermission"] = "READ_CONFLUENCE_CONTENT_PERMISSION";
    Scope["ReadConfluenceContentProperty"] = "READ_CONFLUENCE_CONTENT_PROPERTY";
    Scope["ReadConfluenceContentRestriction"] = "READ_CONFLUENCE_CONTENT_RESTRICTION";
    Scope["ReadConfluenceCustomContent"] = "READ_CONFLUENCE_CUSTOM_CONTENT";
    Scope["ReadConfluenceDatabase"] = "READ_CONFLUENCE_DATABASE";
    Scope["ReadConfluenceFolder"] = "READ_CONFLUENCE_FOLDER";
    Scope["ReadConfluenceGroup"] = "READ_CONFLUENCE_GROUP";
    Scope["ReadConfluenceInlineTask"] = "READ_CONFLUENCE_INLINE_TASK";
    Scope["ReadConfluenceLabel"] = "READ_CONFLUENCE_LABEL";
    Scope["ReadConfluencePage"] = "READ_CONFLUENCE_PAGE";
    Scope["ReadConfluenceRelation"] = "READ_CONFLUENCE_RELATION";
    Scope["ReadConfluenceSpace"] = "READ_CONFLUENCE_SPACE";
    Scope["ReadConfluenceSpacePermission"] = "READ_CONFLUENCE_SPACE_PERMISSION";
    Scope["ReadConfluenceSpaceProperty"] = "READ_CONFLUENCE_SPACE_PROPERTY";
    Scope["ReadConfluenceSpaceSetting"] = "READ_CONFLUENCE_SPACE_SETTING";
    Scope["ReadConfluenceTemplate"] = "READ_CONFLUENCE_TEMPLATE";
    Scope["ReadConfluenceUser"] = "READ_CONFLUENCE_USER";
    Scope["ReadConfluenceUserProperty"] = "READ_CONFLUENCE_USER_PROPERTY";
    Scope["ReadConfluenceWatcher"] = "READ_CONFLUENCE_WATCHER";
    Scope["ReadConfluenceWhiteboard"] = "READ_CONFLUENCE_WHITEBOARD";
    Scope["ReadContainer"] = "READ_CONTAINER";
    Scope["ReadCustomer"] = "READ_CUSTOMER";
    Scope["ReadDesign"] = "READ_DESIGN";
    Scope["ReadJiraUser"] = "READ_JIRA_USER";
    Scope["ReadJiraWork"] = "READ_JIRA_WORK";
    Scope["ReadJswBoardScope"] = "READ_JSW_BOARD_SCOPE";
    Scope["ReadJswBoardScopeAdmin"] = "READ_JSW_BOARD_SCOPE_ADMIN";
    Scope["ReadJswBuild"] = "READ_JSW_BUILD";
    Scope["ReadJswDeployment"] = "READ_JSW_DEPLOYMENT";
    Scope["ReadJswEpic"] = "READ_JSW_EPIC";
    Scope["ReadJswFeatureFlag"] = "READ_JSW_FEATURE_FLAG";
    Scope["ReadJswIssue"] = "READ_JSW_ISSUE";
    Scope["ReadJswRemoteLink"] = "READ_JSW_REMOTE_LINK";
    Scope["ReadJswSourceCode"] = "READ_JSW_SOURCE_CODE";
    Scope["ReadJswSprint"] = "READ_JSW_SPRINT";
    Scope["ReadKnowledgebase"] = "READ_KNOWLEDGEBASE";
    Scope["ReadMe"] = "READ_ME";
    Scope["ReadNotifications"] = "READ_NOTIFICATIONS";
    Scope["ReadOrganization"] = "READ_ORGANIZATION";
    Scope["ReadOrganizationProperty"] = "READ_ORGANIZATION_PROPERTY";
    Scope["ReadOrganizationUser"] = "READ_ORGANIZATION_USER";
    Scope["ReadQueue"] = "READ_QUEUE";
    Scope["ReadRequest"] = "READ_REQUEST";
    Scope["ReadRequesttype"] = "READ_REQUESTTYPE";
    Scope["ReadRequesttypeProperty"] = "READ_REQUESTTYPE_PROPERTY";
    Scope["ReadRequestAction"] = "READ_REQUEST_ACTION";
    Scope["ReadRequestApproval"] = "READ_REQUEST_APPROVAL";
    Scope["ReadRequestAttachment"] = "READ_REQUEST_ATTACHMENT";
    Scope["ReadRequestComment"] = "READ_REQUEST_COMMENT";
    Scope["ReadRequestFeedback"] = "READ_REQUEST_FEEDBACK";
    Scope["ReadRequestNotification"] = "READ_REQUEST_NOTIFICATION";
    Scope["ReadRequestParticipant"] = "READ_REQUEST_PARTICIPANT";
    Scope["ReadRequestSla"] = "READ_REQUEST_SLA";
    Scope["ReadRequestStatus"] = "READ_REQUEST_STATUS";
    Scope["ReadServicedesk"] = "READ_SERVICEDESK";
    Scope["ReadServicedeskCustomer"] = "READ_SERVICEDESK_CUSTOMER";
    Scope["ReadServicedeskOrganization"] = "READ_SERVICEDESK_ORGANIZATION";
    Scope["ReadServicedeskProperty"] = "READ_SERVICEDESK_PROPERTY";
    Scope["ReadServicedeskRequest"] = "READ_SERVICEDESK_REQUEST";
    Scope["ReadTeam"] = "READ_TEAM";
    Scope["ReadTeamMembers"] = "READ_TEAM_MEMBERS";
    Scope["ReadTeamMembersTemp"] = "READ_TEAM_MEMBERS_TEMP";
    Scope["ReadTeamTemp"] = "READ_TEAM_TEMP";
    Scope["ReadTownsquareComment"] = "READ_TOWNSQUARE_COMMENT";
    Scope["ReadTownsquareGoal"] = "READ_TOWNSQUARE_GOAL";
    Scope["ReadTownsquareProject"] = "READ_TOWNSQUARE_PROJECT";
    Scope["ReadTownsquareWorkspace"] = "READ_TOWNSQUARE_WORKSPACE";
    Scope["ResolutionRead"] = "RESOLUTION_READ";
    Scope["ScreenableFieldDelete"] = "SCREENABLE_FIELD_DELETE";
    Scope["ScreenableFieldRead"] = "SCREENABLE_FIELD_READ";
    Scope["ScreenableFieldWrite"] = "SCREENABLE_FIELD_WRITE";
    Scope["ScreenDelete"] = "SCREEN_DELETE";
    Scope["ScreenFieldRead"] = "SCREEN_FIELD_READ";
    Scope["ScreenRead"] = "SCREEN_READ";
    Scope["ScreenSchemeDelete"] = "SCREEN_SCHEME_DELETE";
    Scope["ScreenSchemeRead"] = "SCREEN_SCHEME_READ";
    Scope["ScreenSchemeWrite"] = "SCREEN_SCHEME_WRITE";
    Scope["ScreenTabDelete"] = "SCREEN_TAB_DELETE";
    Scope["ScreenTabRead"] = "SCREEN_TAB_READ";
    Scope["ScreenTabWrite"] = "SCREEN_TAB_WRITE";
    Scope["ScreenWrite"] = "SCREEN_WRITE";
    Scope["StatusRead"] = "STATUS_READ";
    Scope["StorageApp"] = "STORAGE_APP";
    Scope["TrelloAtlassianExternal"] = "TRELLO_ATLASSIAN_EXTERNAL";
    Scope["UserColumnsRead"] = "USER_COLUMNS_READ";
    Scope["UserConfigurationDelete"] = "USER_CONFIGURATION_DELETE";
    Scope["UserConfigurationRead"] = "USER_CONFIGURATION_READ";
    Scope["UserConfigurationWrite"] = "USER_CONFIGURATION_WRITE";
    Scope["UserPropertyDelete"] = "USER_PROPERTY_DELETE";
    Scope["UserPropertyRead"] = "USER_PROPERTY_READ";
    Scope["UserPropertyWrite"] = "USER_PROPERTY_WRITE";
    Scope["UserRead"] = "USER_READ";
    Scope["ViewUserprofile"] = "VIEW_USERPROFILE";
    Scope["WebhookDelete"] = "WEBHOOK_DELETE";
    Scope["WebhookRead"] = "WEBHOOK_READ";
    Scope["WebhookWrite"] = "WEBHOOK_WRITE";
    Scope["WorkflowDelete"] = "WORKFLOW_DELETE";
    Scope["WorkflowPropertyDelete"] = "WORKFLOW_PROPERTY_DELETE";
    Scope["WorkflowPropertyRead"] = "WORKFLOW_PROPERTY_READ";
    Scope["WorkflowPropertyWrite"] = "WORKFLOW_PROPERTY_WRITE";
    Scope["WorkflowRead"] = "WORKFLOW_READ";
    Scope["WorkflowSchemeDelete"] = "WORKFLOW_SCHEME_DELETE";
    Scope["WorkflowSchemeRead"] = "WORKFLOW_SCHEME_READ";
    Scope["WorkflowSchemeWrite"] = "WORKFLOW_SCHEME_WRITE";
    Scope["WorkflowWrite"] = "WORKFLOW_WRITE";
    Scope["WriteCompassComponent"] = "WRITE_COMPASS_COMPONENT";
    Scope["WriteCompassEvent"] = "WRITE_COMPASS_EVENT";
    Scope["WriteCompassMetric"] = "WRITE_COMPASS_METRIC";
    Scope["WriteCompassScorecard"] = "WRITE_COMPASS_SCORECARD";
    Scope["WriteConfluenceAttachment"] = "WRITE_CONFLUENCE_ATTACHMENT";
    Scope["WriteConfluenceAuditLog"] = "WRITE_CONFLUENCE_AUDIT_LOG";
    Scope["WriteConfluenceBlogpost"] = "WRITE_CONFLUENCE_BLOGPOST";
    Scope["WriteConfluenceComment"] = "WRITE_CONFLUENCE_COMMENT";
    Scope["WriteConfluenceConfiguration"] = "WRITE_CONFLUENCE_CONFIGURATION";
    Scope["WriteConfluenceContentProperty"] = "WRITE_CONFLUENCE_CONTENT_PROPERTY";
    Scope["WriteConfluenceContentRestriction"] = "WRITE_CONFLUENCE_CONTENT_RESTRICTION";
    Scope["WriteConfluenceCustomContent"] = "WRITE_CONFLUENCE_CUSTOM_CONTENT";
    Scope["WriteConfluenceDatabase"] = "WRITE_CONFLUENCE_DATABASE";
    Scope["WriteConfluenceFolder"] = "WRITE_CONFLUENCE_FOLDER";
    Scope["WriteConfluenceGroup"] = "WRITE_CONFLUENCE_GROUP";
    Scope["WriteConfluenceInlineTask"] = "WRITE_CONFLUENCE_INLINE_TASK";
    Scope["WriteConfluenceLabel"] = "WRITE_CONFLUENCE_LABEL";
    Scope["WriteConfluencePage"] = "WRITE_CONFLUENCE_PAGE";
    Scope["WriteConfluenceRelation"] = "WRITE_CONFLUENCE_RELATION";
    Scope["WriteConfluenceSpace"] = "WRITE_CONFLUENCE_SPACE";
    Scope["WriteConfluenceSpacePermission"] = "WRITE_CONFLUENCE_SPACE_PERMISSION";
    Scope["WriteConfluenceSpaceProperty"] = "WRITE_CONFLUENCE_SPACE_PROPERTY";
    Scope["WriteConfluenceSpaceSetting"] = "WRITE_CONFLUENCE_SPACE_SETTING";
    Scope["WriteConfluenceTemplate"] = "WRITE_CONFLUENCE_TEMPLATE";
    Scope["WriteConfluenceUserProperty"] = "WRITE_CONFLUENCE_USER_PROPERTY";
    Scope["WriteConfluenceWatcher"] = "WRITE_CONFLUENCE_WATCHER";
    Scope["WriteConfluenceWhiteboard"] = "WRITE_CONFLUENCE_WHITEBOARD";
    Scope["WriteContainer"] = "WRITE_CONTAINER";
    Scope["WriteCustomer"] = "WRITE_CUSTOMER";
    Scope["WriteDesign"] = "WRITE_DESIGN";
    Scope["WriteJiraWork"] = "WRITE_JIRA_WORK";
    Scope["WriteJswBoardScope"] = "WRITE_JSW_BOARD_SCOPE";
    Scope["WriteJswBoardScopeAdmin"] = "WRITE_JSW_BOARD_SCOPE_ADMIN";
    Scope["WriteJswBuild"] = "WRITE_JSW_BUILD";
    Scope["WriteJswDeployment"] = "WRITE_JSW_DEPLOYMENT";
    Scope["WriteJswEpic"] = "WRITE_JSW_EPIC";
    Scope["WriteJswFeatureFlag"] = "WRITE_JSW_FEATURE_FLAG";
    Scope["WriteJswIssue"] = "WRITE_JSW_ISSUE";
    Scope["WriteJswRemoteLink"] = "WRITE_JSW_REMOTE_LINK";
    Scope["WriteJswSourceCode"] = "WRITE_JSW_SOURCE_CODE";
    Scope["WriteJswSprint"] = "WRITE_JSW_SPRINT";
    Scope["WriteNotifications"] = "WRITE_NOTIFICATIONS";
    Scope["WriteOrganization"] = "WRITE_ORGANIZATION";
    Scope["WriteOrganizationProperty"] = "WRITE_ORGANIZATION_PROPERTY";
    Scope["WriteOrganizationUser"] = "WRITE_ORGANIZATION_USER";
    Scope["WriteRequest"] = "WRITE_REQUEST";
    Scope["WriteRequesttype"] = "WRITE_REQUESTTYPE";
    Scope["WriteRequesttypeProperty"] = "WRITE_REQUESTTYPE_PROPERTY";
    Scope["WriteRequestApproval"] = "WRITE_REQUEST_APPROVAL";
    Scope["WriteRequestAttachment"] = "WRITE_REQUEST_ATTACHMENT";
    Scope["WriteRequestComment"] = "WRITE_REQUEST_COMMENT";
    Scope["WriteRequestFeedback"] = "WRITE_REQUEST_FEEDBACK";
    Scope["WriteRequestNotification"] = "WRITE_REQUEST_NOTIFICATION";
    Scope["WriteRequestParticipant"] = "WRITE_REQUEST_PARTICIPANT";
    Scope["WriteRequestStatus"] = "WRITE_REQUEST_STATUS";
    Scope["WriteServicedesk"] = "WRITE_SERVICEDESK";
    Scope["WriteServicedeskCustomer"] = "WRITE_SERVICEDESK_CUSTOMER";
    Scope["WriteServicedeskOrganization"] = "WRITE_SERVICEDESK_ORGANIZATION";
    Scope["WriteServicedeskProperty"] = "WRITE_SERVICEDESK_PROPERTY";
    Scope["WriteServicedeskRequest"] = "WRITE_SERVICEDESK_REQUEST";
    Scope["WriteTeam"] = "WRITE_TEAM";
    Scope["WriteTeamMembersTemp"] = "WRITE_TEAM_MEMBERS_TEMP";
    Scope["WriteTeamTemp"] = "WRITE_TEAM_TEMP";
    Scope["WriteTownsquareGoal"] = "WRITE_TOWNSQUARE_GOAL";
    Scope["WriteTownsquareProject"] = "WRITE_TOWNSQUARE_PROJECT";
    Scope["WriteTownsquareRelationship"] = "WRITE_TOWNSQUARE_RELATIONSHIP";
})(Scope = exports.Scope || (exports.Scope = {}));
var SearchBoardProductType;
(function (SearchBoardProductType) {
    SearchBoardProductType["Business"] = "BUSINESS";
    SearchBoardProductType["Software"] = "SOFTWARE";
})(SearchBoardProductType = exports.SearchBoardProductType || (exports.SearchBoardProductType = {}));
var SearchCombinationType;
(function (SearchCombinationType) {
    SearchCombinationType["And"] = "AND";
    SearchCombinationType["Or"] = "OR";
})(SearchCombinationType = exports.SearchCombinationType || (exports.SearchCombinationType = {}));
var SearchConfluenceDocumentStatus;
(function (SearchConfluenceDocumentStatus) {
    SearchConfluenceDocumentStatus["Archived"] = "ARCHIVED";
    SearchConfluenceDocumentStatus["Current"] = "CURRENT";
    SearchConfluenceDocumentStatus["Draft"] = "DRAFT";
})(SearchConfluenceDocumentStatus = exports.SearchConfluenceDocumentStatus || (exports.SearchConfluenceDocumentStatus = {}));
var SearchConfluenceRangeField;
(function (SearchConfluenceRangeField) {
    SearchConfluenceRangeField["Created"] = "CREATED";
    SearchConfluenceRangeField["Lastmodified"] = "LASTMODIFIED";
})(SearchConfluenceRangeField = exports.SearchConfluenceRangeField || (exports.SearchConfluenceRangeField = {}));
var SearchContainerStatus;
(function (SearchContainerStatus) {
    SearchContainerStatus["Archived"] = "ARCHIVED";
    SearchContainerStatus["Current"] = "CURRENT";
})(SearchContainerStatus = exports.SearchContainerStatus || (exports.SearchContainerStatus = {}));
var SearchIssueStatusCategory;
(function (SearchIssueStatusCategory) {
    SearchIssueStatusCategory["Done"] = "DONE";
    SearchIssueStatusCategory["Open"] = "OPEN";
})(SearchIssueStatusCategory = exports.SearchIssueStatusCategory || (exports.SearchIssueStatusCategory = {}));
var SearchLinkedEntityGranularity;
(function (SearchLinkedEntityGranularity) {
    SearchLinkedEntityGranularity["AllMatchingMessages"] = "ALL_MATCHING_MESSAGES";
    SearchLinkedEntityGranularity["Default"] = "DEFAULT";
    SearchLinkedEntityGranularity["FullThread"] = "FULL_THREAD";
})(SearchLinkedEntityGranularity = exports.SearchLinkedEntityGranularity || (exports.SearchLinkedEntityGranularity = {}));
var SearchLinkedResultCategory;
(function (SearchLinkedResultCategory) {
    SearchLinkedResultCategory["MentionedBy"] = "mentionedBy";
    SearchLinkedResultCategory["Mentions"] = "mentions";
    SearchLinkedResultCategory["Similar"] = "similar";
})(SearchLinkedResultCategory = exports.SearchLinkedResultCategory || (exports.SearchLinkedResultCategory = {}));
var SearchParticipantType;
(function (SearchParticipantType) {
    SearchParticipantType["Contributor"] = "CONTRIBUTOR";
    SearchParticipantType["Mentions"] = "MENTIONS";
    SearchParticipantType["Presence"] = "PRESENCE";
})(SearchParticipantType = exports.SearchParticipantType || (exports.SearchParticipantType = {}));
var SearchProjectType;
(function (SearchProjectType) {
    SearchProjectType["Business"] = "business";
    SearchProjectType["ProductDiscovery"] = "product_discovery";
    SearchProjectType["ServiceDesk"] = "service_desk";
    SearchProjectType["Software"] = "software";
})(SearchProjectType = exports.SearchProjectType || (exports.SearchProjectType = {}));
var SearchResultType;
(function (SearchResultType) {
    SearchResultType["Ask"] = "ask";
    SearchResultType["Attachment"] = "attachment";
    SearchResultType["Blogpost"] = "blogpost";
    SearchResultType["Board"] = "board";
    SearchResultType["Comment"] = "comment";
    SearchResultType["Component"] = "component";
    SearchResultType["Dashboard"] = "dashboard";
    SearchResultType["Database"] = "database";
    SearchResultType["Document"] = "document";
    SearchResultType["Embed"] = "embed";
    SearchResultType["Filter"] = "filter";
    SearchResultType["FocusArea"] = "focus_area";
    SearchResultType["FocusAreaStatusUpdate"] = "focus_area_status_update";
    SearchResultType["Folder"] = "folder";
    SearchResultType["Goal"] = "goal";
    SearchResultType["GoalUpdate"] = "goal_update";
    SearchResultType["Issue"] = "issue";
    SearchResultType["Learning"] = "learning";
    SearchResultType["Message"] = "message";
    SearchResultType["Object"] = "object";
    SearchResultType["Page"] = "page";
    SearchResultType["Plan"] = "plan";
    SearchResultType["Presentation"] = "presentation";
    SearchResultType["Project"] = "project";
    SearchResultType["ProjectUpdate"] = "project_update";
    SearchResultType["Question"] = "question";
    SearchResultType["Repository"] = "repository";
    SearchResultType["Schema"] = "schema";
    SearchResultType["Space"] = "space";
    SearchResultType["Spreadsheet"] = "spreadsheet";
    SearchResultType["Tag"] = "tag";
    SearchResultType["Type"] = "type";
    SearchResultType["Unrecognised"] = "unrecognised";
    SearchResultType["Whiteboard"] = "whiteboard";
})(SearchResultType = exports.SearchResultType || (exports.SearchResultType = {}));
var SearchSortOrder;
(function (SearchSortOrder) {
    SearchSortOrder["Asc"] = "ASC";
    SearchSortOrder["Desc"] = "DESC";
})(SearchSortOrder = exports.SearchSortOrder || (exports.SearchSortOrder = {}));
var SearchThirdPartyRangeField;
(function (SearchThirdPartyRangeField) {
    SearchThirdPartyRangeField["Created"] = "CREATED";
    SearchThirdPartyRangeField["Lastmodified"] = "LASTMODIFIED";
})(SearchThirdPartyRangeField = exports.SearchThirdPartyRangeField || (exports.SearchThirdPartyRangeField = {}));
var SearchesByTermColumns;
(function (SearchesByTermColumns) {
    SearchesByTermColumns["PageViewedPercentage"] = "pageViewedPercentage";
    SearchesByTermColumns["SearchClickCount"] = "searchClickCount";
    SearchesByTermColumns["SearchSessionCount"] = "searchSessionCount";
    SearchesByTermColumns["SearchTerm"] = "searchTerm";
    SearchesByTermColumns["Total"] = "total";
    SearchesByTermColumns["UniqueUsers"] = "uniqueUsers";
})(SearchesByTermColumns = exports.SearchesByTermColumns || (exports.SearchesByTermColumns = {}));
var SearchesByTermPeriod;
(function (SearchesByTermPeriod) {
    SearchesByTermPeriod["Day"] = "day";
    SearchesByTermPeriod["Month"] = "month";
    SearchesByTermPeriod["Week"] = "week";
})(SearchesByTermPeriod = exports.SearchesByTermPeriod || (exports.SearchesByTermPeriod = {}));
var ShardedGraphStoreAtlasHomeRankingCriteriaEnum;
(function (ShardedGraphStoreAtlasHomeRankingCriteriaEnum) {
    ShardedGraphStoreAtlasHomeRankingCriteriaEnum["RoundRobinRandom"] = "ROUND_ROBIN_RANDOM";
})(ShardedGraphStoreAtlasHomeRankingCriteriaEnum = exports.ShardedGraphStoreAtlasHomeRankingCriteriaEnum || (exports.ShardedGraphStoreAtlasHomeRankingCriteriaEnum = {}));
var ShardedGraphStoreAtlasHomeSourcesEnum;
(function (ShardedGraphStoreAtlasHomeSourcesEnum) {
    ShardedGraphStoreAtlasHomeSourcesEnum["JiraEpicWithoutProject"] = "JIRA_EPIC_WITHOUT_PROJECT";
    ShardedGraphStoreAtlasHomeSourcesEnum["JiraIssueAssigned"] = "JIRA_ISSUE_ASSIGNED";
    ShardedGraphStoreAtlasHomeSourcesEnum["JiraIssueNearOverdue"] = "JIRA_ISSUE_NEAR_OVERDUE";
    ShardedGraphStoreAtlasHomeSourcesEnum["JiraIssueOverdue"] = "JIRA_ISSUE_OVERDUE";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserJoinFirstTeam"] = "USER_JOIN_FIRST_TEAM";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserPageNotViewedByOthers"] = "USER_PAGE_NOT_VIEWED_BY_OTHERS";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserShouldFollowGoal"] = "USER_SHOULD_FOLLOW_GOAL";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserShouldViewSharedPage"] = "USER_SHOULD_VIEW_SHARED_PAGE";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewAssignedIssue"] = "USER_VIEW_ASSIGNED_ISSUE";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewNegativeGoal"] = "USER_VIEW_NEGATIVE_GOAL";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewNegativeProject"] = "USER_VIEW_NEGATIVE_PROJECT";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewPageComments"] = "USER_VIEW_PAGE_COMMENTS";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewSharedVideo"] = "USER_VIEW_SHARED_VIDEO";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewTaggedVideoComment"] = "USER_VIEW_TAGGED_VIDEO_COMMENT";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewUpdatedGoal"] = "USER_VIEW_UPDATED_GOAL";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewUpdatedPriorityIssue"] = "USER_VIEW_UPDATED_PRIORITY_ISSUE";
    ShardedGraphStoreAtlasHomeSourcesEnum["UserViewUpdatedProject"] = "USER_VIEW_UPDATED_PROJECT";
})(ShardedGraphStoreAtlasHomeSourcesEnum = exports.ShardedGraphStoreAtlasHomeSourcesEnum || (exports.ShardedGraphStoreAtlasHomeSourcesEnum = {}));
var ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput;
(function (ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput) {
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["NotSet"] = "NOT_SET";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P1"] = "P1";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P2"] = "P2";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P3"] = "P3";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P4"] = "P4";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["P5"] = "P5";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["Pending"] = "PENDING";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput || (exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentPriorityInput = {}));
var ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput;
(function (ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput) {
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Done"] = "DONE";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Indeterminate"] = "INDETERMINATE";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["New"] = "NEW";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["NotSet"] = "NOT_SET";
    ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput["Undefined"] = "UNDEFINED";
})(ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput || (exports.ShardedGraphStoreCreateComponentImpactedByIncidentJiraIncidentStatusInput = {}));
var ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput;
(function (ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput) {
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["ExistingWorkItem"] = "EXISTING_WORK_ITEM";
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["NewWorkItem"] = "NEW_WORK_ITEM";
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput["NotSet"] = "NOT_SET";
})(ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput || (exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationLinkTypeInput = {}));
var ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput;
(function (ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput) {
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Accepted"] = "ACCEPTED";
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Open"] = "OPEN";
    ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput["Rejected"] = "REJECTED";
})(ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput || (exports.ShardedGraphStoreCreateJcsIssueAssociatedSupportEscalationEscalationStatusInput = {}));
var ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput;
(function (ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput) {
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Critical"] = "CRITICAL";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["High"] = "HIGH";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Low"] = "LOW";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Medium"] = "MEDIUM";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["NotSet"] = "NOT_SET";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput || (exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilitySeverityInput = {}));
var ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput;
(function (ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput) {
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Closed"] = "CLOSED";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Ignored"] = "IGNORED";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["NotSet"] = "NOT_SET";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Open"] = "OPEN";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput || (exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityStatusInput = {}));
var ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput;
(function (ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput) {
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Dast"] = "DAST";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["NotSet"] = "NOT_SET";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Sast"] = "SAST";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Sca"] = "SCA";
    ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput || (exports.ShardedGraphStoreCreateVulnerabilityAssociatedIssueVulnerabilityTypeInput = {}));
var ShardedGraphStoreCypherQueryV2BatchVersionEnum;
(function (ShardedGraphStoreCypherQueryV2BatchVersionEnum) {
    ShardedGraphStoreCypherQueryV2BatchVersionEnum["V2"] = "V2";
    ShardedGraphStoreCypherQueryV2BatchVersionEnum["V3"] = "V3";
})(ShardedGraphStoreCypherQueryV2BatchVersionEnum = exports.ShardedGraphStoreCypherQueryV2BatchVersionEnum || (exports.ShardedGraphStoreCypherQueryV2BatchVersionEnum = {}));
var ShardedGraphStoreCypherQueryV2VersionEnum;
(function (ShardedGraphStoreCypherQueryV2VersionEnum) {
    ShardedGraphStoreCypherQueryV2VersionEnum["V2"] = "V2";
    ShardedGraphStoreCypherQueryV2VersionEnum["V3"] = "V3";
})(ShardedGraphStoreCypherQueryV2VersionEnum = exports.ShardedGraphStoreCypherQueryV2VersionEnum || (exports.ShardedGraphStoreCypherQueryV2VersionEnum = {}));
var ShardedGraphStoreIssueAssociatedDeploymentDeploymentState;
(function (ShardedGraphStoreIssueAssociatedDeploymentDeploymentState) {
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    ShardedGraphStoreIssueAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreIssueAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreIssueAssociatedDeploymentDeploymentState || (exports.ShardedGraphStoreIssueAssociatedDeploymentDeploymentState = {}));
var ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType;
(function (ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType) {
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType || (exports.ShardedGraphStoreIssueAssociatedDeploymentEnvironmentType = {}));
var ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus;
(function (ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus) {
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["Cancelled"] = "CANCELLED";
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["Completed"] = "COMPLETED";
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["Failed"] = "FAILED";
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["Pending"] = "PENDING";
    ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus = exports.ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus || (exports.ShardedGraphStoreIssueHasAutodevJobAutodevJobStatus = {}));
var ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType;
(function (ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType) {
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["ExistingWorkItem"] = "EXISTING_WORK_ITEM";
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["NewWorkItem"] = "NEW_WORK_ITEM";
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType["NotSet"] = "NOT_SET";
})(ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType || (exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationLinkType = {}));
var ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus;
(function (ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus) {
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Accepted"] = "ACCEPTED";
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Open"] = "OPEN";
    ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus["Rejected"] = "REJECTED";
})(ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus || (exports.ShardedGraphStoreJcsIssueAssociatedSupportEscalationEscalationStatus = {}));
var ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority;
(function (ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority) {
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["NotSet"] = "NOT_SET";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P1"] = "P1";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P2"] = "P2";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P3"] = "P3";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P4"] = "P4";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["P5"] = "P5";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["Pending"] = "PENDING";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority || (exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentPriority = {}));
var ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus;
(function (ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus) {
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Done"] = "DONE";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Indeterminate"] = "INDETERMINATE";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["New"] = "NEW";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus["Undefined"] = "UNDEFINED";
})(ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus || (exports.ShardedGraphStoreJswProjectAssociatedIncidentJiraIncidentStatus = {}));
var ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus;
(function (ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus) {
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Cancelled"] = "CANCELLED";
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Completed"] = "COMPLETED";
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Failed"] = "FAILED";
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Pending"] = "PENDING";
    ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus = exports.ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus || (exports.ShardedGraphStoreProjectAssociatedAutodevJobAutodevJobStatus = {}));
var ShardedGraphStoreProjectAssociatedBuildBuildState;
(function (ShardedGraphStoreProjectAssociatedBuildBuildState) {
    ShardedGraphStoreProjectAssociatedBuildBuildState["Cancelled"] = "CANCELLED";
    ShardedGraphStoreProjectAssociatedBuildBuildState["Failed"] = "FAILED";
    ShardedGraphStoreProjectAssociatedBuildBuildState["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreProjectAssociatedBuildBuildState["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedBuildBuildState["Pending"] = "PENDING";
    ShardedGraphStoreProjectAssociatedBuildBuildState["Successful"] = "SUCCESSFUL";
    ShardedGraphStoreProjectAssociatedBuildBuildState["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedBuildBuildState = exports.ShardedGraphStoreProjectAssociatedBuildBuildState || (exports.ShardedGraphStoreProjectAssociatedBuildBuildState = {}));
var ShardedGraphStoreProjectAssociatedDeploymentDeploymentState;
(function (ShardedGraphStoreProjectAssociatedDeploymentDeploymentState) {
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    ShardedGraphStoreProjectAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreProjectAssociatedDeploymentDeploymentState || (exports.ShardedGraphStoreProjectAssociatedDeploymentDeploymentState = {}));
var ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType;
(function (ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType) {
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType || (exports.ShardedGraphStoreProjectAssociatedDeploymentEnvironmentType = {}));
var ShardedGraphStoreProjectAssociatedPrPullRequestStatus;
(function (ShardedGraphStoreProjectAssociatedPrPullRequestStatus) {
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["Declined"] = "DECLINED";
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["Draft"] = "DRAFT";
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["Merged"] = "MERGED";
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["Open"] = "OPEN";
    ShardedGraphStoreProjectAssociatedPrPullRequestStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedPrPullRequestStatus = exports.ShardedGraphStoreProjectAssociatedPrPullRequestStatus || (exports.ShardedGraphStoreProjectAssociatedPrPullRequestStatus = {}));
var ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus;
(function (ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus) {
    ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus["Approved"] = "APPROVED";
    ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus["Needswork"] = "NEEDSWORK";
    ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus["Unapproved"] = "UNAPPROVED";
})(ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus = exports.ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus || (exports.ShardedGraphStoreProjectAssociatedPrReviewerReviewerStatus = {}));
var ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity;
(function (ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity) {
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Critical"] = "CRITICAL";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["High"] = "HIGH";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Low"] = "LOW";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Medium"] = "MEDIUM";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity || (exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilitySeverity = {}));
var ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus;
(function (ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus) {
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Closed"] = "CLOSED";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Ignored"] = "IGNORED";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Open"] = "OPEN";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus || (exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityStatus = {}));
var ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType;
(function (ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType) {
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Dast"] = "DAST";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType["NotSet"] = "NOT_SET";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Sast"] = "SAST";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Sca"] = "SCA";
    ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType = exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType || (exports.ShardedGraphStoreProjectAssociatedVulnerabilityVulnerabilityType = {}));
var ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority;
(function (ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority) {
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["NotSet"] = "NOT_SET";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P1"] = "P1";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P2"] = "P2";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P3"] = "P3";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P4"] = "P4";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority["P5"] = "P5";
})(ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority || (exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentPriority = {}));
var ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus;
(function (ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus) {
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Done"] = "DONE";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Indeterminate"] = "INDETERMINATE";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["New"] = "NEW";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus["Undefined"] = "UNDEFINED";
})(ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus || (exports.ShardedGraphStoreServiceLinkedIncidentJiraServiceManagementIncidentStatus = {}));
var ShardedGraphStoreSprintAssociatedDeploymentDeploymentState;
(function (ShardedGraphStoreSprintAssociatedDeploymentDeploymentState) {
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["Cancelled"] = "CANCELLED";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["Failed"] = "FAILED";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["InProgress"] = "IN_PROGRESS";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["Pending"] = "PENDING";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["RolledBack"] = "ROLLED_BACK";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["Successful"] = "SUCCESSFUL";
    ShardedGraphStoreSprintAssociatedDeploymentDeploymentState["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreSprintAssociatedDeploymentDeploymentState = exports.ShardedGraphStoreSprintAssociatedDeploymentDeploymentState || (exports.ShardedGraphStoreSprintAssociatedDeploymentDeploymentState = {}));
var ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType;
(function (ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType) {
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["Development"] = "DEVELOPMENT";
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["Production"] = "PRODUCTION";
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["Staging"] = "STAGING";
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["Testing"] = "TESTING";
    ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType["Unmapped"] = "UNMAPPED";
})(ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType = exports.ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType || (exports.ShardedGraphStoreSprintAssociatedDeploymentEnvironmentType = {}));
var ShardedGraphStoreSprintAssociatedPrPullRequestStatus;
(function (ShardedGraphStoreSprintAssociatedPrPullRequestStatus) {
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["Declined"] = "DECLINED";
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["Draft"] = "DRAFT";
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["Merged"] = "MERGED";
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["Open"] = "OPEN";
    ShardedGraphStoreSprintAssociatedPrPullRequestStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreSprintAssociatedPrPullRequestStatus = exports.ShardedGraphStoreSprintAssociatedPrPullRequestStatus || (exports.ShardedGraphStoreSprintAssociatedPrPullRequestStatus = {}));
var ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus;
(function (ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus) {
    ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus["Approved"] = "APPROVED";
    ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus["Needswork"] = "NEEDSWORK";
    ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus["Unapproved"] = "UNAPPROVED";
})(ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus = exports.ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus || (exports.ShardedGraphStoreSprintAssociatedPrReviewerReviewerStatus = {}));
var ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory;
(function (ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory) {
    ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory["Done"] = "DONE";
    ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory["Indeterminate"] = "INDETERMINATE";
    ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory["New"] = "NEW";
    ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory["Undefined"] = "UNDEFINED";
})(ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory = exports.ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory || (exports.ShardedGraphStoreSprintAssociatedVulnerabilityStatusCategory = {}));
var ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity;
(function (ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity) {
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Critical"] = "CRITICAL";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["High"] = "HIGH";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Low"] = "LOW";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Medium"] = "MEDIUM";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity || (exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilitySeverity = {}));
var ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus;
(function (ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus) {
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Closed"] = "CLOSED";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Ignored"] = "IGNORED";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Open"] = "OPEN";
    ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus || (exports.ShardedGraphStoreSprintAssociatedVulnerabilityVulnerabilityStatus = {}));
var ShardedGraphStoreSprintContainsIssueStatusCategory;
(function (ShardedGraphStoreSprintContainsIssueStatusCategory) {
    ShardedGraphStoreSprintContainsIssueStatusCategory["Done"] = "DONE";
    ShardedGraphStoreSprintContainsIssueStatusCategory["Indeterminate"] = "INDETERMINATE";
    ShardedGraphStoreSprintContainsIssueStatusCategory["New"] = "NEW";
    ShardedGraphStoreSprintContainsIssueStatusCategory["Undefined"] = "UNDEFINED";
})(ShardedGraphStoreSprintContainsIssueStatusCategory = exports.ShardedGraphStoreSprintContainsIssueStatusCategory || (exports.ShardedGraphStoreSprintContainsIssueStatusCategory = {}));
var ShardedGraphStoreVersionAssociatedDesignDesignStatus;
(function (ShardedGraphStoreVersionAssociatedDesignDesignStatus) {
    ShardedGraphStoreVersionAssociatedDesignDesignStatus["None"] = "NONE";
    ShardedGraphStoreVersionAssociatedDesignDesignStatus["NotSet"] = "NOT_SET";
    ShardedGraphStoreVersionAssociatedDesignDesignStatus["ReadyForDevelopment"] = "READY_FOR_DEVELOPMENT";
    ShardedGraphStoreVersionAssociatedDesignDesignStatus["Unknown"] = "UNKNOWN";
})(ShardedGraphStoreVersionAssociatedDesignDesignStatus = exports.ShardedGraphStoreVersionAssociatedDesignDesignStatus || (exports.ShardedGraphStoreVersionAssociatedDesignDesignStatus = {}));
var ShardedGraphStoreVersionAssociatedDesignDesignType;
(function (ShardedGraphStoreVersionAssociatedDesignDesignType) {
    ShardedGraphStoreVersionAssociatedDesignDesignType["Canvas"] = "CANVAS";
    ShardedGraphStoreVersionAssociatedDesignDesignType["File"] = "FILE";
    ShardedGraphStoreVersionAssociatedDesignDesignType["Group"] = "GROUP";
    ShardedGraphStoreVersionAssociatedDesignDesignType["Node"] = "NODE";
    ShardedGraphStoreVersionAssociatedDesignDesignType["NotSet"] = "NOT_SET";
    ShardedGraphStoreVersionAssociatedDesignDesignType["Other"] = "OTHER";
    ShardedGraphStoreVersionAssociatedDesignDesignType["Prototype"] = "PROTOTYPE";
})(ShardedGraphStoreVersionAssociatedDesignDesignType = exports.ShardedGraphStoreVersionAssociatedDesignDesignType || (exports.ShardedGraphStoreVersionAssociatedDesignDesignType = {}));
var ShareType;
(function (ShareType) {
    ShareType["InviteToEdit"] = "INVITE_TO_EDIT";
    ShareType["SharePage"] = "SHARE_PAGE";
})(ShareType = exports.ShareType || (exports.ShareType = {}));
var ShepherdActionType;
(function (ShepherdActionType) {
    ShepherdActionType["Activate"] = "ACTIVATE";
    ShepherdActionType["Archive"] = "ARCHIVE";
    ShepherdActionType["Crawl"] = "CRAWL";
    ShepherdActionType["Create"] = "CREATE";
    ShepherdActionType["Deactivate"] = "DEACTIVATE";
    ShepherdActionType["Delete"] = "DELETE";
    ShepherdActionType["Download"] = "DOWNLOAD";
    ShepherdActionType["Export"] = "EXPORT";
    ShepherdActionType["Grant"] = "GRANT";
    ShepherdActionType["Install"] = "INSTALL";
    ShepherdActionType["Login"] = "LOGIN";
    ShepherdActionType["LoginAs"] = "LOGIN_AS";
    ShepherdActionType["Publish"] = "PUBLISH";
    ShepherdActionType["Read"] = "READ";
    ShepherdActionType["Revoke"] = "REVOKE";
    ShepherdActionType["Search"] = "SEARCH";
    ShepherdActionType["Uninstall"] = "UNINSTALL";
    ShepherdActionType["Update"] = "UPDATE";
})(ShepherdActionType = exports.ShepherdActionType || (exports.ShepherdActionType = {}));
var ShepherdActorOrgStatus;
(function (ShepherdActorOrgStatus) {
    ShepherdActorOrgStatus["Active"] = "ACTIVE";
    ShepherdActorOrgStatus["Deactivated"] = "DEACTIVATED";
    ShepherdActorOrgStatus["Suspended"] = "SUSPENDED";
})(ShepherdActorOrgStatus = exports.ShepherdActorOrgStatus || (exports.ShepherdActorOrgStatus = {}));
var ShepherdAlertAction;
(function (ShepherdAlertAction) {
    ShepherdAlertAction["AddLabel"] = "ADD_LABEL";
    ShepherdAlertAction["Redact"] = "REDACT";
    ShepherdAlertAction["Restrict"] = "RESTRICT";
    ShepherdAlertAction["UpdateDataClassification"] = "UPDATE_DATA_CLASSIFICATION";
})(ShepherdAlertAction = exports.ShepherdAlertAction || (exports.ShepherdAlertAction = {}));
var ShepherdAlertDetectionCategory;
(function (ShepherdAlertDetectionCategory) {
    ShepherdAlertDetectionCategory["Data"] = "DATA";
    ShepherdAlertDetectionCategory["Threat"] = "THREAT";
})(ShepherdAlertDetectionCategory = exports.ShepherdAlertDetectionCategory || (exports.ShepherdAlertDetectionCategory = {}));
var ShepherdAlertSnippetRedactionFailureReason;
(function (ShepherdAlertSnippetRedactionFailureReason) {
    ShepherdAlertSnippetRedactionFailureReason["ContainerId"] = "CONTAINER_ID";
    ShepherdAlertSnippetRedactionFailureReason["ContainerIdFormat"] = "CONTAINER_ID_FORMAT";
    ShepherdAlertSnippetRedactionFailureReason["EntityId"] = "ENTITY_ID";
    ShepherdAlertSnippetRedactionFailureReason["HashMismatch"] = "HASH_MISMATCH";
    ShepherdAlertSnippetRedactionFailureReason["InvalidAdfPointer"] = "INVALID_ADF_POINTER";
    ShepherdAlertSnippetRedactionFailureReason["InvalidPointer"] = "INVALID_POINTER";
    ShepherdAlertSnippetRedactionFailureReason["MaxFieldLength"] = "MAX_FIELD_LENGTH";
    ShepherdAlertSnippetRedactionFailureReason["OverlappingRequestsForContentItem"] = "OVERLAPPING_REQUESTS_FOR_CONTENT_ITEM";
    ShepherdAlertSnippetRedactionFailureReason["TooManyRequestsPerContentItem"] = "TOO_MANY_REQUESTS_PER_CONTENT_ITEM";
    ShepherdAlertSnippetRedactionFailureReason["Unknown"] = "UNKNOWN";
})(ShepherdAlertSnippetRedactionFailureReason = exports.ShepherdAlertSnippetRedactionFailureReason || (exports.ShepherdAlertSnippetRedactionFailureReason = {}));
var ShepherdAlertSnippetRedactionStatus;
(function (ShepherdAlertSnippetRedactionStatus) {
    ShepherdAlertSnippetRedactionStatus["Redacted"] = "REDACTED";
    ShepherdAlertSnippetRedactionStatus["RedactedHistoryScanFailed"] = "REDACTED_HISTORY_SCAN_FAILED";
    ShepherdAlertSnippetRedactionStatus["RedactionFailed"] = "REDACTION_FAILED";
    ShepherdAlertSnippetRedactionStatus["RedactionPending"] = "REDACTION_PENDING";
    ShepherdAlertSnippetRedactionStatus["Unredacted"] = "UNREDACTED";
})(ShepherdAlertSnippetRedactionStatus = exports.ShepherdAlertSnippetRedactionStatus || (exports.ShepherdAlertSnippetRedactionStatus = {}));
var ShepherdAlertStatus;
(function (ShepherdAlertStatus) {
    ShepherdAlertStatus["InProgress"] = "IN_PROGRESS";
    ShepherdAlertStatus["TriagedExpectedActivity"] = "TRIAGED_EXPECTED_ACTIVITY";
    ShepherdAlertStatus["TriagedTruePositive"] = "TRIAGED_TRUE_POSITIVE";
    ShepherdAlertStatus["Untriaged"] = "UNTRIAGED";
})(ShepherdAlertStatus = exports.ShepherdAlertStatus || (exports.ShepherdAlertStatus = {}));
var ShepherdAlertTemplateType;
(function (ShepherdAlertTemplateType) {
    ShepherdAlertTemplateType["AddedConfluenceGlobalPermission"] = "ADDED_CONFLUENCE_GLOBAL_PERMISSION";
    ShepherdAlertTemplateType["AddedConfluenceSpacePermission"] = "ADDED_CONFLUENCE_SPACE_PERMISSION";
    ShepherdAlertTemplateType["AddedDomain"] = "ADDED_DOMAIN";
    ShepherdAlertTemplateType["AddedJiraGlobalPermission"] = "ADDED_JIRA_GLOBAL_PERMISSION";
    ShepherdAlertTemplateType["AddedOrgadmin"] = "ADDED_ORGADMIN";
    ShepherdAlertTemplateType["BitbucketRepositoryPrivacy"] = "BITBUCKET_REPOSITORY_PRIVACY";
    ShepherdAlertTemplateType["BitbucketWorkspacePrivacy"] = "BITBUCKET_WORKSPACE_PRIVACY";
    ShepherdAlertTemplateType["ClassificationLevelArchived"] = "CLASSIFICATION_LEVEL_ARCHIVED";
    ShepherdAlertTemplateType["ClassificationLevelPublished"] = "CLASSIFICATION_LEVEL_PUBLISHED";
    ShepherdAlertTemplateType["CompromisedMobileDevice"] = "COMPROMISED_MOBILE_DEVICE";
    ShepherdAlertTemplateType["ConfluenceCustomDetection"] = "CONFLUENCE_CUSTOM_DETECTION";
    ShepherdAlertTemplateType["ConfluenceDataDiscovery"] = "CONFLUENCE_DATA_DISCOVERY";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryAtlassianToken"] = "CONFLUENCE_DATA_DISCOVERY_ATLASSIAN_TOKEN";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryAuTfn"] = "CONFLUENCE_DATA_DISCOVERY_AU_TFN";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryAwsKeys"] = "CONFLUENCE_DATA_DISCOVERY_AWS_KEYS";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryCreditCard"] = "CONFLUENCE_DATA_DISCOVERY_CREDIT_CARD";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryCrypto"] = "CONFLUENCE_DATA_DISCOVERY_CRYPTO";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryIban"] = "CONFLUENCE_DATA_DISCOVERY_IBAN";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryJwtKey"] = "CONFLUENCE_DATA_DISCOVERY_JWT_KEY";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryPassword"] = "CONFLUENCE_DATA_DISCOVERY_PASSWORD";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryPrivateKey"] = "CONFLUENCE_DATA_DISCOVERY_PRIVATE_KEY";
    ShepherdAlertTemplateType["ConfluenceDataDiscoveryUsSsn"] = "CONFLUENCE_DATA_DISCOVERY_US_SSN";
    ShepherdAlertTemplateType["ConfluencePageCrawling"] = "CONFLUENCE_PAGE_CRAWLING";
    ShepherdAlertTemplateType["ConfluencePageExports"] = "CONFLUENCE_PAGE_EXPORTS";
    ShepherdAlertTemplateType["ConfluenceSiteBackupDownloaded"] = "CONFLUENCE_SITE_BACKUP_DOWNLOADED";
    ShepherdAlertTemplateType["ConfluenceSpaceExports"] = "CONFLUENCE_SPACE_EXPORTS";
    ShepherdAlertTemplateType["ConfluenceSuspiciousSearch"] = "CONFLUENCE_SUSPICIOUS_SEARCH";
    ShepherdAlertTemplateType["CreatedAuthPolicy"] = "CREATED_AUTH_POLICY";
    ShepherdAlertTemplateType["CreatedMobileAppPolicy"] = "CREATED_MOBILE_APP_POLICY";
    ShepherdAlertTemplateType["CreatedPolicy"] = "CREATED_POLICY";
    ShepherdAlertTemplateType["CreatedSamlConfig"] = "CREATED_SAML_CONFIG";
    ShepherdAlertTemplateType["CreatedTunnel"] = "CREATED_TUNNEL";
    ShepherdAlertTemplateType["CreatedUserProvisioning"] = "CREATED_USER_PROVISIONING";
    ShepherdAlertTemplateType["DataSecurityPolicyActivated"] = "DATA_SECURITY_POLICY_ACTIVATED";
    ShepherdAlertTemplateType["DataSecurityPolicyDeactivated"] = "DATA_SECURITY_POLICY_DEACTIVATED";
    ShepherdAlertTemplateType["DataSecurityPolicyDeleted"] = "DATA_SECURITY_POLICY_DELETED";
    ShepherdAlertTemplateType["DataSecurityPolicyUpdated"] = "DATA_SECURITY_POLICY_UPDATED";
    ShepherdAlertTemplateType["Default"] = "DEFAULT";
    ShepherdAlertTemplateType["DeletedAuthPolicy"] = "DELETED_AUTH_POLICY";
    ShepherdAlertTemplateType["DeletedDomain"] = "DELETED_DOMAIN";
    ShepherdAlertTemplateType["DeletedMobileAppPolicy"] = "DELETED_MOBILE_APP_POLICY";
    ShepherdAlertTemplateType["DeletedPolicy"] = "DELETED_POLICY";
    ShepherdAlertTemplateType["DeletedTunnel"] = "DELETED_TUNNEL";
    ShepherdAlertTemplateType["EcosystemAuditLogInstallationCreated"] = "ECOSYSTEM_AUDIT_LOG_INSTALLATION_CREATED";
    ShepherdAlertTemplateType["EcosystemAuditLogInstallationDeleted"] = "ECOSYSTEM_AUDIT_LOG_INSTALLATION_DELETED";
    ShepherdAlertTemplateType["EducationalAlert"] = "EDUCATIONAL_ALERT";
    ShepherdAlertTemplateType["ExportedOrgeventscsv"] = "EXPORTED_ORGEVENTSCSV";
    ShepherdAlertTemplateType["GrantAssignedJiraPermissionScheme"] = "GRANT_ASSIGNED_JIRA_PERMISSION_SCHEME";
    ShepherdAlertTemplateType["IdentityPasswordResetCompletedUser"] = "IDENTITY_PASSWORD_RESET_COMPLETED_USER";
    ShepherdAlertTemplateType["ImpossibleTravel"] = "IMPOSSIBLE_TRAVEL";
    ShepherdAlertTemplateType["InitiatedGsyncConnection"] = "INITIATED_GSYNC_CONNECTION";
    ShepherdAlertTemplateType["JiraCustomDetection"] = "JIRA_CUSTOM_DETECTION";
    ShepherdAlertTemplateType["JiraDataDiscoveryAtlassianToken"] = "JIRA_DATA_DISCOVERY_ATLASSIAN_TOKEN";
    ShepherdAlertTemplateType["JiraDataDiscoveryAuTfn"] = "JIRA_DATA_DISCOVERY_AU_TFN";
    ShepherdAlertTemplateType["JiraDataDiscoveryAwsKeys"] = "JIRA_DATA_DISCOVERY_AWS_KEYS";
    ShepherdAlertTemplateType["JiraDataDiscoveryCreditCard"] = "JIRA_DATA_DISCOVERY_CREDIT_CARD";
    ShepherdAlertTemplateType["JiraDataDiscoveryCrypto"] = "JIRA_DATA_DISCOVERY_CRYPTO";
    ShepherdAlertTemplateType["JiraDataDiscoveryIban"] = "JIRA_DATA_DISCOVERY_IBAN";
    ShepherdAlertTemplateType["JiraDataDiscoveryJwtKey"] = "JIRA_DATA_DISCOVERY_JWT_KEY";
    ShepherdAlertTemplateType["JiraDataDiscoveryPassword"] = "JIRA_DATA_DISCOVERY_PASSWORD";
    ShepherdAlertTemplateType["JiraDataDiscoveryPrivateKey"] = "JIRA_DATA_DISCOVERY_PRIVATE_KEY";
    ShepherdAlertTemplateType["JiraDataDiscoveryUsSsn"] = "JIRA_DATA_DISCOVERY_US_SSN";
    ShepherdAlertTemplateType["JiraIssueCrawling"] = "JIRA_ISSUE_CRAWLING";
    ShepherdAlertTemplateType["LoginFromMaliciousIpAddress"] = "LOGIN_FROM_MALICIOUS_IP_ADDRESS";
    ShepherdAlertTemplateType["LoginFromTorExitNode"] = "LOGIN_FROM_TOR_EXIT_NODE";
    ShepherdAlertTemplateType["MobileScreenLock"] = "MOBILE_SCREEN_LOCK";
    ShepherdAlertTemplateType["OrgLoggedInAsUser"] = "ORG_LOGGED_IN_AS_USER";
    ShepherdAlertTemplateType["ProjectClassificationLevelDecreased"] = "PROJECT_CLASSIFICATION_LEVEL_DECREASED";
    ShepherdAlertTemplateType["ProjectClassificationLevelIncreased"] = "PROJECT_CLASSIFICATION_LEVEL_INCREASED";
    ShepherdAlertTemplateType["RotateScimDirectoryToken"] = "ROTATE_SCIM_DIRECTORY_TOKEN";
    ShepherdAlertTemplateType["SpaceClassificationLevelDecreased"] = "SPACE_CLASSIFICATION_LEVEL_DECREASED";
    ShepherdAlertTemplateType["SpaceClassificationLevelIncreased"] = "SPACE_CLASSIFICATION_LEVEL_INCREASED";
    ShepherdAlertTemplateType["TestAlert"] = "TEST_ALERT";
    ShepherdAlertTemplateType["TokenCreated"] = "TOKEN_CREATED";
    ShepherdAlertTemplateType["TokenRevoked"] = "TOKEN_REVOKED";
    ShepherdAlertTemplateType["UpdatedAuthPolicy"] = "UPDATED_AUTH_POLICY";
    ShepherdAlertTemplateType["UpdatedMobileAppPolicy"] = "UPDATED_MOBILE_APP_POLICY";
    ShepherdAlertTemplateType["UpdatedPolicy"] = "UPDATED_POLICY";
    ShepherdAlertTemplateType["UpdatedSamlConfig"] = "UPDATED_SAML_CONFIG";
    ShepherdAlertTemplateType["UserAddedToBeacon"] = "USER_ADDED_TO_BEACON";
    ShepherdAlertTemplateType["UserGrantedRole"] = "USER_GRANTED_ROLE";
    ShepherdAlertTemplateType["UserRemovedFromBeacon"] = "USER_REMOVED_FROM_BEACON";
    ShepherdAlertTemplateType["UserRevokedRole"] = "USER_REVOKED_ROLE";
    ShepherdAlertTemplateType["UserTokenCreated"] = "USER_TOKEN_CREATED";
    ShepherdAlertTemplateType["UserTokenRevoked"] = "USER_TOKEN_REVOKED";
})(ShepherdAlertTemplateType = exports.ShepherdAlertTemplateType || (exports.ShepherdAlertTemplateType = {}));
var ShepherdAtlassianProduct;
(function (ShepherdAtlassianProduct) {
    ShepherdAtlassianProduct["AdminHub"] = "ADMIN_HUB";
    ShepherdAtlassianProduct["Bitbucket"] = "BITBUCKET";
    ShepherdAtlassianProduct["Confluence"] = "CONFLUENCE";
    ShepherdAtlassianProduct["ConfluenceDc"] = "CONFLUENCE_DC";
    ShepherdAtlassianProduct["GuardDetect"] = "GUARD_DETECT";
    ShepherdAtlassianProduct["JiraDc"] = "JIRA_DC";
    ShepherdAtlassianProduct["JiraSoftware"] = "JIRA_SOFTWARE";
    ShepherdAtlassianProduct["Marketplace"] = "MARKETPLACE";
})(ShepherdAtlassianProduct = exports.ShepherdAtlassianProduct || (exports.ShepherdAtlassianProduct = {}));
var ShepherdClassificationStatus;
(function (ShepherdClassificationStatus) {
    ShepherdClassificationStatus["Archived"] = "ARCHIVED";
    ShepherdClassificationStatus["Draft"] = "DRAFT";
    ShepherdClassificationStatus["Published"] = "PUBLISHED";
})(ShepherdClassificationStatus = exports.ShepherdClassificationStatus || (exports.ShepherdClassificationStatus = {}));
var ShepherdCustomScanningMatchType;
(function (ShepherdCustomScanningMatchType) {
    ShepherdCustomScanningMatchType["Regex"] = "REGEX";
    ShepherdCustomScanningMatchType["String"] = "STRING";
    ShepherdCustomScanningMatchType["Word"] = "WORD";
})(ShepherdCustomScanningMatchType = exports.ShepherdCustomScanningMatchType || (exports.ShepherdCustomScanningMatchType = {}));
var ShepherdDetectionScanningFrequency;
(function (ShepherdDetectionScanningFrequency) {
    ShepherdDetectionScanningFrequency["RealTime"] = "REAL_TIME";
    ShepherdDetectionScanningFrequency["Scheduled"] = "SCHEDULED";
})(ShepherdDetectionScanningFrequency = exports.ShepherdDetectionScanningFrequency || (exports.ShepherdDetectionScanningFrequency = {}));
var ShepherdLoginDeviceType;
(function (ShepherdLoginDeviceType) {
    ShepherdLoginDeviceType["Computer"] = "COMPUTER";
    ShepherdLoginDeviceType["Console"] = "CONSOLE";
    ShepherdLoginDeviceType["Embedded"] = "EMBEDDED";
    ShepherdLoginDeviceType["Mobile"] = "MOBILE";
    ShepherdLoginDeviceType["SmartTv"] = "SMART_TV";
    ShepherdLoginDeviceType["Tablet"] = "TABLET";
    ShepherdLoginDeviceType["Wearable"] = "WEARABLE";
})(ShepherdLoginDeviceType = exports.ShepherdLoginDeviceType || (exports.ShepherdLoginDeviceType = {}));
var ShepherdMutationErrorType;
(function (ShepherdMutationErrorType) {
    ShepherdMutationErrorType["BadRequest"] = "BAD_REQUEST";
    ShepherdMutationErrorType["InternalServerError"] = "INTERNAL_SERVER_ERROR";
    ShepherdMutationErrorType["NoProductAccess"] = "NO_PRODUCT_ACCESS";
    ShepherdMutationErrorType["Unauthorized"] = "UNAUTHORIZED";
})(ShepherdMutationErrorType = exports.ShepherdMutationErrorType || (exports.ShepherdMutationErrorType = {}));
var ShepherdQueryErrorType;
(function (ShepherdQueryErrorType) {
    ShepherdQueryErrorType["BadRequest"] = "BAD_REQUEST";
    ShepherdQueryErrorType["InternalServerError"] = "INTERNAL_SERVER_ERROR";
    ShepherdQueryErrorType["NoProductAccess"] = "NO_PRODUCT_ACCESS";
    ShepherdQueryErrorType["Unauthorized"] = "UNAUTHORIZED";
})(ShepherdQueryErrorType = exports.ShepherdQueryErrorType || (exports.ShepherdQueryErrorType = {}));
var ShepherdRateThresholdValue;
(function (ShepherdRateThresholdValue) {
    ShepherdRateThresholdValue["High"] = "HIGH";
    ShepherdRateThresholdValue["Low"] = "LOW";
    ShepherdRateThresholdValue["Medium"] = "MEDIUM";
})(ShepherdRateThresholdValue = exports.ShepherdRateThresholdValue || (exports.ShepherdRateThresholdValue = {}));
var ShepherdRedactedContentStatus;
(function (ShepherdRedactedContentStatus) {
    ShepherdRedactedContentStatus["Redacted"] = "REDACTED";
    ShepherdRedactedContentStatus["RedactionFailed"] = "REDACTION_FAILED";
    ShepherdRedactedContentStatus["RedactionPending"] = "REDACTION_PENDING";
})(ShepherdRedactedContentStatus = exports.ShepherdRedactedContentStatus || (exports.ShepherdRedactedContentStatus = {}));
var ShepherdRedactionStatus;
(function (ShepherdRedactionStatus) {
    ShepherdRedactionStatus["Failed"] = "FAILED";
    ShepherdRedactionStatus["PartiallyRedacted"] = "PARTIALLY_REDACTED";
    ShepherdRedactionStatus["Pending"] = "PENDING";
    ShepherdRedactionStatus["Redacted"] = "REDACTED";
})(ShepherdRedactionStatus = exports.ShepherdRedactionStatus || (exports.ShepherdRedactionStatus = {}));
var ShepherdRemediationActionType;
(function (ShepherdRemediationActionType) {
    ShepherdRemediationActionType["AnonAccessDspRemediation"] = "ANON_ACCESS_DSP_REMEDIATION";
    ShepherdRemediationActionType["ApplyClassificationRemediation"] = "APPLY_CLASSIFICATION_REMEDIATION";
    ShepherdRemediationActionType["AppsAccessDspRemediation"] = "APPS_ACCESS_DSP_REMEDIATION";
    ShepherdRemediationActionType["ArchiveRestoreClassificationRemediation"] = "ARCHIVE_RESTORE_CLASSIFICATION_REMEDIATION";
    ShepherdRemediationActionType["BlockchainExplorerRemediation"] = "BLOCKCHAIN_EXPLORER_REMEDIATION";
    ShepherdRemediationActionType["BlockIpAllowlistRemediation"] = "BLOCK_IP_ALLOWLIST_REMEDIATION";
    ShepherdRemediationActionType["ChangeConfluenceSpaceAttachmentPermissionsRemediation"] = "CHANGE_CONFLUENCE_SPACE_ATTACHMENT_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["ChangeJiraAttachmentPermissionsRemediation"] = "CHANGE_JIRA_ATTACHMENT_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["CheckAutomationsRemediation"] = "CHECK_AUTOMATIONS_REMEDIATION";
    ShepherdRemediationActionType["ClassificationLevelChangeRemediation"] = "CLASSIFICATION_LEVEL_CHANGE_REMEDIATION";
    ShepherdRemediationActionType["CompromisedDeviceRemediation"] = "COMPROMISED_DEVICE_REMEDIATION";
    ShepherdRemediationActionType["ConfluenceAnonAccessRemediation"] = "CONFLUENCE_ANON_ACCESS_REMEDIATION";
    ShepherdRemediationActionType["DeleteDataRemediation"] = "DELETE_DATA_REMEDIATION";
    ShepherdRemediationActionType["DeleteFilesRemediation"] = "DELETE_FILES_REMEDIATION";
    ShepherdRemediationActionType["EditCustomDetectionRemediation"] = "EDIT_CUSTOM_DETECTION_REMEDIATION";
    ShepherdRemediationActionType["EmailWithAutomationRemediation"] = "EMAIL_WITH_AUTOMATION_REMEDIATION";
    ShepherdRemediationActionType["ExcludePageRemediation"] = "EXCLUDE_PAGE_REMEDIATION";
    ShepherdRemediationActionType["ExcludeUserRemediation"] = "EXCLUDE_USER_REMEDIATION";
    ShepherdRemediationActionType["ExportsDspRemediation"] = "EXPORTS_DSP_REMEDIATION";
    ShepherdRemediationActionType["ExportDspRemediation"] = "EXPORT_DSP_REMEDIATION";
    ShepherdRemediationActionType["ExportSpacePermissionsRemediation"] = "EXPORT_SPACE_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["JiraGlobalPermissionsRemediation"] = "JIRA_GLOBAL_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["KeyOwnerRemediation"] = "KEY_OWNER_REMEDIATION";
    ShepherdRemediationActionType["LimitJiraPermissionsRemediation"] = "LIMIT_JIRA_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["ManageAppsRemediation"] = "MANAGE_APPS_REMEDIATION";
    ShepherdRemediationActionType["ManageDomainRemediation"] = "MANAGE_DOMAIN_REMEDIATION";
    ShepherdRemediationActionType["ManageDspRemediation"] = "MANAGE_DSP_REMEDIATION";
    ShepherdRemediationActionType["MoveOrRemoveAttachmentRemediation"] = "MOVE_OR_REMOVE_ATTACHMENT_REMEDIATION";
    ShepherdRemediationActionType["PublicAccessDspRemediation"] = "PUBLIC_ACCESS_DSP_REMEDIATION";
    ShepherdRemediationActionType["ResetAccountPasswordRemediation"] = "RESET_ACCOUNT_PASSWORD_REMEDIATION";
    ShepherdRemediationActionType["RestoreAccessRemediation"] = "RESTORE_ACCESS_REMEDIATION";
    ShepherdRemediationActionType["RestrictPageAutomationRemediation"] = "RESTRICT_PAGE_AUTOMATION_REMEDIATION";
    ShepherdRemediationActionType["ReviewAccessRemediation"] = "REVIEW_ACCESS_REMEDIATION";
    ShepherdRemediationActionType["ReviewApiKeysRemediation"] = "REVIEW_API_KEYS_REMEDIATION";
    ShepherdRemediationActionType["ReviewApiTokensRemediation"] = "REVIEW_API_TOKENS_REMEDIATION";
    ShepherdRemediationActionType["ReviewAuditLogRemediation"] = "REVIEW_AUDIT_LOG_REMEDIATION";
    ShepherdRemediationActionType["ReviewAuthPolicyRemediation"] = "REVIEW_AUTH_POLICY_REMEDIATION";
    ShepherdRemediationActionType["ReviewGsyncRemediation"] = "REVIEW_GSYNC_REMEDIATION";
    ShepherdRemediationActionType["ReviewIpAllowlistRemediation"] = "REVIEW_IP_ALLOWLIST_REMEDIATION";
    ShepherdRemediationActionType["ReviewIssueRemediation"] = "REVIEW_ISSUE_REMEDIATION";
    ShepherdRemediationActionType["ReviewMobileAppPolicyRemediation"] = "REVIEW_MOBILE_APP_POLICY_REMEDIATION";
    ShepherdRemediationActionType["ReviewOtherAuthPoliciesRemediation"] = "REVIEW_OTHER_AUTH_POLICIES_REMEDIATION";
    ShepherdRemediationActionType["ReviewOtherIpAllowlistRemediation"] = "REVIEW_OTHER_IP_ALLOWLIST_REMEDIATION";
    ShepherdRemediationActionType["ReviewPageRemediation"] = "REVIEW_PAGE_REMEDIATION";
    ShepherdRemediationActionType["ReviewSamlRemediation"] = "REVIEW_SAML_REMEDIATION";
    ShepherdRemediationActionType["ReviewScimRemediation"] = "REVIEW_SCIM_REMEDIATION";
    ShepherdRemediationActionType["ReviewTunnelsConfigurationRemediation"] = "REVIEW_TUNNELS_CONFIGURATION_REMEDIATION";
    ShepherdRemediationActionType["ReviewTunnelsRemediation"] = "REVIEW_TUNNELS_REMEDIATION";
    ShepherdRemediationActionType["RevokeAccessRemediation"] = "REVOKE_ACCESS_REMEDIATION";
    ShepherdRemediationActionType["RevokeApiKeyRemediation"] = "REVOKE_API_KEY_REMEDIATION";
    ShepherdRemediationActionType["RevokeApiTokensRemediation"] = "REVOKE_API_TOKENS_REMEDIATION";
    ShepherdRemediationActionType["RevokeUserApiTokenRemediation"] = "REVOKE_USER_API_TOKEN_REMEDIATION";
    ShepherdRemediationActionType["SpacePermissionsRemediation"] = "SPACE_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["SuspendActorRemediation"] = "SUSPEND_ACTOR_REMEDIATION";
    ShepherdRemediationActionType["SuspendSubjectRemediation"] = "SUSPEND_SUBJECT_REMEDIATION";
    ShepherdRemediationActionType["TurnOffJiraPermissionsRemediation"] = "TURN_OFF_JIRA_PERMISSIONS_REMEDIATION";
    ShepherdRemediationActionType["TwoStepPolicyRemediation"] = "TWO_STEP_POLICY_REMEDIATION";
    ShepherdRemediationActionType["UseAuthPolicyRemediation"] = "USE_AUTH_POLICY_REMEDIATION";
    ShepherdRemediationActionType["ViewSpacePermissionsRemediation"] = "VIEW_SPACE_PERMISSIONS_REMEDIATION";
})(ShepherdRemediationActionType = exports.ShepherdRemediationActionType || (exports.ShepherdRemediationActionType = {}));
var ShepherdSearchOrigin;
(function (ShepherdSearchOrigin) {
    ShepherdSearchOrigin["AdvancedSearch"] = "ADVANCED_SEARCH";
    ShepherdSearchOrigin["Ai"] = "AI";
    ShepherdSearchOrigin["QuickSearch"] = "QUICK_SEARCH";
})(ShepherdSearchOrigin = exports.ShepherdSearchOrigin || (exports.ShepherdSearchOrigin = {}));
var ShepherdSubscriptionStatus;
(function (ShepherdSubscriptionStatus) {
    ShepherdSubscriptionStatus["Active"] = "ACTIVE";
    ShepherdSubscriptionStatus["Error"] = "ERROR";
    ShepherdSubscriptionStatus["Inactive"] = "INACTIVE";
})(ShepherdSubscriptionStatus = exports.ShepherdSubscriptionStatus || (exports.ShepherdSubscriptionStatus = {}));
var ShepherdVortexModeStatus;
(function (ShepherdVortexModeStatus) {
    ShepherdVortexModeStatus["Disabled"] = "DISABLED";
    ShepherdVortexModeStatus["Enabled"] = "ENABLED";
})(ShepherdVortexModeStatus = exports.ShepherdVortexModeStatus || (exports.ShepherdVortexModeStatus = {}));
var ShepherdWebhookDestinationType;
(function (ShepherdWebhookDestinationType) {
    ShepherdWebhookDestinationType["Default"] = "DEFAULT";
    ShepherdWebhookDestinationType["MicrosoftTeams"] = "MICROSOFT_TEAMS";
})(ShepherdWebhookDestinationType = exports.ShepherdWebhookDestinationType || (exports.ShepherdWebhookDestinationType = {}));
var ShepherdWebhookSubscriptionCategory;
(function (ShepherdWebhookSubscriptionCategory) {
    ShepherdWebhookSubscriptionCategory["MicrosoftTeams"] = "MICROSOFT_TEAMS";
    ShepherdWebhookSubscriptionCategory["Webhook"] = "WEBHOOK";
})(ShepherdWebhookSubscriptionCategory = exports.ShepherdWebhookSubscriptionCategory || (exports.ShepherdWebhookSubscriptionCategory = {}));
var SitePermissionOperationType;
(function (SitePermissionOperationType) {
    SitePermissionOperationType["AdministerConfluence"] = "ADMINISTER_CONFLUENCE";
    SitePermissionOperationType["AdministerSystem"] = "ADMINISTER_SYSTEM";
    SitePermissionOperationType["CreateProfileattachment"] = "CREATE_PROFILEATTACHMENT";
    SitePermissionOperationType["CreateSpace"] = "CREATE_SPACE";
    SitePermissionOperationType["ExternalCollaborator"] = "EXTERNAL_COLLABORATOR";
    SitePermissionOperationType["LimitedUseConfluence"] = "LIMITED_USE_CONFLUENCE";
    SitePermissionOperationType["ReadUserprofile"] = "READ_USERPROFILE";
    SitePermissionOperationType["UpdateUserstatus"] = "UPDATE_USERSTATUS";
    SitePermissionOperationType["UseConfluence"] = "USE_CONFLUENCE";
    SitePermissionOperationType["UsePersonalspace"] = "USE_PERSONALSPACE";
})(SitePermissionOperationType = exports.SitePermissionOperationType || (exports.SitePermissionOperationType = {}));
var SitePermissionType;
(function (SitePermissionType) {
    SitePermissionType["Anonymous"] = "ANONYMOUS";
    SitePermissionType["App"] = "APP";
    SitePermissionType["External"] = "EXTERNAL";
    SitePermissionType["Internal"] = "INTERNAL";
    SitePermissionType["Jsd"] = "JSD";
})(SitePermissionType = exports.SitePermissionType || (exports.SitePermissionType = {}));
var SitePermissionTypeFilter;
(function (SitePermissionTypeFilter) {
    SitePermissionTypeFilter["All"] = "ALL";
    SitePermissionTypeFilter["Externalcollaborator"] = "EXTERNALCOLLABORATOR";
    SitePermissionTypeFilter["None"] = "NONE";
})(SitePermissionTypeFilter = exports.SitePermissionTypeFilter || (exports.SitePermissionTypeFilter = {}));
var SoftwareCardsDestinationEnum;
(function (SoftwareCardsDestinationEnum) {
    SoftwareCardsDestinationEnum["Backlog"] = "BACKLOG";
    SoftwareCardsDestinationEnum["ExistingSprint"] = "EXISTING_SPRINT";
    SoftwareCardsDestinationEnum["NewSprint"] = "NEW_SPRINT";
})(SoftwareCardsDestinationEnum = exports.SoftwareCardsDestinationEnum || (exports.SoftwareCardsDestinationEnum = {}));
var SortDirection;
(function (SortDirection) {
    SortDirection["Asc"] = "ASC";
    SortDirection["Desc"] = "DESC";
})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["Asc"] = "ASC";
    SortOrder["Desc"] = "DESC";
})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));
var SpaceAssignmentType;
(function (SpaceAssignmentType) {
    SpaceAssignmentType["Assigned"] = "ASSIGNED";
    SpaceAssignmentType["Unassigned"] = "UNASSIGNED";
})(SpaceAssignmentType = exports.SpaceAssignmentType || (exports.SpaceAssignmentType = {}));
var SpaceManagerFilterType;
(function (SpaceManagerFilterType) {
    SpaceManagerFilterType["Personal"] = "PERSONAL";
    SpaceManagerFilterType["TeamAndProject"] = "TEAM_AND_PROJECT";
})(SpaceManagerFilterType = exports.SpaceManagerFilterType || (exports.SpaceManagerFilterType = {}));
var SpaceManagerOrderColumn;
(function (SpaceManagerOrderColumn) {
    SpaceManagerOrderColumn["Key"] = "KEY";
    SpaceManagerOrderColumn["Title"] = "TITLE";
})(SpaceManagerOrderColumn = exports.SpaceManagerOrderColumn || (exports.SpaceManagerOrderColumn = {}));
var SpaceManagerOrderDirection;
(function (SpaceManagerOrderDirection) {
    SpaceManagerOrderDirection["Asc"] = "ASC";
    SpaceManagerOrderDirection["Desc"] = "DESC";
})(SpaceManagerOrderDirection = exports.SpaceManagerOrderDirection || (exports.SpaceManagerOrderDirection = {}));
var SpaceManagerOwnerType;
(function (SpaceManagerOwnerType) {
    SpaceManagerOwnerType["Group"] = "GROUP";
    SpaceManagerOwnerType["User"] = "USER";
})(SpaceManagerOwnerType = exports.SpaceManagerOwnerType || (exports.SpaceManagerOwnerType = {}));
var SpacePermissionType;
(function (SpacePermissionType) {
    SpacePermissionType["AdministerSpace"] = "ADMINISTER_SPACE";
    SpacePermissionType["ArchivePage"] = "ARCHIVE_PAGE";
    SpacePermissionType["ArchiveSpace"] = "ARCHIVE_SPACE";
    SpacePermissionType["Comment"] = "COMMENT";
    SpacePermissionType["CreateAttachment"] = "CREATE_ATTACHMENT";
    SpacePermissionType["CreateBlog"] = "CREATE_BLOG";
    SpacePermissionType["CreateEditPage"] = "CREATE_EDIT_PAGE";
    SpacePermissionType["DeleteSpace"] = "DELETE_SPACE";
    SpacePermissionType["EditBlog"] = "EDIT_BLOG";
    SpacePermissionType["EditNativeContent"] = "EDIT_NATIVE_CONTENT";
    SpacePermissionType["ExportContent"] = "EXPORT_CONTENT";
    SpacePermissionType["ExportPage"] = "EXPORT_PAGE";
    SpacePermissionType["ExportSpace"] = "EXPORT_SPACE";
    SpacePermissionType["ManageGuestUsers"] = "MANAGE_GUEST_USERS";
    SpacePermissionType["ManageNonlicensedUsers"] = "MANAGE_NONLICENSED_USERS";
    SpacePermissionType["ManagePublicLinks"] = "MANAGE_PUBLIC_LINKS";
    SpacePermissionType["ManageUsers"] = "MANAGE_USERS";
    SpacePermissionType["RemoveAttachment"] = "REMOVE_ATTACHMENT";
    SpacePermissionType["RemoveBlog"] = "REMOVE_BLOG";
    SpacePermissionType["RemoveComment"] = "REMOVE_COMMENT";
    SpacePermissionType["RemoveMail"] = "REMOVE_MAIL";
    SpacePermissionType["RemoveOwnContent"] = "REMOVE_OWN_CONTENT";
    SpacePermissionType["RemovePage"] = "REMOVE_PAGE";
    SpacePermissionType["SetPagePermissions"] = "SET_PAGE_PERMISSIONS";
    SpacePermissionType["ViewSpace"] = "VIEW_SPACE";
})(SpacePermissionType = exports.SpacePermissionType || (exports.SpacePermissionType = {}));
var SpaceRoleType;
(function (SpaceRoleType) {
    SpaceRoleType["Custom"] = "CUSTOM";
    SpaceRoleType["System"] = "SYSTEM";
})(SpaceRoleType = exports.SpaceRoleType || (exports.SpaceRoleType = {}));
var SpaceSidebarLinkType;
(function (SpaceSidebarLinkType) {
    SpaceSidebarLinkType["ExternalLink"] = "EXTERNAL_LINK";
    SpaceSidebarLinkType["Forge"] = "FORGE";
    SpaceSidebarLinkType["PinnedAttachment"] = "PINNED_ATTACHMENT";
    SpaceSidebarLinkType["PinnedBlogPost"] = "PINNED_BLOG_POST";
    SpaceSidebarLinkType["PinnedPage"] = "PINNED_PAGE";
    SpaceSidebarLinkType["PinnedSpace"] = "PINNED_SPACE";
    SpaceSidebarLinkType["PinnedUserInfo"] = "PINNED_USER_INFO";
    SpaceSidebarLinkType["WebItem"] = "WEB_ITEM";
})(SpaceSidebarLinkType = exports.SpaceSidebarLinkType || (exports.SpaceSidebarLinkType = {}));
var SpaceViewsPersistenceOption;
(function (SpaceViewsPersistenceOption) {
    SpaceViewsPersistenceOption["Popularity"] = "POPULARITY";
    SpaceViewsPersistenceOption["RecentlyModified"] = "RECENTLY_MODIFIED";
    SpaceViewsPersistenceOption["RecentlyViewed"] = "RECENTLY_VIEWED";
    SpaceViewsPersistenceOption["TitleAz"] = "TITLE_AZ";
    SpaceViewsPersistenceOption["Tree"] = "TREE";
})(SpaceViewsPersistenceOption = exports.SpaceViewsPersistenceOption || (exports.SpaceViewsPersistenceOption = {}));
var SpfAskActivityAttribute;
(function (SpfAskActivityAttribute) {
    SpfAskActivityAttribute["Description"] = "DESCRIPTION";
    SpfAskActivityAttribute["ImpactedWork"] = "IMPACTED_WORK";
    SpfAskActivityAttribute["Justification"] = "JUSTIFICATION";
    SpfAskActivityAttribute["Link"] = "LINK";
    SpfAskActivityAttribute["Name"] = "NAME";
    SpfAskActivityAttribute["Owner"] = "OWNER";
    SpfAskActivityAttribute["Priority"] = "PRIORITY";
    SpfAskActivityAttribute["ReceivingTeam"] = "RECEIVING_TEAM";
    SpfAskActivityAttribute["Status"] = "STATUS";
    SpfAskActivityAttribute["Submitter"] = "SUBMITTER";
    SpfAskActivityAttribute["SubmittingTeam"] = "SUBMITTING_TEAM";
    SpfAskActivityAttribute["TargetDate"] = "TARGET_DATE";
})(SpfAskActivityAttribute = exports.SpfAskActivityAttribute || (exports.SpfAskActivityAttribute = {}));
var SpfAskActivityType;
(function (SpfAskActivityType) {
    SpfAskActivityType["Created"] = "CREATED";
    SpfAskActivityType["Updated"] = "UPDATED";
})(SpfAskActivityType = exports.SpfAskActivityType || (exports.SpfAskActivityType = {}));
var SpfAskPriority;
(function (SpfAskPriority) {
    SpfAskPriority["Critical"] = "CRITICAL";
    SpfAskPriority["High"] = "HIGH";
    SpfAskPriority["Highest"] = "HIGHEST";
    SpfAskPriority["Low"] = "LOW";
    SpfAskPriority["Medium"] = "MEDIUM";
})(SpfAskPriority = exports.SpfAskPriority || (exports.SpfAskPriority = {}));
var SpfAskStatus;
(function (SpfAskStatus) {
    SpfAskStatus["Accepted"] = "ACCEPTED";
    SpfAskStatus["Canceled"] = "CANCELED";
    SpfAskStatus["Deferred"] = "DEFERRED";
    SpfAskStatus["Draft"] = "DRAFT";
    SpfAskStatus["InReview"] = "IN_REVIEW";
    SpfAskStatus["Revising"] = "REVISING";
    SpfAskStatus["Submitted"] = "SUBMITTED";
})(SpfAskStatus = exports.SpfAskStatus || (exports.SpfAskStatus = {}));
var SpfAskTargetDateType;
(function (SpfAskTargetDateType) {
    SpfAskTargetDateType["Day"] = "DAY";
    SpfAskTargetDateType["Month"] = "MONTH";
    SpfAskTargetDateType["Quarter"] = "QUARTER";
})(SpfAskTargetDateType = exports.SpfAskTargetDateType || (exports.SpfAskTargetDateType = {}));
var SprintReportsEstimationStatisticType;
(function (SprintReportsEstimationStatisticType) {
    SprintReportsEstimationStatisticType["IssueCount"] = "ISSUE_COUNT";
    SprintReportsEstimationStatisticType["OriginalEstimate"] = "ORIGINAL_ESTIMATE";
    SprintReportsEstimationStatisticType["StoryPoints"] = "STORY_POINTS";
})(SprintReportsEstimationStatisticType = exports.SprintReportsEstimationStatisticType || (exports.SprintReportsEstimationStatisticType = {}));
var SprintState;
(function (SprintState) {
    SprintState["Active"] = "ACTIVE";
    SprintState["Closed"] = "CLOSED";
    SprintState["Future"] = "FUTURE";
})(SprintState = exports.SprintState || (exports.SprintState = {}));
var StakeholderCommsAddedFromType;
(function (StakeholderCommsAddedFromType) {
    StakeholderCommsAddedFromType["Jsm"] = "JSM";
    StakeholderCommsAddedFromType["Statuspage"] = "STATUSPAGE";
})(StakeholderCommsAddedFromType = exports.StakeholderCommsAddedFromType || (exports.StakeholderCommsAddedFromType = {}));
var StakeholderCommsAssignmentType;
(function (StakeholderCommsAssignmentType) {
    StakeholderCommsAssignmentType["Asset"] = "ASSET";
    StakeholderCommsAssignmentType["Incident"] = "INCIDENT";
    StakeholderCommsAssignmentType["Org"] = "ORG";
    StakeholderCommsAssignmentType["Page"] = "PAGE";
    StakeholderCommsAssignmentType["Product"] = "PRODUCT";
    StakeholderCommsAssignmentType["Services"] = "SERVICES";
    StakeholderCommsAssignmentType["Site"] = "SITE";
})(StakeholderCommsAssignmentType = exports.StakeholderCommsAssignmentType || (exports.StakeholderCommsAssignmentType = {}));
var StakeholderCommsComponentStatus;
(function (StakeholderCommsComponentStatus) {
    StakeholderCommsComponentStatus["DegradedPerformance"] = "DEGRADED_PERFORMANCE";
    StakeholderCommsComponentStatus["MajorOutage"] = "MAJOR_OUTAGE";
    StakeholderCommsComponentStatus["Operational"] = "OPERATIONAL";
    StakeholderCommsComponentStatus["PartialOutage"] = "PARTIAL_OUTAGE";
    StakeholderCommsComponentStatus["UnderMaintenance"] = "UNDER_MAINTENANCE";
})(StakeholderCommsComponentStatus = exports.StakeholderCommsComponentStatus || (exports.StakeholderCommsComponentStatus = {}));
var StakeholderCommsComponentStyle;
(function (StakeholderCommsComponentStyle) {
    StakeholderCommsComponentStyle["Card"] = "CARD";
    StakeholderCommsComponentStyle["Table"] = "TABLE";
})(StakeholderCommsComponentStyle = exports.StakeholderCommsComponentStyle || (exports.StakeholderCommsComponentStyle = {}));
var StakeholderCommsComponentType;
(function (StakeholderCommsComponentType) {
    StakeholderCommsComponentType["Component"] = "COMPONENT";
    StakeholderCommsComponentType["GroupComponent"] = "GROUP_COMPONENT";
})(StakeholderCommsComponentType = exports.StakeholderCommsComponentType || (exports.StakeholderCommsComponentType = {}));
var StakeholderCommsErrorType;
(function (StakeholderCommsErrorType) {
    StakeholderCommsErrorType["SystemError"] = "SYSTEM_ERROR";
    StakeholderCommsErrorType["ValidationError"] = "VALIDATION_ERROR";
})(StakeholderCommsErrorType = exports.StakeholderCommsErrorType || (exports.StakeholderCommsErrorType = {}));
var StakeholderCommsExternalIncidentSource;
(function (StakeholderCommsExternalIncidentSource) {
    StakeholderCommsExternalIncidentSource["Jsm"] = "JSM";
    StakeholderCommsExternalIncidentSource["Statuspage"] = "STATUSPAGE";
})(StakeholderCommsExternalIncidentSource = exports.StakeholderCommsExternalIncidentSource || (exports.StakeholderCommsExternalIncidentSource = {}));
var StakeholderCommsIncidentImpact;
(function (StakeholderCommsIncidentImpact) {
    StakeholderCommsIncidentImpact["Critical"] = "CRITICAL";
    StakeholderCommsIncidentImpact["Major"] = "MAJOR";
    StakeholderCommsIncidentImpact["Minor"] = "MINOR";
    StakeholderCommsIncidentImpact["None"] = "NONE";
})(StakeholderCommsIncidentImpact = exports.StakeholderCommsIncidentImpact || (exports.StakeholderCommsIncidentImpact = {}));
var StakeholderCommsIncidentStatus;
(function (StakeholderCommsIncidentStatus) {
    StakeholderCommsIncidentStatus["Identified"] = "IDENTIFIED";
    StakeholderCommsIncidentStatus["Investigating"] = "INVESTIGATING";
    StakeholderCommsIncidentStatus["Monitoring"] = "MONITORING";
    StakeholderCommsIncidentStatus["Resolved"] = "RESOLVED";
})(StakeholderCommsIncidentStatus = exports.StakeholderCommsIncidentStatus || (exports.StakeholderCommsIncidentStatus = {}));
var StakeholderCommsOrderType;
(function (StakeholderCommsOrderType) {
    StakeholderCommsOrderType["EmailId"] = "EMAIL_ID";
    StakeholderCommsOrderType["Status"] = "STATUS";
})(StakeholderCommsOrderType = exports.StakeholderCommsOrderType || (exports.StakeholderCommsOrderType = {}));
var StakeholderCommsPageTheme;
(function (StakeholderCommsPageTheme) {
    StakeholderCommsPageTheme["AllSystemsGlow"] = "ALL_SYSTEMS_GLOW";
    StakeholderCommsPageTheme["Blank"] = "BLANK";
    StakeholderCommsPageTheme["ClearSkies"] = "CLEAR_SKIES";
    StakeholderCommsPageTheme["UpAndRunning"] = "UP_AND_RUNNING";
})(StakeholderCommsPageTheme = exports.StakeholderCommsPageTheme || (exports.StakeholderCommsPageTheme = {}));
var StakeholderCommsPageThemeMode;
(function (StakeholderCommsPageThemeMode) {
    StakeholderCommsPageThemeMode["Dark"] = "DARK";
    StakeholderCommsPageThemeMode["Light"] = "LIGHT";
})(StakeholderCommsPageThemeMode = exports.StakeholderCommsPageThemeMode || (exports.StakeholderCommsPageThemeMode = {}));
var StakeholderCommsSearchField;
(function (StakeholderCommsSearchField) {
    StakeholderCommsSearchField["EmailId"] = "EMAIL_ID";
})(StakeholderCommsSearchField = exports.StakeholderCommsSearchField || (exports.StakeholderCommsSearchField = {}));
var StakeholderCommsSearchFilterType;
(function (StakeholderCommsSearchFilterType) {
    StakeholderCommsSearchFilterType["Groups"] = "GROUPS";
    StakeholderCommsSearchFilterType["Teams"] = "TEAMS";
    StakeholderCommsSearchFilterType["Users"] = "USERS";
})(StakeholderCommsSearchFilterType = exports.StakeholderCommsSearchFilterType || (exports.StakeholderCommsSearchFilterType = {}));
var StakeholderCommsStakeholderGroupStatus;
(function (StakeholderCommsStakeholderGroupStatus) {
    StakeholderCommsStakeholderGroupStatus["Active"] = "ACTIVE";
    StakeholderCommsStakeholderGroupStatus["Deleted"] = "DELETED";
    StakeholderCommsStakeholderGroupStatus["Inactive"] = "INACTIVE";
    StakeholderCommsStakeholderGroupStatus["Suspended"] = "SUSPENDED";
})(StakeholderCommsStakeholderGroupStatus = exports.StakeholderCommsStakeholderGroupStatus || (exports.StakeholderCommsStakeholderGroupStatus = {}));
var StakeholderCommsStakeholderStatus;
(function (StakeholderCommsStakeholderStatus) {
    StakeholderCommsStakeholderStatus["Active"] = "ACTIVE";
    StakeholderCommsStakeholderStatus["Deleted"] = "DELETED";
    StakeholderCommsStakeholderStatus["Invited"] = "INVITED";
    StakeholderCommsStakeholderStatus["InvitedPendingApproval"] = "INVITED_PENDING_APPROVAL";
    StakeholderCommsStakeholderStatus["NotInvited"] = "NOT_INVITED";
    StakeholderCommsStakeholderStatus["PendingIdentitySetup"] = "PENDING_IDENTITY_SETUP";
    StakeholderCommsStakeholderStatus["Quarantined"] = "QUARANTINED";
})(StakeholderCommsStakeholderStatus = exports.StakeholderCommsStakeholderStatus || (exports.StakeholderCommsStakeholderStatus = {}));
var StakeholderCommsStakeholderType;
(function (StakeholderCommsStakeholderType) {
    StakeholderCommsStakeholderType["External"] = "EXTERNAL";
    StakeholderCommsStakeholderType["Group"] = "GROUP";
    StakeholderCommsStakeholderType["Internal"] = "INTERNAL";
    StakeholderCommsStakeholderType["Team"] = "TEAM";
})(StakeholderCommsStakeholderType = exports.StakeholderCommsStakeholderType || (exports.StakeholderCommsStakeholderType = {}));
var StakeholderCommsUptimeStyle;
(function (StakeholderCommsUptimeStyle) {
    StakeholderCommsUptimeStyle["DetailCard"] = "DETAIL_CARD";
    StakeholderCommsUptimeStyle["OnlyStatus"] = "ONLY_STATUS";
})(StakeholderCommsUptimeStyle = exports.StakeholderCommsUptimeStyle || (exports.StakeholderCommsUptimeStyle = {}));
var StalePageStatus;
(function (StalePageStatus) {
    StalePageStatus["Archived"] = "ARCHIVED";
    StalePageStatus["Current"] = "CURRENT";
    StalePageStatus["Draft"] = "DRAFT";
})(StalePageStatus = exports.StalePageStatus || (exports.StalePageStatus = {}));
var StalePagesSortingType;
(function (StalePagesSortingType) {
    StalePagesSortingType["Asc"] = "ASC";
    StalePagesSortingType["Desc"] = "DESC";
})(StalePagesSortingType = exports.StalePagesSortingType || (exports.StalePagesSortingType = {}));
var StringUserInputType;
(function (StringUserInputType) {
    StringUserInputType["Dropdown"] = "DROPDOWN";
    StringUserInputType["Paragraph"] = "PARAGRAPH";
    StringUserInputType["Text"] = "TEXT";
})(StringUserInputType = exports.StringUserInputType || (exports.StringUserInputType = {}));
var SummaryType;
(function (SummaryType) {
    SummaryType["Blogpost"] = "BLOGPOST";
    SummaryType["Page"] = "PAGE";
})(SummaryType = exports.SummaryType || (exports.SummaryType = {}));
var SupportRequestFieldDataType;
(function (SupportRequestFieldDataType) {
    SupportRequestFieldDataType["Boolean"] = "BOOLEAN";
    SupportRequestFieldDataType["Date"] = "DATE";
    SupportRequestFieldDataType["Number"] = "NUMBER";
    SupportRequestFieldDataType["String"] = "STRING";
})(SupportRequestFieldDataType = exports.SupportRequestFieldDataType || (exports.SupportRequestFieldDataType = {}));
var SupportRequestNamedContactOperation;
(function (SupportRequestNamedContactOperation) {
    SupportRequestNamedContactOperation["Add"] = "ADD";
    SupportRequestNamedContactOperation["Remove"] = "REMOVE";
})(SupportRequestNamedContactOperation = exports.SupportRequestNamedContactOperation || (exports.SupportRequestNamedContactOperation = {}));
var SupportRequestQueryOwnership;
(function (SupportRequestQueryOwnership) {
    SupportRequestQueryOwnership["Participant"] = "PARTICIPANT";
    SupportRequestQueryOwnership["Reporter"] = "REPORTER";
})(SupportRequestQueryOwnership = exports.SupportRequestQueryOwnership || (exports.SupportRequestQueryOwnership = {}));
var SupportRequestQueryStatusCategory;
(function (SupportRequestQueryStatusCategory) {
    SupportRequestQueryStatusCategory["Done"] = "DONE";
    SupportRequestQueryStatusCategory["Open"] = "OPEN";
})(SupportRequestQueryStatusCategory = exports.SupportRequestQueryStatusCategory || (exports.SupportRequestQueryStatusCategory = {}));
var SupportRequestStatusCategory;
(function (SupportRequestStatusCategory) {
    SupportRequestStatusCategory["Done"] = "DONE";
    SupportRequestStatusCategory["InProgress"] = "IN_PROGRESS";
    SupportRequestStatusCategory["Open"] = "OPEN";
})(SupportRequestStatusCategory = exports.SupportRequestStatusCategory || (exports.SupportRequestStatusCategory = {}));
var SupportRequestUserType;
(function (SupportRequestUserType) {
    SupportRequestUserType["Customer"] = "CUSTOMER";
    SupportRequestUserType["Partner"] = "PARTNER";
})(SupportRequestUserType = exports.SupportRequestUserType || (exports.SupportRequestUserType = {}));
var SwimlaneStrategy;
(function (SwimlaneStrategy) {
    SwimlaneStrategy["Assignee"] = "ASSIGNEE";
    SwimlaneStrategy["Issuechildren"] = "ISSUECHILDREN";
    SwimlaneStrategy["Issueparent"] = "ISSUEPARENT";
    SwimlaneStrategy["None"] = "NONE";
})(SwimlaneStrategy = exports.SwimlaneStrategy || (exports.SwimlaneStrategy = {}));
var SystemSpaceHomepageTemplate;
(function (SystemSpaceHomepageTemplate) {
    SystemSpaceHomepageTemplate["Eap"] = "EAP";
    SystemSpaceHomepageTemplate["Minimal"] = "MINIMAL";
    SystemSpaceHomepageTemplate["Visual"] = "VISUAL";
})(SystemSpaceHomepageTemplate = exports.SystemSpaceHomepageTemplate || (exports.SystemSpaceHomepageTemplate = {}));
var TargetTransition;
(function (TargetTransition) {
    TargetTransition["Done"] = "DONE";
    TargetTransition["Undone"] = "UNDONE";
})(TargetTransition = exports.TargetTransition || (exports.TargetTransition = {}));
var TaskStatus;
(function (TaskStatus) {
    TaskStatus["Checked"] = "CHECKED";
    TaskStatus["Unchecked"] = "UNCHECKED";
})(TaskStatus = exports.TaskStatus || (exports.TaskStatus = {}));
var TeamCalendarDayOfWeek;
(function (TeamCalendarDayOfWeek) {
    TeamCalendarDayOfWeek["Friday"] = "FRIDAY";
    TeamCalendarDayOfWeek["Monday"] = "MONDAY";
    TeamCalendarDayOfWeek["Saturday"] = "SATURDAY";
    TeamCalendarDayOfWeek["Sunday"] = "SUNDAY";
    TeamCalendarDayOfWeek["Thursday"] = "THURSDAY";
    TeamCalendarDayOfWeek["Tuesday"] = "TUESDAY";
    TeamCalendarDayOfWeek["Wednesday"] = "WEDNESDAY";
})(TeamCalendarDayOfWeek = exports.TeamCalendarDayOfWeek || (exports.TeamCalendarDayOfWeek = {}));
var TeamHierarchyErrorCode;
(function (TeamHierarchyErrorCode) {
    TeamHierarchyErrorCode["AncestorHierarchyExceedsMaxDepth"] = "ANCESTOR_HIERARCHY_EXCEEDS_MAX_DEPTH";
    TeamHierarchyErrorCode["AncestorInCycle"] = "ANCESTOR_IN_CYCLE";
    TeamHierarchyErrorCode["InvalidAncestorInHierarchy"] = "INVALID_ANCESTOR_IN_HIERARCHY";
    TeamHierarchyErrorCode["TeamInCycle"] = "TEAM_IN_CYCLE";
})(TeamHierarchyErrorCode = exports.TeamHierarchyErrorCode || (exports.TeamHierarchyErrorCode = {}));
var TeamMembershipRole;
(function (TeamMembershipRole) {
    TeamMembershipRole["Admin"] = "ADMIN";
    TeamMembershipRole["Regular"] = "REGULAR";
})(TeamMembershipRole = exports.TeamMembershipRole || (exports.TeamMembershipRole = {}));
var TeamMembershipSettings;
(function (TeamMembershipSettings) {
    TeamMembershipSettings["External"] = "EXTERNAL";
    TeamMembershipSettings["MemberInvite"] = "MEMBER_INVITE";
    TeamMembershipSettings["Open"] = "OPEN";
})(TeamMembershipSettings = exports.TeamMembershipSettings || (exports.TeamMembershipSettings = {}));
var TeamMembershipState;
(function (TeamMembershipState) {
    TeamMembershipState["Alumni"] = "ALUMNI";
    TeamMembershipState["FullMember"] = "FULL_MEMBER";
    TeamMembershipState["RequestingToJoin"] = "REQUESTING_TO_JOIN";
})(TeamMembershipState = exports.TeamMembershipState || (exports.TeamMembershipState = {}));
var TeamPermission;
(function (TeamPermission) {
    TeamPermission["FullRead"] = "FULL_READ";
    TeamPermission["FullWrite"] = "FULL_WRITE";
    TeamPermission["None"] = "NONE";
})(TeamPermission = exports.TeamPermission || (exports.TeamPermission = {}));
var TeamRole;
(function (TeamRole) {
    TeamRole["TeamsAdmin"] = "TEAMS_ADMIN";
    TeamRole["TeamsObserver"] = "TEAMS_OBSERVER";
    TeamRole["TeamsUser"] = "TEAMS_USER";
})(TeamRole = exports.TeamRole || (exports.TeamRole = {}));
var TeamSearchField;
(function (TeamSearchField) {
    TeamSearchField["Description"] = "DESCRIPTION";
    TeamSearchField["Name"] = "NAME";
})(TeamSearchField = exports.TeamSearchField || (exports.TeamSearchField = {}));
var TeamSortField;
(function (TeamSortField) {
    TeamSortField["DisplayName"] = "DISPLAY_NAME";
    TeamSortField["Id"] = "ID";
    TeamSortField["IsVerified"] = "IS_VERIFIED";
    TeamSortField["State"] = "STATE";
})(TeamSortField = exports.TeamSortField || (exports.TeamSortField = {}));
var TeamSortOrder;
(function (TeamSortOrder) {
    TeamSortOrder["Asc"] = "ASC";
    TeamSortOrder["Desc"] = "DESC";
})(TeamSortOrder = exports.TeamSortOrder || (exports.TeamSortOrder = {}));
var TeamState;
(function (TeamState) {
    TeamState["Active"] = "ACTIVE";
    TeamState["Disbanded"] = "DISBANDED";
    TeamState["Purged"] = "PURGED";
})(TeamState = exports.TeamState || (exports.TeamState = {}));
var TeamStateV2;
(function (TeamStateV2) {
    TeamStateV2["Active"] = "ACTIVE";
    TeamStateV2["Purged"] = "PURGED";
})(TeamStateV2 = exports.TeamStateV2 || (exports.TeamStateV2 = {}));
var TeamTypeDefaultFor;
(function (TeamTypeDefaultFor) {
    TeamTypeDefaultFor["Admin"] = "ADMIN";
    TeamTypeDefaultFor["UserManaged"] = "USER_MANAGED";
    TeamTypeDefaultFor["Verified"] = "VERIFIED";
})(TeamTypeDefaultFor = exports.TeamTypeDefaultFor || (exports.TeamTypeDefaultFor = {}));
var ToolchainAssociateEntitiesErrorCode;
(function (ToolchainAssociateEntitiesErrorCode) {
    ToolchainAssociateEntitiesErrorCode["EntityRejected"] = "ENTITY_REJECTED";
    ToolchainAssociateEntitiesErrorCode["EntityUrlInvalid"] = "ENTITY_URL_INVALID";
    ToolchainAssociateEntitiesErrorCode["ProviderEntityFetchForbidden"] = "PROVIDER_ENTITY_FETCH_FORBIDDEN";
    ToolchainAssociateEntitiesErrorCode["ProviderEntityNotFound"] = "PROVIDER_ENTITY_NOT_FOUND";
    ToolchainAssociateEntitiesErrorCode["ProviderError"] = "PROVIDER_ERROR";
    ToolchainAssociateEntitiesErrorCode["ProviderInputInvalid"] = "PROVIDER_INPUT_INVALID";
})(ToolchainAssociateEntitiesErrorCode = exports.ToolchainAssociateEntitiesErrorCode || (exports.ToolchainAssociateEntitiesErrorCode = {}));
var ToolchainCheckAuthErrorCode;
(function (ToolchainCheckAuthErrorCode) {
    ToolchainCheckAuthErrorCode["ProviderError"] = "PROVIDER_ERROR";
})(ToolchainCheckAuthErrorCode = exports.ToolchainCheckAuthErrorCode || (exports.ToolchainCheckAuthErrorCode = {}));
var ToolchainContainerConnectionErrorCode;
(function (ToolchainContainerConnectionErrorCode) {
    ToolchainContainerConnectionErrorCode["ProviderActionForbidden"] = "PROVIDER_ACTION_FORBIDDEN";
})(ToolchainContainerConnectionErrorCode = exports.ToolchainContainerConnectionErrorCode || (exports.ToolchainContainerConnectionErrorCode = {}));
var ToolchainCreateContainerErrorCode;
(function (ToolchainCreateContainerErrorCode) {
    ToolchainCreateContainerErrorCode["ProviderContainerAlreadyExists"] = "PROVIDER_CONTAINER_ALREADY_EXISTS";
    ToolchainCreateContainerErrorCode["ProviderContainerCreateForbidden"] = "PROVIDER_CONTAINER_CREATE_FORBIDDEN";
    ToolchainCreateContainerErrorCode["ProviderError"] = "PROVIDER_ERROR";
    ToolchainCreateContainerErrorCode["ProviderInputInvalid"] = "PROVIDER_INPUT_INVALID";
    ToolchainCreateContainerErrorCode["ProviderWorkspaceNotFound"] = "PROVIDER_WORKSPACE_NOT_FOUND";
})(ToolchainCreateContainerErrorCode = exports.ToolchainCreateContainerErrorCode || (exports.ToolchainCreateContainerErrorCode = {}));
var ToolchainDisassociateEntitiesErrorCode;
(function (ToolchainDisassociateEntitiesErrorCode) {
    ToolchainDisassociateEntitiesErrorCode["UnknownAssociation"] = "UNKNOWN_ASSOCIATION";
})(ToolchainDisassociateEntitiesErrorCode = exports.ToolchainDisassociateEntitiesErrorCode || (exports.ToolchainDisassociateEntitiesErrorCode = {}));
var ToolchainProviderType;
(function (ToolchainProviderType) {
    ToolchainProviderType["Build"] = "BUILD";
    ToolchainProviderType["Deployment"] = "DEPLOYMENT";
    ToolchainProviderType["Design"] = "DESIGN";
    ToolchainProviderType["DevopsComponents"] = "DEVOPS_COMPONENTS";
    ToolchainProviderType["DevInfo"] = "DEV_INFO";
    ToolchainProviderType["Documentation"] = "DOCUMENTATION";
    ToolchainProviderType["FeatureFlag"] = "FEATURE_FLAG";
    ToolchainProviderType["Operations"] = "OPERATIONS";
    ToolchainProviderType["RemoteLinks"] = "REMOTE_LINKS";
    ToolchainProviderType["Security"] = "SECURITY";
})(ToolchainProviderType = exports.ToolchainProviderType || (exports.ToolchainProviderType = {}));
var ToolchainWorkspaceConnectionErrorCode;
(function (ToolchainWorkspaceConnectionErrorCode) {
    ToolchainWorkspaceConnectionErrorCode["ProviderActionError"] = "PROVIDER_ACTION_ERROR";
    ToolchainWorkspaceConnectionErrorCode["ProviderNotSupported"] = "PROVIDER_NOT_SUPPORTED";
})(ToolchainWorkspaceConnectionErrorCode = exports.ToolchainWorkspaceConnectionErrorCode || (exports.ToolchainWorkspaceConnectionErrorCode = {}));
var TownsquareAccessControlCapability;
(function (TownsquareAccessControlCapability) {
    TownsquareAccessControlCapability["Access"] = "ACCESS";
    TownsquareAccessControlCapability["Administer"] = "ADMINISTER";
    TownsquareAccessControlCapability["Create"] = "CREATE";
})(TownsquareAccessControlCapability = exports.TownsquareAccessControlCapability || (exports.TownsquareAccessControlCapability = {}));
var TownsquareCanCreateFusionResult;
(function (TownsquareCanCreateFusionResult) {
    TownsquareCanCreateFusionResult["CanCreate"] = "CAN_CREATE";
    TownsquareCanCreateFusionResult["IntegrationNotInstalled"] = "INTEGRATION_NOT_INSTALLED";
    TownsquareCanCreateFusionResult["IssueAlreadyLinked"] = "ISSUE_ALREADY_LINKED";
    TownsquareCanCreateFusionResult["NotInSameOrg"] = "NOT_IN_SAME_ORG";
    TownsquareCanCreateFusionResult["PermissionDenied"] = "PERMISSION_DENIED";
    TownsquareCanCreateFusionResult["UnexpectedIssueType"] = "UNEXPECTED_ISSUE_TYPE";
    TownsquareCanCreateFusionResult["UnknownError"] = "UNKNOWN_ERROR";
})(TownsquareCanCreateFusionResult = exports.TownsquareCanCreateFusionResult || (exports.TownsquareCanCreateFusionResult = {}));
var TownsquareCapabilityContainer;
(function (TownsquareCapabilityContainer) {
    TownsquareCapabilityContainer["FocusAreasApp"] = "FOCUS_AREAS_APP";
    TownsquareCapabilityContainer["GoalsApp"] = "GOALS_APP";
    TownsquareCapabilityContainer["JiraAlignApp"] = "JIRA_ALIGN_APP";
    TownsquareCapabilityContainer["ProjectsApp"] = "PROJECTS_APP";
})(TownsquareCapabilityContainer = exports.TownsquareCapabilityContainer || (exports.TownsquareCapabilityContainer = {}));
var TownsquareGoalIconAppearance;
(function (TownsquareGoalIconAppearance) {
    TownsquareGoalIconAppearance["AtRisk"] = "AT_RISK";
    TownsquareGoalIconAppearance["Default"] = "DEFAULT";
    TownsquareGoalIconAppearance["OffTrack"] = "OFF_TRACK";
    TownsquareGoalIconAppearance["OnTrack"] = "ON_TRACK";
})(TownsquareGoalIconAppearance = exports.TownsquareGoalIconAppearance || (exports.TownsquareGoalIconAppearance = {}));
var TownsquareGoalIconKey;
(function (TownsquareGoalIconKey) {
    TownsquareGoalIconKey["Goal"] = "GOAL";
    TownsquareGoalIconKey["KeyResult"] = "KEY_RESULT";
    TownsquareGoalIconKey["Objective"] = "OBJECTIVE";
})(TownsquareGoalIconKey = exports.TownsquareGoalIconKey || (exports.TownsquareGoalIconKey = {}));
var TownsquareGoalProgressType;
(function (TownsquareGoalProgressType) {
    TownsquareGoalProgressType["AttachedMetric"] = "ATTACHED_METRIC";
    TownsquareGoalProgressType["AverageRollup"] = "AVERAGE_ROLLUP";
    TownsquareGoalProgressType["None"] = "NONE";
})(TownsquareGoalProgressType = exports.TownsquareGoalProgressType || (exports.TownsquareGoalProgressType = {}));
var TownsquareGoalScoringMode;
(function (TownsquareGoalScoringMode) {
    TownsquareGoalScoringMode["Okr"] = "OKR";
    TownsquareGoalScoringMode["Simple"] = "SIMPLE";
})(TownsquareGoalScoringMode = exports.TownsquareGoalScoringMode || (exports.TownsquareGoalScoringMode = {}));
var TownsquareGoalSortEnum;
(function (TownsquareGoalSortEnum) {
    TownsquareGoalSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareGoalSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareGoalSortEnum["HierarchyAsc"] = "HIERARCHY_ASC";
    TownsquareGoalSortEnum["HierarchyDesc"] = "HIERARCHY_DESC";
    TownsquareGoalSortEnum["HierarchyLevelAsc"] = "HIERARCHY_LEVEL_ASC";
    TownsquareGoalSortEnum["HierarchyLevelDesc"] = "HIERARCHY_LEVEL_DESC";
    TownsquareGoalSortEnum["IdAsc"] = "ID_ASC";
    TownsquareGoalSortEnum["IdDesc"] = "ID_DESC";
    TownsquareGoalSortEnum["LatestUpdateDateAsc"] = "LATEST_UPDATE_DATE_ASC";
    TownsquareGoalSortEnum["LatestUpdateDateDesc"] = "LATEST_UPDATE_DATE_DESC";
    TownsquareGoalSortEnum["NameAsc"] = "NAME_ASC";
    TownsquareGoalSortEnum["NameDesc"] = "NAME_DESC";
    TownsquareGoalSortEnum["ProjectCountAsc"] = "PROJECT_COUNT_ASC";
    TownsquareGoalSortEnum["ProjectCountDesc"] = "PROJECT_COUNT_DESC";
    TownsquareGoalSortEnum["ScoreAsc"] = "SCORE_ASC";
    TownsquareGoalSortEnum["ScoreDesc"] = "SCORE_DESC";
    TownsquareGoalSortEnum["TargetDateAsc"] = "TARGET_DATE_ASC";
    TownsquareGoalSortEnum["TargetDateDesc"] = "TARGET_DATE_DESC";
    TownsquareGoalSortEnum["WatchingAsc"] = "WATCHING_ASC";
    TownsquareGoalSortEnum["WatchingDesc"] = "WATCHING_DESC";
})(TownsquareGoalSortEnum = exports.TownsquareGoalSortEnum || (exports.TownsquareGoalSortEnum = {}));
var TownsquareGoalStateValue;
(function (TownsquareGoalStateValue) {
    TownsquareGoalStateValue["Archived"] = "archived";
    TownsquareGoalStateValue["AtRisk"] = "at_risk";
    TownsquareGoalStateValue["Cancelled"] = "cancelled";
    TownsquareGoalStateValue["Done"] = "done";
    TownsquareGoalStateValue["OffTrack"] = "off_track";
    TownsquareGoalStateValue["OnTrack"] = "on_track";
    TownsquareGoalStateValue["Paused"] = "paused";
    TownsquareGoalStateValue["Pending"] = "pending";
})(TownsquareGoalStateValue = exports.TownsquareGoalStateValue || (exports.TownsquareGoalStateValue = {}));
var TownsquareGoalTypeState;
(function (TownsquareGoalTypeState) {
    TownsquareGoalTypeState["Disabled"] = "DISABLED";
    TownsquareGoalTypeState["Enabled"] = "ENABLED";
})(TownsquareGoalTypeState = exports.TownsquareGoalTypeState || (exports.TownsquareGoalTypeState = {}));
var TownsquareHighlightSortEnum;
(function (TownsquareHighlightSortEnum) {
    TownsquareHighlightSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareHighlightSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareHighlightSortEnum["IdAsc"] = "ID_ASC";
    TownsquareHighlightSortEnum["IdDesc"] = "ID_DESC";
    TownsquareHighlightSortEnum["SummaryAsc"] = "SUMMARY_ASC";
    TownsquareHighlightSortEnum["SummaryDesc"] = "SUMMARY_DESC";
})(TownsquareHighlightSortEnum = exports.TownsquareHighlightSortEnum || (exports.TownsquareHighlightSortEnum = {}));
var TownsquareHighlightType;
(function (TownsquareHighlightType) {
    TownsquareHighlightType["Decision"] = "DECISION";
    TownsquareHighlightType["Learning"] = "LEARNING";
    TownsquareHighlightType["Risk"] = "RISK";
})(TownsquareHighlightType = exports.TownsquareHighlightType || (exports.TownsquareHighlightType = {}));
var TownsquareLinkType;
(function (TownsquareLinkType) {
    TownsquareLinkType["Related"] = "RELATED";
    TownsquareLinkType["WorkTracking"] = "WORK_TRACKING";
})(TownsquareLinkType = exports.TownsquareLinkType || (exports.TownsquareLinkType = {}));
var TownsquareMetricType;
(function (TownsquareMetricType) {
    TownsquareMetricType["Currency"] = "CURRENCY";
    TownsquareMetricType["Numeric"] = "NUMERIC";
    TownsquareMetricType["Percentage"] = "PERCENTAGE";
})(TownsquareMetricType = exports.TownsquareMetricType || (exports.TownsquareMetricType = {}));
var TownsquareMetricValueSortEnum;
(function (TownsquareMetricValueSortEnum) {
    TownsquareMetricValueSortEnum["IdAsc"] = "ID_ASC";
    TownsquareMetricValueSortEnum["IdDesc"] = "ID_DESC";
    TownsquareMetricValueSortEnum["TimeAsc"] = "TIME_ASC";
    TownsquareMetricValueSortEnum["TimeDesc"] = "TIME_DESC";
})(TownsquareMetricValueSortEnum = exports.TownsquareMetricValueSortEnum || (exports.TownsquareMetricValueSortEnum = {}));
var TownsquareProjectDependencyRelationship;
(function (TownsquareProjectDependencyRelationship) {
    TownsquareProjectDependencyRelationship["DependedBy"] = "DEPENDED_BY";
    TownsquareProjectDependencyRelationship["DependsOn"] = "DEPENDS_ON";
    TownsquareProjectDependencyRelationship["Related"] = "RELATED";
})(TownsquareProjectDependencyRelationship = exports.TownsquareProjectDependencyRelationship || (exports.TownsquareProjectDependencyRelationship = {}));
var TownsquareProjectFusionField;
(function (TownsquareProjectFusionField) {
    TownsquareProjectFusionField["DueDate"] = "DUE_DATE";
    TownsquareProjectFusionField["Followers"] = "FOLLOWERS";
    TownsquareProjectFusionField["Labels"] = "LABELS";
    TownsquareProjectFusionField["StartDate"] = "START_DATE";
    TownsquareProjectFusionField["Status"] = "STATUS";
    TownsquareProjectFusionField["Summary"] = "SUMMARY";
})(TownsquareProjectFusionField = exports.TownsquareProjectFusionField || (exports.TownsquareProjectFusionField = {}));
var TownsquareProjectPhase;
(function (TownsquareProjectPhase) {
    TownsquareProjectPhase["Done"] = "done";
    TownsquareProjectPhase["InProgress"] = "in_progress";
    TownsquareProjectPhase["Paused"] = "paused";
    TownsquareProjectPhase["Pending"] = "pending";
})(TownsquareProjectPhase = exports.TownsquareProjectPhase || (exports.TownsquareProjectPhase = {}));
var TownsquareProjectSortEnum;
(function (TownsquareProjectSortEnum) {
    TownsquareProjectSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareProjectSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareProjectSortEnum["IdAsc"] = "ID_ASC";
    TownsquareProjectSortEnum["IdDesc"] = "ID_DESC";
    TownsquareProjectSortEnum["LatestUpdateDateAsc"] = "LATEST_UPDATE_DATE_ASC";
    TownsquareProjectSortEnum["LatestUpdateDateDesc"] = "LATEST_UPDATE_DATE_DESC";
    TownsquareProjectSortEnum["NameAsc"] = "NAME_ASC";
    TownsquareProjectSortEnum["NameDesc"] = "NAME_DESC";
    TownsquareProjectSortEnum["StartDateAsc"] = "START_DATE_ASC";
    TownsquareProjectSortEnum["StartDateDesc"] = "START_DATE_DESC";
    TownsquareProjectSortEnum["StatusAsc"] = "STATUS_ASC";
    TownsquareProjectSortEnum["StatusDesc"] = "STATUS_DESC";
    TownsquareProjectSortEnum["TargetDateAsc"] = "TARGET_DATE_ASC";
    TownsquareProjectSortEnum["TargetDateDesc"] = "TARGET_DATE_DESC";
    TownsquareProjectSortEnum["WatchingAsc"] = "WATCHING_ASC";
    TownsquareProjectSortEnum["WatchingDesc"] = "WATCHING_DESC";
})(TownsquareProjectSortEnum = exports.TownsquareProjectSortEnum || (exports.TownsquareProjectSortEnum = {}));
var TownsquareProjectStateValue;
(function (TownsquareProjectStateValue) {
    TownsquareProjectStateValue["Archived"] = "archived";
    TownsquareProjectStateValue["AtRisk"] = "at_risk";
    TownsquareProjectStateValue["Cancelled"] = "cancelled";
    TownsquareProjectStateValue["Done"] = "done";
    TownsquareProjectStateValue["OffTrack"] = "off_track";
    TownsquareProjectStateValue["OnTrack"] = "on_track";
    TownsquareProjectStateValue["Paused"] = "paused";
    TownsquareProjectStateValue["Pending"] = "pending";
})(TownsquareProjectStateValue = exports.TownsquareProjectStateValue || (exports.TownsquareProjectStateValue = {}));
var TownsquareRiskSortEnum;
(function (TownsquareRiskSortEnum) {
    TownsquareRiskSortEnum["CreationDateAsc"] = "CREATION_DATE_ASC";
    TownsquareRiskSortEnum["CreationDateDesc"] = "CREATION_DATE_DESC";
    TownsquareRiskSortEnum["IdAsc"] = "ID_ASC";
    TownsquareRiskSortEnum["IdDesc"] = "ID_DESC";
    TownsquareRiskSortEnum["SummaryAsc"] = "SUMMARY_ASC";
    TownsquareRiskSortEnum["SummaryDesc"] = "SUMMARY_DESC";
})(TownsquareRiskSortEnum = exports.TownsquareRiskSortEnum || (exports.TownsquareRiskSortEnum = {}));
var TownsquareTagSortEnum;
(function (TownsquareTagSortEnum) {
    TownsquareTagSortEnum["EntityCountDesc"] = "ENTITY_COUNT_DESC";
    TownsquareTagSortEnum["IdAsc"] = "ID_ASC";
    TownsquareTagSortEnum["IdDesc"] = "ID_DESC";
    TownsquareTagSortEnum["NameAsc"] = "NAME_ASC";
    TownsquareTagSortEnum["NameDesc"] = "NAME_DESC";
    TownsquareTagSortEnum["UsageAsc"] = "USAGE_ASC";
    TownsquareTagSortEnum["UsageDesc"] = "USAGE_DESC";
    TownsquareTagSortEnum["WatcherAsc"] = "WATCHER_ASC";
    TownsquareTagSortEnum["WatcherDesc"] = "WATCHER_DESC";
})(TownsquareTagSortEnum = exports.TownsquareTagSortEnum || (exports.TownsquareTagSortEnum = {}));
var TownsquareTargetDateType;
(function (TownsquareTargetDateType) {
    TownsquareTargetDateType["Day"] = "DAY";
    TownsquareTargetDateType["Month"] = "MONTH";
    TownsquareTargetDateType["Quarter"] = "QUARTER";
})(TownsquareTargetDateType = exports.TownsquareTargetDateType || (exports.TownsquareTargetDateType = {}));
var TownsquareUnshardedAccessControlCapability;
(function (TownsquareUnshardedAccessControlCapability) {
    TownsquareUnshardedAccessControlCapability["Access"] = "ACCESS";
    TownsquareUnshardedAccessControlCapability["Administer"] = "ADMINISTER";
    TownsquareUnshardedAccessControlCapability["Create"] = "CREATE";
})(TownsquareUnshardedAccessControlCapability = exports.TownsquareUnshardedAccessControlCapability || (exports.TownsquareUnshardedAccessControlCapability = {}));
var TownsquareUnshardedCapabilityContainer;
(function (TownsquareUnshardedCapabilityContainer) {
    TownsquareUnshardedCapabilityContainer["GoalsApp"] = "GOALS_APP";
    TownsquareUnshardedCapabilityContainer["ProjectsApp"] = "PROJECTS_APP";
})(TownsquareUnshardedCapabilityContainer = exports.TownsquareUnshardedCapabilityContainer || (exports.TownsquareUnshardedCapabilityContainer = {}));
var TownsquareUpdateType;
(function (TownsquareUpdateType) {
    TownsquareUpdateType["System"] = "SYSTEM";
    TownsquareUpdateType["User"] = "USER";
})(TownsquareUpdateType = exports.TownsquareUpdateType || (exports.TownsquareUpdateType = {}));
var TrelloBoardMembershipType;
(function (TrelloBoardMembershipType) {
    TrelloBoardMembershipType["Admin"] = "ADMIN";
    TrelloBoardMembershipType["Normal"] = "NORMAL";
    TrelloBoardMembershipType["Observer"] = "OBSERVER";
})(TrelloBoardMembershipType = exports.TrelloBoardMembershipType || (exports.TrelloBoardMembershipType = {}));
var TrelloBoardPrefsPermissionLevel;
(function (TrelloBoardPrefsPermissionLevel) {
    TrelloBoardPrefsPermissionLevel["Enterprise"] = "ENTERPRISE";
    TrelloBoardPrefsPermissionLevel["Org"] = "ORG";
    TrelloBoardPrefsPermissionLevel["Private"] = "PRIVATE";
    TrelloBoardPrefsPermissionLevel["Public"] = "PUBLIC";
})(TrelloBoardPrefsPermissionLevel = exports.TrelloBoardPrefsPermissionLevel || (exports.TrelloBoardPrefsPermissionLevel = {}));
var TrelloCardActionType;
(function (TrelloCardActionType) {
    TrelloCardActionType["AddAttachment"] = "ADD_ATTACHMENT";
    TrelloCardActionType["AddChecklist"] = "ADD_CHECKLIST";
    TrelloCardActionType["AddMember"] = "ADD_MEMBER";
    TrelloCardActionType["Comment"] = "COMMENT";
    TrelloCardActionType["CommentFromCopiedCard"] = "COMMENT_FROM_COPIED_CARD";
    TrelloCardActionType["CopyCard"] = "COPY_CARD";
    TrelloCardActionType["CopyInboxCard"] = "COPY_INBOX_CARD";
    TrelloCardActionType["CreateCard"] = "CREATE_CARD";
    TrelloCardActionType["CreateCardFromCheckItem"] = "CREATE_CARD_FROM_CHECK_ITEM";
    TrelloCardActionType["CreateCardFromEmail"] = "CREATE_CARD_FROM_EMAIL";
    TrelloCardActionType["CreateInboxCard"] = "CREATE_INBOX_CARD";
    TrelloCardActionType["DeleteAttachment"] = "DELETE_ATTACHMENT";
    TrelloCardActionType["MoveCard"] = "MOVE_CARD";
    TrelloCardActionType["MoveCardToBoard"] = "MOVE_CARD_TO_BOARD";
    TrelloCardActionType["MoveInboxCardToBoard"] = "MOVE_INBOX_CARD_TO_BOARD";
    TrelloCardActionType["RemoveChecklist"] = "REMOVE_CHECKLIST";
    TrelloCardActionType["RemoveMember"] = "REMOVE_MEMBER";
    TrelloCardActionType["UpdateCardCheckItemState"] = "UPDATE_CARD_CHECK_ITEM_STATE";
    TrelloCardActionType["UpdateCardClosed"] = "UPDATE_CARD_CLOSED";
    TrelloCardActionType["UpdateCardComplete"] = "UPDATE_CARD_COMPLETE";
    TrelloCardActionType["UpdateCardDue"] = "UPDATE_CARD_DUE";
    TrelloCardActionType["UpdateCardRecurrenceRule"] = "UPDATE_CARD_RECURRENCE_RULE";
    TrelloCardActionType["UpdateCustomFieldItem"] = "UPDATE_CUSTOM_FIELD_ITEM";
})(TrelloCardActionType = exports.TrelloCardActionType || (exports.TrelloCardActionType = {}));
var TrelloCardBatchStatus;
(function (TrelloCardBatchStatus) {
    TrelloCardBatchStatus["Completed"] = "COMPLETED";
    TrelloCardBatchStatus["Executing"] = "EXECUTING";
    TrelloCardBatchStatus["Failed"] = "FAILED";
    TrelloCardBatchStatus["Pending"] = "PENDING";
})(TrelloCardBatchStatus = exports.TrelloCardBatchStatus || (exports.TrelloCardBatchStatus = {}));
var TrelloCardCoverBrightness;
(function (TrelloCardCoverBrightness) {
    TrelloCardCoverBrightness["Dark"] = "DARK";
    TrelloCardCoverBrightness["Light"] = "LIGHT";
})(TrelloCardCoverBrightness = exports.TrelloCardCoverBrightness || (exports.TrelloCardCoverBrightness = {}));
var TrelloCardCoverColor;
(function (TrelloCardCoverColor) {
    TrelloCardCoverColor["Black"] = "BLACK";
    TrelloCardCoverColor["Blue"] = "BLUE";
    TrelloCardCoverColor["Green"] = "GREEN";
    TrelloCardCoverColor["Lime"] = "LIME";
    TrelloCardCoverColor["Orange"] = "ORANGE";
    TrelloCardCoverColor["Pink"] = "PINK";
    TrelloCardCoverColor["Purple"] = "PURPLE";
    TrelloCardCoverColor["Red"] = "RED";
    TrelloCardCoverColor["Sky"] = "SKY";
    TrelloCardCoverColor["Yellow"] = "YELLOW";
})(TrelloCardCoverColor = exports.TrelloCardCoverColor || (exports.TrelloCardCoverColor = {}));
var TrelloCardCoverSize;
(function (TrelloCardCoverSize) {
    TrelloCardCoverSize["Full"] = "FULL";
    TrelloCardCoverSize["Normal"] = "NORMAL";
})(TrelloCardCoverSize = exports.TrelloCardCoverSize || (exports.TrelloCardCoverSize = {}));
var TrelloCardExternalSource;
(function (TrelloCardExternalSource) {
    TrelloCardExternalSource["BrowserExtension"] = "BROWSER_EXTENSION";
    TrelloCardExternalSource["Email"] = "EMAIL";
    TrelloCardExternalSource["Loom"] = "LOOM";
    TrelloCardExternalSource["Msteams"] = "MSTEAMS";
    TrelloCardExternalSource["Siri"] = "SIRI";
    TrelloCardExternalSource["Slack"] = "SLACK";
})(TrelloCardExternalSource = exports.TrelloCardExternalSource || (exports.TrelloCardExternalSource = {}));
var TrelloCardRole;
(function (TrelloCardRole) {
    TrelloCardRole["Board"] = "BOARD";
    TrelloCardRole["Link"] = "LINK";
    TrelloCardRole["Mirror"] = "MIRROR";
    TrelloCardRole["Separator"] = "SEPARATOR";
})(TrelloCardRole = exports.TrelloCardRole || (exports.TrelloCardRole = {}));
var TrelloCheckItemState;
(function (TrelloCheckItemState) {
    TrelloCheckItemState["Complete"] = "COMPLETE";
    TrelloCheckItemState["Incomplete"] = "INCOMPLETE";
})(TrelloCheckItemState = exports.TrelloCheckItemState || (exports.TrelloCheckItemState = {}));
var TrelloDataSourceHandler;
(function (TrelloDataSourceHandler) {
    TrelloDataSourceHandler["LinkingPlatform"] = "LINKING_PLATFORM";
})(TrelloDataSourceHandler = exports.TrelloDataSourceHandler || (exports.TrelloDataSourceHandler = {}));
var TrelloListType;
(function (TrelloListType) {
    TrelloListType["Datasource"] = "DATASOURCE";
})(TrelloListType = exports.TrelloListType || (exports.TrelloListType = {}));
var TrelloPlannerCalendarColor;
(function (TrelloPlannerCalendarColor) {
    TrelloPlannerCalendarColor["BlueSubtler"] = "BLUE_SUBTLER";
    TrelloPlannerCalendarColor["BlueSubtlest"] = "BLUE_SUBTLEST";
    TrelloPlannerCalendarColor["GraySubtler"] = "GRAY_SUBTLER";
    TrelloPlannerCalendarColor["GraySubtlest"] = "GRAY_SUBTLEST";
    TrelloPlannerCalendarColor["GreenSubtler"] = "GREEN_SUBTLER";
    TrelloPlannerCalendarColor["GreenSubtlest"] = "GREEN_SUBTLEST";
    TrelloPlannerCalendarColor["LimeSubtler"] = "LIME_SUBTLER";
    TrelloPlannerCalendarColor["LimeSubtlest"] = "LIME_SUBTLEST";
    TrelloPlannerCalendarColor["MagentaSubtler"] = "MAGENTA_SUBTLER";
    TrelloPlannerCalendarColor["MagentaSubtlest"] = "MAGENTA_SUBTLEST";
    TrelloPlannerCalendarColor["OrangeSubtler"] = "ORANGE_SUBTLER";
    TrelloPlannerCalendarColor["OrangeSubtlest"] = "ORANGE_SUBTLEST";
    TrelloPlannerCalendarColor["PurpleSubtlest"] = "PURPLE_SUBTLEST";
    TrelloPlannerCalendarColor["RedSubtler"] = "RED_SUBTLER";
    TrelloPlannerCalendarColor["RedSubtlest"] = "RED_SUBTLEST";
    TrelloPlannerCalendarColor["YellowBolder"] = "YELLOW_BOLDER";
    TrelloPlannerCalendarColor["YellowSubtler"] = "YELLOW_SUBTLER";
    TrelloPlannerCalendarColor["YellowSubtlest"] = "YELLOW_SUBTLEST";
})(TrelloPlannerCalendarColor = exports.TrelloPlannerCalendarColor || (exports.TrelloPlannerCalendarColor = {}));
var TrelloPlannerCalendarEventStatus;
(function (TrelloPlannerCalendarEventStatus) {
    TrelloPlannerCalendarEventStatus["Accepted"] = "ACCEPTED";
    TrelloPlannerCalendarEventStatus["Declined"] = "DECLINED";
    TrelloPlannerCalendarEventStatus["NeedsAction"] = "NEEDS_ACTION";
    TrelloPlannerCalendarEventStatus["Tentative"] = "TENTATIVE";
})(TrelloPlannerCalendarEventStatus = exports.TrelloPlannerCalendarEventStatus || (exports.TrelloPlannerCalendarEventStatus = {}));
var TrelloPlannerCalendarEventType;
(function (TrelloPlannerCalendarEventType) {
    TrelloPlannerCalendarEventType["Default"] = "DEFAULT";
    TrelloPlannerCalendarEventType["OutOfOffice"] = "OUT_OF_OFFICE";
    TrelloPlannerCalendarEventType["PlannerEvent"] = "PLANNER_EVENT";
})(TrelloPlannerCalendarEventType = exports.TrelloPlannerCalendarEventType || (exports.TrelloPlannerCalendarEventType = {}));
var TrelloPlannerCalendarEventVisibility;
(function (TrelloPlannerCalendarEventVisibility) {
    TrelloPlannerCalendarEventVisibility["Default"] = "DEFAULT";
    TrelloPlannerCalendarEventVisibility["Private"] = "PRIVATE";
    TrelloPlannerCalendarEventVisibility["Public"] = "PUBLIC";
})(TrelloPlannerCalendarEventVisibility = exports.TrelloPlannerCalendarEventVisibility || (exports.TrelloPlannerCalendarEventVisibility = {}));
var TrelloPowerUpDataAccess;
(function (TrelloPowerUpDataAccess) {
    TrelloPowerUpDataAccess["Private"] = "PRIVATE";
    TrelloPowerUpDataAccess["Shared"] = "SHARED";
})(TrelloPowerUpDataAccess = exports.TrelloPowerUpDataAccess || (exports.TrelloPowerUpDataAccess = {}));
var TrelloPowerUpDataScope;
(function (TrelloPowerUpDataScope) {
    TrelloPowerUpDataScope["Board"] = "BOARD";
    TrelloPowerUpDataScope["Card"] = "CARD";
    TrelloPowerUpDataScope["Member"] = "MEMBER";
    TrelloPowerUpDataScope["Organization"] = "ORGANIZATION";
})(TrelloPowerUpDataScope = exports.TrelloPowerUpDataScope || (exports.TrelloPowerUpDataScope = {}));
var TrelloSupportedPlannerProviders;
(function (TrelloSupportedPlannerProviders) {
    TrelloSupportedPlannerProviders["Google"] = "GOOGLE";
    TrelloSupportedPlannerProviders["Outlook"] = "OUTLOOK";
})(TrelloSupportedPlannerProviders = exports.TrelloSupportedPlannerProviders || (exports.TrelloSupportedPlannerProviders = {}));
var TrelloWorkspaceMembershipType;
(function (TrelloWorkspaceMembershipType) {
    TrelloWorkspaceMembershipType["Admin"] = "ADMIN";
    TrelloWorkspaceMembershipType["Normal"] = "NORMAL";
})(TrelloWorkspaceMembershipType = exports.TrelloWorkspaceMembershipType || (exports.TrelloWorkspaceMembershipType = {}));
var TrelloWorkspaceTier;
(function (TrelloWorkspaceTier) {
    TrelloWorkspaceTier["Paid"] = "PAID";
})(TrelloWorkspaceTier = exports.TrelloWorkspaceTier || (exports.TrelloWorkspaceTier = {}));
var UnifiedAiLikeTargetType;
(function (UnifiedAiLikeTargetType) {
    UnifiedAiLikeTargetType["Post"] = "POST";
    UnifiedAiLikeTargetType["Response"] = "RESPONSE";
})(UnifiedAiLikeTargetType = exports.UnifiedAiLikeTargetType || (exports.UnifiedAiLikeTargetType = {}));
var UnifiedAiPostSortField;
(function (UnifiedAiPostSortField) {
    UnifiedAiPostSortField["CreatedAt"] = "CREATED_AT";
    UnifiedAiPostSortField["LastReplyAt"] = "LAST_REPLY_AT";
    UnifiedAiPostSortField["LikeCount"] = "LIKE_COUNT";
    UnifiedAiPostSortField["UpdatedAt"] = "UPDATED_AT";
    UnifiedAiPostSortField["ViewCount"] = "VIEW_COUNT";
})(UnifiedAiPostSortField = exports.UnifiedAiPostSortField || (exports.UnifiedAiPostSortField = {}));
var UnifiedAiPostType;
(function (UnifiedAiPostType) {
    UnifiedAiPostType["Article"] = "ARTICLE";
    UnifiedAiPostType["Question"] = "QUESTION";
})(UnifiedAiPostType = exports.UnifiedAiPostType || (exports.UnifiedAiPostType = {}));
var UnifiedLearningCertificationSortField;
(function (UnifiedLearningCertificationSortField) {
    UnifiedLearningCertificationSortField["ActiveDate"] = "ACTIVE_DATE";
    UnifiedLearningCertificationSortField["ExpireDate"] = "EXPIRE_DATE";
    UnifiedLearningCertificationSortField["Id"] = "ID";
    UnifiedLearningCertificationSortField["ImageUrl"] = "IMAGE_URL";
    UnifiedLearningCertificationSortField["Name"] = "NAME";
    UnifiedLearningCertificationSortField["NameAbbr"] = "NAME_ABBR";
    UnifiedLearningCertificationSortField["PublicUrl"] = "PUBLIC_URL";
    UnifiedLearningCertificationSortField["Status"] = "STATUS";
    UnifiedLearningCertificationSortField["Type"] = "TYPE";
})(UnifiedLearningCertificationSortField = exports.UnifiedLearningCertificationSortField || (exports.UnifiedLearningCertificationSortField = {}));
var UnifiedLearningCertificationStatus;
(function (UnifiedLearningCertificationStatus) {
    UnifiedLearningCertificationStatus["Active"] = "ACTIVE";
    UnifiedLearningCertificationStatus["Expired"] = "EXPIRED";
})(UnifiedLearningCertificationStatus = exports.UnifiedLearningCertificationStatus || (exports.UnifiedLearningCertificationStatus = {}));
var UnifiedLearningCertificationType;
(function (UnifiedLearningCertificationType) {
    UnifiedLearningCertificationType["Badge"] = "BADGE";
    UnifiedLearningCertificationType["Certification"] = "CERTIFICATION";
    UnifiedLearningCertificationType["Standing"] = "STANDING";
})(UnifiedLearningCertificationType = exports.UnifiedLearningCertificationType || (exports.UnifiedLearningCertificationType = {}));
var UnifiedSortDirection;
(function (UnifiedSortDirection) {
    UnifiedSortDirection["Asc"] = "ASC";
    UnifiedSortDirection["Desc"] = "DESC";
})(UnifiedSortDirection = exports.UnifiedSortDirection || (exports.UnifiedSortDirection = {}));
var UserInstallationRuleValue;
(function (UserInstallationRuleValue) {
    UserInstallationRuleValue["Allow"] = "allow";
    UserInstallationRuleValue["Deny"] = "deny";
})(UserInstallationRuleValue = exports.UserInstallationRuleValue || (exports.UserInstallationRuleValue = {}));
var VendorType;
(function (VendorType) {
    VendorType["Internal"] = "INTERNAL";
    VendorType["ThirdParty"] = "THIRD_PARTY";
})(VendorType = exports.VendorType || (exports.VendorType = {}));
var VirtualAgentConversationActionType;
(function (VirtualAgentConversationActionType) {
    VirtualAgentConversationActionType["AiAnswered"] = "AI_ANSWERED";
    VirtualAgentConversationActionType["Matched"] = "MATCHED";
    VirtualAgentConversationActionType["Unhandled"] = "UNHANDLED";
})(VirtualAgentConversationActionType = exports.VirtualAgentConversationActionType || (exports.VirtualAgentConversationActionType = {}));
var VirtualAgentConversationChannel;
(function (VirtualAgentConversationChannel) {
    VirtualAgentConversationChannel["HelpCenter"] = "HELP_CENTER";
    VirtualAgentConversationChannel["JsmPortal"] = "JSM_PORTAL";
    VirtualAgentConversationChannel["JsmWidget"] = "JSM_WIDGET";
    VirtualAgentConversationChannel["MsTeams"] = "MS_TEAMS";
    VirtualAgentConversationChannel["Slack"] = "SLACK";
})(VirtualAgentConversationChannel = exports.VirtualAgentConversationChannel || (exports.VirtualAgentConversationChannel = {}));
var VirtualAgentConversationCsatOptionType;
(function (VirtualAgentConversationCsatOptionType) {
    VirtualAgentConversationCsatOptionType["CsatOption_1"] = "CSAT_OPTION_1";
    VirtualAgentConversationCsatOptionType["CsatOption_2"] = "CSAT_OPTION_2";
    VirtualAgentConversationCsatOptionType["CsatOption_3"] = "CSAT_OPTION_3";
    VirtualAgentConversationCsatOptionType["CsatOption_4"] = "CSAT_OPTION_4";
    VirtualAgentConversationCsatOptionType["CsatOption_5"] = "CSAT_OPTION_5";
})(VirtualAgentConversationCsatOptionType = exports.VirtualAgentConversationCsatOptionType || (exports.VirtualAgentConversationCsatOptionType = {}));
var VirtualAgentConversationState;
(function (VirtualAgentConversationState) {
    VirtualAgentConversationState["Closed"] = "CLOSED";
    VirtualAgentConversationState["Escalated"] = "ESCALATED";
    VirtualAgentConversationState["Open"] = "OPEN";
    VirtualAgentConversationState["Resolved"] = "RESOLVED";
})(VirtualAgentConversationState = exports.VirtualAgentConversationState || (exports.VirtualAgentConversationState = {}));
var VirtualAgentIntentStatus;
(function (VirtualAgentIntentStatus) {
    VirtualAgentIntentStatus["Live"] = "LIVE";
    VirtualAgentIntentStatus["TestOnly"] = "TEST_ONLY";
})(VirtualAgentIntentStatus = exports.VirtualAgentIntentStatus || (exports.VirtualAgentIntentStatus = {}));
var VirtualAgentIntentTemplateType;
(function (VirtualAgentIntentTemplateType) {
    VirtualAgentIntentTemplateType["Discovered"] = "DISCOVERED";
    VirtualAgentIntentTemplateType["Shared"] = "SHARED";
    VirtualAgentIntentTemplateType["Standard"] = "STANDARD";
})(VirtualAgentIntentTemplateType = exports.VirtualAgentIntentTemplateType || (exports.VirtualAgentIntentTemplateType = {}));
var WorkSuggestionsAction;
(function (WorkSuggestionsAction) {
    WorkSuggestionsAction["Remove"] = "REMOVE";
    WorkSuggestionsAction["Snooze"] = "SNOOZE";
})(WorkSuggestionsAction = exports.WorkSuggestionsAction || (exports.WorkSuggestionsAction = {}));
var WorkSuggestionsApprovalStatus;
(function (WorkSuggestionsApprovalStatus) {
    WorkSuggestionsApprovalStatus["Approved"] = "APPROVED";
    WorkSuggestionsApprovalStatus["Needswork"] = "NEEDSWORK";
    WorkSuggestionsApprovalStatus["Unapproved"] = "UNAPPROVED";
    WorkSuggestionsApprovalStatus["Unknown"] = "UNKNOWN";
})(WorkSuggestionsApprovalStatus = exports.WorkSuggestionsApprovalStatus || (exports.WorkSuggestionsApprovalStatus = {}));
var WorkSuggestionsAutoDevJobState;
(function (WorkSuggestionsAutoDevJobState) {
    WorkSuggestionsAutoDevJobState["Cancelled"] = "CANCELLED";
    WorkSuggestionsAutoDevJobState["CodeGenerating"] = "CODE_GENERATING";
    WorkSuggestionsAutoDevJobState["CodeGenerationFail"] = "CODE_GENERATION_FAIL";
    WorkSuggestionsAutoDevJobState["CodeGenerationReady"] = "CODE_GENERATION_READY";
    WorkSuggestionsAutoDevJobState["CodeGenerationSuccess"] = "CODE_GENERATION_SUCCESS";
    WorkSuggestionsAutoDevJobState["Created"] = "CREATED";
    WorkSuggestionsAutoDevJobState["PlanGenerating"] = "PLAN_GENERATING";
    WorkSuggestionsAutoDevJobState["PlanGenerationFail"] = "PLAN_GENERATION_FAIL";
    WorkSuggestionsAutoDevJobState["PlanGenerationSuccess"] = "PLAN_GENERATION_SUCCESS";
    WorkSuggestionsAutoDevJobState["PullrequestCreating"] = "PULLREQUEST_CREATING";
    WorkSuggestionsAutoDevJobState["PullrequestCreationFail"] = "PULLREQUEST_CREATION_FAIL";
    WorkSuggestionsAutoDevJobState["PullrequestCreationSuccess"] = "PULLREQUEST_CREATION_SUCCESS";
    WorkSuggestionsAutoDevJobState["Unknown"] = "UNKNOWN";
})(WorkSuggestionsAutoDevJobState = exports.WorkSuggestionsAutoDevJobState || (exports.WorkSuggestionsAutoDevJobState = {}));
var WorkSuggestionsEnvironmentType;
(function (WorkSuggestionsEnvironmentType) {
    WorkSuggestionsEnvironmentType["Development"] = "DEVELOPMENT";
    WorkSuggestionsEnvironmentType["Production"] = "PRODUCTION";
    WorkSuggestionsEnvironmentType["Staging"] = "STAGING";
    WorkSuggestionsEnvironmentType["Testing"] = "TESTING";
    WorkSuggestionsEnvironmentType["Unmapped"] = "UNMAPPED";
})(WorkSuggestionsEnvironmentType = exports.WorkSuggestionsEnvironmentType || (exports.WorkSuggestionsEnvironmentType = {}));
var WorkSuggestionsTargetAudience;
(function (WorkSuggestionsTargetAudience) {
    WorkSuggestionsTargetAudience["Me"] = "ME";
    WorkSuggestionsTargetAudience["Team"] = "TEAM";
})(WorkSuggestionsTargetAudience = exports.WorkSuggestionsTargetAudience || (exports.WorkSuggestionsTargetAudience = {}));
var WorkSuggestionsUserPersona;
(function (WorkSuggestionsUserPersona) {
    WorkSuggestionsUserPersona["Developer"] = "DEVELOPER";
})(WorkSuggestionsUserPersona = exports.WorkSuggestionsUserPersona || (exports.WorkSuggestionsUserPersona = {}));
var WorkSuggestionsVersionCandidateIncludeReason;
(function (WorkSuggestionsVersionCandidateIncludeReason) {
    WorkSuggestionsVersionCandidateIncludeReason["IssueIsBlocked"] = "ISSUE_IS_BLOCKED";
    WorkSuggestionsVersionCandidateIncludeReason["IssueIsBlocking"] = "ISSUE_IS_BLOCKING";
    WorkSuggestionsVersionCandidateIncludeReason["IssueIsSibling"] = "ISSUE_IS_SIBLING";
    WorkSuggestionsVersionCandidateIncludeReason["Unknown"] = "UNKNOWN";
})(WorkSuggestionsVersionCandidateIncludeReason = exports.WorkSuggestionsVersionCandidateIncludeReason || (exports.WorkSuggestionsVersionCandidateIncludeReason = {}));
var WorkSuggestionsVulnerabilityStatus;
(function (WorkSuggestionsVulnerabilityStatus) {
    WorkSuggestionsVulnerabilityStatus["Closed"] = "CLOSED";
    WorkSuggestionsVulnerabilityStatus["Ignored"] = "IGNORED";
    WorkSuggestionsVulnerabilityStatus["Open"] = "OPEN";
    WorkSuggestionsVulnerabilityStatus["Unknown"] = "UNKNOWN";
})(WorkSuggestionsVulnerabilityStatus = exports.WorkSuggestionsVulnerabilityStatus || (exports.WorkSuggestionsVulnerabilityStatus = {}));
var SourceBillingType;
(function (SourceBillingType) {
    SourceBillingType["Ccp"] = "CCP";
    SourceBillingType["Hams"] = "HAMS";
})(SourceBillingType = exports.SourceBillingType || (exports.SourceBillingType = {}));
