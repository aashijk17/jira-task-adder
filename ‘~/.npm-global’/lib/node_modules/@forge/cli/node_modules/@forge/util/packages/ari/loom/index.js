"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// src/loom/index.ts
var loom_exports = {};
__export(loom_exports, {
  LoomCommentAri: () => LoomCommentAri,
  LoomFolderAri: () => LoomFolderAri,
  LoomMeetingAri: () => LoomMeetingAri,
  LoomMeetingRecurrenceAri: () => LoomMeetingRecurrenceAri,
  LoomSiteAri: () => LoomSiteAri,
  LoomSpaceAri: () => LoomSpaceAri,
  LoomStandaloneWorkspaceAri: () => LoomStandaloneWorkspaceAri,
  LoomVideoAri: () => LoomVideoAri,
  LoomWorkspaceAri: () => LoomWorkspaceAri
});
module.exports = __toCommonJS(loom_exports);

// src/errors.ts
var ValidationError = class extends Error {
};

// src/core/rules/cloud-id.ts
function validateCloudId(cloudId, format = new RegExp("^[a-zA-Z0-9_\\-.]{0,255}$")) {
  if (!cloudId.match(format))
    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);
}

// src/core/rules/platform-qualifier.ts
function validatePlatformQualifier(qualifier) {
  if (qualifier !== "cloud" && qualifier !== "third-party")
    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);
}

// src/core/rules/qualifier.ts
function validateAtiQualifier(qualifier) {
  if (qualifier !== "ati")
    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);
}
function validateAriQualifier(qualifier) {
  if (qualifier !== "ari")
    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);
}

// src/core/rules/resource-id.ts
function validateResourceId(id, format = new RegExp("[!a-zA-Z0-9\\-_.~@:;{}=]+(/[!a-zA-Z0-9\\-_.~@:;{}=]+)*" /* ANY_RESOURCE_ID */), key = "resourceId") {
  let formatWithCarets = new RegExp(`^${format.source}$`);
  if (!id.match(formatWithCarets))
    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);
}

// src/core/rules/resource-id-segments.ts
function validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {
  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {
    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);
  });
}

// src/core/rules/resource-owner.ts
function validateResourceOwner(owner, expectedResourceOwner) {
  if (expectedResourceOwner && owner !== expectedResourceOwner)
    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);
}

// src/core/rules/resource-type.ts
function validateResourceType(type, expectedResourceType) {
  if (expectedResourceType && type !== expectedResourceType)
    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);
}

// src/core/parser/base.ts
var NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = ":", BaseParser = class {
  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {
    let allSegments = inputStr.split(SEGMENT_SEPARATOR);
    if (allSegments.length < numberOfSegmentsRequired)
      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);
    if (allSegments.length > numberOfSegmentsRequired) {
      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);
      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];
    }
    return allSegments;
  }
};

// src/core/parser/ari.ts
var NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {
  static fromString(maybeAri, ariProperties) {
    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split("/"), maybeAriDerivedProperties = {
      qualifier,
      platformQualifier,
      cloudId,
      resourceOwner,
      resourceType,
      resourceId: resourceIdSegments.join("/"),
      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(
        ariProperties.resourceIdSlug,
        resourceIdSegments.join("/"),
        Object.keys(ariProperties.resourceIdSegmentFormats)
      ) : {}
    };
    return this.fromOpts(maybeAriDerivedProperties, ariProperties);
  }
  static fromOpts(maybeAriOpts, ariProperties) {
    let {
      qualifier = "ari",
      platformQualifier = "cloud",
      resourceOwner,
      cloudId,
      resourceId,
      resourceIdSegmentValues,
      resourceType
    } = maybeAriOpts;
    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || "", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {
      qualifier,
      resourceOwner,
      resourceType,
      platformQualifier,
      cloudId,
      resourceId,
      resourceIdSegmentValues
    };
  }
  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {
    let regexpResult = new RegExp("^" + slug.replace(/\{(.*?)\}/g, "(?<$1>.*?)") + "$").exec(incomingSegments);
    if (!regexpResult)
      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);
    return expectedKeys.forEach((expectedKey) => {
      var _a;
      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))
        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);
    }), regexpResult.groups || {};
  }
};

// src/core/parser/ati.ts
var NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {
  static fromString(inputStr, atiOpts) {
    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = "ati", platformQualifier = "cloud", resourceOwner, resourceType] = segments;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };
  }
  static fromOpts(maybeAtiOpts, atiOpts) {
    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;
    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {
      platformQualifier,
      resourceOwner,
      resourceType
    };
  }
};

// src/ati.ts
var Ati = class _Ati {
  constructor(platformQualifier, resourceOwner, resourceType) {
    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;
  }
  get platformQualifier() {
    return this._platformQualifier;
  }
  get resourceOwner() {
    return this._resourceOwner;
  }
  get resourceType() {
    return this._resourceType;
  }
  static create(opts) {
    return new _Ati(opts.platformQualifier || "cloud", opts.resourceOwner, opts.resourceType);
  }
  static parse(maybeAti, atiOpts) {
    let opts = AtiParser.fromString(maybeAti, atiOpts);
    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);
  }
  toString() {
    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this._platformQualifier,
      resourceOwner: this._resourceOwner,
      resourceType: this._resourceType
    };
  }
};

// src/core/ari.ts
var Ari = class {
  constructor(opts) {
    this._ati = Ati.create({
      platformQualifier: opts.platformQualifier || "cloud",
      resourceOwner: opts.resourceOwner,
      resourceType: opts.resourceType
    }), this._cloudId = opts.cloudId !== "" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;
  }
  get platformQualifier() {
    return this._ati.platformQualifier;
  }
  get cloudId() {
    return this._cloudId;
  }
  get resourceOwner() {
    return this._ati.resourceOwner;
  }
  get resourceType() {
    return this._ati.resourceType;
  }
  get resourceId() {
    return this._resourceId;
  }
  get ati() {
    return this._ati;
  }
  equals(other) {
    return this.toString() === other.toString();
  }
  toString() {
    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || ""}:${this.resourceType}/${this.resourceId}`;
  }
  toJSON() {
    return this.toString();
  }
  toOpts() {
    return {
      platformQualifier: this.platformQualifier,
      resourceOwner: this.resourceOwner,
      cloudId: this.cloudId,
      resourceType: this.resourceType,
      resourceId: this.resourceId
    };
  }
};

// src/any-ari.ts
var AnyAri = class _AnyAri extends Ari {
  constructor(opts) {
    super(opts);
  }
  static create(ariOpts, ariStaticOpts) {
    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static parse(maybeAri, ariStaticOpts) {
    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);
    return new _AnyAri(validatedOpts);
  }
  static check(maybeAri) {
    try {
      return _AnyAri.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return this;
  }
};

// src/core/registered-ari.ts
var RegisteredAri = class extends Ari {
  static check(maybeAri) {
    try {
      return this.parse(maybeAri.toString()), !0;
    } catch (err) {
      return !1;
    }
  }
  asAnyAri() {
    return AnyAri.parse(this.toString());
  }
};

// src/loom/comment/types.ts
var LoomCommentAriResourceOwner = "loom", LoomCommentAriResourceType = "comment";

// src/loom/comment/manifest.ts
var loomCommentAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomCommentAriResourceOwner,
  resourceType: LoomCommentAriResourceType,
  resourceIdSlug: "activation/{activationId}/{commentId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    commentId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/comment/index.ts
var LoomCommentAri = class _LoomCommentAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._commentId = opts.resourceIdSegmentValues.commentId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get commentId() {
    return this._commentId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomCommentAriStaticOpts.qualifier,
      platformQualifier: loomCommentAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomCommentAriStaticOpts.resourceOwner,
      resourceType: loomCommentAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.commentId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        commentId: opts.commentId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomCommentAriStaticOpts);
    return new _LoomCommentAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomCommentAriStaticOpts);
    return new _LoomCommentAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      commentId: this.commentId
    };
  }
};

// src/loom/folder/types.ts
var LoomFolderAriResourceOwner = "loom", LoomFolderAriResourceType = "folder";

// src/loom/folder/manifest.ts
var loomFolderAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomFolderAriResourceOwner,
  resourceType: LoomFolderAriResourceType,
  resourceIdSlug: "activation/{activationId}/{folderId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    folderId: /[a-f0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/folder/index.ts
var LoomFolderAri = class _LoomFolderAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._folderId = opts.resourceIdSegmentValues.folderId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get folderId() {
    return this._folderId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomFolderAriStaticOpts.qualifier,
      platformQualifier: loomFolderAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomFolderAriStaticOpts.resourceOwner,
      resourceType: loomFolderAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.folderId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        folderId: opts.folderId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomFolderAriStaticOpts);
    return new _LoomFolderAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomFolderAriStaticOpts);
    return new _LoomFolderAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      folderId: this.folderId
    };
  }
};

// src/loom/meeting/types.ts
var LoomMeetingAriResourceOwner = "loom", LoomMeetingAriResourceType = "meeting";

// src/loom/meeting/manifest.ts
var loomMeetingAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomMeetingAriResourceOwner,
  resourceType: LoomMeetingAriResourceType,
  resourceIdSlug: "activation/{activationId}/{meetingId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    meetingId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/meeting/index.ts
var LoomMeetingAri = class _LoomMeetingAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._meetingId = opts.resourceIdSegmentValues.meetingId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get meetingId() {
    return this._meetingId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomMeetingAriStaticOpts.qualifier,
      platformQualifier: loomMeetingAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomMeetingAriStaticOpts.resourceOwner,
      resourceType: loomMeetingAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.meetingId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        meetingId: opts.meetingId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomMeetingAriStaticOpts);
    return new _LoomMeetingAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomMeetingAriStaticOpts);
    return new _LoomMeetingAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      meetingId: this.meetingId
    };
  }
};

// src/loom/meeting-recurrence/types.ts
var LoomMeetingRecurrenceAriResourceOwner = "loom", LoomMeetingRecurrenceAriResourceType = "meeting-recurrence";

// src/loom/meeting-recurrence/manifest.ts
var loomMeetingRecurrenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomMeetingRecurrenceAriResourceOwner,
  resourceType: LoomMeetingRecurrenceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{meetingRecurrenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    meetingRecurrenceId: /[0-9]:[\w=-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/meeting-recurrence/index.ts
var LoomMeetingRecurrenceAri = class _LoomMeetingRecurrenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._meetingRecurrenceId = opts.resourceIdSegmentValues.meetingRecurrenceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get meetingRecurrenceId() {
    return this._meetingRecurrenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomMeetingRecurrenceAriStaticOpts.qualifier,
      platformQualifier: loomMeetingRecurrenceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomMeetingRecurrenceAriStaticOpts.resourceOwner,
      resourceType: loomMeetingRecurrenceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.meetingRecurrenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        meetingRecurrenceId: opts.meetingRecurrenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomMeetingRecurrenceAriStaticOpts);
    return new _LoomMeetingRecurrenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomMeetingRecurrenceAriStaticOpts);
    return new _LoomMeetingRecurrenceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      meetingRecurrenceId: this.meetingRecurrenceId
    };
  }
};

// src/loom/site/types.ts
var LoomSiteAriResourceOwner = "loom", LoomSiteAriResourceType = "site";

// src/loom/site/manifest.ts
var loomSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomSiteAriResourceOwner,
  resourceType: LoomSiteAriResourceType,
  resourceIdSlug: "{siteId}",
  resourceIdSegmentFormats: {
    siteId: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/site/index.ts
var LoomSiteAri = class _LoomSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.resourceIdSegmentValues.siteId;
  }
  get siteId() {
    return this._siteId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomSiteAriStaticOpts.qualifier,
      platformQualifier: loomSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomSiteAriStaticOpts.resourceOwner,
      resourceType: loomSiteAriStaticOpts.resourceType,
      resourceId: `${opts.siteId}`,
      resourceIdSegmentValues: {
        siteId: opts.siteId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomSiteAriStaticOpts);
    return new _LoomSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomSiteAriStaticOpts);
    return new _LoomSiteAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId
    };
  }
};

// src/loom/space/types.ts
var LoomSpaceAriResourceOwner = "loom", LoomSpaceAriResourceType = "space";

// src/loom/space/manifest.ts
var loomSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomSpaceAriResourceOwner,
  resourceType: LoomSpaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{spaceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    spaceId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/space/index.ts
var LoomSpaceAri = class _LoomSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._spaceId = opts.resourceIdSegmentValues.spaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get spaceId() {
    return this._spaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomSpaceAriStaticOpts.qualifier,
      platformQualifier: loomSpaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomSpaceAriStaticOpts.resourceOwner,
      resourceType: loomSpaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.spaceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        spaceId: opts.spaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomSpaceAriStaticOpts);
    return new _LoomSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomSpaceAriStaticOpts);
    return new _LoomSpaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      spaceId: this.spaceId
    };
  }
};

// src/loom/standalone-workspace/types.ts
var LoomStandaloneWorkspaceAriResourceOwner = "loom", LoomStandaloneWorkspaceAriResourceType = "standalone-workspace";

// src/loom/standalone-workspace/manifest.ts
var loomStandaloneWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomStandaloneWorkspaceAriResourceOwner,
  resourceType: LoomStandaloneWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/standalone-workspace/index.ts
var LoomStandaloneWorkspaceAri = class _LoomStandaloneWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomStandaloneWorkspaceAriStaticOpts.qualifier,
      platformQualifier: loomStandaloneWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: loomStandaloneWorkspaceAriStaticOpts.resourceOwner,
      resourceType: loomStandaloneWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomStandaloneWorkspaceAriStaticOpts);
    return new _LoomStandaloneWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

// src/loom/video/types.ts
var LoomVideoAriResourceOwner = "loom", LoomVideoAriResourceType = "video";

// src/loom/video/manifest.ts
var loomVideoAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomVideoAriResourceOwner,
  resourceType: LoomVideoAriResourceType,
  resourceIdSlug: "activation/{activationId}/{videoId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    videoId: /[a-fA-F0-9]{32}/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/video/index.ts
var LoomVideoAri = class _LoomVideoAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._videoId = opts.resourceIdSegmentValues.videoId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get videoId() {
    return this._videoId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomVideoAriStaticOpts.qualifier,
      platformQualifier: loomVideoAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomVideoAriStaticOpts.resourceOwner,
      resourceType: loomVideoAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.videoId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        videoId: opts.videoId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomVideoAriStaticOpts);
    return new _LoomVideoAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomVideoAriStaticOpts);
    return new _LoomVideoAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      videoId: this.videoId
    };
  }
};

// src/loom/workspace/types.ts
var LoomWorkspaceAriResourceOwner = "loom", LoomWorkspaceAriResourceType = "workspace";

// src/loom/workspace/manifest.ts
var loomWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: LoomWorkspaceAriResourceOwner,
  resourceType: LoomWorkspaceAriResourceType,
  resourceIdSlug: "{activationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/loom/workspace/index.ts
var LoomWorkspaceAri = class _LoomWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: loomWorkspaceAriStaticOpts.qualifier,
      platformQualifier: loomWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: loomWorkspaceAriStaticOpts.resourceOwner,
      resourceType: loomWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, loomWorkspaceAriStaticOpts);
    return new _LoomWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, loomWorkspaceAriStaticOpts);
    return new _LoomWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LoomCommentAri,
  LoomFolderAri,
  LoomMeetingAri,
  LoomMeetingRecurrenceAri,
  LoomSiteAri,
  LoomSpaceAri,
  LoomStandaloneWorkspaceAri,
  LoomVideoAri,
  LoomWorkspaceAri
});
