import {
  AvpDashboardChartAriResourceOwner,
  AvpDashboardChartAriResourceType
} from "./chunk-HFTHZG5P.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/avp/dashboard-chart/manifest.ts
var avpDashboardChartAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpDashboardChartAriResourceOwner,
  resourceType: AvpDashboardChartAriResourceType,
  resourceIdSlug: "activation/{activationId}/dashboard/{dashboardId}/{chartId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    dashboardId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    chartId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/dashboard-chart/index.ts
var AvpDashboardChartAri = class _AvpDashboardChartAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId, this._chartId = opts.resourceIdSegmentValues.chartId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get dashboardId() {
    return this._dashboardId;
  }
  get chartId() {
    return this._chartId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpDashboardChartAriStaticOpts.qualifier,
      platformQualifier: avpDashboardChartAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpDashboardChartAriStaticOpts.resourceOwner,
      resourceType: avpDashboardChartAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/dashboard/${opts.dashboardId}/${opts.chartId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        dashboardId: opts.dashboardId,
        chartId: opts.chartId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDashboardChartAriStaticOpts);
    return new _AvpDashboardChartAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpDashboardChartAriStaticOpts);
    return new _AvpDashboardChartAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      dashboardId: this.dashboardId,
      chartId: this.chartId
    };
  }
};

export {
  AvpDashboardChartAri
};
