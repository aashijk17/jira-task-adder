import {
  JiraPlaybookInstanceAriResourceOwner,
  JiraPlaybookInstanceAriResourceType
} from "./chunk-EP5LORX6.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira/playbook-instance/manifest.ts
var jiraPlaybookInstanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraPlaybookInstanceAriResourceOwner,
  resourceType: JiraPlaybookInstanceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{playbookId}/{context}/{contextId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    playbookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    context: /(issue|alert)/,
    // eslint-disable-line no-useless-escape
    contextId: /[0-9]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/playbook-instance/index.ts
var JiraPlaybookInstanceAri = class _JiraPlaybookInstanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._playbookId = opts.resourceIdSegmentValues.playbookId, this._context = opts.resourceIdSegmentValues.context, this._contextId = opts.resourceIdSegmentValues.contextId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get playbookId() {
    return this._playbookId;
  }
  get context() {
    return this._context;
  }
  get contextId() {
    return this._contextId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraPlaybookInstanceAriStaticOpts.qualifier,
      platformQualifier: jiraPlaybookInstanceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraPlaybookInstanceAriStaticOpts.resourceOwner,
      resourceType: jiraPlaybookInstanceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.playbookId}/${opts.context}/${opts.contextId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        playbookId: opts.playbookId,
        context: opts.context,
        contextId: opts.contextId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlaybookInstanceAriStaticOpts);
    return new _JiraPlaybookInstanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraPlaybookInstanceAriStaticOpts);
    return new _JiraPlaybookInstanceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      playbookId: this.playbookId,
      context: this.context,
      contextId: this.contextId
    };
  }
};

export {
  JiraPlaybookInstanceAri
};
