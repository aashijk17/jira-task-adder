import {
  JiraAiCrocsSentenceAriResourceOwner,
  JiraAiCrocsSentenceAriResourceType
} from "./chunk-ZNGWA2WY.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira-ai-crocs/sentence/manifest.ts
var jiraAiCrocsSentenceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraAiCrocsSentenceAriResourceOwner,
  resourceType: JiraAiCrocsSentenceAriResourceType,
  resourceIdSlug: "{activationId}/{sentenceId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    sentenceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-ai-crocs/sentence/index.ts
var JiraAiCrocsSentenceAri = class _JiraAiCrocsSentenceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._sentenceId = opts.resourceIdSegmentValues.sentenceId;
  }
  get activationId() {
    return this._activationId;
  }
  get sentenceId() {
    return this._sentenceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraAiCrocsSentenceAriStaticOpts.qualifier,
      platformQualifier: jiraAiCrocsSentenceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraAiCrocsSentenceAriStaticOpts.resourceOwner,
      resourceType: jiraAiCrocsSentenceAriStaticOpts.resourceType,
      resourceId: `${opts.activationId}/${opts.sentenceId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        sentenceId: opts.sentenceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAiCrocsSentenceAriStaticOpts);
    return new _JiraAiCrocsSentenceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraAiCrocsSentenceAriStaticOpts);
    return new _JiraAiCrocsSentenceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      sentenceId: this.sentenceId
    };
  }
};

export {
  JiraAiCrocsSentenceAri
};
