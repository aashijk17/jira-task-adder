import {
  AzureDevopsAzureDevopsRepositoryAriResourceOwner,
  AzureDevopsAzureDevopsRepositoryAriResourceType
} from "./chunk-ZMPCNVOL.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/azure-devops.azure-devops/repository/manifest.ts
var azureDevopsAzureDevopsRepositoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AzureDevopsAzureDevopsRepositoryAriResourceOwner,
  resourceType: AzureDevopsAzureDevopsRepositoryAriResourceType,
  resourceIdSlug: "organization/{organization}/project/{projectId}/repository/{repositoryId}",
  resourceIdSegmentFormats: {
    organization: /[A-Za-z0-9](?:[A-Za-z0-9\-]{0,48}[A-Za-z0-9])?/,
    // eslint-disable-line no-useless-escape
    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,
    // eslint-disable-line no-useless-escape
    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/azure-devops.azure-devops/repository/index.ts
var AzureDevopsAzureDevopsRepositoryAri = class _AzureDevopsAzureDevopsRepositoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._organization = opts.resourceIdSegmentValues.organization, this._projectId = opts.resourceIdSegmentValues.projectId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;
  }
  get organization() {
    return this._organization;
  }
  get projectId() {
    return this._projectId;
  }
  get repositoryId() {
    return this._repositoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: azureDevopsAzureDevopsRepositoryAriStaticOpts.qualifier,
      platformQualifier: azureDevopsAzureDevopsRepositoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: azureDevopsAzureDevopsRepositoryAriStaticOpts.resourceOwner,
      resourceType: azureDevopsAzureDevopsRepositoryAriStaticOpts.resourceType,
      resourceId: `organization/${opts.organization}/project/${opts.projectId}/repository/${opts.repositoryId}`,
      resourceIdSegmentValues: {
        organization: opts.organization,
        projectId: opts.projectId,
        repositoryId: opts.repositoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, azureDevopsAzureDevopsRepositoryAriStaticOpts);
    return new _AzureDevopsAzureDevopsRepositoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, azureDevopsAzureDevopsRepositoryAriStaticOpts);
    return new _AzureDevopsAzureDevopsRepositoryAri(opts);
  }
  getVariables() {
    return {
      organization: this.organization,
      projectId: this.projectId,
      repositoryId: this.repositoryId
    };
  }
};

export {
  AzureDevopsAzureDevopsRepositoryAri
};
