import {
  DevaiWorkspaceAriResourceOwner,
  DevaiWorkspaceAriResourceType
} from "./chunk-SRKXL6M5.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/devai/workspace/manifest.ts
var devaiWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: DevaiWorkspaceAriResourceOwner,
  resourceType: DevaiWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/devai/workspace/index.ts
var DevaiWorkspaceAri = class _DevaiWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: devaiWorkspaceAriStaticOpts.qualifier,
      platformQualifier: devaiWorkspaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: devaiWorkspaceAriStaticOpts.resourceOwner,
      resourceType: devaiWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, devaiWorkspaceAriStaticOpts);
    return new _DevaiWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, devaiWorkspaceAriStaticOpts);
    return new _DevaiWorkspaceAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId
    };
  }
};

export {
  DevaiWorkspaceAri
};
