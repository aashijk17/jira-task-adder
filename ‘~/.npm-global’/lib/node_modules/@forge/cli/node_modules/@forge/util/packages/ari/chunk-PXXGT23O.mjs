import {
  SandboxServiceSiteAriResourceOwner,
  SandboxServiceSiteAriResourceType
} from "./chunk-4IDZPUVH.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/sandbox-service/site/manifest.ts
var sandboxServiceSiteAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: SandboxServiceSiteAriResourceOwner,
  resourceType: SandboxServiceSiteAriResourceType,
  resourceIdSlug: "{cloudIdParam}",
  resourceIdSegmentFormats: {
    cloudIdParam: /[a-zA-Z0-9_\-.]{1,255}/
    // eslint-disable-line no-useless-escape
  }
};

// src/sandbox-service/site/index.ts
var SandboxServiceSiteAri = class _SandboxServiceSiteAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._cloudIdParam = opts.resourceIdSegmentValues.cloudIdParam;
  }
  get cloudIdParam() {
    return this._cloudIdParam;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: sandboxServiceSiteAriStaticOpts.qualifier,
      platformQualifier: sandboxServiceSiteAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: sandboxServiceSiteAriStaticOpts.resourceOwner,
      resourceType: sandboxServiceSiteAriStaticOpts.resourceType,
      resourceId: `${opts.cloudIdParam}`,
      resourceIdSegmentValues: {
        cloudIdParam: opts.cloudIdParam
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, sandboxServiceSiteAriStaticOpts);
    return new _SandboxServiceSiteAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, sandboxServiceSiteAriStaticOpts);
    return new _SandboxServiceSiteAri(opts);
  }
  getVariables() {
    return {
      cloudIdParam: this.cloudIdParam
    };
  }
};

export {
  SandboxServiceSiteAri
};
