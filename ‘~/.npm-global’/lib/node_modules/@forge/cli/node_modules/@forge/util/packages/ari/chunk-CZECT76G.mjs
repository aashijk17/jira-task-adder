import {
  TrelloPlannerCalendarAriResourceOwner,
  TrelloPlannerCalendarAriResourceType
} from "./chunk-WPEGY4E4.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/trello/planner-calendar/manifest.ts
var trelloPlannerCalendarAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: TrelloPlannerCalendarAriResourceOwner,
  resourceType: TrelloPlannerCalendarAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{plannerCalendarId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-_.]*/,
    // eslint-disable-line no-useless-escape
    plannerCalendarId: /[a-zA-Z0-9\-_.]*/
    // eslint-disable-line no-useless-escape
  }
};

// src/trello/planner-calendar/index.ts
var TrelloPlannerCalendarAri = class _TrelloPlannerCalendarAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._plannerCalendarId = opts.resourceIdSegmentValues.plannerCalendarId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get plannerCalendarId() {
    return this._plannerCalendarId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: trelloPlannerCalendarAriStaticOpts.qualifier,
      platformQualifier: trelloPlannerCalendarAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: trelloPlannerCalendarAriStaticOpts.resourceOwner,
      resourceType: trelloPlannerCalendarAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.plannerCalendarId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId || "",
        plannerCalendarId: opts.plannerCalendarId || ""
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloPlannerCalendarAriStaticOpts);
    return new _TrelloPlannerCalendarAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, trelloPlannerCalendarAriStaticOpts);
    return new _TrelloPlannerCalendarAri(opts);
  }
  getVariables() {
    return {
      workspaceId: this.workspaceId,
      plannerCalendarId: this.plannerCalendarId
    };
  }
};

export {
  TrelloPlannerCalendarAri
};
