import {
  MicrosoftOutlookCalendarCalendarEventAriResourceOwner,
  MicrosoftOutlookCalendarCalendarEventAriResourceType
} from "./chunk-LBWJ6T7X.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/microsoft.outlook-calendar/calendar-event/manifest.ts
var microsoftOutlookCalendarCalendarEventAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MicrosoftOutlookCalendarCalendarEventAriResourceOwner,
  resourceType: MicrosoftOutlookCalendarCalendarEventAriResourceType,
  resourceIdSlug: "outlook/userId/{userId}/calendarEventId/{calendarEventId}",
  resourceIdSegmentFormats: {
    userId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    calendarEventId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/microsoft.outlook-calendar/calendar-event/index.ts
var MicrosoftOutlookCalendarCalendarEventAri = class _MicrosoftOutlookCalendarCalendarEventAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._userId = opts.resourceIdSegmentValues.userId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId;
  }
  get userId() {
    return this._userId;
  }
  get calendarEventId() {
    return this._calendarEventId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: microsoftOutlookCalendarCalendarEventAriStaticOpts.qualifier,
      platformQualifier: microsoftOutlookCalendarCalendarEventAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: microsoftOutlookCalendarCalendarEventAriStaticOpts.resourceOwner,
      resourceType: microsoftOutlookCalendarCalendarEventAriStaticOpts.resourceType,
      resourceId: `outlook/userId/${opts.userId}/calendarEventId/${opts.calendarEventId}`,
      resourceIdSegmentValues: {
        userId: opts.userId,
        calendarEventId: opts.calendarEventId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftOutlookCalendarCalendarEventAriStaticOpts);
    return new _MicrosoftOutlookCalendarCalendarEventAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, microsoftOutlookCalendarCalendarEventAriStaticOpts);
    return new _MicrosoftOutlookCalendarCalendarEventAri(opts);
  }
  getVariables() {
    return {
      userId: this.userId,
      calendarEventId: this.calendarEventId
    };
  }
};

export {
  MicrosoftOutlookCalendarCalendarEventAri
};
