import {
  GraphPositionAriResourceOwner,
  GraphPositionAriResourceType
} from "./chunk-N4KQKV73.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/position/manifest.ts
var graphPositionAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphPositionAriResourceOwner,
  resourceType: GraphPositionAriResourceType,
  resourceIdSlug: "activation/{activationId}/{positionUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    positionUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/position/index.ts
var GraphPositionAri = class _GraphPositionAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._positionUUID = opts.resourceIdSegmentValues.positionUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get positionUUID() {
    return this._positionUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphPositionAriStaticOpts.qualifier,
      platformQualifier: graphPositionAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphPositionAriStaticOpts.resourceOwner,
      resourceType: graphPositionAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.positionUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        positionUUID: opts.positionUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPositionAriStaticOpts);
    return new _GraphPositionAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphPositionAriStaticOpts);
    return new _GraphPositionAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      positionUUID: this.positionUUID
    };
  }
};

export {
  GraphPositionAri
};
