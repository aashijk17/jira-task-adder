import {
  GraphSpaceAriResourceOwner,
  GraphSpaceAriResourceType
} from "./chunk-LSQP2ZSZ.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/space/manifest.ts
var graphSpaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphSpaceAriResourceOwner,
  resourceType: GraphSpaceAriResourceType,
  resourceIdSlug: "activation/{activationId}/{entityUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/space/index.ts
var GraphSpaceAri = class _GraphSpaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get entityUUID() {
    return this._entityUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphSpaceAriStaticOpts.qualifier,
      platformQualifier: graphSpaceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphSpaceAriStaticOpts.resourceOwner,
      resourceType: graphSpaceAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        entityUUID: opts.entityUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSpaceAriStaticOpts);
    return new _GraphSpaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphSpaceAriStaticOpts);
    return new _GraphSpaceAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      entityUUID: this.entityUUID
    };
  }
};

export {
  GraphSpaceAri
};
