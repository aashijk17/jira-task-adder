import {
  GraphThreadChunkAriResourceOwner,
  GraphThreadChunkAriResourceType
} from "./chunk-JUDWJ3FD.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/thread-chunk/manifest.ts
var graphThreadChunkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphThreadChunkAriResourceOwner,
  resourceType: GraphThreadChunkAriResourceType,
  resourceIdSlug: "activation/{activationId}/{chunkId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    chunkId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/thread-chunk/index.ts
var GraphThreadChunkAri = class _GraphThreadChunkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._chunkId = opts.resourceIdSegmentValues.chunkId;
  }
  get activationId() {
    return this._activationId;
  }
  get chunkId() {
    return this._chunkId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphThreadChunkAriStaticOpts.qualifier,
      platformQualifier: graphThreadChunkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphThreadChunkAriStaticOpts.resourceOwner,
      resourceType: graphThreadChunkAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.chunkId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        chunkId: opts.chunkId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphThreadChunkAriStaticOpts);
    return new _GraphThreadChunkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphThreadChunkAriStaticOpts);
    return new _GraphThreadChunkAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      chunkId: this.chunkId
    };
  }
};

export {
  GraphThreadChunkAri
};
