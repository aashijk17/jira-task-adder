"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuntimeVersionValidator = void 0;
const text_1 = require("../text");
const utils_1 = require("../utils");
class RuntimeVersionValidator {
    lintOptions;
    constructor(lintOptions) {
        this.lintOptions = lintOptions;
    }
    async validate(manifest) {
        if (manifest?.typedContent) {
            const runtimeName = manifest.typedContent.app.runtime.name;
            const deprecatedRuntimes = this.lintOptions.deprecatedRuntimes ?? [];
            if (deprecatedRuntimes.includes(runtimeName)) {
                return {
                    success: true,
                    manifestObject: manifest,
                    errors: [
                        {
                            message: text_1.errors.deprecation.runtime.message(runtimeName),
                            reference: text_1.References.Deprecated,
                            level: 'warning',
                            ...(0, utils_1.findPosition)(runtimeName, manifest?.yamlContentByLine)
                        }
                    ]
                };
            }
        }
        return {
            success: true,
            manifestObject: manifest
        };
    }
}
exports.RuntimeVersionValidator = RuntimeVersionValidator;
