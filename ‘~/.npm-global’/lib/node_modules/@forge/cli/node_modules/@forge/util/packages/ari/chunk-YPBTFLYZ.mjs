import {
  CiaCprsEmailAriResourceOwner,
  CiaCprsEmailAriResourceType
} from "./chunk-GSO543SK.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/cia/cprs-email/manifest.ts
var ciaCprsEmailAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: CiaCprsEmailAriResourceOwner,
  resourceType: CiaCprsEmailAriResourceType,
  resourceIdSlug: "{emailType}",
  resourceIdSegmentFormats: {
    emailType: /(added|approved|rejected|blocked|unapproved|unblocked|pending|other)/
    // eslint-disable-line no-useless-escape
  }
};

// src/cia/cprs-email/index.ts
var CiaCprsEmailAri = class _CiaCprsEmailAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._emailType = opts.resourceIdSegmentValues.emailType;
  }
  get emailType() {
    return this._emailType;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: ciaCprsEmailAriStaticOpts.qualifier,
      platformQualifier: ciaCprsEmailAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: ciaCprsEmailAriStaticOpts.resourceOwner,
      resourceType: ciaCprsEmailAriStaticOpts.resourceType,
      resourceId: `${opts.emailType}`,
      resourceIdSegmentValues: {
        emailType: opts.emailType
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, ciaCprsEmailAriStaticOpts);
    return new _CiaCprsEmailAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, ciaCprsEmailAriStaticOpts);
    return new _CiaCprsEmailAri(opts);
  }
  getVariables() {
    return {
      emailType: this.emailType
    };
  }
};

export {
  CiaCprsEmailAri
};
