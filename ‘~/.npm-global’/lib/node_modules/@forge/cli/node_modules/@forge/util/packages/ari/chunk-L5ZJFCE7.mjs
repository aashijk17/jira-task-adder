import {
  AppMigrationAppDataAriResourceOwner,
  AppMigrationAppDataAriResourceType
} from "./chunk-V2LSCA3O.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/app-migration/app-data/manifest.ts
var appMigrationAppDataAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AppMigrationAppDataAriResourceOwner,
  resourceType: AppMigrationAppDataAriResourceType,
  resourceIdSlug: "{fileId}",
  resourceIdSegmentFormats: {
    fileId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/app-migration/app-data/index.ts
var AppMigrationAppDataAri = class _AppMigrationAppDataAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._fileId = opts.resourceIdSegmentValues.fileId;
  }
  get fileId() {
    return this._fileId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: appMigrationAppDataAriStaticOpts.qualifier,
      platformQualifier: appMigrationAppDataAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: appMigrationAppDataAriStaticOpts.resourceOwner,
      resourceType: appMigrationAppDataAriStaticOpts.resourceType,
      resourceId: `${opts.fileId}`,
      resourceIdSegmentValues: {
        fileId: opts.fileId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, appMigrationAppDataAriStaticOpts);
    return new _AppMigrationAppDataAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, appMigrationAppDataAriStaticOpts);
    return new _AppMigrationAppDataAri(opts);
  }
  getVariables() {
    return {
      fileId: this.fileId
    };
  }
};

export {
  AppMigrationAppDataAri
};
