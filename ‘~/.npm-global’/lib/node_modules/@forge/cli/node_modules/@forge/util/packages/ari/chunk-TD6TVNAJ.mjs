import {
  PeoplePerftoolPerformanceAriResourceOwner,
  PeoplePerftoolPerformanceAriResourceType
} from "./chunk-BBPB2HIH.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/people-perftool/performance/manifest.ts
var peoplePerftoolPerformanceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PeoplePerftoolPerformanceAriResourceOwner,
  resourceType: PeoplePerftoolPerformanceAriResourceType,
  resourceIdSlug: "{id}",
  resourceIdSegmentFormats: {
    id: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/people-perftool/performance/index.ts
var PeoplePerftoolPerformanceAri = class _PeoplePerftoolPerformanceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._id = opts.resourceIdSegmentValues.id;
  }
  get id() {
    return this._id;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: peoplePerftoolPerformanceAriStaticOpts.qualifier,
      platformQualifier: peoplePerftoolPerformanceAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: peoplePerftoolPerformanceAriStaticOpts.resourceOwner,
      resourceType: peoplePerftoolPerformanceAriStaticOpts.resourceType,
      resourceId: `${opts.id}`,
      resourceIdSegmentValues: {
        id: opts.id
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolPerformanceAriStaticOpts);
    return new _PeoplePerftoolPerformanceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, peoplePerftoolPerformanceAriStaticOpts);
    return new _PeoplePerftoolPerformanceAri(opts);
  }
  getVariables() {
    return {
      id: this.id
    };
  }
};

export {
  PeoplePerftoolPerformanceAri
};
