import {
  GraphWorkerAriResourceOwner,
  GraphWorkerAriResourceType
} from "./chunk-Z4DIOHRR.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/graph/worker/manifest.ts
var graphWorkerAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: GraphWorkerAriResourceOwner,
  resourceType: GraphWorkerAriResourceType,
  resourceIdSlug: "activation/{activationId}/{workerUUID}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    workerUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/graph/worker/index.ts
var GraphWorkerAri = class _GraphWorkerAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._workerUUID = opts.resourceIdSegmentValues.workerUUID;
  }
  get activationId() {
    return this._activationId;
  }
  get workerUUID() {
    return this._workerUUID;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: graphWorkerAriStaticOpts.qualifier,
      platformQualifier: graphWorkerAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: graphWorkerAriStaticOpts.resourceOwner,
      resourceType: graphWorkerAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.workerUUID}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        workerUUID: opts.workerUUID
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkerAriStaticOpts);
    return new _GraphWorkerAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, graphWorkerAriStaticOpts);
    return new _GraphWorkerAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      workerUUID: this.workerUUID
    };
  }
};

export {
  GraphWorkerAri
};
