"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.messages = void 0;
exports.messages = {
    verifiers: {
        externalFetch: {
            message: (url) => `The domain ${url} is not included in the "permissions.external.fetch" section of your app's manifest.yml file`,
            reference: 'egress-permission-required'
        },
        dynamicPropertiesIcon: {
            message: (url) => `The domain ${url} is not included in the "permissions.external.images" section of your app's manifest.yml file`,
            warning: () => `When using dynamic content properties along with icons, make sure to add the icon URL into the "permissions.external.images" section of your app's manifest.yml file. Otherwise, the icon will not be rendered.`,
            reference: 'egress-permission-required'
        },
        imageUrl: {
            message: (url) => `The domain ${url} is not included in the "permissions.external.images" section of your app's manifest.yml file`,
            reference: 'egress-permission-required'
        },
        invokeRemoteKey: {
            message: (remoteKey) => `The remote key "${remoteKey}" does not exist in the "remotes" section of your app's manifest.yml file`,
            reference: 'missing-remote-key'
        },
        invokeRemoteCompute: {
            message: (remoteKey) => `The remote key "${remoteKey}" does not have a compute operation defined in the "remotes" section of your app's manifest.yml file`,
            reference: 'missing-remote-compute'
        },
        handler: {
            message: (method, key) => `Cannot find exported function "${method}", which is required by module "${key}" handler defined in your app's manifest.yml file`,
            reference: 'valid-module-required'
        },
        product: {
            message: (product, method, path, scope) => `${product} endpoint: ${method} ${path} requires "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        storage: {
            message: (scope) => `Using the Forge Storage API requires the "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        uiHook: {
            message: (product, hook, scope) => `${product} UI hook: "${hook}" requires the "${scope}" scope`,
            reference: 'permission-scope-required'
        },
        sql: {
            message: (module) => `SQL package is used but '${module}' module is not defined in the manifest`,
            reference: 'https://developer.atlassian.com/platform/forge/manifest-reference/#modules'
        },
        frameComponentResource: {
            missing: {
                message: () => 'The "resource" property is missing in the Frame component',
                reference: 'missing-frame-component-resource-property'
            },
            invalid: {
                message: (resource) => {
                    return `The resource attribute "${resource}" is not included in the "resources" section of your app's manifest.yml file`;
                },
                reference: 'valid-frame-component-resource-attribute-required'
            }
        }
    }
};
