import {
  MercuryFocusAreaTypeAriResourceOwner,
  MercuryFocusAreaTypeAriResourceType
} from "./chunk-QPQE5MQK.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/mercury/focus-area-type/manifest.ts
var mercuryFocusAreaTypeAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: MercuryFocusAreaTypeAriResourceOwner,
  resourceType: MercuryFocusAreaTypeAriResourceType,
  resourceIdSlug: "workspace/{workspaceId}/{focusAreaTypeId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    focusAreaTypeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/mercury/focus-area-type/index.ts
var MercuryFocusAreaTypeAri = class _MercuryFocusAreaTypeAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaTypeId = opts.resourceIdSegmentValues.focusAreaTypeId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  get focusAreaTypeId() {
    return this._focusAreaTypeId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: mercuryFocusAreaTypeAriStaticOpts.qualifier,
      platformQualifier: mercuryFocusAreaTypeAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: mercuryFocusAreaTypeAriStaticOpts.resourceOwner,
      resourceType: mercuryFocusAreaTypeAriStaticOpts.resourceType,
      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaTypeId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId,
        focusAreaTypeId: opts.focusAreaTypeId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaTypeAriStaticOpts);
    return new _MercuryFocusAreaTypeAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId,
      focusAreaTypeId: this.focusAreaTypeId
    };
  }
};

export {
  MercuryFocusAreaTypeAri
};
