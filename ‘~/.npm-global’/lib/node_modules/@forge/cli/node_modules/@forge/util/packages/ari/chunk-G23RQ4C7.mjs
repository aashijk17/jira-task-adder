import {
  AvpWorkspaceAriResourceOwner,
  AvpWorkspaceAriResourceType
} from "./chunk-ELWZ7UQT.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/avp/workspace/manifest.ts
var avpWorkspaceAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: AvpWorkspaceAriResourceOwner,
  resourceType: AvpWorkspaceAriResourceType,
  resourceIdSlug: "{workspaceId}",
  resourceIdSegmentFormats: {
    workspaceId: /[a-zA-Z0-9\-]+/
    // eslint-disable-line no-useless-escape
  }
};

// src/avp/workspace/index.ts
var AvpWorkspaceAri = class _AvpWorkspaceAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;
  }
  get siteId() {
    return this._siteId;
  }
  get workspaceId() {
    return this._workspaceId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: avpWorkspaceAriStaticOpts.qualifier,
      platformQualifier: avpWorkspaceAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: avpWorkspaceAriStaticOpts.resourceOwner,
      resourceType: avpWorkspaceAriStaticOpts.resourceType,
      resourceId: `${opts.workspaceId}`,
      resourceIdSegmentValues: {
        workspaceId: opts.workspaceId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, avpWorkspaceAriStaticOpts);
    return new _AvpWorkspaceAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, avpWorkspaceAriStaticOpts);
    return new _AvpWorkspaceAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      workspaceId: this.workspaceId
    };
  }
};

export {
  AvpWorkspaceAri
};
