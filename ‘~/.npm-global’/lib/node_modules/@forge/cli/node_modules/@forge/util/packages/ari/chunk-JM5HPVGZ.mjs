import {
  JiraServicedeskOrganizationMemberAriResourceOwner,
  JiraServicedeskOrganizationMemberAriResourceType
} from "./chunk-UUERIETA.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira-servicedesk/organization-member/manifest.ts
var jiraServicedeskOrganizationMemberAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraServicedeskOrganizationMemberAriResourceOwner,
  resourceType: JiraServicedeskOrganizationMemberAriResourceType,
  resourceIdSlug: "activation/{activationId}/{organizationId}/{userId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    organizationId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    userId: /[a-zA-Z0-9_\-\:]{1,128}/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira-servicedesk/organization-member/index.ts
var JiraServicedeskOrganizationMemberAri = class _JiraServicedeskOrganizationMemberAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._activationId = opts.resourceIdSegmentValues.activationId, this._organizationId = opts.resourceIdSegmentValues.organizationId, this._userId = opts.resourceIdSegmentValues.userId;
  }
  get activationId() {
    return this._activationId;
  }
  get organizationId() {
    return this._organizationId;
  }
  get userId() {
    return this._userId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraServicedeskOrganizationMemberAriStaticOpts.qualifier,
      platformQualifier: jiraServicedeskOrganizationMemberAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: jiraServicedeskOrganizationMemberAriStaticOpts.resourceOwner,
      resourceType: jiraServicedeskOrganizationMemberAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.organizationId}/${opts.userId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        organizationId: opts.organizationId,
        userId: opts.userId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskOrganizationMemberAriStaticOpts);
    return new _JiraServicedeskOrganizationMemberAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraServicedeskOrganizationMemberAriStaticOpts);
    return new _JiraServicedeskOrganizationMemberAri(opts);
  }
  getVariables() {
    return {
      activationId: this.activationId,
      organizationId: this.organizationId,
      userId: this.userId
    };
  }
};

export {
  JiraServicedeskOrganizationMemberAri
};
