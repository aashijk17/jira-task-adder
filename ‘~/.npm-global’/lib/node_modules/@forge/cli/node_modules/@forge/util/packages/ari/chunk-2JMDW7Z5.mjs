import {
  IdentityThirdPartyDirectoryAriResourceOwner,
  IdentityThirdPartyDirectoryAriResourceType
} from "./chunk-AJVT7KP5.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/identity/third-party-directory/manifest.ts
var identityThirdPartyDirectoryAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: IdentityThirdPartyDirectoryAriResourceOwner,
  resourceType: IdentityThirdPartyDirectoryAriResourceType,
  resourceIdSlug: "{directoryId}",
  resourceIdSegmentFormats: {
    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/
    // eslint-disable-line no-useless-escape
  }
};

// src/identity/third-party-directory/index.ts
var IdentityThirdPartyDirectoryAri = class _IdentityThirdPartyDirectoryAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._directoryId = opts.resourceIdSegmentValues.directoryId;
  }
  get directoryId() {
    return this._directoryId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: identityThirdPartyDirectoryAriStaticOpts.qualifier,
      platformQualifier: identityThirdPartyDirectoryAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: identityThirdPartyDirectoryAriStaticOpts.resourceOwner,
      resourceType: identityThirdPartyDirectoryAriStaticOpts.resourceType,
      resourceId: `${opts.directoryId}`,
      resourceIdSegmentValues: {
        directoryId: opts.directoryId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyDirectoryAriStaticOpts);
    return new _IdentityThirdPartyDirectoryAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, identityThirdPartyDirectoryAriStaticOpts);
    return new _IdentityThirdPartyDirectoryAri(opts);
  }
  getVariables() {
    return {
      directoryId: this.directoryId
    };
  }
};

export {
  IdentityThirdPartyDirectoryAri
};
