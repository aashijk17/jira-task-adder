import {
  PipedrivePipedriveRemoteLinkAriResourceOwner,
  PipedrivePipedriveRemoteLinkAriResourceType
} from "./chunk-ZD2TOTMH.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/pipedrive.pipedrive/remote-link/manifest.ts
var pipedrivePipedriveRemoteLinkAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "third-party",
  cloudId: new RegExp("^$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: PipedrivePipedriveRemoteLinkAriResourceOwner,
  resourceType: PipedrivePipedriveRemoteLinkAriResourceType,
  resourceIdSlug: "org/{orgId}/deal/{dealId}",
  resourceIdSegmentFormats: {
    orgId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/,
    // eslint-disable-line no-useless-escape
    dealId: /[!a-zA-Z0-9\-_.~@:;{}=]+(\/[!a-zA-Z0-9\-_.~@:;{}=]+)*/
    // eslint-disable-line no-useless-escape
  }
};

// src/pipedrive.pipedrive/remote-link/index.ts
var PipedrivePipedriveRemoteLinkAri = class _PipedrivePipedriveRemoteLinkAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._orgId = opts.resourceIdSegmentValues.orgId, this._dealId = opts.resourceIdSegmentValues.dealId;
  }
  get orgId() {
    return this._orgId;
  }
  get dealId() {
    return this._dealId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: pipedrivePipedriveRemoteLinkAriStaticOpts.qualifier,
      platformQualifier: pipedrivePipedriveRemoteLinkAriStaticOpts.platformQualifier,
      cloudId: void 0,
      resourceOwner: pipedrivePipedriveRemoteLinkAriStaticOpts.resourceOwner,
      resourceType: pipedrivePipedriveRemoteLinkAriStaticOpts.resourceType,
      resourceId: `org/${opts.orgId}/deal/${opts.dealId}`,
      resourceIdSegmentValues: {
        orgId: opts.orgId,
        dealId: opts.dealId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, pipedrivePipedriveRemoteLinkAriStaticOpts);
    return new _PipedrivePipedriveRemoteLinkAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, pipedrivePipedriveRemoteLinkAriStaticOpts);
    return new _PipedrivePipedriveRemoteLinkAri(opts);
  }
  getVariables() {
    return {
      orgId: this.orgId,
      dealId: this.dealId
    };
  }
};

export {
  PipedrivePipedriveRemoteLinkAri
};
