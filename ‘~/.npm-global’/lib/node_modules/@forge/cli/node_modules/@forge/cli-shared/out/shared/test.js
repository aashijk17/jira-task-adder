"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTestApp = exports.mockLogger = void 0;
const tslib_1 = require("tslib");
const promises_1 = require("fs/promises");
const path_1 = tslib_1.__importDefault(require("path"));
const fs_extra_1 = require("fs-extra");
const directories_1 = require("./directories");
function mockLogger(traceEnabled, debugEnabled) {
    return {
        traceEnabled,
        debugEnabled,
        trace: jest.fn(),
        debug: jest.fn(),
        info: jest.fn(),
        warn: jest.fn(),
        error: jest.fn()
    };
}
exports.mockLogger = mockLogger;
async function createTestApp({ userCode, userCodeFilename = 'index', packages, withI18nBundle = false }) {
    const appDirectory = (0, directories_1.tmpDir)();
    const userCodeDir = path_1.default.join(appDirectory, 'src', path_1.default.dirname(userCodeFilename));
    const userCodeBaseName = path_1.default.basename(userCodeFilename);
    await (0, fs_extra_1.ensureDir)(userCodeDir);
    const userCodePath = path_1.default.join(userCodeDir, `${userCodeBaseName}.ts`);
    await (0, promises_1.writeFile)(userCodePath, userCode);
    await (0, promises_1.writeFile)(path_1.default.join(appDirectory, 'tsconfig.json'), JSON.stringify({}));
    const allPackages = ['@types/node', 'undici-types', ...(packages ?? [])];
    await (0, promises_1.writeFile)(path_1.default.join(appDirectory, 'package.json'), JSON.stringify({
        dependencies: Object.fromEntries(allPackages.map((pkg) => [pkg, '*']))
    }));
    const monorepoNodeModules = path_1.default.join(__dirname, '..', '..', '..', '..', 'node_modules');
    const monorepoPackages = path_1.default.join(__dirname, '..', '..', '..', '..', 'packages');
    for (const pkg of allPackages) {
        let src;
        if (pkg.startsWith('@forge/')) {
            src = path_1.default.join(monorepoPackages, pkg.replace('@forge/', 'forge-'));
        }
        else {
            src = path_1.default.join(monorepoNodeModules, pkg);
        }
        const dest = path_1.default.join(appDirectory, 'node_modules', pkg);
        await (0, fs_extra_1.ensureSymlink)(src, dest);
    }
    if (withI18nBundle) {
        const localeFolder = 'locales';
        await (0, fs_extra_1.ensureDir)(path_1.default.join(appDirectory, localeFolder));
        await (0, promises_1.writeFile)(path_1.default.join(appDirectory, localeFolder, 'en-US.json'), JSON.stringify({ title: 'i18n' }));
    }
    return {
        appDirectory,
        entryPoints: [{ name: userCodeFilename, path: path_1.default.join(userCodeDir, userCodeBaseName) }]
    };
}
exports.createTestApp = createTestApp;
