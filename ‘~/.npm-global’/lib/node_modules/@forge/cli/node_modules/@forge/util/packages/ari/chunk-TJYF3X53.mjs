import {
  JiraFieldConfigurationAriResourceOwner,
  JiraFieldConfigurationAriResourceType
} from "./chunk-X3X4UHNO.mjs";
import {
  RegisteredAri
} from "./chunk-AB4PPISI.mjs";
import {
  AriParser
} from "./chunk-S7RIZVFI.mjs";

// src/jira/field-configuration/manifest.ts
var jiraFieldConfigurationAriStaticOpts = {
  qualifier: "ari",
  platformQualifier: "cloud",
  cloudId: new RegExp("^[a-zA-Z0-9_\\-.]{1,255}$"),
  // eslint-disable-line no-useless-escape
  resourceOwner: JiraFieldConfigurationAriResourceOwner,
  resourceType: JiraFieldConfigurationAriResourceType,
  resourceIdSlug: "activation/{activationId}/{fieldConfigurationId}",
  resourceIdSegmentFormats: {
    activationId: /[a-zA-Z0-9\-]+/,
    // eslint-disable-line no-useless-escape
    fieldConfigurationId: /[a-zA-Z]+(_[0-9]+)?/
    // eslint-disable-line no-useless-escape
  }
};

// src/jira/field-configuration/index.ts
var JiraFieldConfigurationAri = class _JiraFieldConfigurationAri extends RegisteredAri {
  constructor(opts) {
    super(opts);
    this._siteId = opts.cloudId || "", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldConfigurationId = opts.resourceIdSegmentValues.fieldConfigurationId;
  }
  get siteId() {
    return this._siteId;
  }
  get activationId() {
    return this._activationId;
  }
  get fieldConfigurationId() {
    return this._fieldConfigurationId;
  }
  static create(opts) {
    let derivedOpts = {
      qualifier: jiraFieldConfigurationAriStaticOpts.qualifier,
      platformQualifier: jiraFieldConfigurationAriStaticOpts.platformQualifier,
      cloudId: opts.siteId,
      resourceOwner: jiraFieldConfigurationAriStaticOpts.resourceOwner,
      resourceType: jiraFieldConfigurationAriStaticOpts.resourceType,
      resourceId: `activation/${opts.activationId}/${opts.fieldConfigurationId}`,
      resourceIdSegmentValues: {
        activationId: opts.activationId,
        fieldConfigurationId: opts.fieldConfigurationId
      }
    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFieldConfigurationAriStaticOpts);
    return new _JiraFieldConfigurationAri(ariOpts);
  }
  static parse(maybeAri) {
    let opts = AriParser.fromString(maybeAri, jiraFieldConfigurationAriStaticOpts);
    return new _JiraFieldConfigurationAri(opts);
  }
  getVariables() {
    return {
      siteId: this.siteId,
      activationId: this.activationId,
      fieldConfigurationId: this.fieldConfigurationId
    };
  }
};

export {
  JiraFieldConfigurationAri
};
