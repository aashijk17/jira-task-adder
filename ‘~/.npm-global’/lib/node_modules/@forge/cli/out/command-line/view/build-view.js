"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuildView = void 0;
const cli_shared_1 = require("@forge/cli-shared");
const lint_1 = require("@forge/lint");
class BuildView {
    ui;
    constructor(ui) {
        this.ui = ui;
    }
    getLogger() {
        return this.ui;
    }
    displayStart() {
        this.ui.info(cli_shared_1.Text.build.cmd.startNotice);
    }
    displayLintRunning() {
        this.ui.info(cli_shared_1.Text.lint.running);
    }
    displayNoLintProblems() {
        this.ui.info(cli_shared_1.LogColor.trace(cli_shared_1.Text.lint.noProblems) + '\n');
    }
    displayLintErrors(lintResults) {
        this.ui.info(cli_shared_1.Text.build.taskLint.lintError);
        (0, lint_1.reportLintResults)(this.ui, lintResults);
    }
    displayLintWarnings(warnings) {
        this.ui.info(cli_shared_1.Text.build.taskLint.lintWarning(warnings) + '\n');
    }
    displayUIKit1DeprecationMessage(modules) {
        this.ui.emptyLine();
        this.ui.warn(cli_shared_1.Text.warning.deprecation.uikit(modules));
        this.ui.emptyLine();
    }
    async reportBuildProgress(buildTag, buildCallback) {
        const result = await this.ui.displayProgress(() => buildCallback(), cli_shared_1.Text.build.cmd.start, cli_shared_1.Text.build.cmd.success(buildTag));
        return result;
    }
}
exports.BuildView = BuildView;
//# sourceMappingURL=build-view.js.map