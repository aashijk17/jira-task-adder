import { AppEnvironmentType, UI } from '@forge/cli-shared';
import { VersionDetails, VersionOverview } from '../../service/version-service';
import { Change } from 'diff';
import { AppVersionRolloutDetails } from '../../version/graphql-client';
export declare const getDetailsTable: ({ formatKeyValueList, formatYamlProperties }: UI, details: Partial<VersionDetails>) => {
    entry: string;
    details: string;
    property: keyof VersionDetails;
}[];
export declare class VersionView {
    private readonly ui;
    constructor(ui: UI);
    displayDetailsProgress(progress: () => Promise<VersionDetails>): Promise<VersionDetails>;
    displayDiffProgress(progress: () => Promise<VersionDetails[]>): Promise<VersionDetails[]>;
    displayListProgress(progress: () => Promise<VersionOverview[]>): Promise<VersionOverview[]>;
    displayBulkUpgradeListProgress(progress: () => Promise<AppVersionRolloutDetails[]>): Promise<AppVersionRolloutDetails[]>;
    displaySingleSelectVersion(columns: string[], versions: object[], versionTablePrompt: string, versionTableOverview?: string): Promise<number>;
    displayInfo(message: string): void;
    displayAppVersionRolloutCreationSuccess(appRolloutVersionId: string | undefined): void;
    displayAppVersionRolloutCancelCreationSuccess(appRolloutId: string): void;
    displayAppVersionRolloutCancelNotInProgress(environmentKey: string): void;
    confirmAppVersionRolloutCreation(sourceVersionId: string, targetVersionId: string, installations?: number): Promise<boolean>;
    confirmAppVersionRolloutCancel(appRolloutId: string, sourceVersionId: string, targetVersionId: string, installationComplete?: number, totalInstallations?: number): Promise<boolean>;
    promptVersionDetailsProperties(): Promise<(keyof VersionDetails)[]>;
    displayVersionDetailsBanner(appVersion: number, envKey: string, envType: AppEnvironmentType): void;
    displayDetailsAsTable(details: Partial<VersionDetails>): void;
    displayDataInJson(data: VersionDetails): void;
    displayDiffBanner(version1: number, version2: number, env1Key: string, env1Type: AppEnvironmentType, env2Key?: string | undefined, env2Type?: AppEnvironmentType | undefined): void;
    displayDiffAsTable(versions: {
        v1: number;
        v2: number;
        e1: string;
        e2: string;
    }, input: {
        key: string;
        diff: Change[];
    }[]): void;
    displayListBanner(versions: number, envKey: string, envType: AppEnvironmentType): void;
    displayBulkUpgradeListBanner(versions: number, envKey: string, envType: AppEnvironmentType | undefined): void;
    displayWriteToFile(outFile: string): void;
    displayBulkUpgradeList(data: AppVersionRolloutDetails[]): void;
    displayVersionList(data: VersionOverview[]): void;
}
//# sourceMappingURL=version-view.d.ts.map