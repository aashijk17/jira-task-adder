import { ConfigFile, TunnelCommandOptions } from '@forge/cli-shared';
import { TunnelService } from '../../service/tunnel-service';
import { TunnelView } from '../view/tunnel-view';
import { CachedConfigService } from '../../service/cached-config-service';
import { ContainerCommand } from '../../containers';
import { ListEnvironmentClient } from '../../environment/list-environment';
export declare class TunnelController {
    private readonly nodeTunnelService;
    private readonly tunnelView;
    private readonly configFile;
    private readonly cachedConfigService;
    private readonly containerCommandService;
    private readonly environmentClient;
    constructor(nodeTunnelService: TunnelService, tunnelView: TunnelView, configFile: ConfigFile, cachedConfigService: CachedConfigService, containerCommandService: ContainerCommand, environmentClient: ListEnvironmentClient);
    run(tunnelOptions: TunnelCommandOptions): Promise<void>;
    private startDockerComposeStack;
    private processDockerAuthentication;
    private validateTunnelCommandOptions;
    private generateContainersDockerComposeFile;
    private getContainerDockerComposePath;
    private getProxySidecarConfig;
}
//# sourceMappingURL=tunnel-controller.d.ts.map