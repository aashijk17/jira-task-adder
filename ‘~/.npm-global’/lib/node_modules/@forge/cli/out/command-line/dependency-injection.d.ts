import { CLIDetails, CommandLineUI, ConfigFile, CreateAppCommand, GetAppOwnerQuery, LoginCommand, LogoutCommand, RegisterAppCommand, ViewAppLogsCommand, UserRepositoryImpl, StatsigService, SupportedProductsService } from '@forge/cli-shared';
import { AnalyticsClientReporter } from '../analytics-client/analytics-client';
import { PackageUploadDeployCommand } from '../deploy';
import { DeleteEnvironmentVariableCommand } from '../environment-variables/delete-environment-variable';
import { ListEnvironmentVariablesCommand } from '../environment-variables/list-environment-variables';
import { SetEnvironmentVariableCommand } from '../environment-variables/set-environment-variable';
import { ConfigureProviderCommand } from '../providers/configure-provider';
import { ListEntitiesIndexesCommand } from '../entities/list-indexes';
import { CreateEnvironmentCommand } from '../environment/create-environment';
import { ListEnvironmentCommand } from '../environment/list-environment';
import { DeleteEnvironmentCommand } from '../environment/delete-environment';
import { InstallAppSiteCommand } from '../installations/install-app-site';
import { UninstallAppCommand } from '../installations/uninstall-app';
import { InstallationService } from '../service/installation-service';
import { DeploymentService } from '../service/deployment-service';
import { MigrationKeysService } from '../service/migration-keys-service';
import { CustomEntitiesService } from '../service/custom-entities-service';
import { GetWebTriggerURLCommand } from '../webtrigger/get-webtrigger-url';
import { WorkersStarter } from '../workers/workers-starter';
import { Command } from './command';
import { AutocompleteController } from './controller/autocomplete-controller';
import { DeployController } from './controller/deploy-controller';
import { FeedbackController } from './controller/feedback-controller';
import { InstallController } from './controller/install-controller';
import { LintController } from './controller/lint-controller';
import { PreCommandController } from './controller/pre-command-controller';
import { SettingsController } from './controller/settings-controller';
import { TunnelController } from './controller/tunnel-controller';
import { AssistantController } from './controller/assistant-controller';
import { StubController } from './controller/stubController';
import { PrerequisitesController } from './controller/prerequisites-controller';
import { DefaultEnvironmentController } from './controller/default-environment-controller';
import { EligibilityController } from './controller/eligibility-controller';
import { VersionController } from './controller/version-controller';
import { ContainerCommand } from '../containers';
import { BuildController } from './controller/build-controller';
import { DevSpaceService } from '../devspace';
export declare const getDependencies: (cliDetails: CLIDetails | undefined) => Promise<{
    ui: CommandLineUI;
    cmd: Command<[], import("./command").DefaultOpts>;
    configFile: ConfigFile;
    appConfigProvider: import("@forge/cli-shared").AppConfigProvider;
    graphqlGateway: string;
    analyticsClientReporter: AnalyticsClientReporter;
    workersStarter: WorkersStarter;
    commands: {
        loginCommand: LoginCommand;
        logoutCommand: LogoutCommand;
        createAppCommand: CreateAppCommand;
        registerAppCommand: RegisterAppCommand;
        installAppSiteCommand: InstallAppSiteCommand;
        uninstallAppCommand: UninstallAppCommand;
        getAppOwnerQuery: GetAppOwnerQuery;
        packageUploadDeployCommand: PackageUploadDeployCommand;
        setEnvironmentVariableCommand: SetEnvironmentVariableCommand;
        deleteEnvironmentVariableCommand: DeleteEnvironmentVariableCommand;
        listEnvironmentVariablesCommand: ListEnvironmentVariablesCommand;
        configureProviderCommand: ConfigureProviderCommand;
        createEnvironmentCommand: CreateEnvironmentCommand;
        listEnvironmentCommand: ListEnvironmentCommand;
        deleteEnvironmentCommand: DeleteEnvironmentCommand;
        viewAppLogsCommand: ViewAppLogsCommand;
        getWebTriggerURLCommand: GetWebTriggerURLCommand;
        listEntitiesIndexesCommand: ListEntitiesIndexesCommand;
        containerCommand: ContainerCommand;
    };
    services: {
        installationsService: InstallationService;
        deploymentsService: DeploymentService;
        migrationKeysService: MigrationKeysService;
        customEntitiesService: CustomEntitiesService;
        credentialStore: import("@forge/cli-shared").CredentialStore;
        userRepository: UserRepositoryImpl;
        supportedProductsService: SupportedProductsService;
        devSpaceService: DevSpaceService;
        statsigService: StatsigService;
    };
    controllers: {
        autocompleteController: AutocompleteController;
        deployController: DeployController;
        eligibilityController: EligibilityController;
        feedbackController: FeedbackController;
        installController: InstallController;
        lintController: LintController;
        preCommandController: PreCommandController;
        tunnelController: TunnelController;
        settingsController: SettingsController;
        assistantController: AssistantController;
        stubController: StubController;
        prerequisitesController: PrerequisitesController;
        defaultEnvironmentController: DefaultEnvironmentController;
        versionController: VersionController;
        buildController: BuildController;
    };
}>;
declare type PromiseType<T> = T extends Promise<infer R> ? R : never;
export declare type Dependencies = PromiseType<ReturnType<typeof getDependencies>>;
export {};
//# sourceMappingURL=dependency-injection.d.ts.map