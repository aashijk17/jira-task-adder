import { TunnelOptions, UserError } from '@forge/cli-shared';
import { StartTunnelCommand, TunnelInteractor } from '@forge/tunnel';
import { ConfigFilePortFindingService } from './port-finding-service';
export declare type TunnelService = {
    run(tunnelOptions: TunnelOptions): Promise<void>;
};
export declare class FunctionHandlersMustBeDefinedInDebugMode extends UserError {
    constructor();
}
export declare class DebugArgumentNameMismatch extends UserError {
    constructor(functionHandler: string);
}
export declare class InvalidDebugStartingPortNumber extends UserError {
    constructor(port: string);
}
export declare class DockerAuthenticationError extends UserError {
    constructor(errCode: string);
}
export declare class DockerUnableToPullProxySidecarImage extends UserError {
    constructor(err?: Error);
}
export declare class DockerUnableToStartError extends UserError {
    constructor(err?: Error);
}
export declare class InvalidContainerServicePort extends UserError {
    constructor(serviceKey: string);
}
export declare class EnvironmentIsNotDefined extends UserError {
    constructor(envKey: string);
}
export declare class InProcessTunnelService implements TunnelService {
    private readonly startTunnelCommand;
    private readonly tunnelInteractor;
    private readonly configFilePortFindingService;
    constructor(startTunnelCommand: StartTunnelCommand, tunnelInteractor: TunnelInteractor, configFilePortFindingService: ConfigFilePortFindingService);
    run(tunnelOptions: TunnelOptions): Promise<void>;
}
//# sourceMappingURL=tunnel-service.d.ts.map