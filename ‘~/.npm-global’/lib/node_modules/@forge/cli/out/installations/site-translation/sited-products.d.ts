/// <reference types="node" />
import { SiteTranslator } from './site-translation';
import { URL } from 'url';
import { AnyAri, Ari } from '@forge/util/packages/ari';
import { GraphQLClient, UserError } from '@forge/cli-shared';
export declare const GRAPH_PRODUCT_ID_IN_TCS = "devops";
export declare class InvalidAtlassianSiteError extends UserError {
    constructor(url: URL);
}
declare type CloudIdAndActivationId = {
    cloudId: string;
    activationId: string;
};
export declare class ActivationIdMissingError extends Error {
    constructor(url: string, product: string);
}
export declare class SitedProductTranslator implements SiteTranslator {
    private graphqlClient;
    constructor(graphqlClient: GraphQLClient);
    ariBelongsToProduct(ari: AnyAri): boolean;
    buildInstallationContext(product: string, site: URL): Promise<Ari>;
    getSitesForResourceAris(aris: AnyAri[]): Promise<Record<string, string>>;
    private queryHostnamesByCloudIds;
    private queryHostnamesByActivationIds;
    private bulkQuerySiteHostnames;
    getCloudIdAndActivationId(site: URL, productResourceOwner: string): Promise<CloudIdAndActivationId>;
}
export {};
//# sourceMappingURL=sited-products.d.ts.map