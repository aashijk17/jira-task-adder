import { Handler, type I18nResourceBundle, Logger, ResourceDetails } from '@forge/cli-shared';
import { NativeUIBundler } from '@forge/bundler';
import { App, Translations } from '@forge/manifest';
import { RuntimeBundler } from './runtime-bundler';
import { AnalyticsClientReporter } from '../../analytics-client/analytics-client';
export interface PackageResult {
    runtimeArchivePath: string;
    nativeUiBundlesDetails: ResourceDetails[];
    moduleList?: string[];
}
export interface Packager {
    package(handlers: Handler[], resources: ResourceDetails[], packageConfig: App['package'], i18nResourceBundle: I18nResourceBundle, i18nConfig?: Translations): Promise<PackageResult>;
}
export declare class AppPackager implements Packager {
    private readonly runtimeBundler;
    private readonly nativeUiBundler;
    private readonly logger;
    private readonly analyticsClient;
    constructor(runtimeBundler: RuntimeBundler, nativeUiBundler: NativeUIBundler, logger: Logger, analyticsClient: AnalyticsClientReporter);
    package(handlers: Handler[], resources: ResourceDetails[], packageConfig: App['package'], i18nResourceBundle: I18nResourceBundle, i18nConfig?: Translations): Promise<PackageResult>;
    private getAppMetadata;
}
//# sourceMappingURL=packager.d.ts.map