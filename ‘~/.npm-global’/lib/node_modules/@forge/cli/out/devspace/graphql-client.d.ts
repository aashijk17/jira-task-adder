import { GraphQLClient } from '@forge/cli-shared';
export interface DevSpaceDetails {
    id: string;
    name: string;
}
export interface DevSpaceBulkResult {
    developerSpaceId: string;
    details?: {
        name: string;
    };
    error?: {
        message: string;
    };
}
export interface DevConsoleCreateDeveloperSpaceInput {
    name: string;
}
export interface DevSpaceCreateResult {
    id: string;
    name: string;
}
export interface DevSpaceClient {
    getDevSpacesWithLinkingAccess(): Promise<string[]>;
    getDevSpaceDetails(devSpaceIds: string[]): Promise<DevSpaceDetails[]>;
    getDevSpaceDetailsBulk(devSpaceIds: string[]): Promise<DevSpaceBulkResult[]>;
    createDevSpace(input: DevConsoleCreateDeveloperSpaceInput): Promise<DevSpaceCreateResult>;
}
export declare class DevSpaceGraphQLClient implements DevSpaceClient {
    private readonly graphqlClient;
    constructor(graphqlClient: GraphQLClient);
    getDevSpacesWithLinkingAccess(): Promise<string[]>;
    getDevSpaceDetails(devSpaceIds: string[]): Promise<DevSpaceDetails[]>;
    getDevSpaceDetailsBulk(devSpaceIds: string[]): Promise<DevSpaceBulkResult[]>;
    createDevSpace(input: DevConsoleCreateDeveloperSpaceInput): Promise<DevSpaceCreateResult>;
}
//# sourceMappingURL=graphql-client.d.ts.map